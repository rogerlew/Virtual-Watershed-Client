// ------------------------------------------------------------------------------------------------------------
// 							 Earth-.shader
//  	Author: Leonardo M. Lopes <euleoo@gmail.com> - http://about.me/leonardo_lopes
// ------------------------------------------------------------------------------------------------------------

Shader "PlanetEarthShader/Earth" {
Properties {
 _MainTex ("Texture (RGB)", 2D) = "white" {}
 _SpecColor ("Specular Color", Color) = (0.5,0.5,0.5,1)
 _Shininess ("Shininess", Range(0.03,1)) = 0.078125
 _Mask ("Gloss Mask (RGB)", 2D) = "white" {}
 _BumpMap ("BumpMap", 2D) = "bump" {}
 _Emission ("Night Lights (RGB)", 2D) = "black" {}
 _LightAmount ("Night Lights Intensity", Range(0,10)) = 1
 _AtmosFalloff ("Atmosphere Falloff", Range(0.5,8)) = 3
 _AtmosNear ("Inner Atmosphere", Color) = (0,0,1,1)
 _AtmosFar ("Far Atmosphere", Color) = (0,0,1,1)
 _Clouds ("Clouds (RGB)", 2D) = "black" {}
 _CloudHeight ("Cloud Height", Range(0,0.1)) = 0.05
 _CloudSpeed ("Cloud Speed", Range(-0.01,0.01)) = 0.001
}
SubShader { 
 LOD 200
 Tags { "RenderType"="Opaque" }


 // Stats for Vertex shader:
 //       d3d11 : 36 avg math (18..66)
 //        d3d9 : 44 avg math (21..83)
 //      opengl : 42 avg math (20..80)
 // Stats for Fragment shader:
 //       d3d11 : 47 avg math (24..66), 5 avg texture (4..8)
 //        d3d9 : 62 avg math (36..80), 5 avg texture (4..8)
 //      opengl : 63 avg math (37..83), 5 avg texture (4..8)
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
Program "vp" {
SubProgram "opengl " {
// Stats: 44 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Vector 13 [_WorldSpaceCameraPos]
Vector 14 [_WorldSpaceLightPos0]
Vector 15 [unity_SHAr]
Vector 16 [unity_SHAg]
Vector 17 [unity_SHAb]
Vector 18 [unity_SHBr]
Vector 19 [unity_SHBg]
Vector 20 [unity_SHBb]
Vector 21 [unity_SHC]
Vector 22 [unity_Scale]
Vector 23 [_MainTex_ST]
Vector 24 [_Clouds_ST]
"3.0-!!ARBvp1.0
PARAM c[25] = { { 1 },
		state.matrix.mvp,
		program.local[5..24] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R1.xyz, vertex.normal, c[22].w;
DP3 R2.w, R1, c[6];
DP3 R0.x, R1, c[5];
DP3 R0.z, R1, c[7];
MOV R0.y, R2.w;
MUL R1, R0.xyzz, R0.yzzx;
MOV R0.w, c[0].x;
DP4 R2.z, R0, c[17];
DP4 R2.y, R0, c[16];
DP4 R2.x, R0, c[15];
MUL R0.y, R2.w, R2.w;
DP4 R3.z, R1, c[20];
DP4 R3.y, R1, c[19];
DP4 R3.x, R1, c[18];
ADD R2.xyz, R2, R3;
MAD R0.x, R0, R0, -R0.y;
MUL R3.xyz, R0.x, c[21];
MOV R1.xyz, vertex.attrib[14];
MUL R0.xyz, vertex.normal.zxyw, R1.yzxw;
MAD R1.xyz, vertex.normal.yzxw, R1.zxyw, -R0;
ADD result.texcoord[3].xyz, R2, R3;
MOV R0.xyz, c[13];
MOV R0.w, c[0].x;
DP4 R2.z, R0, c[11];
DP4 R2.x, R0, c[9];
DP4 R2.y, R0, c[10];
MAD R0.xyz, R2, c[22].w, -vertex.position;
MUL R2.xyz, R1, vertex.attrib[14].w;
MOV R1, c[14];
DP4 R3.z, R1, c[11];
DP4 R3.x, R1, c[9];
DP4 R3.y, R1, c[10];
DP3 result.texcoord[1].y, R0, R2;
DP3 result.texcoord[2].y, R2, R3;
DP3 result.texcoord[1].z, vertex.normal, R0;
DP3 result.texcoord[1].x, R0, vertex.attrib[14];
DP3 result.texcoord[2].z, vertex.normal, R3;
DP3 result.texcoord[2].x, vertex.attrib[14], R3;
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[24].xyxy, c[24];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[23], c[23].zwzw;
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 44 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 47 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 12 [_WorldSpaceCameraPos]
Vector 13 [_WorldSpaceLightPos0]
Vector 14 [unity_SHAr]
Vector 15 [unity_SHAg]
Vector 16 [unity_SHAb]
Vector 17 [unity_SHBr]
Vector 18 [unity_SHBg]
Vector 19 [unity_SHBb]
Vector 20 [unity_SHC]
Vector 21 [unity_Scale]
Vector 22 [_MainTex_ST]
Vector 23 [_Clouds_ST]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
def c24, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mul r1.xyz, v2, c21.w
dp3 r2.w, r1, c5
dp3 r0.x, r1, c4
dp3 r0.z, r1, c6
mov r0.y, r2.w
mul r1, r0.xyzz, r0.yzzx
mov r0.w, c24.x
dp4 r2.z, r0, c16
dp4 r2.y, r0, c15
dp4 r2.x, r0, c14
mul r0.y, r2.w, r2.w
dp4 r3.z, r1, c19
dp4 r3.y, r1, c18
dp4 r3.x, r1, c17
add r1.xyz, r2, r3
mad r0.x, r0, r0, -r0.y
mul r2.xyz, r0.x, c20
add o4.xyz, r1, r2
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r0.xyz, v2.yzxw, r0.zxyw, -r1
mul r3.xyz, r0, v1.w
mov r0, c10
dp4 r4.z, c13, r0
mov r0, c9
mov r1.w, c24.x
mov r1.xyz, c12
dp4 r4.y, c13, r0
dp4 r2.z, r1, c10
dp4 r2.x, r1, c8
dp4 r2.y, r1, c9
mad r2.xyz, r2, c21.w, -v0
mov r1, c8
dp4 r4.x, c13, r1
dp3 o2.y, r2, r3
dp3 o3.y, r3, r4
dp3 o2.z, v2, r2
dp3 o2.x, r2, v1
dp3 o3.z, v2, r4
dp3 o3.x, v1, r4
mad o1.zw, v3.xyxy, c23.xyxy, c23
mad o1.xy, v3, c22, c22.zwzw
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 39 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 128
Vector 96 [_MainTex_ST]
Vector 112 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0
eefiecedafcibbehhgkikpdjbmckhnmdnhcjnjohabaaaaaanaahaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcdeagaaaaeaaaabaa
inabaaaafjaaaaaeegiocaaaaaaaaaaaaiaaaaaafjaaaaaeegiocaaaabaaaaaa
afaaaaaafjaaaaaeegiocaaaacaaaaaacnaaaaaafjaaaaaeegiocaaaadaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaad
hcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaad
hccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaagiaaaaacaeaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaa
egbabaaaadaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaa
dcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaahaaaaaa
kgiocaaaaaaaaaaaahaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaa
cgbjbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaa
abaaaaaaegacbaiaebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaa
aaaaaaaapgbpbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaa
aeaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
adaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaal
hcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaa
egacbaaaabaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaa
adaaaaaabdaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaa
adaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaaacaaaaaa
egacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaa
abaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaa
egacbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaacaaaaaaaaaaaaaa
egiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaa
baaaaaaaagiacaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaa
abaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaaegacbaaa
abaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabdaaaaaapgipcaaa
acaaaaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahcccabaaaadaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaaadaaaaaaegbcbaaaabaaaaaa
egacbaaaabaaaaaabaaaaaaheccabaaaadaaaaaaegbcbaaaacaaaaaaegacbaaa
abaaaaaadiaaaaaihcaabaaaaaaaaaaaegbcbaaaacaaaaaapgipcaaaadaaaaaa
beaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaaegiccaaaadaaaaaa
anaaaaaadcaaaaaklcaabaaaaaaaaaaaegiicaaaadaaaaaaamaaaaaaagaabaaa
aaaaaaaaegaibaaaabaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaaadaaaaaa
aoaaaaaakgakbaaaaaaaaaaaegadbaaaaaaaaaaadgaaaaaficaabaaaaaaaaaaa
abeaaaaaaaaaiadpbbaaaaaibcaabaaaabaaaaaaegiocaaaacaaaaaacgaaaaaa
egaobaaaaaaaaaaabbaaaaaiccaabaaaabaaaaaaegiocaaaacaaaaaachaaaaaa
egaobaaaaaaaaaaabbaaaaaiecaabaaaabaaaaaaegiocaaaacaaaaaaciaaaaaa
egaobaaaaaaaaaaadiaaaaahpcaabaaaacaaaaaajgacbaaaaaaaaaaaegakbaaa
aaaaaaaabbaaaaaibcaabaaaadaaaaaaegiocaaaacaaaaaacjaaaaaaegaobaaa
acaaaaaabbaaaaaiccaabaaaadaaaaaaegiocaaaacaaaaaackaaaaaaegaobaaa
acaaaaaabbaaaaaiecaabaaaadaaaaaaegiocaaaacaaaaaaclaaaaaaegaobaaa
acaaaaaaaaaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaadaaaaaa
diaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaabkaabaaaaaaaaaaadcaaaaak
bcaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaaaaaaaaaaabkaabaiaebaaaaaa
aaaaaaaadcaaaaakhccabaaaaeaaaaaaegiccaaaacaaaaaacmaaaaaaagaabaaa
aaaaaaaaegacbaaaabaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_7 * (tmpvar_2 * unity_Scale.w));
  mediump vec3 tmpvar_14;
  mediump vec4 normal_15;
  normal_15 = tmpvar_13;
  highp float vC_16;
  mediump vec3 x3_17;
  mediump vec3 x2_18;
  mediump vec3 x1_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHAr, normal_15);
  x1_19.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAg, normal_15);
  x1_19.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAb, normal_15);
  x1_19.z = tmpvar_22;
  mediump vec4 tmpvar_23;
  tmpvar_23 = (normal_15.xyzz * normal_15.yzzx);
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHBr, tmpvar_23);
  x2_18.x = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBg, tmpvar_23);
  x2_18.y = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBb, tmpvar_23);
  x2_18.z = tmpvar_26;
  mediump float tmpvar_27;
  tmpvar_27 = ((normal_15.x * normal_15.x) - (normal_15.y * normal_15.y));
  vC_16 = tmpvar_27;
  highp vec3 tmpvar_28;
  tmpvar_28 = (unity_SHC.xyz * vC_16);
  x3_17 = tmpvar_28;
  tmpvar_14 = ((x1_19 + x2_18) + x3_17);
  shlight_3 = tmpvar_14;
  tmpvar_6 = shlight_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = (tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_3;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture2D (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_4 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (tmpvar_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 0.0;
  tmpvar_29.xyz = clouds_9;
  lowp vec4 arg0_30;
  arg0_30 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_31;
  tmpvar_31 = mix (arg0_30, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_29).xyz;
  tmpvar_6 = tmpvar_31;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_33;
  tmpvar_33 = ((tmpvar_32.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_33;
  tmpvar_2 = tmpvar_5;
  highp vec3 tmpvar_34;
  tmpvar_34 = normalize(xlv_TEXCOORD1);
  mediump vec3 viewDir_35;
  viewDir_35 = tmpvar_34;
  lowp vec4 c_36;
  highp float nh_37;
  lowp float tmpvar_38;
  tmpvar_38 = max (0.0, dot (tmpvar_5, xlv_TEXCOORD2));
  mediump float tmpvar_39;
  tmpvar_39 = max (0.0, dot (tmpvar_5, normalize((xlv_TEXCOORD2 + viewDir_35))));
  nh_37 = tmpvar_39;
  mediump float arg1_40;
  arg1_40 = (tmpvar_7 * 128.0);
  highp float tmpvar_41;
  tmpvar_41 = (pow (nh_37, arg1_40) * tmpvar_8);
  highp vec3 tmpvar_42;
  tmpvar_42 = ((((tmpvar_4 * _LightColor0.xyz) * tmpvar_38) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_41)) * 2.0);
  c_36.xyz = tmpvar_42;
  highp float tmpvar_43;
  tmpvar_43 = (tmpvar_12.w + ((_LightColor0.w * _SpecColor.w) * tmpvar_41));
  c_36.w = tmpvar_43;
  c_1.w = c_36.w;
  c_1.xyz = (c_36.xyz + (tmpvar_4 * xlv_TEXCOORD3));
  c_1.xyz = (c_1.xyz + tmpvar_6);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_7 * (tmpvar_2 * unity_Scale.w));
  mediump vec3 tmpvar_14;
  mediump vec4 normal_15;
  normal_15 = tmpvar_13;
  highp float vC_16;
  mediump vec3 x3_17;
  mediump vec3 x2_18;
  mediump vec3 x1_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHAr, normal_15);
  x1_19.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAg, normal_15);
  x1_19.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAb, normal_15);
  x1_19.z = tmpvar_22;
  mediump vec4 tmpvar_23;
  tmpvar_23 = (normal_15.xyzz * normal_15.yzzx);
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHBr, tmpvar_23);
  x2_18.x = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBg, tmpvar_23);
  x2_18.y = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBb, tmpvar_23);
  x2_18.z = tmpvar_26;
  mediump float tmpvar_27;
  tmpvar_27 = ((normal_15.x * normal_15.x) - (normal_15.y * normal_15.y));
  vC_16 = tmpvar_27;
  highp vec3 tmpvar_28;
  tmpvar_28 = (unity_SHC.xyz * vC_16);
  x3_17 = tmpvar_28;
  tmpvar_14 = ((x1_19 + x2_18) + x3_17);
  shlight_3 = tmpvar_14;
  tmpvar_6 = shlight_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = (tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_3;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture2D (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_4 = tmpvar_26;
  lowp vec3 normal_27;
  normal_27.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_27.z = sqrt((1.0 - clamp (dot (normal_27.xy, normal_27.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (normal_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 0.0;
  tmpvar_29.xyz = clouds_9;
  lowp vec4 arg0_30;
  arg0_30 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_31;
  tmpvar_31 = mix (arg0_30, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_29).xyz;
  tmpvar_6 = tmpvar_31;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_33;
  tmpvar_33 = ((tmpvar_32.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_33;
  tmpvar_2 = tmpvar_5;
  highp vec3 tmpvar_34;
  tmpvar_34 = normalize(xlv_TEXCOORD1);
  mediump vec3 viewDir_35;
  viewDir_35 = tmpvar_34;
  lowp vec4 c_36;
  highp float nh_37;
  lowp float tmpvar_38;
  tmpvar_38 = max (0.0, dot (tmpvar_5, xlv_TEXCOORD2));
  mediump float tmpvar_39;
  tmpvar_39 = max (0.0, dot (tmpvar_5, normalize((xlv_TEXCOORD2 + viewDir_35))));
  nh_37 = tmpvar_39;
  mediump float arg1_40;
  arg1_40 = (tmpvar_7 * 128.0);
  highp float tmpvar_41;
  tmpvar_41 = (pow (nh_37, arg1_40) * tmpvar_8);
  highp vec3 tmpvar_42;
  tmpvar_42 = ((((tmpvar_4 * _LightColor0.xyz) * tmpvar_38) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_41)) * 2.0);
  c_36.xyz = tmpvar_42;
  highp float tmpvar_43;
  tmpvar_43 = (tmpvar_12.w + ((_LightColor0.w * _SpecColor.w) * tmpvar_41));
  c_36.w = tmpvar_43;
  c_1.w = c_36.w;
  c_1.xyz = (c_36.xyz + (tmpvar_4 * xlv_TEXCOORD3));
  c_1.xyz = (c_1.xyz + tmpvar_6);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec3 xlv_TEXCOORD2;
out lowp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_7 * (tmpvar_2 * unity_Scale.w));
  mediump vec3 tmpvar_14;
  mediump vec4 normal_15;
  normal_15 = tmpvar_13;
  highp float vC_16;
  mediump vec3 x3_17;
  mediump vec3 x2_18;
  mediump vec3 x1_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHAr, normal_15);
  x1_19.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAg, normal_15);
  x1_19.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAb, normal_15);
  x1_19.z = tmpvar_22;
  mediump vec4 tmpvar_23;
  tmpvar_23 = (normal_15.xyzz * normal_15.yzzx);
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHBr, tmpvar_23);
  x2_18.x = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBg, tmpvar_23);
  x2_18.y = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBb, tmpvar_23);
  x2_18.z = tmpvar_26;
  mediump float tmpvar_27;
  tmpvar_27 = ((normal_15.x * normal_15.x) - (normal_15.y * normal_15.y));
  vC_16 = tmpvar_27;
  highp vec3 tmpvar_28;
  tmpvar_28 = (unity_SHC.xyz * vC_16);
  x3_17 = tmpvar_28;
  tmpvar_14 = ((x1_19 + x2_18) + x3_17);
  shlight_3 = tmpvar_14;
  tmpvar_6 = shlight_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = (tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _Time;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
in highp vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec3 xlv_TEXCOORD2;
in lowp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_3;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_4 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (tmpvar_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 0.0;
  tmpvar_29.xyz = clouds_9;
  lowp vec4 arg0_30;
  arg0_30 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_31;
  tmpvar_31 = mix (arg0_30, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_29).xyz;
  tmpvar_6 = tmpvar_31;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_33;
  tmpvar_33 = ((tmpvar_32.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_33;
  tmpvar_2 = tmpvar_5;
  highp vec3 tmpvar_34;
  tmpvar_34 = normalize(xlv_TEXCOORD1);
  mediump vec3 viewDir_35;
  viewDir_35 = tmpvar_34;
  lowp vec4 c_36;
  highp float nh_37;
  lowp float tmpvar_38;
  tmpvar_38 = max (0.0, dot (tmpvar_5, xlv_TEXCOORD2));
  mediump float tmpvar_39;
  tmpvar_39 = max (0.0, dot (tmpvar_5, normalize((xlv_TEXCOORD2 + viewDir_35))));
  nh_37 = tmpvar_39;
  mediump float arg1_40;
  arg1_40 = (tmpvar_7 * 128.0);
  highp float tmpvar_41;
  tmpvar_41 = (pow (nh_37, arg1_40) * tmpvar_8);
  highp vec3 tmpvar_42;
  tmpvar_42 = ((((tmpvar_4 * _LightColor0.xyz) * tmpvar_38) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_41)) * 2.0);
  c_36.xyz = tmpvar_42;
  highp float tmpvar_43;
  tmpvar_43 = (tmpvar_12.w + ((_LightColor0.w * _SpecColor.w) * tmpvar_41));
  c_36.w = tmpvar_43;
  c_1.w = c_36.w;
  c_1.xyz = (c_36.xyz + (tmpvar_4 * xlv_TEXCOORD3));
  c_1.xyz = (c_1.xyz + tmpvar_6);
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 20 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" ATTR14
Matrix 9 [_World2Object]
Vector 13 [_WorldSpaceCameraPos]
Vector 15 [unity_Scale]
Vector 16 [unity_LightmapST]
Vector 17 [_MainTex_ST]
Vector 18 [_Clouds_ST]
"3.0-!!ARBvp1.0
PARAM c[19] = { { 1 },
		state.matrix.mvp,
		program.local[5..18] };
TEMP R0;
TEMP R1;
TEMP R2;
MOV R0.xyz, vertex.attrib[14];
MUL R1.xyz, vertex.normal.zxyw, R0.yzxw;
MAD R0.xyz, vertex.normal.yzxw, R0.zxyw, -R1;
MUL R1.xyz, R0, vertex.attrib[14].w;
MOV R0.xyz, c[13];
MOV R0.w, c[0].x;
DP4 R2.z, R0, c[11];
DP4 R2.x, R0, c[9];
DP4 R2.y, R0, c[10];
MAD R0.xyz, R2, c[15].w, -vertex.position;
DP3 result.texcoord[1].y, R0, R1;
DP3 result.texcoord[1].z, vertex.normal, R0;
DP3 result.texcoord[1].x, R0, vertex.attrib[14];
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[18].xyxy, c[18];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[17], c[17].zwzw;
MAD result.texcoord[2].xy, vertex.texcoord[1], c[16], c[16].zwzw;
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 20 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 21 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 8 [_World2Object]
Vector 12 [_WorldSpaceCameraPos]
Vector 13 [unity_Scale]
Vector 14 [unity_LightmapST]
Vector 15 [_MainTex_ST]
Vector 16 [_Clouds_ST]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
def c17, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
dcl_texcoord1 v4
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r0.xyz, v2.yzxw, r0.zxyw, -r1
mul r1.xyz, r0, v1.w
mov r0.xyz, c12
mov r0.w, c17.x
dp4 r2.z, r0, c10
dp4 r2.x, r0, c8
dp4 r2.y, r0, c9
mad r0.xyz, r2, c13.w, -v0
dp3 o2.y, r0, r1
dp3 o2.z, v2, r0
dp3 o2.x, r0, v1
mad o1.zw, v3.xyxy, c16.xyxy, c16
mad o1.xy, v3, c15, c15.zwzw
mad o3.xy, v4, c14, c14.zwzw
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 18 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 144
Vector 96 [unity_LightmapST]
Vector 112 [_MainTex_ST]
Vector 128 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityPerDraw" 2
"vs_4_0
eefiecedgihjligonkmienkeammlfhjndmgppdlhabaaaaaanaaeaaaaadaaaaaa
cmaaaaaapeaaaaaahmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheoiaaaaaaaaeaaaaaa
aiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaheaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
adamaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefc
emadaaaaeaaaabaandaaaaaafjaaaaaeegiocaaaaaaaaaaaajaaaaaafjaaaaae
egiocaaaabaaaaaaafaaaaaafjaaaaaeegiocaaaacaaaaaabfaaaaaafpaaaaad
pcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaa
fpaaaaaddcbabaaaadaaaaaafpaaaaaddcbabaaaaeaaaaaaghaaaaaepccabaaa
aaaaaaaaabaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaa
gfaaaaaddccabaaaadaaaaaagiaaaaacacaaaaaadiaaaaaipcaabaaaaaaaaaaa
fgbfbaaaaaaaaaaaegiocaaaacaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaa
egiocaaaacaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaacaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaacaaaaaaadaaaaaapgbpbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaa
egiacaaaaaaaaaaaahaaaaaaogikcaaaaaaaaaaaahaaaaaadcaaaaalmccabaaa
abaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaaiaaaaaakgiocaaaaaaaaaaa
aiaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaa
dcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaia
ebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaapgbpbaaa
abaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaa
acaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaacaaaaaabaaaaaaa
agiacaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaa
egiccaaaacaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaa
aaaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaacaaaaaabdaaaaaa
dcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaaacaaaaaabeaaaaaa
egbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaaacaaaaaaegacbaaaaaaaaaaa
egacbaaaabaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaa
abaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaa
dcaaaaaldccabaaaadaaaaaaegbabaaaaeaaaaaaegiacaaaaaaaaaaaagaaaaaa
ogikcaaaaaaaaaaaagaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  tmpvar_4 = tmpvar_1.xyz;
  tmpvar_5 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_4.x;
  tmpvar_6[0].y = tmpvar_5.x;
  tmpvar_6[0].z = tmpvar_2.x;
  tmpvar_6[1].x = tmpvar_4.y;
  tmpvar_6[1].y = tmpvar_5.y;
  tmpvar_6[1].z = tmpvar_2.y;
  tmpvar_6[2].x = tmpvar_4.z;
  tmpvar_6[2].y = tmpvar_5.z;
  tmpvar_6[2].z = tmpvar_2.z;
  highp vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_6 * (((_World2Object * tmpvar_7).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D unity_Lightmap;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  mediump vec3 clouds_7;
  mediump vec2 cloudUV_8;
  lowp float fresnel_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_11;
  tmpvar_11 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_9 = tmpvar_11;
  lowp float tmpvar_12;
  tmpvar_12 = pow (fresnel_9, _AtmosFalloff);
  lowp vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_10.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_12)) * tmpvar_12));
  cloudUV_8 = tmpvar_3;
  highp float tmpvar_14;
  tmpvar_14 = (_Time.y * _CloudSpeed);
  highp float tmpvar_15;
  tmpvar_15 = fract(abs(tmpvar_14));
  highp float tmpvar_16;
  if ((tmpvar_14 >= 0.0)) {
    tmpvar_16 = tmpvar_15;
  } else {
    tmpvar_16 = -(tmpvar_15);
  };
  cloudUV_8.x = (cloudUV_8.x + tmpvar_16);
  mediump float height_17;
  height_17 = _CloudHeight;
  mediump vec3 viewDir_18;
  viewDir_18 = xlv_TEXCOORD1;
  highp vec3 v_19;
  mediump float tmpvar_20;
  tmpvar_20 = (height_17 - (height_17 / 2.0));
  mediump vec3 tmpvar_21;
  tmpvar_21 = normalize(viewDir_18);
  v_19 = tmpvar_21;
  v_19.z = (v_19.z + 0.42);
  highp vec2 tmpvar_22;
  tmpvar_22 = (cloudUV_8 + (tmpvar_20 * (v_19.xy / v_19.z)));
  cloudUV_8 = tmpvar_22;
  lowp vec3 tmpvar_23;
  tmpvar_23 = texture2D (_Clouds, cloudUV_8).xyz;
  clouds_7 = tmpvar_23;
  mediump vec3 tmpvar_24;
  tmpvar_24 = (tmpvar_13 + clouds_7);
  tmpvar_4 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_26;
  tmpvar_26 = mix (tmpvar_25, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_5 = tmpvar_26;
  mediump vec4 tmpvar_27;
  tmpvar_27.w = 0.0;
  tmpvar_27.xyz = clouds_7;
  lowp vec4 arg0_28;
  arg0_28 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_29;
  tmpvar_29 = mix (arg0_28, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_27).xyz;
  tmpvar_6 = tmpvar_29;
  tmpvar_2 = tmpvar_5;
  c_1.xyz = (tmpvar_4 * (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz));
  c_1.w = tmpvar_10.w;
  c_1.xyz = (c_1.xyz + tmpvar_6);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  tmpvar_4 = tmpvar_1.xyz;
  tmpvar_5 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_4.x;
  tmpvar_6[0].y = tmpvar_5.x;
  tmpvar_6[0].z = tmpvar_2.x;
  tmpvar_6[1].x = tmpvar_4.y;
  tmpvar_6[1].y = tmpvar_5.y;
  tmpvar_6[1].z = tmpvar_2.y;
  tmpvar_6[2].x = tmpvar_4.z;
  tmpvar_6[2].y = tmpvar_5.z;
  tmpvar_6[2].z = tmpvar_2.z;
  highp vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_6 * (((_World2Object * tmpvar_7).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D unity_Lightmap;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  mediump vec3 clouds_7;
  mediump vec2 cloudUV_8;
  lowp float fresnel_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_11;
  tmpvar_11 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_9 = tmpvar_11;
  lowp float tmpvar_12;
  tmpvar_12 = pow (fresnel_9, _AtmosFalloff);
  lowp vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_10.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_12)) * tmpvar_12));
  cloudUV_8 = tmpvar_3;
  highp float tmpvar_14;
  tmpvar_14 = (_Time.y * _CloudSpeed);
  highp float tmpvar_15;
  tmpvar_15 = fract(abs(tmpvar_14));
  highp float tmpvar_16;
  if ((tmpvar_14 >= 0.0)) {
    tmpvar_16 = tmpvar_15;
  } else {
    tmpvar_16 = -(tmpvar_15);
  };
  cloudUV_8.x = (cloudUV_8.x + tmpvar_16);
  mediump float height_17;
  height_17 = _CloudHeight;
  mediump vec3 viewDir_18;
  viewDir_18 = xlv_TEXCOORD1;
  highp vec3 v_19;
  mediump float tmpvar_20;
  tmpvar_20 = (height_17 - (height_17 / 2.0));
  mediump vec3 tmpvar_21;
  tmpvar_21 = normalize(viewDir_18);
  v_19 = tmpvar_21;
  v_19.z = (v_19.z + 0.42);
  highp vec2 tmpvar_22;
  tmpvar_22 = (cloudUV_8 + (tmpvar_20 * (v_19.xy / v_19.z)));
  cloudUV_8 = tmpvar_22;
  lowp vec3 tmpvar_23;
  tmpvar_23 = texture2D (_Clouds, cloudUV_8).xyz;
  clouds_7 = tmpvar_23;
  mediump vec3 tmpvar_24;
  tmpvar_24 = (tmpvar_13 + clouds_7);
  tmpvar_4 = tmpvar_24;
  lowp vec3 normal_25;
  normal_25.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_25.z = sqrt((1.0 - clamp (dot (normal_25.xy, normal_25.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_26;
  tmpvar_26 = mix (normal_25, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_5 = tmpvar_26;
  mediump vec4 tmpvar_27;
  tmpvar_27.w = 0.0;
  tmpvar_27.xyz = clouds_7;
  lowp vec4 arg0_28;
  arg0_28 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_29;
  tmpvar_29 = mix (arg0_28, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_27).xyz;
  tmpvar_6 = tmpvar_29;
  tmpvar_2 = tmpvar_5;
  lowp vec4 tmpvar_30;
  tmpvar_30 = texture2D (unity_Lightmap, xlv_TEXCOORD2);
  c_1.xyz = (tmpvar_4 * ((8.0 * tmpvar_30.w) * tmpvar_30.xyz));
  c_1.w = tmpvar_10.w;
  c_1.xyz = (c_1.xyz + tmpvar_6);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out highp vec2 xlv_TEXCOORD2;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  tmpvar_4 = tmpvar_1.xyz;
  tmpvar_5 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_4.x;
  tmpvar_6[0].y = tmpvar_5.x;
  tmpvar_6[0].z = tmpvar_2.x;
  tmpvar_6[1].x = tmpvar_4.y;
  tmpvar_6[1].y = tmpvar_5.y;
  tmpvar_6[1].z = tmpvar_2.y;
  tmpvar_6[2].x = tmpvar_4.z;
  tmpvar_6[2].y = tmpvar_5.z;
  tmpvar_6[2].z = tmpvar_2.z;
  highp vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_6 * (((_World2Object * tmpvar_7).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _Time;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D unity_Lightmap;
in highp vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in highp vec2 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  mediump vec3 clouds_7;
  mediump vec2 cloudUV_8;
  lowp float fresnel_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_11;
  tmpvar_11 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_9 = tmpvar_11;
  lowp float tmpvar_12;
  tmpvar_12 = pow (fresnel_9, _AtmosFalloff);
  lowp vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_10.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_12)) * tmpvar_12));
  cloudUV_8 = tmpvar_3;
  highp float tmpvar_14;
  tmpvar_14 = (_Time.y * _CloudSpeed);
  highp float tmpvar_15;
  tmpvar_15 = fract(abs(tmpvar_14));
  highp float tmpvar_16;
  if ((tmpvar_14 >= 0.0)) {
    tmpvar_16 = tmpvar_15;
  } else {
    tmpvar_16 = -(tmpvar_15);
  };
  cloudUV_8.x = (cloudUV_8.x + tmpvar_16);
  mediump float height_17;
  height_17 = _CloudHeight;
  mediump vec3 viewDir_18;
  viewDir_18 = xlv_TEXCOORD1;
  highp vec3 v_19;
  mediump float tmpvar_20;
  tmpvar_20 = (height_17 - (height_17 / 2.0));
  mediump vec3 tmpvar_21;
  tmpvar_21 = normalize(viewDir_18);
  v_19 = tmpvar_21;
  v_19.z = (v_19.z + 0.42);
  highp vec2 tmpvar_22;
  tmpvar_22 = (cloudUV_8 + (tmpvar_20 * (v_19.xy / v_19.z)));
  cloudUV_8 = tmpvar_22;
  lowp vec3 tmpvar_23;
  tmpvar_23 = texture (_Clouds, cloudUV_8).xyz;
  clouds_7 = tmpvar_23;
  mediump vec3 tmpvar_24;
  tmpvar_24 = (tmpvar_13 + clouds_7);
  tmpvar_4 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_26;
  tmpvar_26 = mix (tmpvar_25, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_5 = tmpvar_26;
  mediump vec4 tmpvar_27;
  tmpvar_27.w = 0.0;
  tmpvar_27.xyz = clouds_7;
  lowp vec4 arg0_28;
  arg0_28 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_29;
  tmpvar_29 = mix (arg0_28, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_27).xyz;
  tmpvar_6 = tmpvar_29;
  tmpvar_2 = tmpvar_5;
  c_1.xyz = (tmpvar_4 * (2.0 * texture (unity_Lightmap, xlv_TEXCOORD2).xyz));
  c_1.w = tmpvar_10.w;
  c_1.xyz = (c_1.xyz + tmpvar_6);
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 20 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" ATTR14
Matrix 9 [_World2Object]
Vector 13 [_WorldSpaceCameraPos]
Vector 15 [unity_Scale]
Vector 16 [unity_LightmapST]
Vector 17 [_MainTex_ST]
Vector 18 [_Clouds_ST]
"3.0-!!ARBvp1.0
PARAM c[19] = { { 1 },
		state.matrix.mvp,
		program.local[5..18] };
TEMP R0;
TEMP R1;
TEMP R2;
MOV R0.xyz, vertex.attrib[14];
MUL R1.xyz, vertex.normal.zxyw, R0.yzxw;
MAD R0.xyz, vertex.normal.yzxw, R0.zxyw, -R1;
MUL R1.xyz, R0, vertex.attrib[14].w;
MOV R0.xyz, c[13];
MOV R0.w, c[0].x;
DP4 R2.z, R0, c[11];
DP4 R2.x, R0, c[9];
DP4 R2.y, R0, c[10];
MAD R0.xyz, R2, c[15].w, -vertex.position;
DP3 result.texcoord[1].y, R0, R1;
DP3 result.texcoord[1].z, vertex.normal, R0;
DP3 result.texcoord[1].x, R0, vertex.attrib[14];
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[18].xyxy, c[18];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[17], c[17].zwzw;
MAD result.texcoord[2].xy, vertex.texcoord[1], c[16], c[16].zwzw;
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 20 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 21 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 8 [_World2Object]
Vector 12 [_WorldSpaceCameraPos]
Vector 13 [unity_Scale]
Vector 14 [unity_LightmapST]
Vector 15 [_MainTex_ST]
Vector 16 [_Clouds_ST]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
def c17, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
dcl_texcoord1 v4
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r0.xyz, v2.yzxw, r0.zxyw, -r1
mul r1.xyz, r0, v1.w
mov r0.xyz, c12
mov r0.w, c17.x
dp4 r2.z, r0, c10
dp4 r2.x, r0, c8
dp4 r2.y, r0, c9
mad r0.xyz, r2, c13.w, -v0
dp3 o2.y, r0, r1
dp3 o2.z, v2, r0
dp3 o2.x, r0, v1
mad o1.zw, v3.xyxy, c16.xyxy, c16
mad o1.xy, v3, c15, c15.zwzw
mad o3.xy, v4, c14, c14.zwzw
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 18 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 144
Vector 96 [unity_LightmapST]
Vector 112 [_MainTex_ST]
Vector 128 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityPerDraw" 2
"vs_4_0
eefiecedgihjligonkmienkeammlfhjndmgppdlhabaaaaaanaaeaaaaadaaaaaa
cmaaaaaapeaaaaaahmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheoiaaaaaaaaeaaaaaa
aiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaheaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
adamaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefc
emadaaaaeaaaabaandaaaaaafjaaaaaeegiocaaaaaaaaaaaajaaaaaafjaaaaae
egiocaaaabaaaaaaafaaaaaafjaaaaaeegiocaaaacaaaaaabfaaaaaafpaaaaad
pcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaa
fpaaaaaddcbabaaaadaaaaaafpaaaaaddcbabaaaaeaaaaaaghaaaaaepccabaaa
aaaaaaaaabaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaa
gfaaaaaddccabaaaadaaaaaagiaaaaacacaaaaaadiaaaaaipcaabaaaaaaaaaaa
fgbfbaaaaaaaaaaaegiocaaaacaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaa
egiocaaaacaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaacaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaacaaaaaaadaaaaaapgbpbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaa
egiacaaaaaaaaaaaahaaaaaaogikcaaaaaaaaaaaahaaaaaadcaaaaalmccabaaa
abaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaaiaaaaaakgiocaaaaaaaaaaa
aiaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaa
dcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaia
ebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaapgbpbaaa
abaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaa
acaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaacaaaaaabaaaaaaa
agiacaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaa
egiccaaaacaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaa
aaaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaacaaaaaabdaaaaaa
dcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaaacaaaaaabeaaaaaa
egbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaaacaaaaaaegacbaaaaaaaaaaa
egacbaaaabaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaa
abaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaa
dcaaaaaldccabaaaadaaaaaaegbabaaaaeaaaaaaegiacaaaaaaaaaaaagaaaaaa
ogikcaaaaaaaaaaaagaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  tmpvar_4 = tmpvar_1.xyz;
  tmpvar_5 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_4.x;
  tmpvar_6[0].y = tmpvar_5.x;
  tmpvar_6[0].z = tmpvar_2.x;
  tmpvar_6[1].x = tmpvar_4.y;
  tmpvar_6[1].y = tmpvar_5.y;
  tmpvar_6[1].z = tmpvar_2.y;
  tmpvar_6[2].x = tmpvar_4.z;
  tmpvar_6[2].y = tmpvar_5.z;
  tmpvar_6[2].z = tmpvar_2.z;
  highp vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_6 * (((_World2Object * tmpvar_7).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_3;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture2D (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_4 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (tmpvar_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 0.0;
  tmpvar_29.xyz = clouds_9;
  lowp vec4 arg0_30;
  arg0_30 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_31;
  tmpvar_31 = mix (arg0_30, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_29).xyz;
  tmpvar_6 = tmpvar_31;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_33;
  tmpvar_33 = ((tmpvar_32.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_33;
  tmpvar_2 = tmpvar_5;
  c_1.w = 0.0;
  highp vec3 tmpvar_34;
  tmpvar_34 = normalize(xlv_TEXCOORD1);
  mediump vec4 tmpvar_35;
  mediump vec3 viewDir_36;
  viewDir_36 = tmpvar_34;
  mediump vec3 specColor_37;
  highp float nh_38;
  mat3 tmpvar_39;
  tmpvar_39[0].x = 0.816497;
  tmpvar_39[0].y = -0.408248;
  tmpvar_39[0].z = -0.408248;
  tmpvar_39[1].x = 0.0;
  tmpvar_39[1].y = 0.707107;
  tmpvar_39[1].z = -0.707107;
  tmpvar_39[2].x = 0.57735;
  tmpvar_39[2].y = 0.57735;
  tmpvar_39[2].z = 0.57735;
  mediump vec3 normal_40;
  normal_40 = tmpvar_5;
  mediump vec3 scalePerBasisVector_41;
  mediump vec3 lm_42;
  lowp vec3 tmpvar_43;
  tmpvar_43 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lm_42 = tmpvar_43;
  lowp vec3 tmpvar_44;
  tmpvar_44 = (2.0 * texture2D (unity_LightmapInd, xlv_TEXCOORD2).xyz);
  scalePerBasisVector_41 = tmpvar_44;
  lm_42 = (lm_42 * dot (clamp ((tmpvar_39 * normal_40), 0.0, 1.0), scalePerBasisVector_41));
  vec3 v_45;
  v_45.x = tmpvar_39[0].x;
  v_45.y = tmpvar_39[1].x;
  v_45.z = tmpvar_39[2].x;
  vec3 v_46;
  v_46.x = tmpvar_39[0].y;
  v_46.y = tmpvar_39[1].y;
  v_46.z = tmpvar_39[2].y;
  vec3 v_47;
  v_47.x = tmpvar_39[0].z;
  v_47.y = tmpvar_39[1].z;
  v_47.z = tmpvar_39[2].z;
  mediump float tmpvar_48;
  tmpvar_48 = max (0.0, dot (tmpvar_5, normalize((normalize((((scalePerBasisVector_41.x * v_45) + (scalePerBasisVector_41.y * v_46)) + (scalePerBasisVector_41.z * v_47))) + viewDir_36))));
  nh_38 = tmpvar_48;
  highp float tmpvar_49;
  mediump float arg1_50;
  arg1_50 = (tmpvar_7 * 128.0);
  tmpvar_49 = pow (nh_38, arg1_50);
  highp vec3 tmpvar_51;
  tmpvar_51 = (((lm_42 * _SpecColor.xyz) * tmpvar_8) * tmpvar_49);
  specColor_37 = tmpvar_51;
  highp vec4 tmpvar_52;
  tmpvar_52.xyz = lm_42;
  tmpvar_52.w = tmpvar_49;
  tmpvar_35 = tmpvar_52;
  c_1.xyz = specColor_37;
  mediump vec3 tmpvar_53;
  tmpvar_53 = (c_1.xyz + (tmpvar_4 * tmpvar_35.xyz));
  c_1.xyz = tmpvar_53;
  c_1.w = tmpvar_12.w;
  c_1.xyz = (c_1.xyz + tmpvar_6);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  tmpvar_4 = tmpvar_1.xyz;
  tmpvar_5 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_4.x;
  tmpvar_6[0].y = tmpvar_5.x;
  tmpvar_6[0].z = tmpvar_2.x;
  tmpvar_6[1].x = tmpvar_4.y;
  tmpvar_6[1].y = tmpvar_5.y;
  tmpvar_6[1].z = tmpvar_2.y;
  tmpvar_6[2].x = tmpvar_4.z;
  tmpvar_6[2].y = tmpvar_5.z;
  tmpvar_6[2].z = tmpvar_2.z;
  highp vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_6 * (((_World2Object * tmpvar_7).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_3;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture2D (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_4 = tmpvar_26;
  lowp vec3 normal_27;
  normal_27.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_27.z = sqrt((1.0 - clamp (dot (normal_27.xy, normal_27.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (normal_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 0.0;
  tmpvar_29.xyz = clouds_9;
  lowp vec4 arg0_30;
  arg0_30 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_31;
  tmpvar_31 = mix (arg0_30, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_29).xyz;
  tmpvar_6 = tmpvar_31;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_33;
  tmpvar_33 = ((tmpvar_32.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_33;
  tmpvar_2 = tmpvar_5;
  c_1.w = 0.0;
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture2D (unity_Lightmap, xlv_TEXCOORD2);
  lowp vec4 tmpvar_35;
  tmpvar_35 = texture2D (unity_LightmapInd, xlv_TEXCOORD2);
  highp vec3 tmpvar_36;
  tmpvar_36 = normalize(xlv_TEXCOORD1);
  mediump vec4 tmpvar_37;
  mediump vec3 viewDir_38;
  viewDir_38 = tmpvar_36;
  mediump vec3 specColor_39;
  highp float nh_40;
  mat3 tmpvar_41;
  tmpvar_41[0].x = 0.816497;
  tmpvar_41[0].y = -0.408248;
  tmpvar_41[0].z = -0.408248;
  tmpvar_41[1].x = 0.0;
  tmpvar_41[1].y = 0.707107;
  tmpvar_41[1].z = -0.707107;
  tmpvar_41[2].x = 0.57735;
  tmpvar_41[2].y = 0.57735;
  tmpvar_41[2].z = 0.57735;
  mediump vec3 normal_42;
  normal_42 = tmpvar_5;
  mediump vec3 scalePerBasisVector_43;
  mediump vec3 lm_44;
  lowp vec3 tmpvar_45;
  tmpvar_45 = ((8.0 * tmpvar_34.w) * tmpvar_34.xyz);
  lm_44 = tmpvar_45;
  lowp vec3 tmpvar_46;
  tmpvar_46 = ((8.0 * tmpvar_35.w) * tmpvar_35.xyz);
  scalePerBasisVector_43 = tmpvar_46;
  lm_44 = (lm_44 * dot (clamp ((tmpvar_41 * normal_42), 0.0, 1.0), scalePerBasisVector_43));
  vec3 v_47;
  v_47.x = tmpvar_41[0].x;
  v_47.y = tmpvar_41[1].x;
  v_47.z = tmpvar_41[2].x;
  vec3 v_48;
  v_48.x = tmpvar_41[0].y;
  v_48.y = tmpvar_41[1].y;
  v_48.z = tmpvar_41[2].y;
  vec3 v_49;
  v_49.x = tmpvar_41[0].z;
  v_49.y = tmpvar_41[1].z;
  v_49.z = tmpvar_41[2].z;
  mediump float tmpvar_50;
  tmpvar_50 = max (0.0, dot (tmpvar_5, normalize((normalize((((scalePerBasisVector_43.x * v_47) + (scalePerBasisVector_43.y * v_48)) + (scalePerBasisVector_43.z * v_49))) + viewDir_38))));
  nh_40 = tmpvar_50;
  highp float tmpvar_51;
  mediump float arg1_52;
  arg1_52 = (tmpvar_7 * 128.0);
  tmpvar_51 = pow (nh_40, arg1_52);
  highp vec3 tmpvar_53;
  tmpvar_53 = (((lm_44 * _SpecColor.xyz) * tmpvar_8) * tmpvar_51);
  specColor_39 = tmpvar_53;
  highp vec4 tmpvar_54;
  tmpvar_54.xyz = lm_44;
  tmpvar_54.w = tmpvar_51;
  tmpvar_37 = tmpvar_54;
  c_1.xyz = specColor_39;
  mediump vec3 tmpvar_55;
  tmpvar_55 = (c_1.xyz + (tmpvar_4 * tmpvar_37.xyz));
  c_1.xyz = tmpvar_55;
  c_1.w = tmpvar_12.w;
  c_1.xyz = (c_1.xyz + tmpvar_6);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out highp vec2 xlv_TEXCOORD2;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  tmpvar_4 = tmpvar_1.xyz;
  tmpvar_5 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_4.x;
  tmpvar_6[0].y = tmpvar_5.x;
  tmpvar_6[0].z = tmpvar_2.x;
  tmpvar_6[1].x = tmpvar_4.y;
  tmpvar_6[1].y = tmpvar_5.y;
  tmpvar_6[1].z = tmpvar_2.y;
  tmpvar_6[2].x = tmpvar_4.z;
  tmpvar_6[2].y = tmpvar_5.z;
  tmpvar_6[2].z = tmpvar_2.z;
  highp vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_6 * (((_World2Object * tmpvar_7).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _Time;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
in highp vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in highp vec2 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_3;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_4 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (tmpvar_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 0.0;
  tmpvar_29.xyz = clouds_9;
  lowp vec4 arg0_30;
  arg0_30 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_31;
  tmpvar_31 = mix (arg0_30, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_29).xyz;
  tmpvar_6 = tmpvar_31;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_33;
  tmpvar_33 = ((tmpvar_32.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_33;
  tmpvar_2 = tmpvar_5;
  c_1.w = 0.0;
  highp vec3 tmpvar_34;
  tmpvar_34 = normalize(xlv_TEXCOORD1);
  mediump vec4 tmpvar_35;
  mediump vec3 viewDir_36;
  viewDir_36 = tmpvar_34;
  mediump vec3 specColor_37;
  highp float nh_38;
  mat3 tmpvar_39;
  tmpvar_39[0].x = 0.816497;
  tmpvar_39[0].y = -0.408248;
  tmpvar_39[0].z = -0.408248;
  tmpvar_39[1].x = 0.0;
  tmpvar_39[1].y = 0.707107;
  tmpvar_39[1].z = -0.707107;
  tmpvar_39[2].x = 0.57735;
  tmpvar_39[2].y = 0.57735;
  tmpvar_39[2].z = 0.57735;
  mediump vec3 normal_40;
  normal_40 = tmpvar_5;
  mediump vec3 scalePerBasisVector_41;
  mediump vec3 lm_42;
  lowp vec3 tmpvar_43;
  tmpvar_43 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lm_42 = tmpvar_43;
  lowp vec3 tmpvar_44;
  tmpvar_44 = (2.0 * texture (unity_LightmapInd, xlv_TEXCOORD2).xyz);
  scalePerBasisVector_41 = tmpvar_44;
  lm_42 = (lm_42 * dot (clamp ((tmpvar_39 * normal_40), 0.0, 1.0), scalePerBasisVector_41));
  vec3 v_45;
  v_45.x = tmpvar_39[0].x;
  v_45.y = tmpvar_39[1].x;
  v_45.z = tmpvar_39[2].x;
  vec3 v_46;
  v_46.x = tmpvar_39[0].y;
  v_46.y = tmpvar_39[1].y;
  v_46.z = tmpvar_39[2].y;
  vec3 v_47;
  v_47.x = tmpvar_39[0].z;
  v_47.y = tmpvar_39[1].z;
  v_47.z = tmpvar_39[2].z;
  mediump float tmpvar_48;
  tmpvar_48 = max (0.0, dot (tmpvar_5, normalize((normalize((((scalePerBasisVector_41.x * v_45) + (scalePerBasisVector_41.y * v_46)) + (scalePerBasisVector_41.z * v_47))) + viewDir_36))));
  nh_38 = tmpvar_48;
  highp float tmpvar_49;
  mediump float arg1_50;
  arg1_50 = (tmpvar_7 * 128.0);
  tmpvar_49 = pow (nh_38, arg1_50);
  highp vec3 tmpvar_51;
  tmpvar_51 = (((lm_42 * _SpecColor.xyz) * tmpvar_8) * tmpvar_49);
  specColor_37 = tmpvar_51;
  highp vec4 tmpvar_52;
  tmpvar_52.xyz = lm_42;
  tmpvar_52.w = tmpvar_49;
  tmpvar_35 = tmpvar_52;
  c_1.xyz = specColor_37;
  mediump vec3 tmpvar_53;
  tmpvar_53 = (c_1.xyz + (tmpvar_4 * tmpvar_35.xyz));
  c_1.xyz = tmpvar_53;
  c_1.w = tmpvar_12.w;
  c_1.xyz = (c_1.xyz + tmpvar_6);
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 49 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Vector 13 [_WorldSpaceCameraPos]
Vector 14 [_ProjectionParams]
Vector 15 [_WorldSpaceLightPos0]
Vector 16 [unity_SHAr]
Vector 17 [unity_SHAg]
Vector 18 [unity_SHAb]
Vector 19 [unity_SHBr]
Vector 20 [unity_SHBg]
Vector 21 [unity_SHBb]
Vector 22 [unity_SHC]
Vector 23 [unity_Scale]
Vector 24 [_MainTex_ST]
Vector 25 [_Clouds_ST]
"3.0-!!ARBvp1.0
PARAM c[26] = { { 1, 0.5 },
		state.matrix.mvp,
		program.local[5..25] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R1.xyz, vertex.normal, c[23].w;
DP3 R2.w, R1, c[6];
DP3 R0.x, R1, c[5];
DP3 R0.z, R1, c[7];
MOV R0.y, R2.w;
MUL R1, R0.xyzz, R0.yzzx;
MOV R0.w, c[0].x;
DP4 R2.z, R0, c[18];
DP4 R2.y, R0, c[17];
DP4 R2.x, R0, c[16];
MUL R0.y, R2.w, R2.w;
DP4 R3.z, R1, c[21];
DP4 R3.y, R1, c[20];
DP4 R3.x, R1, c[19];
ADD R2.xyz, R2, R3;
MAD R0.x, R0, R0, -R0.y;
MUL R3.xyz, R0.x, c[22];
MOV R1.xyz, vertex.attrib[14];
MUL R0.xyz, vertex.normal.zxyw, R1.yzxw;
MAD R1.xyz, vertex.normal.yzxw, R1.zxyw, -R0;
ADD result.texcoord[3].xyz, R2, R3;
MOV R0.w, c[0].x;
MOV R0.xyz, c[13];
DP4 R2.z, R0, c[11];
DP4 R2.x, R0, c[9];
DP4 R2.y, R0, c[10];
MAD R0.xyz, R2, c[23].w, -vertex.position;
MUL R2.xyz, R1, vertex.attrib[14].w;
MOV R1, c[15];
DP4 R3.z, R1, c[11];
DP4 R3.x, R1, c[9];
DP4 R3.y, R1, c[10];
DP3 result.texcoord[1].y, R0, R2;
DP3 result.texcoord[1].z, vertex.normal, R0;
DP3 result.texcoord[1].x, R0, vertex.attrib[14];
DP4 R0.w, vertex.position, c[4];
DP4 R0.z, vertex.position, c[3];
DP4 R0.x, vertex.position, c[1];
DP4 R0.y, vertex.position, c[2];
MUL R1.xyz, R0.xyww, c[0].y;
MUL R1.y, R1, c[14].x;
DP3 result.texcoord[2].y, R2, R3;
DP3 result.texcoord[2].z, vertex.normal, R3;
DP3 result.texcoord[2].x, vertex.attrib[14], R3;
ADD result.texcoord[4].xy, R1, R1.z;
MOV result.position, R0;
MOV result.texcoord[4].zw, R0;
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[25].xyxy, c[25];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[24], c[24].zwzw;
END
# 49 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 52 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 12 [_WorldSpaceCameraPos]
Vector 13 [_ProjectionParams]
Vector 14 [_ScreenParams]
Vector 15 [_WorldSpaceLightPos0]
Vector 16 [unity_SHAr]
Vector 17 [unity_SHAg]
Vector 18 [unity_SHAb]
Vector 19 [unity_SHBr]
Vector 20 [unity_SHBg]
Vector 21 [unity_SHBb]
Vector 22 [unity_SHC]
Vector 23 [unity_Scale]
Vector 24 [_MainTex_ST]
Vector 25 [_Clouds_ST]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
def c26, 1.00000000, 0.50000000, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mul r1.xyz, v2, c23.w
dp3 r2.w, r1, c5
dp3 r0.x, r1, c4
dp3 r0.z, r1, c6
mov r0.y, r2.w
mul r1, r0.xyzz, r0.yzzx
mov r0.w, c26.x
dp4 r2.z, r0, c18
dp4 r2.y, r0, c17
dp4 r2.x, r0, c16
mul r0.y, r2.w, r2.w
dp4 r3.z, r1, c21
dp4 r3.y, r1, c20
dp4 r3.x, r1, c19
add r1.xyz, r2, r3
mad r0.x, r0, r0, -r0.y
mul r2.xyz, r0.x, c22
add o4.xyz, r1, r2
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r0.xyz, v2.yzxw, r0.zxyw, -r1
mul r3.xyz, r0, v1.w
mov r0, c10
dp4 r4.z, c15, r0
mov r0, c9
dp4 r4.y, c15, r0
mov r1.w, c26.x
mov r1.xyz, c12
dp4 r0.w, v0, c3
dp4 r0.z, v0, c2
dp4 r2.z, r1, c10
dp4 r2.x, r1, c8
dp4 r2.y, r1, c9
mad r2.xyz, r2, c23.w, -v0
mov r1, c8
dp4 r4.x, c15, r1
dp4 r0.x, v0, c0
dp4 r0.y, v0, c1
mul r1.xyz, r0.xyww, c26.y
mul r1.y, r1, c13.x
dp3 o2.y, r2, r3
dp3 o3.y, r3, r4
dp3 o2.z, v2, r2
dp3 o2.x, r2, v1
dp3 o3.z, v2, r4
dp3 o3.x, v1, r4
mad o5.xy, r1.z, c14.zwzw, r1
mov o0, r0
mov o5.zw, r0
mad o1.zw, v3.xyxy, c25.xyxy, c25
mad o1.xy, v3, c24, c24.zwzw
"
}
SubProgram "d3d11 " {
// Stats: 42 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 192
Vector 160 [_MainTex_ST]
Vector 176 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0
eefiecedjhgcbdgobgnonbfdnndlhkgbgccafiggabaaaaaaiaaiaaaaadaaaaaa
cmaaaaaapeaaaaaakmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheolaaaaaaaagaaaaaa
aiaaaaaajiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakeaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaakeaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaakeaaaaaa
aeaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklfdeieefcmmagaaaaeaaaabaaldabaaaafjaaaaae
egiocaaaaaaaaaaaamaaaaaafjaaaaaeegiocaaaabaaaaaaagaaaaaafjaaaaae
egiocaaaacaaaaaacnaaaaaafjaaaaaeegiocaaaadaaaaaabfaaaaaafpaaaaad
pcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaa
fpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaad
pccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaa
gfaaaaadhccabaaaaeaaaaaagfaaaaadpccabaaaafaaaaaagiaaaaacafaaaaaa
diaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaa
kgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaa
egiacaaaaaaaaaaaakaaaaaaogikcaaaaaaaaaaaakaaaaaadcaaaaalmccabaaa
abaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaalaaaaaakgiocaaaaaaaaaaa
alaaaaaadiaaaaahhcaabaaaabaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaa
dcaaaaakhcaabaaaabaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaia
ebaaaaaaabaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaapgbpbaaa
abaaaaaadiaaaaajhcaabaaaacaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaa
adaaaaaabbaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaaadaaaaaabaaaaaaa
agiacaaaabaaaaaaaeaaaaaaegacbaaaacaaaaaadcaaaaalhcaabaaaacaaaaaa
egiccaaaadaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaaacaaaaaa
aaaaaaaihcaabaaaacaaaaaaegacbaaaacaaaaaaegiccaaaadaaaaaabdaaaaaa
dcaaaaalhcaabaaaacaaaaaaegacbaaaacaaaaaapgipcaaaadaaaaaabeaaaaaa
egbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaaacaaaaaaegacbaaaabaaaaaa
egacbaaaacaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaa
acaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaaacaaaaaa
diaaaaajhcaabaaaacaaaaaafgifcaaaacaaaaaaaaaaaaaaegiccaaaadaaaaaa
bbaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaa
acaaaaaaaaaaaaaaegacbaaaacaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaa
adaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaaegacbaaaacaaaaaadcaaaaal
hcaabaaaacaaaaaaegiccaaaadaaaaaabdaaaaaapgipcaaaacaaaaaaaaaaaaaa
egacbaaaacaaaaaabaaaaaahcccabaaaadaaaaaaegacbaaaabaaaaaaegacbaaa
acaaaaaabaaaaaahbccabaaaadaaaaaaegbcbaaaabaaaaaaegacbaaaacaaaaaa
baaaaaaheccabaaaadaaaaaaegbcbaaaacaaaaaaegacbaaaacaaaaaadiaaaaai
hcaabaaaabaaaaaaegbcbaaaacaaaaaapgipcaaaadaaaaaabeaaaaaadiaaaaai
hcaabaaaacaaaaaafgafbaaaabaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaak
lcaabaaaabaaaaaaegiicaaaadaaaaaaamaaaaaaagaabaaaabaaaaaaegaibaaa
acaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaadaaaaaaaoaaaaaakgakbaaa
abaaaaaaegadbaaaabaaaaaadgaaaaaficaabaaaabaaaaaaabeaaaaaaaaaiadp
bbaaaaaibcaabaaaacaaaaaaegiocaaaacaaaaaacgaaaaaaegaobaaaabaaaaaa
bbaaaaaiccaabaaaacaaaaaaegiocaaaacaaaaaachaaaaaaegaobaaaabaaaaaa
bbaaaaaiecaabaaaacaaaaaaegiocaaaacaaaaaaciaaaaaaegaobaaaabaaaaaa
diaaaaahpcaabaaaadaaaaaajgacbaaaabaaaaaaegakbaaaabaaaaaabbaaaaai
bcaabaaaaeaaaaaaegiocaaaacaaaaaacjaaaaaaegaobaaaadaaaaaabbaaaaai
ccaabaaaaeaaaaaaegiocaaaacaaaaaackaaaaaaegaobaaaadaaaaaabbaaaaai
ecaabaaaaeaaaaaaegiocaaaacaaaaaaclaaaaaaegaobaaaadaaaaaaaaaaaaah
hcaabaaaacaaaaaaegacbaaaacaaaaaaegacbaaaaeaaaaaadiaaaaahccaabaaa
abaaaaaabkaabaaaabaaaaaabkaabaaaabaaaaaadcaaaaakbcaabaaaabaaaaaa
akaabaaaabaaaaaaakaabaaaabaaaaaabkaabaiaebaaaaaaabaaaaaadcaaaaak
hccabaaaaeaaaaaaegiccaaaacaaaaaacmaaaaaaagaabaaaabaaaaaaegacbaaa
acaaaaaadiaaaaaiccaabaaaaaaaaaaabkaabaaaaaaaaaaaakiacaaaabaaaaaa
afaaaaaadiaaaaakncaabaaaabaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadp
aaaaaaaaaaaaaadpaaaaaadpdgaaaaafmccabaaaafaaaaaakgaobaaaaaaaaaaa
aaaaaaahdccabaaaafaaaaaakgakbaaaabaaaaaamgaabaaaabaaaaaadoaaaaab
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_7 * (tmpvar_2 * unity_Scale.w));
  mediump vec3 tmpvar_14;
  mediump vec4 normal_15;
  normal_15 = tmpvar_13;
  highp float vC_16;
  mediump vec3 x3_17;
  mediump vec3 x2_18;
  mediump vec3 x1_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHAr, normal_15);
  x1_19.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAg, normal_15);
  x1_19.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAb, normal_15);
  x1_19.z = tmpvar_22;
  mediump vec4 tmpvar_23;
  tmpvar_23 = (normal_15.xyzz * normal_15.yzzx);
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHBr, tmpvar_23);
  x2_18.x = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBg, tmpvar_23);
  x2_18.y = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBb, tmpvar_23);
  x2_18.z = tmpvar_26;
  mediump float tmpvar_27;
  tmpvar_27 = ((normal_15.x * normal_15.x) - (normal_15.y * normal_15.y));
  vC_16 = tmpvar_27;
  highp vec3 tmpvar_28;
  tmpvar_28 = (unity_SHC.xyz * vC_16);
  x3_17 = tmpvar_28;
  tmpvar_14 = ((x1_19 + x2_18) + x3_17);
  shlight_3 = tmpvar_14;
  tmpvar_6 = shlight_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = (tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_3;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture2D (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_4 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (tmpvar_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 0.0;
  tmpvar_29.xyz = clouds_9;
  lowp vec4 arg0_30;
  arg0_30 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_31;
  tmpvar_31 = mix (arg0_30, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_29).xyz;
  tmpvar_6 = tmpvar_31;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_33;
  tmpvar_33 = ((tmpvar_32.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_33;
  tmpvar_2 = tmpvar_5;
  lowp float tmpvar_34;
  mediump float lightShadowDataX_35;
  highp float dist_36;
  lowp float tmpvar_37;
  tmpvar_37 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
  dist_36 = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = _LightShadowData.x;
  lightShadowDataX_35 = tmpvar_38;
  highp float tmpvar_39;
  tmpvar_39 = max (float((dist_36 > (xlv_TEXCOORD4.z / xlv_TEXCOORD4.w))), lightShadowDataX_35);
  tmpvar_34 = tmpvar_39;
  highp vec3 tmpvar_40;
  tmpvar_40 = normalize(xlv_TEXCOORD1);
  mediump vec3 viewDir_41;
  viewDir_41 = tmpvar_40;
  lowp vec4 c_42;
  highp float nh_43;
  lowp float tmpvar_44;
  tmpvar_44 = max (0.0, dot (tmpvar_5, xlv_TEXCOORD2));
  mediump float tmpvar_45;
  tmpvar_45 = max (0.0, dot (tmpvar_5, normalize((xlv_TEXCOORD2 + viewDir_41))));
  nh_43 = tmpvar_45;
  mediump float arg1_46;
  arg1_46 = (tmpvar_7 * 128.0);
  highp float tmpvar_47;
  tmpvar_47 = (pow (nh_43, arg1_46) * tmpvar_8);
  highp vec3 tmpvar_48;
  tmpvar_48 = ((((tmpvar_4 * _LightColor0.xyz) * tmpvar_44) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_47)) * (tmpvar_34 * 2.0));
  c_42.xyz = tmpvar_48;
  highp float tmpvar_49;
  tmpvar_49 = (tmpvar_12.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_47) * tmpvar_34));
  c_42.w = tmpvar_49;
  c_1.w = c_42.w;
  c_1.xyz = (c_42.xyz + (tmpvar_4 * xlv_TEXCOORD3));
  c_1.xyz = (c_1.xyz + tmpvar_6);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_8;
  tmpvar_8[0] = _Object2World[0].xyz;
  tmpvar_8[1] = _Object2World[1].xyz;
  tmpvar_8[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_1.xyz;
  tmpvar_10 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_11;
  tmpvar_11[0].x = tmpvar_9.x;
  tmpvar_11[0].y = tmpvar_10.x;
  tmpvar_11[0].z = tmpvar_2.x;
  tmpvar_11[1].x = tmpvar_9.y;
  tmpvar_11[1].y = tmpvar_10.y;
  tmpvar_11[1].z = tmpvar_2.y;
  tmpvar_11[2].x = tmpvar_9.z;
  tmpvar_11[2].y = tmpvar_10.z;
  tmpvar_11[2].z = tmpvar_2.z;
  highp vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = (tmpvar_8 * (tmpvar_2 * unity_Scale.w));
  mediump vec3 tmpvar_15;
  mediump vec4 normal_16;
  normal_16 = tmpvar_14;
  highp float vC_17;
  mediump vec3 x3_18;
  mediump vec3 x2_19;
  mediump vec3 x1_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAr, normal_16);
  x1_20.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAg, normal_16);
  x1_20.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHAb, normal_16);
  x1_20.z = tmpvar_23;
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_16.xyzz * normal_16.yzzx);
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBr, tmpvar_24);
  x2_19.x = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBg, tmpvar_24);
  x2_19.y = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = dot (unity_SHBb, tmpvar_24);
  x2_19.z = tmpvar_27;
  mediump float tmpvar_28;
  tmpvar_28 = ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y));
  vC_17 = tmpvar_28;
  highp vec3 tmpvar_29;
  tmpvar_29 = (unity_SHC.xyz * vC_17);
  x3_18 = tmpvar_29;
  tmpvar_15 = ((x1_20 + x2_19) + x3_18);
  shlight_3 = tmpvar_15;
  tmpvar_6 = shlight_3;
  highp vec4 o_30;
  highp vec4 tmpvar_31;
  tmpvar_31 = (tmpvar_7 * 0.5);
  highp vec2 tmpvar_32;
  tmpvar_32.x = tmpvar_31.x;
  tmpvar_32.y = (tmpvar_31.y * _ProjectionParams.x);
  o_30.xy = (tmpvar_32 + tmpvar_31.w);
  o_30.zw = tmpvar_7.zw;
  gl_Position = tmpvar_7;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = (tmpvar_11 * (((_World2Object * tmpvar_13).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = o_30;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_3;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture2D (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_4 = tmpvar_26;
  lowp vec3 normal_27;
  normal_27.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_27.z = sqrt((1.0 - clamp (dot (normal_27.xy, normal_27.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (normal_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 0.0;
  tmpvar_29.xyz = clouds_9;
  lowp vec4 arg0_30;
  arg0_30 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_31;
  tmpvar_31 = mix (arg0_30, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_29).xyz;
  tmpvar_6 = tmpvar_31;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_33;
  tmpvar_33 = ((tmpvar_32.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_33;
  tmpvar_2 = tmpvar_5;
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4);
  highp vec3 tmpvar_35;
  tmpvar_35 = normalize(xlv_TEXCOORD1);
  mediump vec3 viewDir_36;
  viewDir_36 = tmpvar_35;
  lowp vec4 c_37;
  highp float nh_38;
  lowp float tmpvar_39;
  tmpvar_39 = max (0.0, dot (tmpvar_5, xlv_TEXCOORD2));
  mediump float tmpvar_40;
  tmpvar_40 = max (0.0, dot (tmpvar_5, normalize((xlv_TEXCOORD2 + viewDir_36))));
  nh_38 = tmpvar_40;
  mediump float arg1_41;
  arg1_41 = (tmpvar_7 * 128.0);
  highp float tmpvar_42;
  tmpvar_42 = (pow (nh_38, arg1_41) * tmpvar_8);
  highp vec3 tmpvar_43;
  tmpvar_43 = ((((tmpvar_4 * _LightColor0.xyz) * tmpvar_39) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_42)) * (tmpvar_34.x * 2.0));
  c_37.xyz = tmpvar_43;
  highp float tmpvar_44;
  tmpvar_44 = (tmpvar_12.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_42) * tmpvar_34.x));
  c_37.w = tmpvar_44;
  c_1.w = c_37.w;
  c_1.xyz = (c_37.xyz + (tmpvar_4 * xlv_TEXCOORD3));
  c_1.xyz = (c_1.xyz + tmpvar_6);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec3 xlv_TEXCOORD2;
out lowp vec3 xlv_TEXCOORD3;
out highp vec4 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_7 * (tmpvar_2 * unity_Scale.w));
  mediump vec3 tmpvar_14;
  mediump vec4 normal_15;
  normal_15 = tmpvar_13;
  highp float vC_16;
  mediump vec3 x3_17;
  mediump vec3 x2_18;
  mediump vec3 x1_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHAr, normal_15);
  x1_19.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAg, normal_15);
  x1_19.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAb, normal_15);
  x1_19.z = tmpvar_22;
  mediump vec4 tmpvar_23;
  tmpvar_23 = (normal_15.xyzz * normal_15.yzzx);
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHBr, tmpvar_23);
  x2_18.x = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBg, tmpvar_23);
  x2_18.y = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBb, tmpvar_23);
  x2_18.z = tmpvar_26;
  mediump float tmpvar_27;
  tmpvar_27 = ((normal_15.x * normal_15.x) - (normal_15.y * normal_15.y));
  vC_16 = tmpvar_27;
  highp vec3 tmpvar_28;
  tmpvar_28 = (unity_SHC.xyz * vC_16);
  x3_17 = tmpvar_28;
  tmpvar_14 = ((x1_19 + x2_18) + x3_17);
  shlight_3 = tmpvar_14;
  tmpvar_6 = shlight_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = (tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _Time;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
in highp vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec3 xlv_TEXCOORD2;
in lowp vec3 xlv_TEXCOORD3;
in highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_3;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_4 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (tmpvar_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 0.0;
  tmpvar_29.xyz = clouds_9;
  lowp vec4 arg0_30;
  arg0_30 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_31;
  tmpvar_31 = mix (arg0_30, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_29).xyz;
  tmpvar_6 = tmpvar_31;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_33;
  tmpvar_33 = ((tmpvar_32.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_33;
  tmpvar_2 = tmpvar_5;
  lowp float tmpvar_34;
  mediump float lightShadowDataX_35;
  highp float dist_36;
  lowp float tmpvar_37;
  tmpvar_37 = textureProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
  dist_36 = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = _LightShadowData.x;
  lightShadowDataX_35 = tmpvar_38;
  highp float tmpvar_39;
  tmpvar_39 = max (float((dist_36 > (xlv_TEXCOORD4.z / xlv_TEXCOORD4.w))), lightShadowDataX_35);
  tmpvar_34 = tmpvar_39;
  highp vec3 tmpvar_40;
  tmpvar_40 = normalize(xlv_TEXCOORD1);
  mediump vec3 viewDir_41;
  viewDir_41 = tmpvar_40;
  lowp vec4 c_42;
  highp float nh_43;
  lowp float tmpvar_44;
  tmpvar_44 = max (0.0, dot (tmpvar_5, xlv_TEXCOORD2));
  mediump float tmpvar_45;
  tmpvar_45 = max (0.0, dot (tmpvar_5, normalize((xlv_TEXCOORD2 + viewDir_41))));
  nh_43 = tmpvar_45;
  mediump float arg1_46;
  arg1_46 = (tmpvar_7 * 128.0);
  highp float tmpvar_47;
  tmpvar_47 = (pow (nh_43, arg1_46) * tmpvar_8);
  highp vec3 tmpvar_48;
  tmpvar_48 = ((((tmpvar_4 * _LightColor0.xyz) * tmpvar_44) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_47)) * (tmpvar_34 * 2.0));
  c_42.xyz = tmpvar_48;
  highp float tmpvar_49;
  tmpvar_49 = (tmpvar_12.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_47) * tmpvar_34));
  c_42.w = tmpvar_49;
  c_1.w = c_42.w;
  c_1.xyz = (c_42.xyz + (tmpvar_4 * xlv_TEXCOORD3));
  c_1.xyz = (c_1.xyz + tmpvar_6);
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 25 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" ATTR14
Matrix 9 [_World2Object]
Vector 13 [_WorldSpaceCameraPos]
Vector 14 [_ProjectionParams]
Vector 16 [unity_Scale]
Vector 17 [unity_LightmapST]
Vector 18 [_MainTex_ST]
Vector 19 [_Clouds_ST]
"3.0-!!ARBvp1.0
PARAM c[20] = { { 1, 0.5 },
		state.matrix.mvp,
		program.local[5..19] };
TEMP R0;
TEMP R1;
TEMP R2;
MOV R0.xyz, vertex.attrib[14];
MUL R1.xyz, vertex.normal.zxyw, R0.yzxw;
MAD R0.xyz, vertex.normal.yzxw, R0.zxyw, -R1;
MUL R0.xyz, R0, vertex.attrib[14].w;
MOV R1.xyz, c[13];
MOV R1.w, c[0].x;
DP4 R0.w, vertex.position, c[4];
DP4 R2.z, R1, c[11];
DP4 R2.x, R1, c[9];
DP4 R2.y, R1, c[10];
MAD R2.xyz, R2, c[16].w, -vertex.position;
DP3 result.texcoord[1].y, R2, R0;
DP4 R0.z, vertex.position, c[3];
DP4 R0.x, vertex.position, c[1];
DP4 R0.y, vertex.position, c[2];
MUL R1.xyz, R0.xyww, c[0].y;
MUL R1.y, R1, c[14].x;
DP3 result.texcoord[1].z, vertex.normal, R2;
DP3 result.texcoord[1].x, R2, vertex.attrib[14];
ADD result.texcoord[3].xy, R1, R1.z;
MOV result.position, R0;
MOV result.texcoord[3].zw, R0;
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[19].xyxy, c[19];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[18], c[18].zwzw;
MAD result.texcoord[2].xy, vertex.texcoord[1], c[17], c[17].zwzw;
END
# 25 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 26 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 8 [_World2Object]
Vector 12 [_WorldSpaceCameraPos]
Vector 13 [_ProjectionParams]
Vector 14 [_ScreenParams]
Vector 15 [unity_Scale]
Vector 16 [unity_LightmapST]
Vector 17 [_MainTex_ST]
Vector 18 [_Clouds_ST]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
def c19, 1.00000000, 0.50000000, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
dcl_texcoord1 v4
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r0.xyz, v2.yzxw, r0.zxyw, -r1
mul r0.xyz, r0, v1.w
mov r1.xyz, c12
mov r1.w, c19.x
dp4 r0.w, v0, c3
dp4 r2.z, r1, c10
dp4 r2.x, r1, c8
dp4 r2.y, r1, c9
mad r2.xyz, r2, c15.w, -v0
dp3 o2.y, r2, r0
dp4 r0.z, v0, c2
dp4 r0.x, v0, c0
dp4 r0.y, v0, c1
mul r1.xyz, r0.xyww, c19.y
mul r1.y, r1, c13.x
dp3 o2.z, v2, r2
dp3 o2.x, r2, v1
mad o4.xy, r1.z, c14.zwzw, r1
mov o0, r0
mov o4.zw, r0
mad o1.zw, v3.xyxy, c18.xyxy, c18
mad o1.xy, v3, c17, c17.zwzw
mad o3.xy, v4, c16, c16.zwzw
"
}
SubProgram "d3d11 " {
// Stats: 21 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 208
Vector 160 [unity_LightmapST]
Vector 176 [_MainTex_ST]
Vector 192 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityPerDraw" 2
"vs_4_0
eefieceddbhdegiogcjlhjfoajllidhebfjnidhjabaaaaaaiaafaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
adamaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcoeadaaaaeaaaabaa
pjaaaaaafjaaaaaeegiocaaaaaaaaaaaanaaaaaafjaaaaaeegiocaaaabaaaaaa
agaaaaaafjaaaaaeegiocaaaacaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaa
fpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaa
adaaaaaafpaaaaaddcbabaaaaeaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaa
gfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaaddccabaaa
adaaaaaagfaaaaadpccabaaaaeaaaaaagiaaaaacadaaaaaadiaaaaaipcaabaaa
aaaaaaaafgbfbaaaaaaaaaaaegiocaaaacaaaaaaabaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaacaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaacaaaaaakgbkbaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaadaaaaaa
pgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaa
alaaaaaaogikcaaaaaaaaaaaalaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaa
adaaaaaaagiecaaaaaaaaaaaamaaaaaakgiocaaaaaaaaaaaamaaaaaadiaaaaah
hcaabaaaabaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaadcaaaaakhcaabaaa
abaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaiaebaaaaaaabaaaaaa
diaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaapgbpbaaaabaaaaaadiaaaaaj
hcaabaaaacaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaaacaaaaaabbaaaaaa
dcaaaaalhcaabaaaacaaaaaaegiccaaaacaaaaaabaaaaaaaagiacaaaabaaaaaa
aeaaaaaaegacbaaaacaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaaacaaaaaa
bcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaaacaaaaaaaaaaaaaihcaabaaa
acaaaaaaegacbaaaacaaaaaaegiccaaaacaaaaaabdaaaaaadcaaaaalhcaabaaa
acaaaaaaegacbaaaacaaaaaapgipcaaaacaaaaaabeaaaaaaegbcbaiaebaaaaaa
aaaaaaaabaaaaaahcccabaaaacaaaaaaegacbaaaabaaaaaaegacbaaaacaaaaaa
baaaaaahbccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaaacaaaaaabaaaaaah
eccabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaaacaaaaaadcaaaaaldccabaaa
adaaaaaaegbabaaaaeaaaaaaegiacaaaaaaaaaaaakaaaaaaogikcaaaaaaaaaaa
akaaaaaadiaaaaaiccaabaaaaaaaaaaabkaabaaaaaaaaaaaakiacaaaabaaaaaa
afaaaaaadiaaaaakncaabaaaabaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadp
aaaaaaaaaaaaaadpaaaaaadpdgaaaaafmccabaaaaeaaaaaakgaobaaaaaaaaaaa
aaaaaaahdccabaaaaeaaaaaakgakbaaaabaaaaaamgaabaaaabaaaaaadoaaaaab
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  tmpvar_4 = tmpvar_1.xyz;
  tmpvar_5 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_4.x;
  tmpvar_6[0].y = tmpvar_5.x;
  tmpvar_6[0].z = tmpvar_2.x;
  tmpvar_6[1].x = tmpvar_4.y;
  tmpvar_6[1].y = tmpvar_5.y;
  tmpvar_6[1].z = tmpvar_2.y;
  tmpvar_6[2].x = tmpvar_4.z;
  tmpvar_6[2].y = tmpvar_5.z;
  tmpvar_6[2].z = tmpvar_2.z;
  highp vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_6 * (((_World2Object * tmpvar_7).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform highp vec4 _LightShadowData;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D unity_Lightmap;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  mediump vec3 clouds_7;
  mediump vec2 cloudUV_8;
  lowp float fresnel_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_11;
  tmpvar_11 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_9 = tmpvar_11;
  lowp float tmpvar_12;
  tmpvar_12 = pow (fresnel_9, _AtmosFalloff);
  lowp vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_10.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_12)) * tmpvar_12));
  cloudUV_8 = tmpvar_3;
  highp float tmpvar_14;
  tmpvar_14 = (_Time.y * _CloudSpeed);
  highp float tmpvar_15;
  tmpvar_15 = fract(abs(tmpvar_14));
  highp float tmpvar_16;
  if ((tmpvar_14 >= 0.0)) {
    tmpvar_16 = tmpvar_15;
  } else {
    tmpvar_16 = -(tmpvar_15);
  };
  cloudUV_8.x = (cloudUV_8.x + tmpvar_16);
  mediump float height_17;
  height_17 = _CloudHeight;
  mediump vec3 viewDir_18;
  viewDir_18 = xlv_TEXCOORD1;
  highp vec3 v_19;
  mediump float tmpvar_20;
  tmpvar_20 = (height_17 - (height_17 / 2.0));
  mediump vec3 tmpvar_21;
  tmpvar_21 = normalize(viewDir_18);
  v_19 = tmpvar_21;
  v_19.z = (v_19.z + 0.42);
  highp vec2 tmpvar_22;
  tmpvar_22 = (cloudUV_8 + (tmpvar_20 * (v_19.xy / v_19.z)));
  cloudUV_8 = tmpvar_22;
  lowp vec3 tmpvar_23;
  tmpvar_23 = texture2D (_Clouds, cloudUV_8).xyz;
  clouds_7 = tmpvar_23;
  mediump vec3 tmpvar_24;
  tmpvar_24 = (tmpvar_13 + clouds_7);
  tmpvar_4 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_26;
  tmpvar_26 = mix (tmpvar_25, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_5 = tmpvar_26;
  mediump vec4 tmpvar_27;
  tmpvar_27.w = 0.0;
  tmpvar_27.xyz = clouds_7;
  lowp vec4 arg0_28;
  arg0_28 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_29;
  tmpvar_29 = mix (arg0_28, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_27).xyz;
  tmpvar_6 = tmpvar_29;
  tmpvar_2 = tmpvar_5;
  lowp float tmpvar_30;
  mediump float lightShadowDataX_31;
  highp float dist_32;
  lowp float tmpvar_33;
  tmpvar_33 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD3).x;
  dist_32 = tmpvar_33;
  highp float tmpvar_34;
  tmpvar_34 = _LightShadowData.x;
  lightShadowDataX_31 = tmpvar_34;
  highp float tmpvar_35;
  tmpvar_35 = max (float((dist_32 > (xlv_TEXCOORD3.z / xlv_TEXCOORD3.w))), lightShadowDataX_31);
  tmpvar_30 = tmpvar_35;
  c_1.xyz = (tmpvar_4 * min ((2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz), vec3((tmpvar_30 * 2.0))));
  c_1.w = tmpvar_10.w;
  c_1.xyz = (c_1.xyz + tmpvar_6);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_5;
  highp vec3 tmpvar_6;
  tmpvar_5 = tmpvar_1.xyz;
  tmpvar_6 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = tmpvar_5.x;
  tmpvar_7[0].y = tmpvar_6.x;
  tmpvar_7[0].z = tmpvar_2.x;
  tmpvar_7[1].x = tmpvar_5.y;
  tmpvar_7[1].y = tmpvar_6.y;
  tmpvar_7[1].z = tmpvar_2.y;
  tmpvar_7[2].x = tmpvar_5.z;
  tmpvar_7[2].y = tmpvar_6.z;
  tmpvar_7[2].z = tmpvar_2.z;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = _WorldSpaceCameraPos;
  highp vec4 o_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_11;
  tmpvar_11.x = tmpvar_10.x;
  tmpvar_11.y = (tmpvar_10.y * _ProjectionParams.x);
  o_9.xy = (tmpvar_11 + tmpvar_10.w);
  o_9.zw = tmpvar_4.zw;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_7 * (((_World2Object * tmpvar_8).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = o_9;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D unity_Lightmap;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  mediump vec3 clouds_7;
  mediump vec2 cloudUV_8;
  lowp float fresnel_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_11;
  tmpvar_11 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_9 = tmpvar_11;
  lowp float tmpvar_12;
  tmpvar_12 = pow (fresnel_9, _AtmosFalloff);
  lowp vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_10.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_12)) * tmpvar_12));
  cloudUV_8 = tmpvar_3;
  highp float tmpvar_14;
  tmpvar_14 = (_Time.y * _CloudSpeed);
  highp float tmpvar_15;
  tmpvar_15 = fract(abs(tmpvar_14));
  highp float tmpvar_16;
  if ((tmpvar_14 >= 0.0)) {
    tmpvar_16 = tmpvar_15;
  } else {
    tmpvar_16 = -(tmpvar_15);
  };
  cloudUV_8.x = (cloudUV_8.x + tmpvar_16);
  mediump float height_17;
  height_17 = _CloudHeight;
  mediump vec3 viewDir_18;
  viewDir_18 = xlv_TEXCOORD1;
  highp vec3 v_19;
  mediump float tmpvar_20;
  tmpvar_20 = (height_17 - (height_17 / 2.0));
  mediump vec3 tmpvar_21;
  tmpvar_21 = normalize(viewDir_18);
  v_19 = tmpvar_21;
  v_19.z = (v_19.z + 0.42);
  highp vec2 tmpvar_22;
  tmpvar_22 = (cloudUV_8 + (tmpvar_20 * (v_19.xy / v_19.z)));
  cloudUV_8 = tmpvar_22;
  lowp vec3 tmpvar_23;
  tmpvar_23 = texture2D (_Clouds, cloudUV_8).xyz;
  clouds_7 = tmpvar_23;
  mediump vec3 tmpvar_24;
  tmpvar_24 = (tmpvar_13 + clouds_7);
  tmpvar_4 = tmpvar_24;
  lowp vec3 normal_25;
  normal_25.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_25.z = sqrt((1.0 - clamp (dot (normal_25.xy, normal_25.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_26;
  tmpvar_26 = mix (normal_25, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_5 = tmpvar_26;
  mediump vec4 tmpvar_27;
  tmpvar_27.w = 0.0;
  tmpvar_27.xyz = clouds_7;
  lowp vec4 arg0_28;
  arg0_28 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_29;
  tmpvar_29 = mix (arg0_28, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_27).xyz;
  tmpvar_6 = tmpvar_29;
  tmpvar_2 = tmpvar_5;
  lowp vec4 tmpvar_30;
  tmpvar_30 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD3);
  lowp vec4 tmpvar_31;
  tmpvar_31 = texture2D (unity_Lightmap, xlv_TEXCOORD2);
  lowp vec3 tmpvar_32;
  tmpvar_32 = ((8.0 * tmpvar_31.w) * tmpvar_31.xyz);
  c_1.xyz = (tmpvar_4 * max (min (tmpvar_32, ((tmpvar_30.x * 2.0) * tmpvar_31.xyz)), (tmpvar_32 * tmpvar_30.x)));
  c_1.w = tmpvar_10.w;
  c_1.xyz = (c_1.xyz + tmpvar_6);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out highp vec2 xlv_TEXCOORD2;
out highp vec4 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  tmpvar_4 = tmpvar_1.xyz;
  tmpvar_5 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_4.x;
  tmpvar_6[0].y = tmpvar_5.x;
  tmpvar_6[0].z = tmpvar_2.x;
  tmpvar_6[1].x = tmpvar_4.y;
  tmpvar_6[1].y = tmpvar_5.y;
  tmpvar_6[1].z = tmpvar_2.y;
  tmpvar_6[2].x = tmpvar_4.z;
  tmpvar_6[2].y = tmpvar_5.z;
  tmpvar_6[2].z = tmpvar_2.z;
  highp vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_6 * (((_World2Object * tmpvar_7).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _Time;
uniform highp vec4 _LightShadowData;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D unity_Lightmap;
in highp vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in highp vec2 xlv_TEXCOORD2;
in highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  mediump vec3 clouds_7;
  mediump vec2 cloudUV_8;
  lowp float fresnel_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_11;
  tmpvar_11 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_9 = tmpvar_11;
  lowp float tmpvar_12;
  tmpvar_12 = pow (fresnel_9, _AtmosFalloff);
  lowp vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_10.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_12)) * tmpvar_12));
  cloudUV_8 = tmpvar_3;
  highp float tmpvar_14;
  tmpvar_14 = (_Time.y * _CloudSpeed);
  highp float tmpvar_15;
  tmpvar_15 = fract(abs(tmpvar_14));
  highp float tmpvar_16;
  if ((tmpvar_14 >= 0.0)) {
    tmpvar_16 = tmpvar_15;
  } else {
    tmpvar_16 = -(tmpvar_15);
  };
  cloudUV_8.x = (cloudUV_8.x + tmpvar_16);
  mediump float height_17;
  height_17 = _CloudHeight;
  mediump vec3 viewDir_18;
  viewDir_18 = xlv_TEXCOORD1;
  highp vec3 v_19;
  mediump float tmpvar_20;
  tmpvar_20 = (height_17 - (height_17 / 2.0));
  mediump vec3 tmpvar_21;
  tmpvar_21 = normalize(viewDir_18);
  v_19 = tmpvar_21;
  v_19.z = (v_19.z + 0.42);
  highp vec2 tmpvar_22;
  tmpvar_22 = (cloudUV_8 + (tmpvar_20 * (v_19.xy / v_19.z)));
  cloudUV_8 = tmpvar_22;
  lowp vec3 tmpvar_23;
  tmpvar_23 = texture (_Clouds, cloudUV_8).xyz;
  clouds_7 = tmpvar_23;
  mediump vec3 tmpvar_24;
  tmpvar_24 = (tmpvar_13 + clouds_7);
  tmpvar_4 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_26;
  tmpvar_26 = mix (tmpvar_25, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_5 = tmpvar_26;
  mediump vec4 tmpvar_27;
  tmpvar_27.w = 0.0;
  tmpvar_27.xyz = clouds_7;
  lowp vec4 arg0_28;
  arg0_28 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_29;
  tmpvar_29 = mix (arg0_28, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_27).xyz;
  tmpvar_6 = tmpvar_29;
  tmpvar_2 = tmpvar_5;
  lowp float tmpvar_30;
  mediump float lightShadowDataX_31;
  highp float dist_32;
  lowp float tmpvar_33;
  tmpvar_33 = textureProj (_ShadowMapTexture, xlv_TEXCOORD3).x;
  dist_32 = tmpvar_33;
  highp float tmpvar_34;
  tmpvar_34 = _LightShadowData.x;
  lightShadowDataX_31 = tmpvar_34;
  highp float tmpvar_35;
  tmpvar_35 = max (float((dist_32 > (xlv_TEXCOORD3.z / xlv_TEXCOORD3.w))), lightShadowDataX_31);
  tmpvar_30 = tmpvar_35;
  c_1.xyz = (tmpvar_4 * min ((2.0 * texture (unity_Lightmap, xlv_TEXCOORD2).xyz), vec3((tmpvar_30 * 2.0))));
  c_1.w = tmpvar_10.w;
  c_1.xyz = (c_1.xyz + tmpvar_6);
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 25 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" ATTR14
Matrix 9 [_World2Object]
Vector 13 [_WorldSpaceCameraPos]
Vector 14 [_ProjectionParams]
Vector 16 [unity_Scale]
Vector 17 [unity_LightmapST]
Vector 18 [_MainTex_ST]
Vector 19 [_Clouds_ST]
"3.0-!!ARBvp1.0
PARAM c[20] = { { 1, 0.5 },
		state.matrix.mvp,
		program.local[5..19] };
TEMP R0;
TEMP R1;
TEMP R2;
MOV R0.xyz, vertex.attrib[14];
MUL R1.xyz, vertex.normal.zxyw, R0.yzxw;
MAD R0.xyz, vertex.normal.yzxw, R0.zxyw, -R1;
MUL R0.xyz, R0, vertex.attrib[14].w;
MOV R1.xyz, c[13];
MOV R1.w, c[0].x;
DP4 R0.w, vertex.position, c[4];
DP4 R2.z, R1, c[11];
DP4 R2.x, R1, c[9];
DP4 R2.y, R1, c[10];
MAD R2.xyz, R2, c[16].w, -vertex.position;
DP3 result.texcoord[1].y, R2, R0;
DP4 R0.z, vertex.position, c[3];
DP4 R0.x, vertex.position, c[1];
DP4 R0.y, vertex.position, c[2];
MUL R1.xyz, R0.xyww, c[0].y;
MUL R1.y, R1, c[14].x;
DP3 result.texcoord[1].z, vertex.normal, R2;
DP3 result.texcoord[1].x, R2, vertex.attrib[14];
ADD result.texcoord[3].xy, R1, R1.z;
MOV result.position, R0;
MOV result.texcoord[3].zw, R0;
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[19].xyxy, c[19];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[18], c[18].zwzw;
MAD result.texcoord[2].xy, vertex.texcoord[1], c[17], c[17].zwzw;
END
# 25 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 26 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 8 [_World2Object]
Vector 12 [_WorldSpaceCameraPos]
Vector 13 [_ProjectionParams]
Vector 14 [_ScreenParams]
Vector 15 [unity_Scale]
Vector 16 [unity_LightmapST]
Vector 17 [_MainTex_ST]
Vector 18 [_Clouds_ST]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
def c19, 1.00000000, 0.50000000, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
dcl_texcoord1 v4
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r0.xyz, v2.yzxw, r0.zxyw, -r1
mul r0.xyz, r0, v1.w
mov r1.xyz, c12
mov r1.w, c19.x
dp4 r0.w, v0, c3
dp4 r2.z, r1, c10
dp4 r2.x, r1, c8
dp4 r2.y, r1, c9
mad r2.xyz, r2, c15.w, -v0
dp3 o2.y, r2, r0
dp4 r0.z, v0, c2
dp4 r0.x, v0, c0
dp4 r0.y, v0, c1
mul r1.xyz, r0.xyww, c19.y
mul r1.y, r1, c13.x
dp3 o2.z, v2, r2
dp3 o2.x, r2, v1
mad o4.xy, r1.z, c14.zwzw, r1
mov o0, r0
mov o4.zw, r0
mad o1.zw, v3.xyxy, c18.xyxy, c18
mad o1.xy, v3, c17, c17.zwzw
mad o3.xy, v4, c16, c16.zwzw
"
}
SubProgram "d3d11 " {
// Stats: 21 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 208
Vector 160 [unity_LightmapST]
Vector 176 [_MainTex_ST]
Vector 192 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityPerDraw" 2
"vs_4_0
eefieceddbhdegiogcjlhjfoajllidhebfjnidhjabaaaaaaiaafaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
adamaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcoeadaaaaeaaaabaa
pjaaaaaafjaaaaaeegiocaaaaaaaaaaaanaaaaaafjaaaaaeegiocaaaabaaaaaa
agaaaaaafjaaaaaeegiocaaaacaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaa
fpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaa
adaaaaaafpaaaaaddcbabaaaaeaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaa
gfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaaddccabaaa
adaaaaaagfaaaaadpccabaaaaeaaaaaagiaaaaacadaaaaaadiaaaaaipcaabaaa
aaaaaaaafgbfbaaaaaaaaaaaegiocaaaacaaaaaaabaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaacaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaacaaaaaakgbkbaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaadaaaaaa
pgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaa
alaaaaaaogikcaaaaaaaaaaaalaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaa
adaaaaaaagiecaaaaaaaaaaaamaaaaaakgiocaaaaaaaaaaaamaaaaaadiaaaaah
hcaabaaaabaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaadcaaaaakhcaabaaa
abaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaiaebaaaaaaabaaaaaa
diaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaapgbpbaaaabaaaaaadiaaaaaj
hcaabaaaacaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaaacaaaaaabbaaaaaa
dcaaaaalhcaabaaaacaaaaaaegiccaaaacaaaaaabaaaaaaaagiacaaaabaaaaaa
aeaaaaaaegacbaaaacaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaaacaaaaaa
bcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaaacaaaaaaaaaaaaaihcaabaaa
acaaaaaaegacbaaaacaaaaaaegiccaaaacaaaaaabdaaaaaadcaaaaalhcaabaaa
acaaaaaaegacbaaaacaaaaaapgipcaaaacaaaaaabeaaaaaaegbcbaiaebaaaaaa
aaaaaaaabaaaaaahcccabaaaacaaaaaaegacbaaaabaaaaaaegacbaaaacaaaaaa
baaaaaahbccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaaacaaaaaabaaaaaah
eccabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaaacaaaaaadcaaaaaldccabaaa
adaaaaaaegbabaaaaeaaaaaaegiacaaaaaaaaaaaakaaaaaaogikcaaaaaaaaaaa
akaaaaaadiaaaaaiccaabaaaaaaaaaaabkaabaaaaaaaaaaaakiacaaaabaaaaaa
afaaaaaadiaaaaakncaabaaaabaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadp
aaaaaaaaaaaaaadpaaaaaadpdgaaaaafmccabaaaaeaaaaaakgaobaaaaaaaaaaa
aaaaaaahdccabaaaaeaaaaaakgakbaaaabaaaaaamgaabaaaabaaaaaadoaaaaab
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  tmpvar_4 = tmpvar_1.xyz;
  tmpvar_5 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_4.x;
  tmpvar_6[0].y = tmpvar_5.x;
  tmpvar_6[0].z = tmpvar_2.x;
  tmpvar_6[1].x = tmpvar_4.y;
  tmpvar_6[1].y = tmpvar_5.y;
  tmpvar_6[1].z = tmpvar_2.y;
  tmpvar_6[2].x = tmpvar_4.z;
  tmpvar_6[2].y = tmpvar_5.z;
  tmpvar_6[2].z = tmpvar_2.z;
  highp vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_6 * (((_World2Object * tmpvar_7).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _SpecColor;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_3;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture2D (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_4 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (tmpvar_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 0.0;
  tmpvar_29.xyz = clouds_9;
  lowp vec4 arg0_30;
  arg0_30 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_31;
  tmpvar_31 = mix (arg0_30, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_29).xyz;
  tmpvar_6 = tmpvar_31;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_33;
  tmpvar_33 = ((tmpvar_32.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_33;
  tmpvar_2 = tmpvar_5;
  lowp float tmpvar_34;
  mediump float lightShadowDataX_35;
  highp float dist_36;
  lowp float tmpvar_37;
  tmpvar_37 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD3).x;
  dist_36 = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = _LightShadowData.x;
  lightShadowDataX_35 = tmpvar_38;
  highp float tmpvar_39;
  tmpvar_39 = max (float((dist_36 > (xlv_TEXCOORD3.z / xlv_TEXCOORD3.w))), lightShadowDataX_35);
  tmpvar_34 = tmpvar_39;
  c_1.w = 0.0;
  highp vec3 tmpvar_40;
  tmpvar_40 = normalize(xlv_TEXCOORD1);
  mediump vec4 tmpvar_41;
  mediump vec3 viewDir_42;
  viewDir_42 = tmpvar_40;
  mediump vec3 specColor_43;
  highp float nh_44;
  mat3 tmpvar_45;
  tmpvar_45[0].x = 0.816497;
  tmpvar_45[0].y = -0.408248;
  tmpvar_45[0].z = -0.408248;
  tmpvar_45[1].x = 0.0;
  tmpvar_45[1].y = 0.707107;
  tmpvar_45[1].z = -0.707107;
  tmpvar_45[2].x = 0.57735;
  tmpvar_45[2].y = 0.57735;
  tmpvar_45[2].z = 0.57735;
  mediump vec3 normal_46;
  normal_46 = tmpvar_5;
  mediump vec3 scalePerBasisVector_47;
  mediump vec3 lm_48;
  lowp vec3 tmpvar_49;
  tmpvar_49 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lm_48 = tmpvar_49;
  lowp vec3 tmpvar_50;
  tmpvar_50 = (2.0 * texture2D (unity_LightmapInd, xlv_TEXCOORD2).xyz);
  scalePerBasisVector_47 = tmpvar_50;
  lm_48 = (lm_48 * dot (clamp ((tmpvar_45 * normal_46), 0.0, 1.0), scalePerBasisVector_47));
  vec3 v_51;
  v_51.x = tmpvar_45[0].x;
  v_51.y = tmpvar_45[1].x;
  v_51.z = tmpvar_45[2].x;
  vec3 v_52;
  v_52.x = tmpvar_45[0].y;
  v_52.y = tmpvar_45[1].y;
  v_52.z = tmpvar_45[2].y;
  vec3 v_53;
  v_53.x = tmpvar_45[0].z;
  v_53.y = tmpvar_45[1].z;
  v_53.z = tmpvar_45[2].z;
  mediump float tmpvar_54;
  tmpvar_54 = max (0.0, dot (tmpvar_5, normalize((normalize((((scalePerBasisVector_47.x * v_51) + (scalePerBasisVector_47.y * v_52)) + (scalePerBasisVector_47.z * v_53))) + viewDir_42))));
  nh_44 = tmpvar_54;
  highp float tmpvar_55;
  mediump float arg1_56;
  arg1_56 = (tmpvar_7 * 128.0);
  tmpvar_55 = pow (nh_44, arg1_56);
  highp vec3 tmpvar_57;
  tmpvar_57 = (((lm_48 * _SpecColor.xyz) * tmpvar_8) * tmpvar_55);
  specColor_43 = tmpvar_57;
  highp vec4 tmpvar_58;
  tmpvar_58.xyz = lm_48;
  tmpvar_58.w = tmpvar_55;
  tmpvar_41 = tmpvar_58;
  c_1.xyz = specColor_43;
  lowp vec3 tmpvar_59;
  tmpvar_59 = vec3((tmpvar_34 * 2.0));
  mediump vec3 tmpvar_60;
  tmpvar_60 = (c_1.xyz + (tmpvar_4 * min (tmpvar_41.xyz, tmpvar_59)));
  c_1.xyz = tmpvar_60;
  c_1.w = tmpvar_12.w;
  c_1.xyz = (c_1.xyz + tmpvar_6);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_5;
  highp vec3 tmpvar_6;
  tmpvar_5 = tmpvar_1.xyz;
  tmpvar_6 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = tmpvar_5.x;
  tmpvar_7[0].y = tmpvar_6.x;
  tmpvar_7[0].z = tmpvar_2.x;
  tmpvar_7[1].x = tmpvar_5.y;
  tmpvar_7[1].y = tmpvar_6.y;
  tmpvar_7[1].z = tmpvar_2.y;
  tmpvar_7[2].x = tmpvar_5.z;
  tmpvar_7[2].y = tmpvar_6.z;
  tmpvar_7[2].z = tmpvar_2.z;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = _WorldSpaceCameraPos;
  highp vec4 o_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_11;
  tmpvar_11.x = tmpvar_10.x;
  tmpvar_11.y = (tmpvar_10.y * _ProjectionParams.x);
  o_9.xy = (tmpvar_11 + tmpvar_10.w);
  o_9.zw = tmpvar_4.zw;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_7 * (((_World2Object * tmpvar_8).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = o_9;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _SpecColor;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_3;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture2D (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_4 = tmpvar_26;
  lowp vec3 normal_27;
  normal_27.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_27.z = sqrt((1.0 - clamp (dot (normal_27.xy, normal_27.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (normal_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 0.0;
  tmpvar_29.xyz = clouds_9;
  lowp vec4 arg0_30;
  arg0_30 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_31;
  tmpvar_31 = mix (arg0_30, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_29).xyz;
  tmpvar_6 = tmpvar_31;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_33;
  tmpvar_33 = ((tmpvar_32.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_33;
  tmpvar_2 = tmpvar_5;
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD3);
  c_1.w = 0.0;
  lowp vec4 tmpvar_35;
  tmpvar_35 = texture2D (unity_Lightmap, xlv_TEXCOORD2);
  lowp vec4 tmpvar_36;
  tmpvar_36 = texture2D (unity_LightmapInd, xlv_TEXCOORD2);
  highp vec3 tmpvar_37;
  tmpvar_37 = normalize(xlv_TEXCOORD1);
  mediump vec4 tmpvar_38;
  mediump vec3 viewDir_39;
  viewDir_39 = tmpvar_37;
  mediump vec3 specColor_40;
  highp float nh_41;
  mat3 tmpvar_42;
  tmpvar_42[0].x = 0.816497;
  tmpvar_42[0].y = -0.408248;
  tmpvar_42[0].z = -0.408248;
  tmpvar_42[1].x = 0.0;
  tmpvar_42[1].y = 0.707107;
  tmpvar_42[1].z = -0.707107;
  tmpvar_42[2].x = 0.57735;
  tmpvar_42[2].y = 0.57735;
  tmpvar_42[2].z = 0.57735;
  mediump vec3 normal_43;
  normal_43 = tmpvar_5;
  mediump vec3 scalePerBasisVector_44;
  mediump vec3 lm_45;
  lowp vec3 tmpvar_46;
  tmpvar_46 = ((8.0 * tmpvar_35.w) * tmpvar_35.xyz);
  lm_45 = tmpvar_46;
  lowp vec3 tmpvar_47;
  tmpvar_47 = ((8.0 * tmpvar_36.w) * tmpvar_36.xyz);
  scalePerBasisVector_44 = tmpvar_47;
  lm_45 = (lm_45 * dot (clamp ((tmpvar_42 * normal_43), 0.0, 1.0), scalePerBasisVector_44));
  vec3 v_48;
  v_48.x = tmpvar_42[0].x;
  v_48.y = tmpvar_42[1].x;
  v_48.z = tmpvar_42[2].x;
  vec3 v_49;
  v_49.x = tmpvar_42[0].y;
  v_49.y = tmpvar_42[1].y;
  v_49.z = tmpvar_42[2].y;
  vec3 v_50;
  v_50.x = tmpvar_42[0].z;
  v_50.y = tmpvar_42[1].z;
  v_50.z = tmpvar_42[2].z;
  mediump float tmpvar_51;
  tmpvar_51 = max (0.0, dot (tmpvar_5, normalize((normalize((((scalePerBasisVector_44.x * v_48) + (scalePerBasisVector_44.y * v_49)) + (scalePerBasisVector_44.z * v_50))) + viewDir_39))));
  nh_41 = tmpvar_51;
  highp float tmpvar_52;
  mediump float arg1_53;
  arg1_53 = (tmpvar_7 * 128.0);
  tmpvar_52 = pow (nh_41, arg1_53);
  highp vec3 tmpvar_54;
  tmpvar_54 = (((lm_45 * _SpecColor.xyz) * tmpvar_8) * tmpvar_52);
  specColor_40 = tmpvar_54;
  highp vec4 tmpvar_55;
  tmpvar_55.xyz = lm_45;
  tmpvar_55.w = tmpvar_52;
  tmpvar_38 = tmpvar_55;
  c_1.xyz = specColor_40;
  lowp vec3 arg1_56;
  arg1_56 = ((tmpvar_34.x * 2.0) * tmpvar_35.xyz);
  mediump vec3 tmpvar_57;
  tmpvar_57 = (c_1.xyz + (tmpvar_4 * max (min (tmpvar_38.xyz, arg1_56), (tmpvar_38.xyz * tmpvar_34.x))));
  c_1.xyz = tmpvar_57;
  c_1.w = tmpvar_12.w;
  c_1.xyz = (c_1.xyz + tmpvar_6);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out highp vec2 xlv_TEXCOORD2;
out highp vec4 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  tmpvar_4 = tmpvar_1.xyz;
  tmpvar_5 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_4.x;
  tmpvar_6[0].y = tmpvar_5.x;
  tmpvar_6[0].z = tmpvar_2.x;
  tmpvar_6[1].x = tmpvar_4.y;
  tmpvar_6[1].y = tmpvar_5.y;
  tmpvar_6[1].z = tmpvar_2.y;
  tmpvar_6[2].x = tmpvar_4.z;
  tmpvar_6[2].y = tmpvar_5.z;
  tmpvar_6[2].z = tmpvar_2.z;
  highp vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_6 * (((_World2Object * tmpvar_7).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _Time;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _SpecColor;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
in highp vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in highp vec2 xlv_TEXCOORD2;
in highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_3;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_4 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (tmpvar_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 0.0;
  tmpvar_29.xyz = clouds_9;
  lowp vec4 arg0_30;
  arg0_30 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_31;
  tmpvar_31 = mix (arg0_30, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_29).xyz;
  tmpvar_6 = tmpvar_31;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_33;
  tmpvar_33 = ((tmpvar_32.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_33;
  tmpvar_2 = tmpvar_5;
  lowp float tmpvar_34;
  mediump float lightShadowDataX_35;
  highp float dist_36;
  lowp float tmpvar_37;
  tmpvar_37 = textureProj (_ShadowMapTexture, xlv_TEXCOORD3).x;
  dist_36 = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = _LightShadowData.x;
  lightShadowDataX_35 = tmpvar_38;
  highp float tmpvar_39;
  tmpvar_39 = max (float((dist_36 > (xlv_TEXCOORD3.z / xlv_TEXCOORD3.w))), lightShadowDataX_35);
  tmpvar_34 = tmpvar_39;
  c_1.w = 0.0;
  highp vec3 tmpvar_40;
  tmpvar_40 = normalize(xlv_TEXCOORD1);
  mediump vec4 tmpvar_41;
  mediump vec3 viewDir_42;
  viewDir_42 = tmpvar_40;
  mediump vec3 specColor_43;
  highp float nh_44;
  mat3 tmpvar_45;
  tmpvar_45[0].x = 0.816497;
  tmpvar_45[0].y = -0.408248;
  tmpvar_45[0].z = -0.408248;
  tmpvar_45[1].x = 0.0;
  tmpvar_45[1].y = 0.707107;
  tmpvar_45[1].z = -0.707107;
  tmpvar_45[2].x = 0.57735;
  tmpvar_45[2].y = 0.57735;
  tmpvar_45[2].z = 0.57735;
  mediump vec3 normal_46;
  normal_46 = tmpvar_5;
  mediump vec3 scalePerBasisVector_47;
  mediump vec3 lm_48;
  lowp vec3 tmpvar_49;
  tmpvar_49 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lm_48 = tmpvar_49;
  lowp vec3 tmpvar_50;
  tmpvar_50 = (2.0 * texture (unity_LightmapInd, xlv_TEXCOORD2).xyz);
  scalePerBasisVector_47 = tmpvar_50;
  lm_48 = (lm_48 * dot (clamp ((tmpvar_45 * normal_46), 0.0, 1.0), scalePerBasisVector_47));
  vec3 v_51;
  v_51.x = tmpvar_45[0].x;
  v_51.y = tmpvar_45[1].x;
  v_51.z = tmpvar_45[2].x;
  vec3 v_52;
  v_52.x = tmpvar_45[0].y;
  v_52.y = tmpvar_45[1].y;
  v_52.z = tmpvar_45[2].y;
  vec3 v_53;
  v_53.x = tmpvar_45[0].z;
  v_53.y = tmpvar_45[1].z;
  v_53.z = tmpvar_45[2].z;
  mediump float tmpvar_54;
  tmpvar_54 = max (0.0, dot (tmpvar_5, normalize((normalize((((scalePerBasisVector_47.x * v_51) + (scalePerBasisVector_47.y * v_52)) + (scalePerBasisVector_47.z * v_53))) + viewDir_42))));
  nh_44 = tmpvar_54;
  highp float tmpvar_55;
  mediump float arg1_56;
  arg1_56 = (tmpvar_7 * 128.0);
  tmpvar_55 = pow (nh_44, arg1_56);
  highp vec3 tmpvar_57;
  tmpvar_57 = (((lm_48 * _SpecColor.xyz) * tmpvar_8) * tmpvar_55);
  specColor_43 = tmpvar_57;
  highp vec4 tmpvar_58;
  tmpvar_58.xyz = lm_48;
  tmpvar_58.w = tmpvar_55;
  tmpvar_41 = tmpvar_58;
  c_1.xyz = specColor_43;
  lowp vec3 tmpvar_59;
  tmpvar_59 = vec3((tmpvar_34 * 2.0));
  mediump vec3 tmpvar_60;
  tmpvar_60 = (c_1.xyz + (tmpvar_4 * min (tmpvar_41.xyz, tmpvar_59)));
  c_1.xyz = tmpvar_60;
  c_1.w = tmpvar_12.w;
  c_1.xyz = (c_1.xyz + tmpvar_6);
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 75 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Vector 13 [_WorldSpaceCameraPos]
Vector 14 [_WorldSpaceLightPos0]
Vector 15 [unity_4LightPosX0]
Vector 16 [unity_4LightPosY0]
Vector 17 [unity_4LightPosZ0]
Vector 18 [unity_4LightAtten0]
Vector 19 [unity_LightColor0]
Vector 20 [unity_LightColor1]
Vector 21 [unity_LightColor2]
Vector 22 [unity_LightColor3]
Vector 23 [unity_SHAr]
Vector 24 [unity_SHAg]
Vector 25 [unity_SHAb]
Vector 26 [unity_SHBr]
Vector 27 [unity_SHBg]
Vector 28 [unity_SHBb]
Vector 29 [unity_SHC]
Vector 30 [unity_Scale]
Vector 31 [_MainTex_ST]
Vector 32 [_Clouds_ST]
"3.0-!!ARBvp1.0
PARAM c[33] = { { 1, 0 },
		state.matrix.mvp,
		program.local[5..32] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
MUL R3.xyz, vertex.normal, c[30].w;
DP4 R0.x, vertex.position, c[6];
ADD R1, -R0.x, c[16];
DP3 R3.w, R3, c[6];
DP3 R4.x, R3, c[5];
DP3 R3.x, R3, c[7];
MUL R2, R3.w, R1;
DP4 R0.x, vertex.position, c[5];
ADD R0, -R0.x, c[15];
MUL R1, R1, R1;
MOV R4.z, R3.x;
MAD R2, R4.x, R0, R2;
MOV R4.w, c[0].x;
DP4 R4.y, vertex.position, c[7];
MAD R1, R0, R0, R1;
ADD R0, -R4.y, c[17];
MAD R1, R0, R0, R1;
MAD R0, R3.x, R0, R2;
MUL R2, R1, c[18];
MOV R4.y, R3.w;
RSQ R1.x, R1.x;
RSQ R1.y, R1.y;
RSQ R1.w, R1.w;
RSQ R1.z, R1.z;
MUL R0, R0, R1;
ADD R1, R2, c[0].x;
RCP R1.x, R1.x;
RCP R1.y, R1.y;
RCP R1.w, R1.w;
RCP R1.z, R1.z;
MAX R0, R0, c[0].y;
MUL R0, R0, R1;
MUL R1.xyz, R0.y, c[20];
MAD R1.xyz, R0.x, c[19], R1;
MAD R0.xyz, R0.z, c[21], R1;
MAD R1.xyz, R0.w, c[22], R0;
MUL R0, R4.xyzz, R4.yzzx;
DP4 R3.z, R0, c[28];
DP4 R3.y, R0, c[27];
DP4 R3.x, R0, c[26];
MUL R1.w, R3, R3;
MAD R0.x, R4, R4, -R1.w;
MOV R0.w, c[0].x;
DP4 R2.z, R4, c[25];
DP4 R2.y, R4, c[24];
DP4 R2.x, R4, c[23];
ADD R2.xyz, R2, R3;
MUL R3.xyz, R0.x, c[29];
ADD R3.xyz, R2, R3;
MOV R0.xyz, vertex.attrib[14];
MUL R2.xyz, vertex.normal.zxyw, R0.yzxw;
ADD result.texcoord[3].xyz, R3, R1;
MAD R1.xyz, vertex.normal.yzxw, R0.zxyw, -R2;
MOV R0.xyz, c[13];
DP4 R2.z, R0, c[11];
DP4 R2.x, R0, c[9];
DP4 R2.y, R0, c[10];
MAD R0.xyz, R2, c[30].w, -vertex.position;
MUL R2.xyz, R1, vertex.attrib[14].w;
MOV R1, c[14];
DP4 R3.z, R1, c[11];
DP4 R3.x, R1, c[9];
DP4 R3.y, R1, c[10];
DP3 result.texcoord[1].y, R0, R2;
DP3 result.texcoord[2].y, R2, R3;
DP3 result.texcoord[1].z, vertex.normal, R0;
DP3 result.texcoord[1].x, R0, vertex.attrib[14];
DP3 result.texcoord[2].z, vertex.normal, R3;
DP3 result.texcoord[2].x, vertex.attrib[14], R3;
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[32].xyxy, c[32];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[31], c[31].zwzw;
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 75 instructions, 5 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 78 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 12 [_WorldSpaceCameraPos]
Vector 13 [_WorldSpaceLightPos0]
Vector 14 [unity_4LightPosX0]
Vector 15 [unity_4LightPosY0]
Vector 16 [unity_4LightPosZ0]
Vector 17 [unity_4LightAtten0]
Vector 18 [unity_LightColor0]
Vector 19 [unity_LightColor1]
Vector 20 [unity_LightColor2]
Vector 21 [unity_LightColor3]
Vector 22 [unity_SHAr]
Vector 23 [unity_SHAg]
Vector 24 [unity_SHAb]
Vector 25 [unity_SHBr]
Vector 26 [unity_SHBg]
Vector 27 [unity_SHBb]
Vector 28 [unity_SHC]
Vector 29 [unity_Scale]
Vector 30 [_MainTex_ST]
Vector 31 [_Clouds_ST]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
def c32, 1.00000000, 0.00000000, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mul r3.xyz, v2, c29.w
dp4 r0.x, v0, c5
add r1, -r0.x, c15
dp3 r3.w, r3, c5
dp3 r4.x, r3, c4
dp3 r3.x, r3, c6
mul r2, r3.w, r1
dp4 r0.x, v0, c4
add r0, -r0.x, c14
mul r1, r1, r1
mov r4.z, r3.x
mad r2, r4.x, r0, r2
mov r4.w, c32.x
dp4 r4.y, v0, c6
mad r1, r0, r0, r1
add r0, -r4.y, c16
mad r1, r0, r0, r1
mad r0, r3.x, r0, r2
mul r2, r1, c17
mov r4.y, r3.w
rsq r1.x, r1.x
rsq r1.y, r1.y
rsq r1.w, r1.w
rsq r1.z, r1.z
mul r0, r0, r1
add r1, r2, c32.x
dp4 r2.z, r4, c24
dp4 r2.y, r4, c23
dp4 r2.x, r4, c22
rcp r1.x, r1.x
rcp r1.y, r1.y
rcp r1.w, r1.w
rcp r1.z, r1.z
max r0, r0, c32.y
mul r0, r0, r1
mul r1.xyz, r0.y, c19
mad r1.xyz, r0.x, c18, r1
mad r0.xyz, r0.z, c20, r1
mad r1.xyz, r0.w, c21, r0
mul r0, r4.xyzz, r4.yzzx
mul r1.w, r3, r3
dp4 r3.z, r0, c27
dp4 r3.y, r0, c26
dp4 r3.x, r0, c25
mad r1.w, r4.x, r4.x, -r1
mul r0.xyz, r1.w, c28
add r2.xyz, r2, r3
add r2.xyz, r2, r0
add o4.xyz, r2, r1
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r0.xyz, v2.yzxw, r0.zxyw, -r1
mul r3.xyz, r0, v1.w
mov r0, c10
dp4 r4.z, c13, r0
mov r0, c9
mov r1.w, c32.x
mov r1.xyz, c12
dp4 r4.y, c13, r0
dp4 r2.z, r1, c10
dp4 r2.x, r1, c8
dp4 r2.y, r1, c9
mad r2.xyz, r2, c29.w, -v0
mov r1, c8
dp4 r4.x, c13, r1
dp3 o2.y, r2, r3
dp3 o3.y, r3, r4
dp3 o2.z, v2, r2
dp3 o2.x, r2, v1
dp3 o3.z, v2, r4
dp3 o3.x, v1, r4
mad o1.zw, v3.xyxy, c31.xyxy, c31
mad o1.xy, v3, c30, c30.zwzw
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 63 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 128
Vector 96 [_MainTex_ST]
Vector 112 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0
eefiecedoanlpjfojclchfopkoedcemfggmlknhaabaaaaaacaalaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcieajaaaaeaaaabaa
gbacaaaafjaaaaaeegiocaaaaaaaaaaaaiaaaaaafjaaaaaeegiocaaaabaaaaaa
afaaaaaafjaaaaaeegiocaaaacaaaaaacnaaaaaafjaaaaaeegiocaaaadaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaad
hcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaad
hccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaagiaaaaacagaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaa
egbabaaaadaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaa
dcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaahaaaaaa
kgiocaaaaaaaaaaaahaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaa
cgbjbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaa
abaaaaaaegacbaiaebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaa
aaaaaaaapgbpbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaa
aeaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
adaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaal
hcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaa
egacbaaaabaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaa
adaaaaaabdaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaa
adaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaaacaaaaaa
egacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaa
abaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaa
egacbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaacaaaaaaaaaaaaaa
egiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaa
baaaaaaaagiacaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaa
abaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaaegacbaaa
abaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabdaaaaaapgipcaaa
acaaaaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahcccabaaaadaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaaadaaaaaaegbcbaaaabaaaaaa
egacbaaaabaaaaaabaaaaaaheccabaaaadaaaaaaegbcbaaaacaaaaaaegacbaaa
abaaaaaadgaaaaaficaabaaaaaaaaaaaabeaaaaaaaaaiadpdiaaaaaihcaabaaa
abaaaaaaegbcbaaaacaaaaaapgipcaaaadaaaaaabeaaaaaadiaaaaaihcaabaaa
acaaaaaafgafbaaaabaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaaklcaabaaa
abaaaaaaegiicaaaadaaaaaaamaaaaaaagaabaaaabaaaaaaegaibaaaacaaaaaa
dcaaaaakhcaabaaaaaaaaaaaegiccaaaadaaaaaaaoaaaaaakgakbaaaabaaaaaa
egadbaaaabaaaaaabbaaaaaibcaabaaaabaaaaaaegiocaaaacaaaaaacgaaaaaa
egaobaaaaaaaaaaabbaaaaaiccaabaaaabaaaaaaegiocaaaacaaaaaachaaaaaa
egaobaaaaaaaaaaabbaaaaaiecaabaaaabaaaaaaegiocaaaacaaaaaaciaaaaaa
egaobaaaaaaaaaaadiaaaaahpcaabaaaacaaaaaajgacbaaaaaaaaaaaegakbaaa
aaaaaaaabbaaaaaibcaabaaaadaaaaaaegiocaaaacaaaaaacjaaaaaaegaobaaa
acaaaaaabbaaaaaiccaabaaaadaaaaaaegiocaaaacaaaaaackaaaaaaegaobaaa
acaaaaaabbaaaaaiecaabaaaadaaaaaaegiocaaaacaaaaaaclaaaaaaegaobaaa
acaaaaaaaaaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaadaaaaaa
diaaaaahicaabaaaaaaaaaaabkaabaaaaaaaaaaabkaabaaaaaaaaaaadcaaaaak
icaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaaaaaaaaaaadkaabaiaebaaaaaa
aaaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaacaaaaaacmaaaaaapgapbaaa
aaaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaaacaaaaaafgbfbaaaaaaaaaaa
egiccaaaadaaaaaaanaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaaadaaaaaa
amaaaaaaagbabaaaaaaaaaaaegacbaaaacaaaaaadcaaaaakhcaabaaaacaaaaaa
egiccaaaadaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegacbaaaacaaaaaadcaaaaak
hcaabaaaacaaaaaaegiccaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaaegacbaaa
acaaaaaaaaaaaaajpcaabaaaadaaaaaafgafbaiaebaaaaaaacaaaaaaegiocaaa
acaaaaaaadaaaaaadiaaaaahpcaabaaaaeaaaaaafgafbaaaaaaaaaaaegaobaaa
adaaaaaadiaaaaahpcaabaaaadaaaaaaegaobaaaadaaaaaaegaobaaaadaaaaaa
aaaaaaajpcaabaaaafaaaaaaagaabaiaebaaaaaaacaaaaaaegiocaaaacaaaaaa
acaaaaaaaaaaaaajpcaabaaaacaaaaaakgakbaiaebaaaaaaacaaaaaaegiocaaa
acaaaaaaaeaaaaaadcaaaaajpcaabaaaaeaaaaaaegaobaaaafaaaaaaagaabaaa
aaaaaaaaegaobaaaaeaaaaaadcaaaaajpcaabaaaaaaaaaaaegaobaaaacaaaaaa
kgakbaaaaaaaaaaaegaobaaaaeaaaaaadcaaaaajpcaabaaaadaaaaaaegaobaaa
afaaaaaaegaobaaaafaaaaaaegaobaaaadaaaaaadcaaaaajpcaabaaaacaaaaaa
egaobaaaacaaaaaaegaobaaaacaaaaaaegaobaaaadaaaaaaeeaaaaafpcaabaaa
adaaaaaaegaobaaaacaaaaaadcaaaaanpcaabaaaacaaaaaaegaobaaaacaaaaaa
egiocaaaacaaaaaaafaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaiadp
aoaaaaakpcaabaaaacaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaiadp
egaobaaaacaaaaaadiaaaaahpcaabaaaaaaaaaaaegaobaaaaaaaaaaaegaobaaa
adaaaaaadeaaaaakpcaabaaaaaaaaaaaegaobaaaaaaaaaaaaceaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaadiaaaaahpcaabaaaaaaaaaaaegaobaaaacaaaaaa
egaobaaaaaaaaaaadiaaaaaihcaabaaaacaaaaaafgafbaaaaaaaaaaaegiccaaa
acaaaaaaahaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaaacaaaaaaagaaaaaa
agaabaaaaaaaaaaaegacbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaa
acaaaaaaaiaaaaaakgakbaaaaaaaaaaaegacbaaaacaaaaaadcaaaaakhcaabaaa
aaaaaaaaegiccaaaacaaaaaaajaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaa
aaaaaaahhccabaaaaeaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadoaaaaab
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (tmpvar_2 * unity_Scale.w));
  highp vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_1.xyz;
  tmpvar_10 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_11;
  tmpvar_11[0].x = tmpvar_9.x;
  tmpvar_11[0].y = tmpvar_10.x;
  tmpvar_11[0].z = tmpvar_2.x;
  tmpvar_11[1].x = tmpvar_9.y;
  tmpvar_11[1].y = tmpvar_10.y;
  tmpvar_11[1].z = tmpvar_2.y;
  tmpvar_11[2].x = tmpvar_9.z;
  tmpvar_11[2].y = tmpvar_10.z;
  tmpvar_11[2].z = tmpvar_2.z;
  highp vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = tmpvar_8;
  mediump vec3 tmpvar_15;
  mediump vec4 normal_16;
  normal_16 = tmpvar_14;
  highp float vC_17;
  mediump vec3 x3_18;
  mediump vec3 x2_19;
  mediump vec3 x1_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAr, normal_16);
  x1_20.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAg, normal_16);
  x1_20.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHAb, normal_16);
  x1_20.z = tmpvar_23;
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_16.xyzz * normal_16.yzzx);
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBr, tmpvar_24);
  x2_19.x = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBg, tmpvar_24);
  x2_19.y = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = dot (unity_SHBb, tmpvar_24);
  x2_19.z = tmpvar_27;
  mediump float tmpvar_28;
  tmpvar_28 = ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y));
  vC_17 = tmpvar_28;
  highp vec3 tmpvar_29;
  tmpvar_29 = (unity_SHC.xyz * vC_17);
  x3_18 = tmpvar_29;
  tmpvar_15 = ((x1_20 + x2_19) + x3_18);
  shlight_3 = tmpvar_15;
  tmpvar_6 = shlight_3;
  highp vec3 tmpvar_30;
  tmpvar_30 = (_Object2World * _glesVertex).xyz;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosX0 - tmpvar_30.x);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosY0 - tmpvar_30.y);
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosZ0 - tmpvar_30.z);
  highp vec4 tmpvar_34;
  tmpvar_34 = (((tmpvar_31 * tmpvar_31) + (tmpvar_32 * tmpvar_32)) + (tmpvar_33 * tmpvar_33));
  highp vec4 tmpvar_35;
  tmpvar_35 = (max (vec4(0.0, 0.0, 0.0, 0.0), ((((tmpvar_31 * tmpvar_8.x) + (tmpvar_32 * tmpvar_8.y)) + (tmpvar_33 * tmpvar_8.z)) * inversesqrt(tmpvar_34))) * (1.0/((1.0 + (tmpvar_34 * unity_4LightAtten0)))));
  highp vec3 tmpvar_36;
  tmpvar_36 = (tmpvar_6 + ((((unity_LightColor[0].xyz * tmpvar_35.x) + (unity_LightColor[1].xyz * tmpvar_35.y)) + (unity_LightColor[2].xyz * tmpvar_35.z)) + (unity_LightColor[3].xyz * tmpvar_35.w)));
  tmpvar_6 = tmpvar_36;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = (tmpvar_11 * (((_World2Object * tmpvar_13).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_3;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture2D (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_4 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (tmpvar_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 0.0;
  tmpvar_29.xyz = clouds_9;
  lowp vec4 arg0_30;
  arg0_30 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_31;
  tmpvar_31 = mix (arg0_30, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_29).xyz;
  tmpvar_6 = tmpvar_31;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_33;
  tmpvar_33 = ((tmpvar_32.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_33;
  tmpvar_2 = tmpvar_5;
  highp vec3 tmpvar_34;
  tmpvar_34 = normalize(xlv_TEXCOORD1);
  mediump vec3 viewDir_35;
  viewDir_35 = tmpvar_34;
  lowp vec4 c_36;
  highp float nh_37;
  lowp float tmpvar_38;
  tmpvar_38 = max (0.0, dot (tmpvar_5, xlv_TEXCOORD2));
  mediump float tmpvar_39;
  tmpvar_39 = max (0.0, dot (tmpvar_5, normalize((xlv_TEXCOORD2 + viewDir_35))));
  nh_37 = tmpvar_39;
  mediump float arg1_40;
  arg1_40 = (tmpvar_7 * 128.0);
  highp float tmpvar_41;
  tmpvar_41 = (pow (nh_37, arg1_40) * tmpvar_8);
  highp vec3 tmpvar_42;
  tmpvar_42 = ((((tmpvar_4 * _LightColor0.xyz) * tmpvar_38) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_41)) * 2.0);
  c_36.xyz = tmpvar_42;
  highp float tmpvar_43;
  tmpvar_43 = (tmpvar_12.w + ((_LightColor0.w * _SpecColor.w) * tmpvar_41));
  c_36.w = tmpvar_43;
  c_1.w = c_36.w;
  c_1.xyz = (c_36.xyz + (tmpvar_4 * xlv_TEXCOORD3));
  c_1.xyz = (c_1.xyz + tmpvar_6);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (tmpvar_2 * unity_Scale.w));
  highp vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_1.xyz;
  tmpvar_10 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_11;
  tmpvar_11[0].x = tmpvar_9.x;
  tmpvar_11[0].y = tmpvar_10.x;
  tmpvar_11[0].z = tmpvar_2.x;
  tmpvar_11[1].x = tmpvar_9.y;
  tmpvar_11[1].y = tmpvar_10.y;
  tmpvar_11[1].z = tmpvar_2.y;
  tmpvar_11[2].x = tmpvar_9.z;
  tmpvar_11[2].y = tmpvar_10.z;
  tmpvar_11[2].z = tmpvar_2.z;
  highp vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = tmpvar_8;
  mediump vec3 tmpvar_15;
  mediump vec4 normal_16;
  normal_16 = tmpvar_14;
  highp float vC_17;
  mediump vec3 x3_18;
  mediump vec3 x2_19;
  mediump vec3 x1_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAr, normal_16);
  x1_20.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAg, normal_16);
  x1_20.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHAb, normal_16);
  x1_20.z = tmpvar_23;
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_16.xyzz * normal_16.yzzx);
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBr, tmpvar_24);
  x2_19.x = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBg, tmpvar_24);
  x2_19.y = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = dot (unity_SHBb, tmpvar_24);
  x2_19.z = tmpvar_27;
  mediump float tmpvar_28;
  tmpvar_28 = ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y));
  vC_17 = tmpvar_28;
  highp vec3 tmpvar_29;
  tmpvar_29 = (unity_SHC.xyz * vC_17);
  x3_18 = tmpvar_29;
  tmpvar_15 = ((x1_20 + x2_19) + x3_18);
  shlight_3 = tmpvar_15;
  tmpvar_6 = shlight_3;
  highp vec3 tmpvar_30;
  tmpvar_30 = (_Object2World * _glesVertex).xyz;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosX0 - tmpvar_30.x);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosY0 - tmpvar_30.y);
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosZ0 - tmpvar_30.z);
  highp vec4 tmpvar_34;
  tmpvar_34 = (((tmpvar_31 * tmpvar_31) + (tmpvar_32 * tmpvar_32)) + (tmpvar_33 * tmpvar_33));
  highp vec4 tmpvar_35;
  tmpvar_35 = (max (vec4(0.0, 0.0, 0.0, 0.0), ((((tmpvar_31 * tmpvar_8.x) + (tmpvar_32 * tmpvar_8.y)) + (tmpvar_33 * tmpvar_8.z)) * inversesqrt(tmpvar_34))) * (1.0/((1.0 + (tmpvar_34 * unity_4LightAtten0)))));
  highp vec3 tmpvar_36;
  tmpvar_36 = (tmpvar_6 + ((((unity_LightColor[0].xyz * tmpvar_35.x) + (unity_LightColor[1].xyz * tmpvar_35.y)) + (unity_LightColor[2].xyz * tmpvar_35.z)) + (unity_LightColor[3].xyz * tmpvar_35.w)));
  tmpvar_6 = tmpvar_36;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = (tmpvar_11 * (((_World2Object * tmpvar_13).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_3;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture2D (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_4 = tmpvar_26;
  lowp vec3 normal_27;
  normal_27.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_27.z = sqrt((1.0 - clamp (dot (normal_27.xy, normal_27.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (normal_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 0.0;
  tmpvar_29.xyz = clouds_9;
  lowp vec4 arg0_30;
  arg0_30 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_31;
  tmpvar_31 = mix (arg0_30, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_29).xyz;
  tmpvar_6 = tmpvar_31;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_33;
  tmpvar_33 = ((tmpvar_32.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_33;
  tmpvar_2 = tmpvar_5;
  highp vec3 tmpvar_34;
  tmpvar_34 = normalize(xlv_TEXCOORD1);
  mediump vec3 viewDir_35;
  viewDir_35 = tmpvar_34;
  lowp vec4 c_36;
  highp float nh_37;
  lowp float tmpvar_38;
  tmpvar_38 = max (0.0, dot (tmpvar_5, xlv_TEXCOORD2));
  mediump float tmpvar_39;
  tmpvar_39 = max (0.0, dot (tmpvar_5, normalize((xlv_TEXCOORD2 + viewDir_35))));
  nh_37 = tmpvar_39;
  mediump float arg1_40;
  arg1_40 = (tmpvar_7 * 128.0);
  highp float tmpvar_41;
  tmpvar_41 = (pow (nh_37, arg1_40) * tmpvar_8);
  highp vec3 tmpvar_42;
  tmpvar_42 = ((((tmpvar_4 * _LightColor0.xyz) * tmpvar_38) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_41)) * 2.0);
  c_36.xyz = tmpvar_42;
  highp float tmpvar_43;
  tmpvar_43 = (tmpvar_12.w + ((_LightColor0.w * _SpecColor.w) * tmpvar_41));
  c_36.w = tmpvar_43;
  c_1.w = c_36.w;
  c_1.xyz = (c_36.xyz + (tmpvar_4 * xlv_TEXCOORD3));
  c_1.xyz = (c_1.xyz + tmpvar_6);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec3 xlv_TEXCOORD2;
out lowp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (tmpvar_2 * unity_Scale.w));
  highp vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_1.xyz;
  tmpvar_10 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_11;
  tmpvar_11[0].x = tmpvar_9.x;
  tmpvar_11[0].y = tmpvar_10.x;
  tmpvar_11[0].z = tmpvar_2.x;
  tmpvar_11[1].x = tmpvar_9.y;
  tmpvar_11[1].y = tmpvar_10.y;
  tmpvar_11[1].z = tmpvar_2.y;
  tmpvar_11[2].x = tmpvar_9.z;
  tmpvar_11[2].y = tmpvar_10.z;
  tmpvar_11[2].z = tmpvar_2.z;
  highp vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = tmpvar_8;
  mediump vec3 tmpvar_15;
  mediump vec4 normal_16;
  normal_16 = tmpvar_14;
  highp float vC_17;
  mediump vec3 x3_18;
  mediump vec3 x2_19;
  mediump vec3 x1_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAr, normal_16);
  x1_20.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAg, normal_16);
  x1_20.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHAb, normal_16);
  x1_20.z = tmpvar_23;
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_16.xyzz * normal_16.yzzx);
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBr, tmpvar_24);
  x2_19.x = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBg, tmpvar_24);
  x2_19.y = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = dot (unity_SHBb, tmpvar_24);
  x2_19.z = tmpvar_27;
  mediump float tmpvar_28;
  tmpvar_28 = ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y));
  vC_17 = tmpvar_28;
  highp vec3 tmpvar_29;
  tmpvar_29 = (unity_SHC.xyz * vC_17);
  x3_18 = tmpvar_29;
  tmpvar_15 = ((x1_20 + x2_19) + x3_18);
  shlight_3 = tmpvar_15;
  tmpvar_6 = shlight_3;
  highp vec3 tmpvar_30;
  tmpvar_30 = (_Object2World * _glesVertex).xyz;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosX0 - tmpvar_30.x);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosY0 - tmpvar_30.y);
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosZ0 - tmpvar_30.z);
  highp vec4 tmpvar_34;
  tmpvar_34 = (((tmpvar_31 * tmpvar_31) + (tmpvar_32 * tmpvar_32)) + (tmpvar_33 * tmpvar_33));
  highp vec4 tmpvar_35;
  tmpvar_35 = (max (vec4(0.0, 0.0, 0.0, 0.0), ((((tmpvar_31 * tmpvar_8.x) + (tmpvar_32 * tmpvar_8.y)) + (tmpvar_33 * tmpvar_8.z)) * inversesqrt(tmpvar_34))) * (1.0/((1.0 + (tmpvar_34 * unity_4LightAtten0)))));
  highp vec3 tmpvar_36;
  tmpvar_36 = (tmpvar_6 + ((((unity_LightColor[0].xyz * tmpvar_35.x) + (unity_LightColor[1].xyz * tmpvar_35.y)) + (unity_LightColor[2].xyz * tmpvar_35.z)) + (unity_LightColor[3].xyz * tmpvar_35.w)));
  tmpvar_6 = tmpvar_36;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = (tmpvar_11 * (((_World2Object * tmpvar_13).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _Time;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
in highp vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec3 xlv_TEXCOORD2;
in lowp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_3;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_4 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (tmpvar_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 0.0;
  tmpvar_29.xyz = clouds_9;
  lowp vec4 arg0_30;
  arg0_30 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_31;
  tmpvar_31 = mix (arg0_30, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_29).xyz;
  tmpvar_6 = tmpvar_31;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_33;
  tmpvar_33 = ((tmpvar_32.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_33;
  tmpvar_2 = tmpvar_5;
  highp vec3 tmpvar_34;
  tmpvar_34 = normalize(xlv_TEXCOORD1);
  mediump vec3 viewDir_35;
  viewDir_35 = tmpvar_34;
  lowp vec4 c_36;
  highp float nh_37;
  lowp float tmpvar_38;
  tmpvar_38 = max (0.0, dot (tmpvar_5, xlv_TEXCOORD2));
  mediump float tmpvar_39;
  tmpvar_39 = max (0.0, dot (tmpvar_5, normalize((xlv_TEXCOORD2 + viewDir_35))));
  nh_37 = tmpvar_39;
  mediump float arg1_40;
  arg1_40 = (tmpvar_7 * 128.0);
  highp float tmpvar_41;
  tmpvar_41 = (pow (nh_37, arg1_40) * tmpvar_8);
  highp vec3 tmpvar_42;
  tmpvar_42 = ((((tmpvar_4 * _LightColor0.xyz) * tmpvar_38) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_41)) * 2.0);
  c_36.xyz = tmpvar_42;
  highp float tmpvar_43;
  tmpvar_43 = (tmpvar_12.w + ((_LightColor0.w * _SpecColor.w) * tmpvar_41));
  c_36.w = tmpvar_43;
  c_1.w = c_36.w;
  c_1.xyz = (c_36.xyz + (tmpvar_4 * xlv_TEXCOORD3));
  c_1.xyz = (c_1.xyz + tmpvar_6);
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 80 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Vector 13 [_WorldSpaceCameraPos]
Vector 14 [_ProjectionParams]
Vector 15 [_WorldSpaceLightPos0]
Vector 16 [unity_4LightPosX0]
Vector 17 [unity_4LightPosY0]
Vector 18 [unity_4LightPosZ0]
Vector 19 [unity_4LightAtten0]
Vector 20 [unity_LightColor0]
Vector 21 [unity_LightColor1]
Vector 22 [unity_LightColor2]
Vector 23 [unity_LightColor3]
Vector 24 [unity_SHAr]
Vector 25 [unity_SHAg]
Vector 26 [unity_SHAb]
Vector 27 [unity_SHBr]
Vector 28 [unity_SHBg]
Vector 29 [unity_SHBb]
Vector 30 [unity_SHC]
Vector 31 [unity_Scale]
Vector 32 [_MainTex_ST]
Vector 33 [_Clouds_ST]
"3.0-!!ARBvp1.0
PARAM c[34] = { { 1, 0, 0.5 },
		state.matrix.mvp,
		program.local[5..33] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
MUL R3.xyz, vertex.normal, c[31].w;
DP4 R0.x, vertex.position, c[6];
ADD R1, -R0.x, c[17];
DP3 R3.w, R3, c[6];
DP3 R4.x, R3, c[5];
DP3 R3.x, R3, c[7];
MUL R2, R3.w, R1;
DP4 R0.x, vertex.position, c[5];
ADD R0, -R0.x, c[16];
MUL R1, R1, R1;
MOV R4.z, R3.x;
MAD R2, R4.x, R0, R2;
MOV R4.w, c[0].x;
DP4 R4.y, vertex.position, c[7];
MAD R1, R0, R0, R1;
ADD R0, -R4.y, c[18];
MAD R1, R0, R0, R1;
MAD R0, R3.x, R0, R2;
MUL R2, R1, c[19];
MOV R4.y, R3.w;
RSQ R1.x, R1.x;
RSQ R1.y, R1.y;
RSQ R1.w, R1.w;
RSQ R1.z, R1.z;
MUL R0, R0, R1;
ADD R1, R2, c[0].x;
RCP R1.x, R1.x;
RCP R1.y, R1.y;
RCP R1.w, R1.w;
RCP R1.z, R1.z;
MAX R0, R0, c[0].y;
MUL R0, R0, R1;
MUL R1.xyz, R0.y, c[21];
MAD R1.xyz, R0.x, c[20], R1;
MAD R0.xyz, R0.z, c[22], R1;
MAD R1.xyz, R0.w, c[23], R0;
MUL R0, R4.xyzz, R4.yzzx;
DP4 R3.z, R0, c[29];
DP4 R3.y, R0, c[28];
DP4 R3.x, R0, c[27];
MUL R1.w, R3, R3;
MOV R0.w, c[0].x;
MAD R0.x, R4, R4, -R1.w;
DP4 R2.z, R4, c[26];
DP4 R2.y, R4, c[25];
DP4 R2.x, R4, c[24];
ADD R2.xyz, R2, R3;
MUL R3.xyz, R0.x, c[30];
ADD R3.xyz, R2, R3;
MOV R0.xyz, vertex.attrib[14];
MUL R2.xyz, vertex.normal.zxyw, R0.yzxw;
ADD result.texcoord[3].xyz, R3, R1;
MAD R1.xyz, vertex.normal.yzxw, R0.zxyw, -R2;
MOV R0.xyz, c[13];
DP4 R2.z, R0, c[11];
DP4 R2.x, R0, c[9];
DP4 R2.y, R0, c[10];
MAD R0.xyz, R2, c[31].w, -vertex.position;
MUL R2.xyz, R1, vertex.attrib[14].w;
MOV R1, c[15];
DP4 R3.z, R1, c[11];
DP4 R3.x, R1, c[9];
DP4 R3.y, R1, c[10];
DP3 result.texcoord[1].y, R0, R2;
DP3 result.texcoord[1].z, vertex.normal, R0;
DP3 result.texcoord[1].x, R0, vertex.attrib[14];
DP4 R0.w, vertex.position, c[4];
DP4 R0.z, vertex.position, c[3];
DP4 R0.x, vertex.position, c[1];
DP4 R0.y, vertex.position, c[2];
MUL R1.xyz, R0.xyww, c[0].z;
MUL R1.y, R1, c[14].x;
DP3 result.texcoord[2].y, R2, R3;
DP3 result.texcoord[2].z, vertex.normal, R3;
DP3 result.texcoord[2].x, vertex.attrib[14], R3;
ADD result.texcoord[4].xy, R1, R1.z;
MOV result.position, R0;
MOV result.texcoord[4].zw, R0;
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[33].xyxy, c[33];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[32], c[32].zwzw;
END
# 80 instructions, 5 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 83 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 12 [_WorldSpaceCameraPos]
Vector 13 [_ProjectionParams]
Vector 14 [_ScreenParams]
Vector 15 [_WorldSpaceLightPos0]
Vector 16 [unity_4LightPosX0]
Vector 17 [unity_4LightPosY0]
Vector 18 [unity_4LightPosZ0]
Vector 19 [unity_4LightAtten0]
Vector 20 [unity_LightColor0]
Vector 21 [unity_LightColor1]
Vector 22 [unity_LightColor2]
Vector 23 [unity_LightColor3]
Vector 24 [unity_SHAr]
Vector 25 [unity_SHAg]
Vector 26 [unity_SHAb]
Vector 27 [unity_SHBr]
Vector 28 [unity_SHBg]
Vector 29 [unity_SHBb]
Vector 30 [unity_SHC]
Vector 31 [unity_Scale]
Vector 32 [_MainTex_ST]
Vector 33 [_Clouds_ST]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
def c34, 1.00000000, 0.00000000, 0.50000000, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mul r3.xyz, v2, c31.w
dp4 r0.x, v0, c5
add r1, -r0.x, c17
dp3 r3.w, r3, c5
dp3 r4.x, r3, c4
dp3 r3.x, r3, c6
mul r2, r3.w, r1
dp4 r0.x, v0, c4
add r0, -r0.x, c16
mul r1, r1, r1
mov r4.z, r3.x
mad r2, r4.x, r0, r2
mov r4.w, c34.x
dp4 r4.y, v0, c6
mad r1, r0, r0, r1
add r0, -r4.y, c18
mad r1, r0, r0, r1
mad r0, r3.x, r0, r2
mul r2, r1, c19
mov r4.y, r3.w
rsq r1.x, r1.x
rsq r1.y, r1.y
rsq r1.w, r1.w
rsq r1.z, r1.z
mul r0, r0, r1
add r1, r2, c34.x
dp4 r2.z, r4, c26
dp4 r2.y, r4, c25
dp4 r2.x, r4, c24
rcp r1.x, r1.x
rcp r1.y, r1.y
rcp r1.w, r1.w
rcp r1.z, r1.z
max r0, r0, c34.y
mul r0, r0, r1
mul r1.xyz, r0.y, c21
mad r1.xyz, r0.x, c20, r1
mad r0.xyz, r0.z, c22, r1
mad r1.xyz, r0.w, c23, r0
mul r0, r4.xyzz, r4.yzzx
mul r1.w, r3, r3
dp4 r3.z, r0, c29
dp4 r3.y, r0, c28
dp4 r3.x, r0, c27
mad r1.w, r4.x, r4.x, -r1
mul r0.xyz, r1.w, c30
add r2.xyz, r2, r3
add r2.xyz, r2, r0
add o4.xyz, r2, r1
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r0.xyz, v2.yzxw, r0.zxyw, -r1
mul r3.xyz, r0, v1.w
mov r0, c10
dp4 r4.z, c15, r0
mov r0, c9
dp4 r4.y, c15, r0
mov r1.w, c34.x
mov r1.xyz, c12
dp4 r0.w, v0, c3
dp4 r0.z, v0, c2
dp4 r2.z, r1, c10
dp4 r2.x, r1, c8
dp4 r2.y, r1, c9
mad r2.xyz, r2, c31.w, -v0
mov r1, c8
dp4 r4.x, c15, r1
dp4 r0.x, v0, c0
dp4 r0.y, v0, c1
mul r1.xyz, r0.xyww, c34.z
mul r1.y, r1, c13.x
dp3 o2.y, r2, r3
dp3 o3.y, r3, r4
dp3 o2.z, v2, r2
dp3 o2.x, r2, v1
dp3 o3.z, v2, r4
dp3 o3.x, v1, r4
mad o5.xy, r1.z, c14.zwzw, r1
mov o0, r0
mov o5.zw, r0
mad o1.zw, v3.xyxy, c33.xyxy, c33
mad o1.xy, v3, c32, c32.zwzw
"
}
SubProgram "d3d11 " {
// Stats: 66 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 192
Vector 160 [_MainTex_ST]
Vector 176 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0
eefiecedhepnbjcpaoenecghlhiladmgpnmpkfepabaaaaaanaalaaaaadaaaaaa
cmaaaaaapeaaaaaakmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheolaaaaaaaagaaaaaa
aiaaaaaajiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakeaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaakeaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaakeaaaaaa
aeaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklfdeieefcbmakaaaaeaaaabaaihacaaaafjaaaaae
egiocaaaaaaaaaaaamaaaaaafjaaaaaeegiocaaaabaaaaaaagaaaaaafjaaaaae
egiocaaaacaaaaaacnaaaaaafjaaaaaeegiocaaaadaaaaaabfaaaaaafpaaaaad
pcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaa
fpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaad
pccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaa
gfaaaaadhccabaaaaeaaaaaagfaaaaadpccabaaaafaaaaaagiaaaaacahaaaaaa
diaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaa
kgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaa
egiacaaaaaaaaaaaakaaaaaaogikcaaaaaaaaaaaakaaaaaadcaaaaalmccabaaa
abaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaalaaaaaakgiocaaaaaaaaaaa
alaaaaaadiaaaaahhcaabaaaabaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaa
dcaaaaakhcaabaaaabaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaia
ebaaaaaaabaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaapgbpbaaa
abaaaaaadiaaaaajhcaabaaaacaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaa
adaaaaaabbaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaaadaaaaaabaaaaaaa
agiacaaaabaaaaaaaeaaaaaaegacbaaaacaaaaaadcaaaaalhcaabaaaacaaaaaa
egiccaaaadaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaaacaaaaaa
aaaaaaaihcaabaaaacaaaaaaegacbaaaacaaaaaaegiccaaaadaaaaaabdaaaaaa
dcaaaaalhcaabaaaacaaaaaaegacbaaaacaaaaaapgipcaaaadaaaaaabeaaaaaa
egbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaaacaaaaaaegacbaaaabaaaaaa
egacbaaaacaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaa
acaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaaacaaaaaa
diaaaaajhcaabaaaacaaaaaafgifcaaaacaaaaaaaaaaaaaaegiccaaaadaaaaaa
bbaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaa
acaaaaaaaaaaaaaaegacbaaaacaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaa
adaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaaegacbaaaacaaaaaadcaaaaal
hcaabaaaacaaaaaaegiccaaaadaaaaaabdaaaaaapgipcaaaacaaaaaaaaaaaaaa
egacbaaaacaaaaaabaaaaaahcccabaaaadaaaaaaegacbaaaabaaaaaaegacbaaa
acaaaaaabaaaaaahbccabaaaadaaaaaaegbcbaaaabaaaaaaegacbaaaacaaaaaa
baaaaaaheccabaaaadaaaaaaegbcbaaaacaaaaaaegacbaaaacaaaaaadgaaaaaf
icaabaaaabaaaaaaabeaaaaaaaaaiadpdiaaaaaihcaabaaaacaaaaaaegbcbaaa
acaaaaaapgipcaaaadaaaaaabeaaaaaadiaaaaaihcaabaaaadaaaaaafgafbaaa
acaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaaklcaabaaaacaaaaaaegiicaaa
adaaaaaaamaaaaaaagaabaaaacaaaaaaegaibaaaadaaaaaadcaaaaakhcaabaaa
abaaaaaaegiccaaaadaaaaaaaoaaaaaakgakbaaaacaaaaaaegadbaaaacaaaaaa
bbaaaaaibcaabaaaacaaaaaaegiocaaaacaaaaaacgaaaaaaegaobaaaabaaaaaa
bbaaaaaiccaabaaaacaaaaaaegiocaaaacaaaaaachaaaaaaegaobaaaabaaaaaa
bbaaaaaiecaabaaaacaaaaaaegiocaaaacaaaaaaciaaaaaaegaobaaaabaaaaaa
diaaaaahpcaabaaaadaaaaaajgacbaaaabaaaaaaegakbaaaabaaaaaabbaaaaai
bcaabaaaaeaaaaaaegiocaaaacaaaaaacjaaaaaaegaobaaaadaaaaaabbaaaaai
ccaabaaaaeaaaaaaegiocaaaacaaaaaackaaaaaaegaobaaaadaaaaaabbaaaaai
ecaabaaaaeaaaaaaegiocaaaacaaaaaaclaaaaaaegaobaaaadaaaaaaaaaaaaah
hcaabaaaacaaaaaaegacbaaaacaaaaaaegacbaaaaeaaaaaadiaaaaahicaabaaa
abaaaaaabkaabaaaabaaaaaabkaabaaaabaaaaaadcaaaaakicaabaaaabaaaaaa
akaabaaaabaaaaaaakaabaaaabaaaaaadkaabaiaebaaaaaaabaaaaaadcaaaaak
hcaabaaaacaaaaaaegiccaaaacaaaaaacmaaaaaapgapbaaaabaaaaaaegacbaaa
acaaaaaadiaaaaaihcaabaaaadaaaaaafgbfbaaaaaaaaaaaegiccaaaadaaaaaa
anaaaaaadcaaaaakhcaabaaaadaaaaaaegiccaaaadaaaaaaamaaaaaaagbabaaa
aaaaaaaaegacbaaaadaaaaaadcaaaaakhcaabaaaadaaaaaaegiccaaaadaaaaaa
aoaaaaaakgbkbaaaaaaaaaaaegacbaaaadaaaaaadcaaaaakhcaabaaaadaaaaaa
egiccaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaaegacbaaaadaaaaaaaaaaaaaj
pcaabaaaaeaaaaaafgafbaiaebaaaaaaadaaaaaaegiocaaaacaaaaaaadaaaaaa
diaaaaahpcaabaaaafaaaaaafgafbaaaabaaaaaaegaobaaaaeaaaaaadiaaaaah
pcaabaaaaeaaaaaaegaobaaaaeaaaaaaegaobaaaaeaaaaaaaaaaaaajpcaabaaa
agaaaaaaagaabaiaebaaaaaaadaaaaaaegiocaaaacaaaaaaacaaaaaaaaaaaaaj
pcaabaaaadaaaaaakgakbaiaebaaaaaaadaaaaaaegiocaaaacaaaaaaaeaaaaaa
dcaaaaajpcaabaaaafaaaaaaegaobaaaagaaaaaaagaabaaaabaaaaaaegaobaaa
afaaaaaadcaaaaajpcaabaaaabaaaaaaegaobaaaadaaaaaakgakbaaaabaaaaaa
egaobaaaafaaaaaadcaaaaajpcaabaaaaeaaaaaaegaobaaaagaaaaaaegaobaaa
agaaaaaaegaobaaaaeaaaaaadcaaaaajpcaabaaaadaaaaaaegaobaaaadaaaaaa
egaobaaaadaaaaaaegaobaaaaeaaaaaaeeaaaaafpcaabaaaaeaaaaaaegaobaaa
adaaaaaadcaaaaanpcaabaaaadaaaaaaegaobaaaadaaaaaaegiocaaaacaaaaaa
afaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaiadpaoaaaaakpcaabaaa
adaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaiadpegaobaaaadaaaaaa
diaaaaahpcaabaaaabaaaaaaegaobaaaabaaaaaaegaobaaaaeaaaaaadeaaaaak
pcaabaaaabaaaaaaegaobaaaabaaaaaaaceaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaadiaaaaahpcaabaaaabaaaaaaegaobaaaadaaaaaaegaobaaaabaaaaaa
diaaaaaihcaabaaaadaaaaaafgafbaaaabaaaaaaegiccaaaacaaaaaaahaaaaaa
dcaaaaakhcaabaaaadaaaaaaegiccaaaacaaaaaaagaaaaaaagaabaaaabaaaaaa
egacbaaaadaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaacaaaaaaaiaaaaaa
kgakbaaaabaaaaaaegacbaaaadaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaa
acaaaaaaajaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaaaaaaaaahhccabaaa
aeaaaaaaegacbaaaabaaaaaaegacbaaaacaaaaaadiaaaaaiccaabaaaaaaaaaaa
bkaabaaaaaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaaabaaaaaa
agahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadpdgaaaaaf
mccabaaaafaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaafaaaaaakgakbaaa
abaaaaaamgaabaaaabaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (tmpvar_2 * unity_Scale.w));
  highp vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_1.xyz;
  tmpvar_10 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_11;
  tmpvar_11[0].x = tmpvar_9.x;
  tmpvar_11[0].y = tmpvar_10.x;
  tmpvar_11[0].z = tmpvar_2.x;
  tmpvar_11[1].x = tmpvar_9.y;
  tmpvar_11[1].y = tmpvar_10.y;
  tmpvar_11[1].z = tmpvar_2.y;
  tmpvar_11[2].x = tmpvar_9.z;
  tmpvar_11[2].y = tmpvar_10.z;
  tmpvar_11[2].z = tmpvar_2.z;
  highp vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = tmpvar_8;
  mediump vec3 tmpvar_15;
  mediump vec4 normal_16;
  normal_16 = tmpvar_14;
  highp float vC_17;
  mediump vec3 x3_18;
  mediump vec3 x2_19;
  mediump vec3 x1_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAr, normal_16);
  x1_20.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAg, normal_16);
  x1_20.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHAb, normal_16);
  x1_20.z = tmpvar_23;
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_16.xyzz * normal_16.yzzx);
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBr, tmpvar_24);
  x2_19.x = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBg, tmpvar_24);
  x2_19.y = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = dot (unity_SHBb, tmpvar_24);
  x2_19.z = tmpvar_27;
  mediump float tmpvar_28;
  tmpvar_28 = ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y));
  vC_17 = tmpvar_28;
  highp vec3 tmpvar_29;
  tmpvar_29 = (unity_SHC.xyz * vC_17);
  x3_18 = tmpvar_29;
  tmpvar_15 = ((x1_20 + x2_19) + x3_18);
  shlight_3 = tmpvar_15;
  tmpvar_6 = shlight_3;
  highp vec3 tmpvar_30;
  tmpvar_30 = (_Object2World * _glesVertex).xyz;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosX0 - tmpvar_30.x);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosY0 - tmpvar_30.y);
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosZ0 - tmpvar_30.z);
  highp vec4 tmpvar_34;
  tmpvar_34 = (((tmpvar_31 * tmpvar_31) + (tmpvar_32 * tmpvar_32)) + (tmpvar_33 * tmpvar_33));
  highp vec4 tmpvar_35;
  tmpvar_35 = (max (vec4(0.0, 0.0, 0.0, 0.0), ((((tmpvar_31 * tmpvar_8.x) + (tmpvar_32 * tmpvar_8.y)) + (tmpvar_33 * tmpvar_8.z)) * inversesqrt(tmpvar_34))) * (1.0/((1.0 + (tmpvar_34 * unity_4LightAtten0)))));
  highp vec3 tmpvar_36;
  tmpvar_36 = (tmpvar_6 + ((((unity_LightColor[0].xyz * tmpvar_35.x) + (unity_LightColor[1].xyz * tmpvar_35.y)) + (unity_LightColor[2].xyz * tmpvar_35.z)) + (unity_LightColor[3].xyz * tmpvar_35.w)));
  tmpvar_6 = tmpvar_36;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = (tmpvar_11 * (((_World2Object * tmpvar_13).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_3;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture2D (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_4 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (tmpvar_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 0.0;
  tmpvar_29.xyz = clouds_9;
  lowp vec4 arg0_30;
  arg0_30 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_31;
  tmpvar_31 = mix (arg0_30, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_29).xyz;
  tmpvar_6 = tmpvar_31;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_33;
  tmpvar_33 = ((tmpvar_32.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_33;
  tmpvar_2 = tmpvar_5;
  lowp float tmpvar_34;
  mediump float lightShadowDataX_35;
  highp float dist_36;
  lowp float tmpvar_37;
  tmpvar_37 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
  dist_36 = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = _LightShadowData.x;
  lightShadowDataX_35 = tmpvar_38;
  highp float tmpvar_39;
  tmpvar_39 = max (float((dist_36 > (xlv_TEXCOORD4.z / xlv_TEXCOORD4.w))), lightShadowDataX_35);
  tmpvar_34 = tmpvar_39;
  highp vec3 tmpvar_40;
  tmpvar_40 = normalize(xlv_TEXCOORD1);
  mediump vec3 viewDir_41;
  viewDir_41 = tmpvar_40;
  lowp vec4 c_42;
  highp float nh_43;
  lowp float tmpvar_44;
  tmpvar_44 = max (0.0, dot (tmpvar_5, xlv_TEXCOORD2));
  mediump float tmpvar_45;
  tmpvar_45 = max (0.0, dot (tmpvar_5, normalize((xlv_TEXCOORD2 + viewDir_41))));
  nh_43 = tmpvar_45;
  mediump float arg1_46;
  arg1_46 = (tmpvar_7 * 128.0);
  highp float tmpvar_47;
  tmpvar_47 = (pow (nh_43, arg1_46) * tmpvar_8);
  highp vec3 tmpvar_48;
  tmpvar_48 = ((((tmpvar_4 * _LightColor0.xyz) * tmpvar_44) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_47)) * (tmpvar_34 * 2.0));
  c_42.xyz = tmpvar_48;
  highp float tmpvar_49;
  tmpvar_49 = (tmpvar_12.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_47) * tmpvar_34));
  c_42.w = tmpvar_49;
  c_1.w = c_42.w;
  c_1.xyz = (c_42.xyz + (tmpvar_4 * xlv_TEXCOORD3));
  c_1.xyz = (c_1.xyz + tmpvar_6);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_8;
  tmpvar_8[0] = _Object2World[0].xyz;
  tmpvar_8[1] = _Object2World[1].xyz;
  tmpvar_8[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * (tmpvar_2 * unity_Scale.w));
  highp vec3 tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_10 = tmpvar_1.xyz;
  tmpvar_11 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_12;
  tmpvar_12[0].x = tmpvar_10.x;
  tmpvar_12[0].y = tmpvar_11.x;
  tmpvar_12[0].z = tmpvar_2.x;
  tmpvar_12[1].x = tmpvar_10.y;
  tmpvar_12[1].y = tmpvar_11.y;
  tmpvar_12[1].z = tmpvar_2.y;
  tmpvar_12[2].x = tmpvar_10.z;
  tmpvar_12[2].y = tmpvar_11.z;
  tmpvar_12[2].z = tmpvar_2.z;
  highp vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_13;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_9;
  mediump vec3 tmpvar_16;
  mediump vec4 normal_17;
  normal_17 = tmpvar_15;
  highp float vC_18;
  mediump vec3 x3_19;
  mediump vec3 x2_20;
  mediump vec3 x1_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAr, normal_17);
  x1_21.x = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHAg, normal_17);
  x1_21.y = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHAb, normal_17);
  x1_21.z = tmpvar_24;
  mediump vec4 tmpvar_25;
  tmpvar_25 = (normal_17.xyzz * normal_17.yzzx);
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBr, tmpvar_25);
  x2_20.x = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = dot (unity_SHBg, tmpvar_25);
  x2_20.y = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = dot (unity_SHBb, tmpvar_25);
  x2_20.z = tmpvar_28;
  mediump float tmpvar_29;
  tmpvar_29 = ((normal_17.x * normal_17.x) - (normal_17.y * normal_17.y));
  vC_18 = tmpvar_29;
  highp vec3 tmpvar_30;
  tmpvar_30 = (unity_SHC.xyz * vC_18);
  x3_19 = tmpvar_30;
  tmpvar_16 = ((x1_21 + x2_20) + x3_19);
  shlight_3 = tmpvar_16;
  tmpvar_6 = shlight_3;
  highp vec3 tmpvar_31;
  tmpvar_31 = (_Object2World * _glesVertex).xyz;
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosX0 - tmpvar_31.x);
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosY0 - tmpvar_31.y);
  highp vec4 tmpvar_34;
  tmpvar_34 = (unity_4LightPosZ0 - tmpvar_31.z);
  highp vec4 tmpvar_35;
  tmpvar_35 = (((tmpvar_32 * tmpvar_32) + (tmpvar_33 * tmpvar_33)) + (tmpvar_34 * tmpvar_34));
  highp vec4 tmpvar_36;
  tmpvar_36 = (max (vec4(0.0, 0.0, 0.0, 0.0), ((((tmpvar_32 * tmpvar_9.x) + (tmpvar_33 * tmpvar_9.y)) + (tmpvar_34 * tmpvar_9.z)) * inversesqrt(tmpvar_35))) * (1.0/((1.0 + (tmpvar_35 * unity_4LightAtten0)))));
  highp vec3 tmpvar_37;
  tmpvar_37 = (tmpvar_6 + ((((unity_LightColor[0].xyz * tmpvar_36.x) + (unity_LightColor[1].xyz * tmpvar_36.y)) + (unity_LightColor[2].xyz * tmpvar_36.z)) + (unity_LightColor[3].xyz * tmpvar_36.w)));
  tmpvar_6 = tmpvar_37;
  highp vec4 o_38;
  highp vec4 tmpvar_39;
  tmpvar_39 = (tmpvar_7 * 0.5);
  highp vec2 tmpvar_40;
  tmpvar_40.x = tmpvar_39.x;
  tmpvar_40.y = (tmpvar_39.y * _ProjectionParams.x);
  o_38.xy = (tmpvar_40 + tmpvar_39.w);
  o_38.zw = tmpvar_7.zw;
  gl_Position = tmpvar_7;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = (tmpvar_12 * (((_World2Object * tmpvar_14).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = o_38;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_3;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture2D (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_4 = tmpvar_26;
  lowp vec3 normal_27;
  normal_27.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_27.z = sqrt((1.0 - clamp (dot (normal_27.xy, normal_27.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (normal_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 0.0;
  tmpvar_29.xyz = clouds_9;
  lowp vec4 arg0_30;
  arg0_30 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_31;
  tmpvar_31 = mix (arg0_30, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_29).xyz;
  tmpvar_6 = tmpvar_31;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_33;
  tmpvar_33 = ((tmpvar_32.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_33;
  tmpvar_2 = tmpvar_5;
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4);
  highp vec3 tmpvar_35;
  tmpvar_35 = normalize(xlv_TEXCOORD1);
  mediump vec3 viewDir_36;
  viewDir_36 = tmpvar_35;
  lowp vec4 c_37;
  highp float nh_38;
  lowp float tmpvar_39;
  tmpvar_39 = max (0.0, dot (tmpvar_5, xlv_TEXCOORD2));
  mediump float tmpvar_40;
  tmpvar_40 = max (0.0, dot (tmpvar_5, normalize((xlv_TEXCOORD2 + viewDir_36))));
  nh_38 = tmpvar_40;
  mediump float arg1_41;
  arg1_41 = (tmpvar_7 * 128.0);
  highp float tmpvar_42;
  tmpvar_42 = (pow (nh_38, arg1_41) * tmpvar_8);
  highp vec3 tmpvar_43;
  tmpvar_43 = ((((tmpvar_4 * _LightColor0.xyz) * tmpvar_39) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_42)) * (tmpvar_34.x * 2.0));
  c_37.xyz = tmpvar_43;
  highp float tmpvar_44;
  tmpvar_44 = (tmpvar_12.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_42) * tmpvar_34.x));
  c_37.w = tmpvar_44;
  c_1.w = c_37.w;
  c_1.xyz = (c_37.xyz + (tmpvar_4 * xlv_TEXCOORD3));
  c_1.xyz = (c_1.xyz + tmpvar_6);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec3 xlv_TEXCOORD2;
out lowp vec3 xlv_TEXCOORD3;
out highp vec4 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (tmpvar_2 * unity_Scale.w));
  highp vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_1.xyz;
  tmpvar_10 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_11;
  tmpvar_11[0].x = tmpvar_9.x;
  tmpvar_11[0].y = tmpvar_10.x;
  tmpvar_11[0].z = tmpvar_2.x;
  tmpvar_11[1].x = tmpvar_9.y;
  tmpvar_11[1].y = tmpvar_10.y;
  tmpvar_11[1].z = tmpvar_2.y;
  tmpvar_11[2].x = tmpvar_9.z;
  tmpvar_11[2].y = tmpvar_10.z;
  tmpvar_11[2].z = tmpvar_2.z;
  highp vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = tmpvar_8;
  mediump vec3 tmpvar_15;
  mediump vec4 normal_16;
  normal_16 = tmpvar_14;
  highp float vC_17;
  mediump vec3 x3_18;
  mediump vec3 x2_19;
  mediump vec3 x1_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAr, normal_16);
  x1_20.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAg, normal_16);
  x1_20.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHAb, normal_16);
  x1_20.z = tmpvar_23;
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_16.xyzz * normal_16.yzzx);
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBr, tmpvar_24);
  x2_19.x = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBg, tmpvar_24);
  x2_19.y = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = dot (unity_SHBb, tmpvar_24);
  x2_19.z = tmpvar_27;
  mediump float tmpvar_28;
  tmpvar_28 = ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y));
  vC_17 = tmpvar_28;
  highp vec3 tmpvar_29;
  tmpvar_29 = (unity_SHC.xyz * vC_17);
  x3_18 = tmpvar_29;
  tmpvar_15 = ((x1_20 + x2_19) + x3_18);
  shlight_3 = tmpvar_15;
  tmpvar_6 = shlight_3;
  highp vec3 tmpvar_30;
  tmpvar_30 = (_Object2World * _glesVertex).xyz;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosX0 - tmpvar_30.x);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosY0 - tmpvar_30.y);
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosZ0 - tmpvar_30.z);
  highp vec4 tmpvar_34;
  tmpvar_34 = (((tmpvar_31 * tmpvar_31) + (tmpvar_32 * tmpvar_32)) + (tmpvar_33 * tmpvar_33));
  highp vec4 tmpvar_35;
  tmpvar_35 = (max (vec4(0.0, 0.0, 0.0, 0.0), ((((tmpvar_31 * tmpvar_8.x) + (tmpvar_32 * tmpvar_8.y)) + (tmpvar_33 * tmpvar_8.z)) * inversesqrt(tmpvar_34))) * (1.0/((1.0 + (tmpvar_34 * unity_4LightAtten0)))));
  highp vec3 tmpvar_36;
  tmpvar_36 = (tmpvar_6 + ((((unity_LightColor[0].xyz * tmpvar_35.x) + (unity_LightColor[1].xyz * tmpvar_35.y)) + (unity_LightColor[2].xyz * tmpvar_35.z)) + (unity_LightColor[3].xyz * tmpvar_35.w)));
  tmpvar_6 = tmpvar_36;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = (tmpvar_11 * (((_World2Object * tmpvar_13).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _Time;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
in highp vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec3 xlv_TEXCOORD2;
in lowp vec3 xlv_TEXCOORD3;
in highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_3;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_4 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (tmpvar_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 0.0;
  tmpvar_29.xyz = clouds_9;
  lowp vec4 arg0_30;
  arg0_30 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_31;
  tmpvar_31 = mix (arg0_30, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_29).xyz;
  tmpvar_6 = tmpvar_31;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_33;
  tmpvar_33 = ((tmpvar_32.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_33;
  tmpvar_2 = tmpvar_5;
  lowp float tmpvar_34;
  mediump float lightShadowDataX_35;
  highp float dist_36;
  lowp float tmpvar_37;
  tmpvar_37 = textureProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
  dist_36 = tmpvar_37;
  highp float tmpvar_38;
  tmpvar_38 = _LightShadowData.x;
  lightShadowDataX_35 = tmpvar_38;
  highp float tmpvar_39;
  tmpvar_39 = max (float((dist_36 > (xlv_TEXCOORD4.z / xlv_TEXCOORD4.w))), lightShadowDataX_35);
  tmpvar_34 = tmpvar_39;
  highp vec3 tmpvar_40;
  tmpvar_40 = normalize(xlv_TEXCOORD1);
  mediump vec3 viewDir_41;
  viewDir_41 = tmpvar_40;
  lowp vec4 c_42;
  highp float nh_43;
  lowp float tmpvar_44;
  tmpvar_44 = max (0.0, dot (tmpvar_5, xlv_TEXCOORD2));
  mediump float tmpvar_45;
  tmpvar_45 = max (0.0, dot (tmpvar_5, normalize((xlv_TEXCOORD2 + viewDir_41))));
  nh_43 = tmpvar_45;
  mediump float arg1_46;
  arg1_46 = (tmpvar_7 * 128.0);
  highp float tmpvar_47;
  tmpvar_47 = (pow (nh_43, arg1_46) * tmpvar_8);
  highp vec3 tmpvar_48;
  tmpvar_48 = ((((tmpvar_4 * _LightColor0.xyz) * tmpvar_44) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_47)) * (tmpvar_34 * 2.0));
  c_42.xyz = tmpvar_48;
  highp float tmpvar_49;
  tmpvar_49 = (tmpvar_12.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_47) * tmpvar_34));
  c_42.w = tmpvar_49;
  c_1.w = c_42.w;
  c_1.xyz = (c_42.xyz + (tmpvar_4 * xlv_TEXCOORD3));
  c_1.xyz = (c_1.xyz + tmpvar_6);
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_7 * (tmpvar_2 * unity_Scale.w));
  mediump vec3 tmpvar_14;
  mediump vec4 normal_15;
  normal_15 = tmpvar_13;
  highp float vC_16;
  mediump vec3 x3_17;
  mediump vec3 x2_18;
  mediump vec3 x1_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHAr, normal_15);
  x1_19.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAg, normal_15);
  x1_19.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAb, normal_15);
  x1_19.z = tmpvar_22;
  mediump vec4 tmpvar_23;
  tmpvar_23 = (normal_15.xyzz * normal_15.yzzx);
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHBr, tmpvar_23);
  x2_18.x = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBg, tmpvar_23);
  x2_18.y = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBb, tmpvar_23);
  x2_18.z = tmpvar_26;
  mediump float tmpvar_27;
  tmpvar_27 = ((normal_15.x * normal_15.x) - (normal_15.y * normal_15.y));
  vC_16 = tmpvar_27;
  highp vec3 tmpvar_28;
  tmpvar_28 = (unity_SHC.xyz * vC_16);
  x3_17 = tmpvar_28;
  tmpvar_14 = ((x1_19 + x2_18) + x3_17);
  shlight_3 = tmpvar_14;
  tmpvar_6 = shlight_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = (tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform highp vec4 _Time;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_3;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture2D (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_4 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (tmpvar_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 0.0;
  tmpvar_29.xyz = clouds_9;
  lowp vec4 arg0_30;
  arg0_30 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_31;
  tmpvar_31 = mix (arg0_30, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_29).xyz;
  tmpvar_6 = tmpvar_31;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_33;
  tmpvar_33 = ((tmpvar_32.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_33;
  tmpvar_2 = tmpvar_5;
  lowp float shadow_34;
  lowp float tmpvar_35;
  tmpvar_35 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD4.xyz);
  highp float tmpvar_36;
  tmpvar_36 = (_LightShadowData.x + (tmpvar_35 * (1.0 - _LightShadowData.x)));
  shadow_34 = tmpvar_36;
  highp vec3 tmpvar_37;
  tmpvar_37 = normalize(xlv_TEXCOORD1);
  mediump vec3 viewDir_38;
  viewDir_38 = tmpvar_37;
  lowp vec4 c_39;
  highp float nh_40;
  lowp float tmpvar_41;
  tmpvar_41 = max (0.0, dot (tmpvar_5, xlv_TEXCOORD2));
  mediump float tmpvar_42;
  tmpvar_42 = max (0.0, dot (tmpvar_5, normalize((xlv_TEXCOORD2 + viewDir_38))));
  nh_40 = tmpvar_42;
  mediump float arg1_43;
  arg1_43 = (tmpvar_7 * 128.0);
  highp float tmpvar_44;
  tmpvar_44 = (pow (nh_40, arg1_43) * tmpvar_8);
  highp vec3 tmpvar_45;
  tmpvar_45 = ((((tmpvar_4 * _LightColor0.xyz) * tmpvar_41) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_44)) * (shadow_34 * 2.0));
  c_39.xyz = tmpvar_45;
  highp float tmpvar_46;
  tmpvar_46 = (tmpvar_12.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_44) * shadow_34));
  c_39.w = tmpvar_46;
  c_1.w = c_39.w;
  c_1.xyz = (c_39.xyz + (tmpvar_4 * xlv_TEXCOORD3));
  c_1.xyz = (c_1.xyz + tmpvar_6);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec3 xlv_TEXCOORD2;
out lowp vec3 xlv_TEXCOORD3;
out highp vec4 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_7 * (tmpvar_2 * unity_Scale.w));
  mediump vec3 tmpvar_14;
  mediump vec4 normal_15;
  normal_15 = tmpvar_13;
  highp float vC_16;
  mediump vec3 x3_17;
  mediump vec3 x2_18;
  mediump vec3 x1_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHAr, normal_15);
  x1_19.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAg, normal_15);
  x1_19.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAb, normal_15);
  x1_19.z = tmpvar_22;
  mediump vec4 tmpvar_23;
  tmpvar_23 = (normal_15.xyzz * normal_15.yzzx);
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHBr, tmpvar_23);
  x2_18.x = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBg, tmpvar_23);
  x2_18.y = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBb, tmpvar_23);
  x2_18.z = tmpvar_26;
  mediump float tmpvar_27;
  tmpvar_27 = ((normal_15.x * normal_15.x) - (normal_15.y * normal_15.y));
  vC_16 = tmpvar_27;
  highp vec3 tmpvar_28;
  tmpvar_28 = (unity_SHC.xyz * vC_16);
  x3_17 = tmpvar_28;
  tmpvar_14 = ((x1_19 + x2_18) + x3_17);
  shlight_3 = tmpvar_14;
  tmpvar_6 = shlight_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = (tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _Time;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
in highp vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec3 xlv_TEXCOORD2;
in lowp vec3 xlv_TEXCOORD3;
in highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_3;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_4 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (tmpvar_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 0.0;
  tmpvar_29.xyz = clouds_9;
  lowp vec4 arg0_30;
  arg0_30 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_31;
  tmpvar_31 = mix (arg0_30, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_29).xyz;
  tmpvar_6 = tmpvar_31;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_33;
  tmpvar_33 = ((tmpvar_32.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_33;
  tmpvar_2 = tmpvar_5;
  lowp float shadow_34;
  mediump float tmpvar_35;
  tmpvar_35 = texture (_ShadowMapTexture, xlv_TEXCOORD4.xyz);
  shadow_34 = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = (_LightShadowData.x + (shadow_34 * (1.0 - _LightShadowData.x)));
  shadow_34 = tmpvar_36;
  highp vec3 tmpvar_37;
  tmpvar_37 = normalize(xlv_TEXCOORD1);
  mediump vec3 viewDir_38;
  viewDir_38 = tmpvar_37;
  lowp vec4 c_39;
  highp float nh_40;
  lowp float tmpvar_41;
  tmpvar_41 = max (0.0, dot (tmpvar_5, xlv_TEXCOORD2));
  mediump float tmpvar_42;
  tmpvar_42 = max (0.0, dot (tmpvar_5, normalize((xlv_TEXCOORD2 + viewDir_38))));
  nh_40 = tmpvar_42;
  mediump float arg1_43;
  arg1_43 = (tmpvar_7 * 128.0);
  highp float tmpvar_44;
  tmpvar_44 = (pow (nh_40, arg1_43) * tmpvar_8);
  highp vec3 tmpvar_45;
  tmpvar_45 = ((((tmpvar_4 * _LightColor0.xyz) * tmpvar_41) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_44)) * (shadow_34 * 2.0));
  c_39.xyz = tmpvar_45;
  highp float tmpvar_46;
  tmpvar_46 = (tmpvar_12.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_44) * shadow_34));
  c_39.w = tmpvar_46;
  c_1.w = c_39.w;
  c_1.xyz = (c_39.xyz + (tmpvar_4 * xlv_TEXCOORD3));
  c_1.xyz = (c_1.xyz + tmpvar_6);
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  tmpvar_4 = tmpvar_1.xyz;
  tmpvar_5 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_4.x;
  tmpvar_6[0].y = tmpvar_5.x;
  tmpvar_6[0].z = tmpvar_2.x;
  tmpvar_6[1].x = tmpvar_4.y;
  tmpvar_6[1].y = tmpvar_5.y;
  tmpvar_6[1].z = tmpvar_2.y;
  tmpvar_6[2].x = tmpvar_4.z;
  tmpvar_6[2].y = tmpvar_5.z;
  tmpvar_6[2].z = tmpvar_2.z;
  highp vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_6 * (((_World2Object * tmpvar_7).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform highp vec4 _Time;
uniform highp vec4 _LightShadowData;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D unity_Lightmap;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  mediump vec3 clouds_7;
  mediump vec2 cloudUV_8;
  lowp float fresnel_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_11;
  tmpvar_11 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_9 = tmpvar_11;
  lowp float tmpvar_12;
  tmpvar_12 = pow (fresnel_9, _AtmosFalloff);
  lowp vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_10.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_12)) * tmpvar_12));
  cloudUV_8 = tmpvar_3;
  highp float tmpvar_14;
  tmpvar_14 = (_Time.y * _CloudSpeed);
  highp float tmpvar_15;
  tmpvar_15 = fract(abs(tmpvar_14));
  highp float tmpvar_16;
  if ((tmpvar_14 >= 0.0)) {
    tmpvar_16 = tmpvar_15;
  } else {
    tmpvar_16 = -(tmpvar_15);
  };
  cloudUV_8.x = (cloudUV_8.x + tmpvar_16);
  mediump float height_17;
  height_17 = _CloudHeight;
  mediump vec3 viewDir_18;
  viewDir_18 = xlv_TEXCOORD1;
  highp vec3 v_19;
  mediump float tmpvar_20;
  tmpvar_20 = (height_17 - (height_17 / 2.0));
  mediump vec3 tmpvar_21;
  tmpvar_21 = normalize(viewDir_18);
  v_19 = tmpvar_21;
  v_19.z = (v_19.z + 0.42);
  highp vec2 tmpvar_22;
  tmpvar_22 = (cloudUV_8 + (tmpvar_20 * (v_19.xy / v_19.z)));
  cloudUV_8 = tmpvar_22;
  lowp vec3 tmpvar_23;
  tmpvar_23 = texture2D (_Clouds, cloudUV_8).xyz;
  clouds_7 = tmpvar_23;
  mediump vec3 tmpvar_24;
  tmpvar_24 = (tmpvar_13 + clouds_7);
  tmpvar_4 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_26;
  tmpvar_26 = mix (tmpvar_25, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_5 = tmpvar_26;
  mediump vec4 tmpvar_27;
  tmpvar_27.w = 0.0;
  tmpvar_27.xyz = clouds_7;
  lowp vec4 arg0_28;
  arg0_28 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_29;
  tmpvar_29 = mix (arg0_28, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_27).xyz;
  tmpvar_6 = tmpvar_29;
  tmpvar_2 = tmpvar_5;
  lowp float shadow_30;
  lowp float tmpvar_31;
  tmpvar_31 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD3.xyz);
  highp float tmpvar_32;
  tmpvar_32 = (_LightShadowData.x + (tmpvar_31 * (1.0 - _LightShadowData.x)));
  shadow_30 = tmpvar_32;
  c_1.xyz = (tmpvar_4 * min ((2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz), vec3((shadow_30 * 2.0))));
  c_1.w = tmpvar_10.w;
  c_1.xyz = (c_1.xyz + tmpvar_6);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out highp vec2 xlv_TEXCOORD2;
out highp vec4 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  tmpvar_4 = tmpvar_1.xyz;
  tmpvar_5 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_4.x;
  tmpvar_6[0].y = tmpvar_5.x;
  tmpvar_6[0].z = tmpvar_2.x;
  tmpvar_6[1].x = tmpvar_4.y;
  tmpvar_6[1].y = tmpvar_5.y;
  tmpvar_6[1].z = tmpvar_2.y;
  tmpvar_6[2].x = tmpvar_4.z;
  tmpvar_6[2].y = tmpvar_5.z;
  tmpvar_6[2].z = tmpvar_2.z;
  highp vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_6 * (((_World2Object * tmpvar_7).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _Time;
uniform highp vec4 _LightShadowData;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D unity_Lightmap;
in highp vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in highp vec2 xlv_TEXCOORD2;
in highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  mediump vec3 clouds_7;
  mediump vec2 cloudUV_8;
  lowp float fresnel_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_11;
  tmpvar_11 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_9 = tmpvar_11;
  lowp float tmpvar_12;
  tmpvar_12 = pow (fresnel_9, _AtmosFalloff);
  lowp vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_10.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_12)) * tmpvar_12));
  cloudUV_8 = tmpvar_3;
  highp float tmpvar_14;
  tmpvar_14 = (_Time.y * _CloudSpeed);
  highp float tmpvar_15;
  tmpvar_15 = fract(abs(tmpvar_14));
  highp float tmpvar_16;
  if ((tmpvar_14 >= 0.0)) {
    tmpvar_16 = tmpvar_15;
  } else {
    tmpvar_16 = -(tmpvar_15);
  };
  cloudUV_8.x = (cloudUV_8.x + tmpvar_16);
  mediump float height_17;
  height_17 = _CloudHeight;
  mediump vec3 viewDir_18;
  viewDir_18 = xlv_TEXCOORD1;
  highp vec3 v_19;
  mediump float tmpvar_20;
  tmpvar_20 = (height_17 - (height_17 / 2.0));
  mediump vec3 tmpvar_21;
  tmpvar_21 = normalize(viewDir_18);
  v_19 = tmpvar_21;
  v_19.z = (v_19.z + 0.42);
  highp vec2 tmpvar_22;
  tmpvar_22 = (cloudUV_8 + (tmpvar_20 * (v_19.xy / v_19.z)));
  cloudUV_8 = tmpvar_22;
  lowp vec3 tmpvar_23;
  tmpvar_23 = texture (_Clouds, cloudUV_8).xyz;
  clouds_7 = tmpvar_23;
  mediump vec3 tmpvar_24;
  tmpvar_24 = (tmpvar_13 + clouds_7);
  tmpvar_4 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_26;
  tmpvar_26 = mix (tmpvar_25, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_5 = tmpvar_26;
  mediump vec4 tmpvar_27;
  tmpvar_27.w = 0.0;
  tmpvar_27.xyz = clouds_7;
  lowp vec4 arg0_28;
  arg0_28 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_29;
  tmpvar_29 = mix (arg0_28, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_27).xyz;
  tmpvar_6 = tmpvar_29;
  tmpvar_2 = tmpvar_5;
  lowp float shadow_30;
  mediump float tmpvar_31;
  tmpvar_31 = texture (_ShadowMapTexture, xlv_TEXCOORD3.xyz);
  shadow_30 = tmpvar_31;
  highp float tmpvar_32;
  tmpvar_32 = (_LightShadowData.x + (shadow_30 * (1.0 - _LightShadowData.x)));
  shadow_30 = tmpvar_32;
  c_1.xyz = (tmpvar_4 * min ((2.0 * texture (unity_Lightmap, xlv_TEXCOORD2).xyz), vec3((shadow_30 * 2.0))));
  c_1.w = tmpvar_10.w;
  c_1.xyz = (c_1.xyz + tmpvar_6);
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  tmpvar_4 = tmpvar_1.xyz;
  tmpvar_5 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_4.x;
  tmpvar_6[0].y = tmpvar_5.x;
  tmpvar_6[0].z = tmpvar_2.x;
  tmpvar_6[1].x = tmpvar_4.y;
  tmpvar_6[1].y = tmpvar_5.y;
  tmpvar_6[1].z = tmpvar_2.y;
  tmpvar_6[2].x = tmpvar_4.z;
  tmpvar_6[2].y = tmpvar_5.z;
  tmpvar_6[2].z = tmpvar_2.z;
  highp vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_6 * (((_World2Object * tmpvar_7).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform highp vec4 _Time;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _SpecColor;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_3;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture2D (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_4 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (tmpvar_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 0.0;
  tmpvar_29.xyz = clouds_9;
  lowp vec4 arg0_30;
  arg0_30 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_31;
  tmpvar_31 = mix (arg0_30, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_29).xyz;
  tmpvar_6 = tmpvar_31;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_33;
  tmpvar_33 = ((tmpvar_32.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_33;
  tmpvar_2 = tmpvar_5;
  lowp float shadow_34;
  lowp float tmpvar_35;
  tmpvar_35 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD3.xyz);
  highp float tmpvar_36;
  tmpvar_36 = (_LightShadowData.x + (tmpvar_35 * (1.0 - _LightShadowData.x)));
  shadow_34 = tmpvar_36;
  c_1.w = 0.0;
  highp vec3 tmpvar_37;
  tmpvar_37 = normalize(xlv_TEXCOORD1);
  mediump vec4 tmpvar_38;
  mediump vec3 viewDir_39;
  viewDir_39 = tmpvar_37;
  mediump vec3 specColor_40;
  highp float nh_41;
  mat3 tmpvar_42;
  tmpvar_42[0].x = 0.816497;
  tmpvar_42[0].y = -0.408248;
  tmpvar_42[0].z = -0.408248;
  tmpvar_42[1].x = 0.0;
  tmpvar_42[1].y = 0.707107;
  tmpvar_42[1].z = -0.707107;
  tmpvar_42[2].x = 0.57735;
  tmpvar_42[2].y = 0.57735;
  tmpvar_42[2].z = 0.57735;
  mediump vec3 normal_43;
  normal_43 = tmpvar_5;
  mediump vec3 scalePerBasisVector_44;
  mediump vec3 lm_45;
  lowp vec3 tmpvar_46;
  tmpvar_46 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lm_45 = tmpvar_46;
  lowp vec3 tmpvar_47;
  tmpvar_47 = (2.0 * texture2D (unity_LightmapInd, xlv_TEXCOORD2).xyz);
  scalePerBasisVector_44 = tmpvar_47;
  lm_45 = (lm_45 * dot (clamp ((tmpvar_42 * normal_43), 0.0, 1.0), scalePerBasisVector_44));
  vec3 v_48;
  v_48.x = tmpvar_42[0].x;
  v_48.y = tmpvar_42[1].x;
  v_48.z = tmpvar_42[2].x;
  vec3 v_49;
  v_49.x = tmpvar_42[0].y;
  v_49.y = tmpvar_42[1].y;
  v_49.z = tmpvar_42[2].y;
  vec3 v_50;
  v_50.x = tmpvar_42[0].z;
  v_50.y = tmpvar_42[1].z;
  v_50.z = tmpvar_42[2].z;
  mediump float tmpvar_51;
  tmpvar_51 = max (0.0, dot (tmpvar_5, normalize((normalize((((scalePerBasisVector_44.x * v_48) + (scalePerBasisVector_44.y * v_49)) + (scalePerBasisVector_44.z * v_50))) + viewDir_39))));
  nh_41 = tmpvar_51;
  highp float tmpvar_52;
  mediump float arg1_53;
  arg1_53 = (tmpvar_7 * 128.0);
  tmpvar_52 = pow (nh_41, arg1_53);
  highp vec3 tmpvar_54;
  tmpvar_54 = (((lm_45 * _SpecColor.xyz) * tmpvar_8) * tmpvar_52);
  specColor_40 = tmpvar_54;
  highp vec4 tmpvar_55;
  tmpvar_55.xyz = lm_45;
  tmpvar_55.w = tmpvar_52;
  tmpvar_38 = tmpvar_55;
  c_1.xyz = specColor_40;
  lowp vec3 tmpvar_56;
  tmpvar_56 = vec3((shadow_34 * 2.0));
  mediump vec3 tmpvar_57;
  tmpvar_57 = (c_1.xyz + (tmpvar_4 * min (tmpvar_38.xyz, tmpvar_56)));
  c_1.xyz = tmpvar_57;
  c_1.w = tmpvar_12.w;
  c_1.xyz = (c_1.xyz + tmpvar_6);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out highp vec2 xlv_TEXCOORD2;
out highp vec4 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  tmpvar_4 = tmpvar_1.xyz;
  tmpvar_5 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_4.x;
  tmpvar_6[0].y = tmpvar_5.x;
  tmpvar_6[0].z = tmpvar_2.x;
  tmpvar_6[1].x = tmpvar_4.y;
  tmpvar_6[1].y = tmpvar_5.y;
  tmpvar_6[1].z = tmpvar_2.y;
  tmpvar_6[2].x = tmpvar_4.z;
  tmpvar_6[2].y = tmpvar_5.z;
  tmpvar_6[2].z = tmpvar_2.z;
  highp vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_6 * (((_World2Object * tmpvar_7).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _Time;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _SpecColor;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
in highp vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in highp vec2 xlv_TEXCOORD2;
in highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_3;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_4 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (tmpvar_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 0.0;
  tmpvar_29.xyz = clouds_9;
  lowp vec4 arg0_30;
  arg0_30 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_31;
  tmpvar_31 = mix (arg0_30, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_29).xyz;
  tmpvar_6 = tmpvar_31;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_33;
  tmpvar_33 = ((tmpvar_32.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_33;
  tmpvar_2 = tmpvar_5;
  lowp float shadow_34;
  mediump float tmpvar_35;
  tmpvar_35 = texture (_ShadowMapTexture, xlv_TEXCOORD3.xyz);
  shadow_34 = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = (_LightShadowData.x + (shadow_34 * (1.0 - _LightShadowData.x)));
  shadow_34 = tmpvar_36;
  c_1.w = 0.0;
  highp vec3 tmpvar_37;
  tmpvar_37 = normalize(xlv_TEXCOORD1);
  mediump vec4 tmpvar_38;
  mediump vec3 viewDir_39;
  viewDir_39 = tmpvar_37;
  mediump vec3 specColor_40;
  highp float nh_41;
  mat3 tmpvar_42;
  tmpvar_42[0].x = 0.816497;
  tmpvar_42[0].y = -0.408248;
  tmpvar_42[0].z = -0.408248;
  tmpvar_42[1].x = 0.0;
  tmpvar_42[1].y = 0.707107;
  tmpvar_42[1].z = -0.707107;
  tmpvar_42[2].x = 0.57735;
  tmpvar_42[2].y = 0.57735;
  tmpvar_42[2].z = 0.57735;
  mediump vec3 normal_43;
  normal_43 = tmpvar_5;
  mediump vec3 scalePerBasisVector_44;
  mediump vec3 lm_45;
  lowp vec3 tmpvar_46;
  tmpvar_46 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lm_45 = tmpvar_46;
  lowp vec3 tmpvar_47;
  tmpvar_47 = (2.0 * texture (unity_LightmapInd, xlv_TEXCOORD2).xyz);
  scalePerBasisVector_44 = tmpvar_47;
  lm_45 = (lm_45 * dot (clamp ((tmpvar_42 * normal_43), 0.0, 1.0), scalePerBasisVector_44));
  vec3 v_48;
  v_48.x = tmpvar_42[0].x;
  v_48.y = tmpvar_42[1].x;
  v_48.z = tmpvar_42[2].x;
  vec3 v_49;
  v_49.x = tmpvar_42[0].y;
  v_49.y = tmpvar_42[1].y;
  v_49.z = tmpvar_42[2].y;
  vec3 v_50;
  v_50.x = tmpvar_42[0].z;
  v_50.y = tmpvar_42[1].z;
  v_50.z = tmpvar_42[2].z;
  mediump float tmpvar_51;
  tmpvar_51 = max (0.0, dot (tmpvar_5, normalize((normalize((((scalePerBasisVector_44.x * v_48) + (scalePerBasisVector_44.y * v_49)) + (scalePerBasisVector_44.z * v_50))) + viewDir_39))));
  nh_41 = tmpvar_51;
  highp float tmpvar_52;
  mediump float arg1_53;
  arg1_53 = (tmpvar_7 * 128.0);
  tmpvar_52 = pow (nh_41, arg1_53);
  highp vec3 tmpvar_54;
  tmpvar_54 = (((lm_45 * _SpecColor.xyz) * tmpvar_8) * tmpvar_52);
  specColor_40 = tmpvar_54;
  highp vec4 tmpvar_55;
  tmpvar_55.xyz = lm_45;
  tmpvar_55.w = tmpvar_52;
  tmpvar_38 = tmpvar_55;
  c_1.xyz = specColor_40;
  lowp vec3 tmpvar_56;
  tmpvar_56 = vec3((shadow_34 * 2.0));
  mediump vec3 tmpvar_57;
  tmpvar_57 = (c_1.xyz + (tmpvar_4 * min (tmpvar_38.xyz, tmpvar_56)));
  c_1.xyz = tmpvar_57;
  c_1.w = tmpvar_12.w;
  c_1.xyz = (c_1.xyz + tmpvar_6);
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (tmpvar_2 * unity_Scale.w));
  highp vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_1.xyz;
  tmpvar_10 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_11;
  tmpvar_11[0].x = tmpvar_9.x;
  tmpvar_11[0].y = tmpvar_10.x;
  tmpvar_11[0].z = tmpvar_2.x;
  tmpvar_11[1].x = tmpvar_9.y;
  tmpvar_11[1].y = tmpvar_10.y;
  tmpvar_11[1].z = tmpvar_2.y;
  tmpvar_11[2].x = tmpvar_9.z;
  tmpvar_11[2].y = tmpvar_10.z;
  tmpvar_11[2].z = tmpvar_2.z;
  highp vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = tmpvar_8;
  mediump vec3 tmpvar_15;
  mediump vec4 normal_16;
  normal_16 = tmpvar_14;
  highp float vC_17;
  mediump vec3 x3_18;
  mediump vec3 x2_19;
  mediump vec3 x1_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAr, normal_16);
  x1_20.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAg, normal_16);
  x1_20.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHAb, normal_16);
  x1_20.z = tmpvar_23;
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_16.xyzz * normal_16.yzzx);
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBr, tmpvar_24);
  x2_19.x = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBg, tmpvar_24);
  x2_19.y = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = dot (unity_SHBb, tmpvar_24);
  x2_19.z = tmpvar_27;
  mediump float tmpvar_28;
  tmpvar_28 = ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y));
  vC_17 = tmpvar_28;
  highp vec3 tmpvar_29;
  tmpvar_29 = (unity_SHC.xyz * vC_17);
  x3_18 = tmpvar_29;
  tmpvar_15 = ((x1_20 + x2_19) + x3_18);
  shlight_3 = tmpvar_15;
  tmpvar_6 = shlight_3;
  highp vec3 tmpvar_30;
  tmpvar_30 = (_Object2World * _glesVertex).xyz;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosX0 - tmpvar_30.x);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosY0 - tmpvar_30.y);
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosZ0 - tmpvar_30.z);
  highp vec4 tmpvar_34;
  tmpvar_34 = (((tmpvar_31 * tmpvar_31) + (tmpvar_32 * tmpvar_32)) + (tmpvar_33 * tmpvar_33));
  highp vec4 tmpvar_35;
  tmpvar_35 = (max (vec4(0.0, 0.0, 0.0, 0.0), ((((tmpvar_31 * tmpvar_8.x) + (tmpvar_32 * tmpvar_8.y)) + (tmpvar_33 * tmpvar_8.z)) * inversesqrt(tmpvar_34))) * (1.0/((1.0 + (tmpvar_34 * unity_4LightAtten0)))));
  highp vec3 tmpvar_36;
  tmpvar_36 = (tmpvar_6 + ((((unity_LightColor[0].xyz * tmpvar_35.x) + (unity_LightColor[1].xyz * tmpvar_35.y)) + (unity_LightColor[2].xyz * tmpvar_35.z)) + (unity_LightColor[3].xyz * tmpvar_35.w)));
  tmpvar_6 = tmpvar_36;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = (tmpvar_11 * (((_World2Object * tmpvar_13).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform highp vec4 _Time;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying lowp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_3;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture2D (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_4 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (tmpvar_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 0.0;
  tmpvar_29.xyz = clouds_9;
  lowp vec4 arg0_30;
  arg0_30 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_31;
  tmpvar_31 = mix (arg0_30, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_29).xyz;
  tmpvar_6 = tmpvar_31;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_33;
  tmpvar_33 = ((tmpvar_32.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_33;
  tmpvar_2 = tmpvar_5;
  lowp float shadow_34;
  lowp float tmpvar_35;
  tmpvar_35 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD4.xyz);
  highp float tmpvar_36;
  tmpvar_36 = (_LightShadowData.x + (tmpvar_35 * (1.0 - _LightShadowData.x)));
  shadow_34 = tmpvar_36;
  highp vec3 tmpvar_37;
  tmpvar_37 = normalize(xlv_TEXCOORD1);
  mediump vec3 viewDir_38;
  viewDir_38 = tmpvar_37;
  lowp vec4 c_39;
  highp float nh_40;
  lowp float tmpvar_41;
  tmpvar_41 = max (0.0, dot (tmpvar_5, xlv_TEXCOORD2));
  mediump float tmpvar_42;
  tmpvar_42 = max (0.0, dot (tmpvar_5, normalize((xlv_TEXCOORD2 + viewDir_38))));
  nh_40 = tmpvar_42;
  mediump float arg1_43;
  arg1_43 = (tmpvar_7 * 128.0);
  highp float tmpvar_44;
  tmpvar_44 = (pow (nh_40, arg1_43) * tmpvar_8);
  highp vec3 tmpvar_45;
  tmpvar_45 = ((((tmpvar_4 * _LightColor0.xyz) * tmpvar_41) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_44)) * (shadow_34 * 2.0));
  c_39.xyz = tmpvar_45;
  highp float tmpvar_46;
  tmpvar_46 = (tmpvar_12.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_44) * shadow_34));
  c_39.w = tmpvar_46;
  c_1.w = c_39.w;
  c_1.xyz = (c_39.xyz + (tmpvar_4 * xlv_TEXCOORD3));
  c_1.xyz = (c_1.xyz + tmpvar_6);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out lowp vec3 xlv_TEXCOORD2;
out lowp vec3 xlv_TEXCOORD3;
out highp vec4 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (tmpvar_2 * unity_Scale.w));
  highp vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_1.xyz;
  tmpvar_10 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_11;
  tmpvar_11[0].x = tmpvar_9.x;
  tmpvar_11[0].y = tmpvar_10.x;
  tmpvar_11[0].z = tmpvar_2.x;
  tmpvar_11[1].x = tmpvar_9.y;
  tmpvar_11[1].y = tmpvar_10.y;
  tmpvar_11[1].z = tmpvar_2.y;
  tmpvar_11[2].x = tmpvar_9.z;
  tmpvar_11[2].y = tmpvar_10.z;
  tmpvar_11[2].z = tmpvar_2.z;
  highp vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = tmpvar_8;
  mediump vec3 tmpvar_15;
  mediump vec4 normal_16;
  normal_16 = tmpvar_14;
  highp float vC_17;
  mediump vec3 x3_18;
  mediump vec3 x2_19;
  mediump vec3 x1_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAr, normal_16);
  x1_20.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAg, normal_16);
  x1_20.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHAb, normal_16);
  x1_20.z = tmpvar_23;
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_16.xyzz * normal_16.yzzx);
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBr, tmpvar_24);
  x2_19.x = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBg, tmpvar_24);
  x2_19.y = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = dot (unity_SHBb, tmpvar_24);
  x2_19.z = tmpvar_27;
  mediump float tmpvar_28;
  tmpvar_28 = ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y));
  vC_17 = tmpvar_28;
  highp vec3 tmpvar_29;
  tmpvar_29 = (unity_SHC.xyz * vC_17);
  x3_18 = tmpvar_29;
  tmpvar_15 = ((x1_20 + x2_19) + x3_18);
  shlight_3 = tmpvar_15;
  tmpvar_6 = shlight_3;
  highp vec3 tmpvar_30;
  tmpvar_30 = (_Object2World * _glesVertex).xyz;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosX0 - tmpvar_30.x);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosY0 - tmpvar_30.y);
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosZ0 - tmpvar_30.z);
  highp vec4 tmpvar_34;
  tmpvar_34 = (((tmpvar_31 * tmpvar_31) + (tmpvar_32 * tmpvar_32)) + (tmpvar_33 * tmpvar_33));
  highp vec4 tmpvar_35;
  tmpvar_35 = (max (vec4(0.0, 0.0, 0.0, 0.0), ((((tmpvar_31 * tmpvar_8.x) + (tmpvar_32 * tmpvar_8.y)) + (tmpvar_33 * tmpvar_8.z)) * inversesqrt(tmpvar_34))) * (1.0/((1.0 + (tmpvar_34 * unity_4LightAtten0)))));
  highp vec3 tmpvar_36;
  tmpvar_36 = (tmpvar_6 + ((((unity_LightColor[0].xyz * tmpvar_35.x) + (unity_LightColor[1].xyz * tmpvar_35.y)) + (unity_LightColor[2].xyz * tmpvar_35.z)) + (unity_LightColor[3].xyz * tmpvar_35.w)));
  tmpvar_6 = tmpvar_36;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = (tmpvar_11 * (((_World2Object * tmpvar_13).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = tmpvar_6;
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _Time;
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
in highp vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in lowp vec3 xlv_TEXCOORD2;
in lowp vec3 xlv_TEXCOORD3;
in highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  highp vec2 tmpvar_3;
  tmpvar_3 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_4 = vec3(0.0, 0.0, 0.0);
  tmpvar_5 = tmpvar_2;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_3;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_4 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (tmpvar_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_28;
  mediump vec4 tmpvar_29;
  tmpvar_29.w = 0.0;
  tmpvar_29.xyz = clouds_9;
  lowp vec4 arg0_30;
  arg0_30 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_31;
  tmpvar_31 = mix (arg0_30, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_29).xyz;
  tmpvar_6 = tmpvar_31;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_32;
  tmpvar_32 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_33;
  tmpvar_33 = ((tmpvar_32.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_33;
  tmpvar_2 = tmpvar_5;
  lowp float shadow_34;
  mediump float tmpvar_35;
  tmpvar_35 = texture (_ShadowMapTexture, xlv_TEXCOORD4.xyz);
  shadow_34 = tmpvar_35;
  highp float tmpvar_36;
  tmpvar_36 = (_LightShadowData.x + (shadow_34 * (1.0 - _LightShadowData.x)));
  shadow_34 = tmpvar_36;
  highp vec3 tmpvar_37;
  tmpvar_37 = normalize(xlv_TEXCOORD1);
  mediump vec3 viewDir_38;
  viewDir_38 = tmpvar_37;
  lowp vec4 c_39;
  highp float nh_40;
  lowp float tmpvar_41;
  tmpvar_41 = max (0.0, dot (tmpvar_5, xlv_TEXCOORD2));
  mediump float tmpvar_42;
  tmpvar_42 = max (0.0, dot (tmpvar_5, normalize((xlv_TEXCOORD2 + viewDir_38))));
  nh_40 = tmpvar_42;
  mediump float arg1_43;
  arg1_43 = (tmpvar_7 * 128.0);
  highp float tmpvar_44;
  tmpvar_44 = (pow (nh_40, arg1_43) * tmpvar_8);
  highp vec3 tmpvar_45;
  tmpvar_45 = ((((tmpvar_4 * _LightColor0.xyz) * tmpvar_41) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_44)) * (shadow_34 * 2.0));
  c_39.xyz = tmpvar_45;
  highp float tmpvar_46;
  tmpvar_46 = (tmpvar_12.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_44) * shadow_34));
  c_39.w = tmpvar_46;
  c_1.w = c_39.w;
  c_1.xyz = (c_39.xyz + (tmpvar_4 * xlv_TEXCOORD3));
  c_1.xyz = (c_1.xyz + tmpvar_6);
  _glesFragData[0] = c_1;
}



#endif"
}
}
Program "fp" {
SubProgram "opengl " {
// Stats: 68 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Vector 0 [_Time]
Vector 1 [_LightColor0]
Vector 2 [_SpecColor]
Float 3 [_LightAmount]
Float 4 [_AtmosFalloff]
Float 5 [_CloudSpeed]
Float 6 [_CloudHeight]
Float 7 [_Shininess]
Vector 8 [_AtmosNear]
Vector 9 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
"3.0-!!ARBfp1.0
PARAM c[12] = { program.local[0..9],
		{ 1, 0.5, 0.41999999, 2 },
		{ 0, 1, 128 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
DP3 R0.x, fragment.texcoord[1], fragment.texcoord[1];
TEX R2.yw, fragment.texcoord[0], texture[2], 2D;
MAD R2.xy, R2.wyzw, c[10].w, -c[10].x;
RSQ R0.w, R0.x;
MOV R1.xyz, fragment.texcoord[2];
MAD R0.xyz, fragment.texcoord[1], R0.w, R1;
MUL R1.xyz, R0.w, fragment.texcoord[1];
ADD R0.w, R1.z, c[10].z;
DP3 R1.w, R0, R0;
RSQ R1.z, R1.w;
RCP R0.w, R0.w;
MUL R1.xy, R1, R0.w;
MOV R0.w, c[10].y;
MUL R0.xyz, R1.z, R0;
MAD R0.w, -R0, c[6].x, c[6].x;
MUL R1.zw, R0.w, R1.xyxy;
MUL R1.xy, R2, R2;
ADD_SAT R1.y, R1.x, R1;
MOV R0.w, c[5].x;
MUL R0.w, R0, c[0].y;
ABS R1.x, R0.w;
FRC R1.x, R1;
CMP R0.w, R0, -R1.x, R1.x;
ADD R1.y, -R1, c[10].x;
RSQ R1.y, R1.y;
RCP R2.z, R1.y;
ADD R3.xyz, -R2, c[11].xxyw;
ADD R1.x, fragment.texcoord[0].z, R0.w;
MOV R1.y, fragment.texcoord[0].w;
ADD R1.xy, R1, R1.zwzw;
TEX R1.xyz, R1, texture[1], 2D;
MAD R3.xyz, R1, R3, R2;
DP3 R0.x, R3, R0;
MAX R0.y, R0.x, c[11].x;
MOV R0.x, c[11].z;
MUL R0.z, R0.x, c[7].x;
POW R0.y, R0.y, R0.z;
ADD R0.w, -R1.x, c[10].x;
TEX R0.x, fragment.texcoord[0], texture[4], 2D;
MUL R0.x, R0, R0.w;
MUL R0.z, R0.x, c[2].x;
DP3 R0.x, fragment.texcoord[1], fragment.texcoord[1];
RSQ R2.x, R0.x;
MUL_SAT R2.w, R2.x, fragment.texcoord[1].z;
MUL R1.w, R0.y, R0.z;
MOV R2.xyz, c[8];
ADD R2.w, -R2, c[10].x;
POW R2.w, R2.w, c[4].x;
ADD R2.xyz, -R2, c[9];
MAD R2.xyz, R2.w, R2, c[8];
TEX R0, fragment.texcoord[0], texture[0], 2D;
MAD R0.xyz, R2, R2.w, R0;
ADD R0.xyz, R0, R1;
DP3 R2.x, R3, fragment.texcoord[2];
MAX R1.y, R2.x, c[11].x;
MUL R3.xyz, R0, c[1];
MOV R2, c[2];
MUL R3.xyz, R3, R1.y;
MUL R2.xyz, R2, c[1];
MAD R3.xyz, R2, R1.w, R3;
TEX R2.xyz, fragment.texcoord[0], texture[3], 2D;
MUL R2.xyz, R2, c[3].x;
MAD R1.xyz, R1.x, -R2, R2;
MUL R3.xyz, R3, c[10].w;
MAD R0.xyz, R0, fragment.texcoord[3], R3;
MUL R2.x, R2.w, c[1].w;
ADD result.color.xyz, R0, R1;
MAD result.color.w, R1, R2.x, R0;
END
# 68 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 70 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Vector 0 [_Time]
Vector 1 [_LightColor0]
Vector 2 [_SpecColor]
Float 3 [_LightAmount]
Float 4 [_AtmosFalloff]
Float 5 [_CloudSpeed]
Float 6 [_CloudHeight]
Float 7 [_Shininess]
Vector 8 [_AtmosNear]
Vector 9 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s3
dcl_2d s4
def c10, 1.00000000, -0.50000000, 0.41999999, 0.00000000
def c11, 2.00000000, -1.00000000, 128.00000000, 0
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
dp3_pp r0.x, v1, v1
rsq_pp r0.x, r0.x
mul_pp r1.xyz, r0.x, v1
mov_pp r2.xyz, v2
mad_pp r0.xyz, v1, r0.x, r2
add r0.w, r1.z, c10.z
rcp r1.z, r0.w
mul r2.xy, r1, r1.z
dp3_pp r1.w, r0, r0
rsq_pp r0.w, r1.w
mul_pp r0.xyz, r0.w, r0
mov_pp r1.x, c10.y
mad_pp r1.x, r1, c6, c6
mov r2.z, c0.y
mov_pp r4.xyz, c9
mul r2.z, c5.x, r2
texld r1.yw, v0, s2
mul r2.xy, r1.x, r2
mad_pp r1.xy, r1.wyzw, c11.x, c11.y
mul_pp r1.zw, r1.xyxy, r1.xyxy
add_pp_sat r1.w, r1.z, r1
abs r1.z, r2
add_pp r1.w, -r1, c10.x
rsq_pp r2.w, r1.w
frc r1.z, r1
cmp r1.w, r2.z, r1.z, -r1.z
rcp_pp r1.z, r2.w
add_pp r3.xyz, -r1, c10.wwxw
add_pp r2.z, v0, r1.w
mov_pp r2.w, v0
add_pp r2.xy, r2.zwzw, r2
texld r2.xyz, r2, s1
mad_pp r3.xyz, r2, r3, r1
dp3_pp r0.x, r3, r0
mov_pp r0.w, c7.x
mul_pp r1.y, c11.z, r0.w
max_pp r1.x, r0, c10.w
pow r0, r1.x, r1.y
mov r0.z, r0.x
texld r1, v0, s0
dp3 r0.y, v1, v1
texld r0.x, v0, s4
add_pp r0.w, -r2.x, c10.x
mul r0.w, r0.x, r0
rsq r0.x, r0.y
mul r0.y, r0.w, c2.x
mul_sat r0.x, r0, v1.z
mul r2.w, r0.z, r0.y
add r3.w, -r0.x, c10.x
pow_pp r0, r3.w, c4.x
mov_pp r0.w, r0.x
add_pp r4.xyz, -c8, r4
mad_pp r0.xyz, r0.w, r4, c8
mad_pp r0.xyz, r0, r0.w, r1
dp3_pp r0.w, r3, v2
add_pp r0.xyz, r0, r2
mov_pp r1.xyz, c1
max_pp r0.w, r0, c10
mul_pp r3.xyz, r0, c1
mul_pp r3.xyz, r3, r0.w
mul_pp r1.xyz, c2, r1
mad r1.xyz, r1, r2.w, r3
mul r3.xyz, r1, c11.x
texld r1.xyz, v0, s3
mul r1.xyz, r1, c3.x
mov_pp r0.w, c1
mul_pp r0.w, c2, r0
mad_pp r0.xyz, r0, v3, r3
mad r1.xyz, r2.x, -r1, r1
add_pp oC0.xyz, r0, r1
mad oC0.w, r2, r0, r1
"
}
SubProgram "d3d11 " {
// Stats: 51 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 3
SetTexture 2 [_BumpMap] 2D 1
SetTexture 3 [_Emission] 2D 2
SetTexture 4 [_Mask] 2D 4
ConstBuffer "$Globals" 128
Vector 16 [_LightColor0]
Vector 32 [_SpecColor]
Float 48 [_LightAmount]
Float 52 [_AtmosFalloff]
Float 56 [_CloudSpeed]
Float 60 [_CloudHeight]
Float 64 [_Shininess]
Vector 68 [_AtmosNear] 3
Vector 80 [_AtmosFar] 3
ConstBuffer "UnityPerCamera" 128
Vector 0 [_Time]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
"ps_4_0
eefiecedjdnomhmdfjamgipedhcgnfhfmpifgjcoabaaaaaadiajaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefcdaaiaaaaeaaaaaaaamacaaaafjaaaaaeegiocaaaaaaaaaaaagaaaaaa
fjaaaaaeegiocaaaabaaaaaaabaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaad
aagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaa
fkaaaaadaagabaaaaeaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaae
aahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaafibiaaae
aahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaagcbaaaad
pcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaa
gcbaaaadhcbabaaaaeaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacafaaaaaa
efaaaaajpcaabaaaaaaaaaaaegbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaa
abaaaaaadcaaaaapdcaabaaaaaaaaaaahgapbaaaaaaaaaaaaceaaaaaaaaaaaea
aaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaa
apaaaaahicaabaaaaaaaaaaaegaabaaaaaaaaaaaegaabaaaaaaaaaaaddaaaaah
icaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaiadpaaaaaaaiicaabaaa
aaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaa
aaaaaaaadkaabaaaaaaaaaaaaaaaaaalhcaabaaaabaaaaaaegacbaiaebaaaaaa
aaaaaaaaaceaaaaaaaaaaaaaaaaaaaaaaaaaiadpaaaaaaaadiaaaaajicaabaaa
aaaaaaaackiacaaaaaaaaaaaadaaaaaabkiacaaaabaaaaaaaaaaaaaabnaaaaai
icaabaaaabaaaaaadkaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaabkaaaaag
icaabaaaaaaaaaaadkaabaiaibaaaaaaaaaaaaaadhaaaaakicaabaaaaaaaaaaa
dkaabaaaabaaaaaadkaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaaaaaaaaah
bcaabaaaacaaaaaadkaabaaaaaaaaaaackbabaaaabaaaaaadiaaaaaiicaabaaa
aaaaaaaadkiacaaaaaaaaaaaadaaaaaaabeaaaaaaaaaaadpbaaaaaahicaabaaa
abaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaaeeaaaaaficaabaaaabaaaaaa
dkaabaaaabaaaaaadcaaaaajecaabaaaacaaaaaackbabaaaacaaaaaadkaabaaa
abaaaaaaabeaaaaadnaknhdodiaaaaahhcaabaaaadaaaaaapgapbaaaabaaaaaa
cgbjbaaaacaaaaaadcaaaaajhcaabaaaaeaaaaaaegbcbaaaacaaaaaapgapbaaa
abaaaaaaegbcbaaaadaaaaaaaoaaaaahmcaabaaaacaaaaaafgajbaaaadaaaaaa
kgakbaaaacaaaaaadgcaaaafbcaabaaaadaaaaaaakaabaaaadaaaaaaaaaaaaai
icaabaaaabaaaaaaakaabaiaebaaaaaaadaaaaaaabeaaaaaaaaaiadpcpaaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaaiicaabaaaabaaaaaadkaabaaa
abaaaaaabkiacaaaaaaaaaaaadaaaaaabjaaaaaficaabaaaabaaaaaadkaabaaa
abaaaaaadgaaaaafccaabaaaacaaaaaadkbabaaaabaaaaaadcaaaaajdcaabaaa
acaaaaaapgapbaaaaaaaaaaaogakbaaaacaaaaaaegaabaaaacaaaaaaefaaaaaj
pcaabaaaacaaaaaaegaabaaaacaaaaaaeghobaaaabaaaaaaaagabaaaadaaaaaa
dcaaaaajhcaabaaaaaaaaaaaegacbaaaacaaaaaaegacbaaaabaaaaaaegacbaaa
aaaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaeaaaaaaegacbaaaaeaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaaaaaaaaaegacbaaaaeaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaaaaaaaaaa
egbcbaaaadaaaaaadeaaaaakdcaabaaaaaaaaaaamgaabaaaaaaaaaaaaceaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaacpaaaaafccaabaaaaaaaaaaabkaabaaa
aaaaaaaadiaaaaaiecaabaaaaaaaaaaaakiacaaaaaaaaaaaaeaaaaaaabeaaaaa
aaaaaaeddiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaaaaaaaaaa
bjaaaaafccaabaaaaaaaaaaabkaabaaaaaaaaaaaaaaaaaaiecaabaaaaaaaaaaa
akaabaiaebaaaaaaacaaaaaaabeaaaaaaaaaiadpefaaaaajpcaabaaaadaaaaaa
egbabaaaabaaaaaaeghobaaaaeaaaaaaaagabaaaaeaaaaaadiaaaaahecaabaaa
aaaaaaaackaabaaaaaaaaaaaakaabaaaadaaaaaadiaaaaaiecaabaaaaaaaaaaa
ckaabaaaaaaaaaaaakiacaaaaaaaaaaaacaaaaaadiaaaaahccaabaaaaaaaaaaa
ckaabaaaaaaaaaaabkaabaaaaaaaaaaadiaaaaajpcaabaaaadaaaaaaegiocaaa
aaaaaaaaabaaaaaaegiocaaaaaaaaaaaacaaaaaadiaaaaahhcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegacbaaaadaaaaaaaaaaaaakhcaabaaaadaaaaaajgihcaia
ebaaaaaaaaaaaaaaaeaaaaaaegiccaaaaaaaaaaaafaaaaaadcaaaaakhcaabaaa
adaaaaaapgapbaaaabaaaaaaegacbaaaadaaaaaajgihcaaaaaaaaaaaaeaaaaaa
efaaaaajpcaabaaaaeaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaa
aaaaaaaadcaaaaajhcaabaaaadaaaaaaegacbaaaadaaaaaapgapbaaaabaaaaaa
egacbaaaaeaaaaaadcaaaaajiccabaaaaaaaaaaadkaabaaaadaaaaaabkaabaaa
aaaaaaaadkaabaaaaeaaaaaaaaaaaaahocaabaaaaaaaaaaaagajbaaaacaaaaaa
agajbaaaadaaaaaadiaaaaaihcaabaaaadaaaaaajgahbaaaaaaaaaaaegiccaaa
aaaaaaaaabaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaaadaaaaaaagaabaaa
aaaaaaaaegacbaaaabaaaaaaaaaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaa
egacbaaaabaaaaaadcaaaaajhcaabaaaaaaaaaaajgahbaaaaaaaaaaaegbcbaaa
aeaaaaaaegacbaaaabaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaa
eghobaaaadaaaaaaaagabaaaacaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaa
abaaaaaaagiacaaaaaaaaaaaadaaaaaadcaaaaakhcaabaaaabaaaaaaegacbaaa
acaaaaaaegacbaiaebaaaaaaabaaaaaaegacbaaaabaaaaaaaaaaaaahhccabaaa
aaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 37 math, 4 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Vector 0 [_Time]
Float 1 [_LightAmount]
Float 2 [_AtmosFalloff]
Float 3 [_CloudSpeed]
Float 4 [_CloudHeight]
Vector 5 [_AtmosNear]
Vector 6 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [unity_Lightmap] 2D 4
"3.0-!!ARBfp1.0
PARAM c[8] = { program.local[0..6],
		{ 0.5, 1, 0.41999999, 8 } };
TEMP R0;
TEMP R1;
TEMP R2;
MOV R0.y, c[3].x;
MUL R0.w, R0.y, c[0].y;
ABS R0.z, R0.w;
FRC R0.z, R0;
DP3 R0.x, fragment.texcoord[1], fragment.texcoord[1];
RSQ R0.x, R0.x;
MUL R1.xyz, R0.x, fragment.texcoord[1];
ADD R0.x, R1.z, c[7].z;
RCP R0.x, R0.x;
MUL R0.xy, R1, R0.x;
MOV R2.xyz, c[5];
CMP R0.w, R0, -R0.z, R0.z;
MOV R1.x, c[7];
MAD R0.z, -R1.x, c[4].x, c[4].x;
MUL R0.xy, R0.z, R0;
DP3 R0.z, fragment.texcoord[1], fragment.texcoord[1];
RSQ R1.z, R0.z;
MUL_SAT R1.z, R1, fragment.texcoord[1];
ADD R1.z, -R1, c[7].y;
POW R1.z, R1.z, c[2].x;
ADD R2.xyz, -R2, c[6];
MAD R2.xyz, R1.z, R2, c[5];
ADD R1.x, fragment.texcoord[0].z, R0.w;
MOV R1.y, fragment.texcoord[0].w;
ADD R1.xy, R1, R0;
TEX R0, fragment.texcoord[0], texture[0], 2D;
MAD R0.xyz, R2, R1.z, R0;
TEX R2.xyz, R1, texture[1], 2D;
ADD R0.xyz, R0, R2;
TEX R1.xyz, fragment.texcoord[0], texture[3], 2D;
MUL R2.yzw, R1.xxyz, c[1].x;
TEX R1, fragment.texcoord[2], texture[4], 2D;
MUL R1.xyz, R1.w, R1;
MAD R2.xyz, R2.x, -R2.yzww, R2.yzww;
MUL R0.xyz, R1, R0;
MAD result.color.xyz, R0, c[7].w, R2;
MOV result.color.w, R0;
END
# 37 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 36 math, 4 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Vector 0 [_Time]
Float 1 [_LightAmount]
Float 2 [_AtmosFalloff]
Float 3 [_CloudSpeed]
Float 4 [_CloudHeight]
Vector 5 [_AtmosNear]
Vector 6 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [unity_Lightmap] 2D 4
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s3
dcl_2d s4
def c7, 1.00000000, 0.41999999, -0.50000000, 8.00000000
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xy
dp3_pp r0.x, v1, v1
rsq_pp r0.x, r0.x
mul_pp r1.xyz, r0.x, v1
add r0.x, r1.z, c7.y
rcp r0.y, r0.x
mov r0.x, c0.y
mul r0.w, c3.x, r0.x
mov_pp r0.x, c7.z
mov_pp r3.xyz, c6
mul r1.xy, r1, r0.y
mad_pp r0.x, r0, c4, c4
mul r0.xy, r0.x, r1
abs r0.z, r0.w
frc r1.x, r0.z
cmp r1.x, r0.w, r1, -r1
dp3 r0.z, v1, v1
rsq r0.w, r0.z
add_pp r0.z, v0, r1.x
mul_sat r1.x, r0.w, v1.z
add r2.z, -r1.x, c7.x
mov_pp r0.w, v0
add_pp r2.xy, r0.zwzw, r0
pow_pp r0, r2.z, c2.x
texld r1, v0, s0
mov_pp r0.w, r0.x
add_pp r3.xyz, -c5, r3
mad_pp r0.xyz, r0.w, r3, c5
mad_pp r1.xyz, r0, r0.w, r1
texld r3.xyz, r2, s1
texld r0.xyz, v0, s3
mul r2.xyz, r0, c1.x
texld r0, v2, s4
add_pp r1.xyz, r1, r3
mul_pp r0.xyz, r0.w, r0
mad r2.xyz, r3.x, -r2, r2
mul_pp r0.xyz, r0, r1
mad_pp oC0.xyz, r0, c7.w, r2
mov_pp oC0.w, r1
"
}
SubProgram "d3d11 " {
// Stats: 24 math, 4 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 2
SetTexture 2 [_Emission] 2D 1
SetTexture 3 [unity_Lightmap] 2D 3
ConstBuffer "$Globals" 144
Float 48 [_LightAmount]
Float 52 [_AtmosFalloff]
Float 56 [_CloudSpeed]
Float 60 [_CloudHeight]
Vector 68 [_AtmosNear] 3
Vector 80 [_AtmosFar] 3
ConstBuffer "UnityPerCamera" 128
Vector 0 [_Time]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
"ps_4_0
eefieceddfiagjjoldkgpifkpbkalklobmlbelijabaaaaaajmafaaaaadaaaaaa
cmaaaaaaleaaaaaaoiaaaaaaejfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklklfdeieefckmaeaaaaeaaaaaaaclabaaaafjaaaaaeegiocaaa
aaaaaaaaagaaaaaafjaaaaaeegiocaaaabaaaaaaabaaaaaafkaaaaadaagabaaa
aaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaad
aagabaaaadaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaa
abaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaafibiaaaeaahabaaa
adaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaa
gcbaaaaddcbabaaaadaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacadaaaaaa
diaaaaajbcaabaaaaaaaaaaackiacaaaaaaaaaaaadaaaaaabkiacaaaabaaaaaa
aaaaaaaabnaaaaaiccaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaiaebaaaaaa
aaaaaaaabkaaaaagbcaabaaaaaaaaaaaakaabaiaibaaaaaaaaaaaaaadhaaaaak
bcaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaiaebaaaaaa
aaaaaaaaaaaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaackbabaaaabaaaaaa
baaaaaahecaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaaeeaaaaaf
ecaabaaaaaaaaaaackaabaaaaaaaaaaadcaaaaajicaabaaaaaaaaaaackbabaaa
acaaaaaackaabaaaaaaaaaaaabeaaaaadnaknhdodiaaaaahhcaabaaaabaaaaaa
kgakbaaaaaaaaaaacgbjbaaaacaaaaaaaoaaaaahmcaabaaaaaaaaaaafgajbaaa
abaaaaaapgapbaaaaaaaaaaadgcaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaa
aaaaaaaibcaabaaaabaaaaaaakaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadp
cpaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaadiaaaaaibcaabaaaabaaaaaa
akaabaaaabaaaaaabkiacaaaaaaaaaaaadaaaaaabjaaaaafbcaabaaaabaaaaaa
akaabaaaabaaaaaadiaaaaaiccaabaaaabaaaaaadkiacaaaaaaaaaaaadaaaaaa
abeaaaaaaaaaaadpdgaaaaafccaabaaaaaaaaaaadkbabaaaabaaaaaadcaaaaaj
dcaabaaaaaaaaaaafgafbaaaabaaaaaaogakbaaaaaaaaaaaegaabaaaaaaaaaaa
efaaaaajpcaabaaaaaaaaaaaegaabaaaaaaaaaaaeghobaaaabaaaaaaaagabaaa
acaaaaaaaaaaaaakocaabaaaabaaaaaafgiocaiaebaaaaaaaaaaaaaaaeaaaaaa
agijcaaaaaaaaaaaafaaaaaadcaaaaakocaabaaaabaaaaaaagaabaaaabaaaaaa
fgaobaaaabaaaaaafgiocaaaaaaaaaaaaeaaaaaaefaaaaajpcaabaaaacaaaaaa
egbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaadcaaaaajhcaabaaa
abaaaaaajgahbaaaabaaaaaaagaabaaaabaaaaaaegacbaaaacaaaaaadgaaaaaf
iccabaaaaaaaaaaadkaabaaaacaaaaaaaaaaaaahhcaabaaaabaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaa
eghobaaaacaaaaaaaagabaaaabaaaaaadiaaaaaihcaabaaaacaaaaaaegacbaaa
acaaaaaaagiacaaaaaaaaaaaadaaaaaadcaaaaakhcaabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaiaebaaaaaaacaaaaaaegacbaaaacaaaaaaefaaaaajpcaabaaa
acaaaaaaegbabaaaadaaaaaaeghobaaaadaaaaaaaagabaaaadaaaaaadiaaaaah
icaabaaaaaaaaaaadkaabaaaacaaaaaaabeaaaaaaaaaaaebdiaaaaahhcaabaaa
acaaaaaaegacbaaaacaaaaaapgapbaaaaaaaaaaadcaaaaajhccabaaaaaaaaaaa
egacbaaaabaaaaaaegacbaaaacaaaaaaegacbaaaaaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 77 math, 7 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Vector 0 [_Time]
Vector 1 [_SpecColor]
Float 2 [_LightAmount]
Float 3 [_AtmosFalloff]
Float 4 [_CloudSpeed]
Float 5 [_CloudHeight]
Float 6 [_Shininess]
Vector 7 [_AtmosNear]
Vector 8 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [unity_Lightmap] 2D 5
SetTexture 6 [unity_LightmapInd] 2D 6
"3.0-!!ARBfp1.0
PARAM c[13] = { program.local[0..8],
		{ 1, 0.5, 0.41999999, 2 },
		{ 0, 1, 0.81649655, 0.57735026 },
		{ -0.40824828, -0.70710677, 0.57735026, 8 },
		{ -0.40824831, 0.70710677, 0.57735026, 128 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEX R1, fragment.texcoord[2], texture[6], 2D;
MUL R2.xyz, R1.w, R1;
DP3 R0.x, fragment.texcoord[1], fragment.texcoord[1];
RSQ R0.w, R0.x;
MUL R0.xyz, R0.w, fragment.texcoord[1];
ADD R0.z, R0, c[9];
RCP R0.z, R0.z;
MUL R3.xy, R0, R0.z;
MOV R0.x, c[9].y;
MAD R0.x, -R0, c[5], c[5];
MOV R0.z, c[4].x;
MUL R4.xyz, R2, c[11].w;
TEX R1.yw, fragment.texcoord[0], texture[2], 2D;
MUL R3.xy, R0.x, R3;
MAD R0.xy, R1.wyzw, c[9].w, -c[9].x;
MUL R1.xy, R0, R0;
ADD_SAT R1.y, R1.x, R1;
MUL R0.z, R0, c[0].y;
ABS R1.x, R0.z;
ADD R1.y, -R1, c[9].x;
FRC R1.x, R1;
CMP R1.x, R0.z, -R1, R1;
RSQ R1.y, R1.y;
RCP R0.z, R1.y;
TEX R5.x, fragment.texcoord[0], texture[4], 2D;
ADD R1.x, fragment.texcoord[0].z, R1;
MOV R1.y, fragment.texcoord[0].w;
ADD R1.xy, R1, R3;
TEX R1.xyz, R1, texture[1], 2D;
ADD R3.xyz, -R0, c[10].xxyw;
MAD R0.xyz, R1, R3, R0;
MUL R3.xyz, R4.y, c[12];
MAD R3.xyz, R4.x, c[10].zxww, R3;
MAD R3.xyz, R4.z, c[11], R3;
DP3 R1.w, R3, R3;
RSQ R1.w, R1.w;
MUL R3.xyz, R1.w, R3;
MAD R3.xyz, fragment.texcoord[1], R0.w, R3;
DP3 R1.w, R3, R3;
ADD R0.w, -R1.x, c[9].x;
MUL R0.w, R5.x, R0;
RSQ R1.w, R1.w;
DP3_SAT R2.z, R0, c[11];
DP3_SAT R2.y, R0, c[12];
DP3_SAT R2.x, R0, c[10].zxww;
DP3 R3.w, R2, R4;
MUL R3.xyz, R1.w, R3;
DP3 R0.y, R0, R3;
MOV R0.x, c[12].w;
MUL R0.z, R0.x, c[6].x;
TEX R2, fragment.texcoord[2], texture[5], 2D;
MUL R2.xyz, R2.w, R2;
MUL R2.xyz, R2, R3.w;
MUL R4.xyz, R2, c[11].w;
MAX R0.y, R0, c[10].x;
DP3 R0.x, fragment.texcoord[1], fragment.texcoord[1];
MUL R0.w, R0, c[1].x;
MUL R2.xyz, R4, c[1];
MUL R2.xyz, R2, R0.w;
POW R0.y, R0.y, R0.z;
MUL R5.xyz, R2, R0.y;
RSQ R0.x, R0.x;
MUL_SAT R0.w, R0.x, fragment.texcoord[1].z;
ADD R0.w, -R0, c[9].x;
MOV R0.xyz, c[7];
TEX R2.xyz, fragment.texcoord[0], texture[3], 2D;
POW R1.w, R0.w, c[3].x;
ADD R0.xyz, -R0, c[8];
MAD R3.xyz, R1.w, R0, c[7];
TEX R0, fragment.texcoord[0], texture[0], 2D;
MAD R0.xyz, R3, R1.w, R0;
ADD R0.xyz, R0, R1;
MUL R2.xyz, R2, c[2].x;
MAD R1.xyz, R1.x, -R2, R2;
MAD R0.xyz, R0, R4, R5;
ADD result.color.xyz, R0, R1;
MOV result.color.w, R0;
END
# 77 instructions, 6 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 75 math, 7 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Vector 0 [_Time]
Vector 1 [_SpecColor]
Float 2 [_LightAmount]
Float 3 [_AtmosFalloff]
Float 4 [_CloudSpeed]
Float 5 [_CloudHeight]
Float 6 [_Shininess]
Vector 7 [_AtmosNear]
Vector 8 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [unity_Lightmap] 2D 5
SetTexture 6 [unity_LightmapInd] 2D 6
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s3
dcl_2d s4
dcl_2d s5
dcl_2d s6
def c9, 1.00000000, -0.50000000, 0.41999999, 0.00000000
def c10, 2.00000000, -1.00000000, 8.00000000, 128.00000000
def c11, -0.40824828, -0.70710677, 0.57735026, 0
def c12, -0.40824831, 0.70710677, 0.57735026, 0
def c13, 0.81649655, 0.00000000, 0.57735026, 0
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xy
texld r1, v2, s6
mul_pp r2.xyz, r1.w, r1
dp3_pp r0.x, v1, v1
rsq_pp r0.w, r0.x
mul_pp r0.xyz, r0.w, v1
add r0.z, r0, c9
rcp r0.z, r0.z
mul r3.xy, r0, r0.z
mov_pp r0.x, c9.y
mad_pp r0.x, r0, c5, c5
mov r0.z, c0.y
mul_pp r4.xyz, r2, c10.z
texld r1.yw, v0, s2
mul r3.xy, r0.x, r3
mad_pp r0.xy, r1.wyzw, c10.x, c10.y
mul_pp r1.xy, r0, r0
add_pp_sat r1.y, r1.x, r1
mul r0.z, c4.x, r0
abs r1.x, r0.z
add_pp r1.y, -r1, c9.x
frc r1.x, r1
cmp r1.x, r0.z, r1, -r1
rsq_pp r1.y, r1.y
rcp_pp r0.z, r1.y
texld r5.x, v0, s4
add_pp r1.x, v0.z, r1
mov_pp r1.y, v0.w
add_pp r1.xy, r1, r3
texld r1.xyz, r1, s1
add_pp r3.xyz, -r0, c9.wwxw
mad_pp r0.xyz, r1, r3, r0
mul r3.xyz, r4.y, c12
mad r3.xyz, r4.x, c13, r3
mad r3.xyz, r4.z, c11, r3
dp3 r1.w, r3, r3
rsq r1.w, r1.w
mul r3.xyz, r1.w, r3
mad_pp r3.xyz, v1, r0.w, r3
dp3_pp r1.w, r3, r3
add_pp r0.w, -r1.x, c9.x
mul r0.w, r5.x, r0
rsq_pp r1.w, r1.w
mul_pp r3.xyz, r1.w, r3
dp3_pp_sat r2.z, r0, c11
dp3_pp_sat r2.y, r0, c12
dp3_pp_sat r2.x, r0, c13
dp3_pp r0.x, r0, r3
dp3_pp r3.w, r2, r4
texld r2, v2, s5
mul_pp r2.xyz, r2.w, r2
mul_pp r2.xyz, r2, r3.w
mul_pp r4.xyz, r2, c10.z
mov_pp r0.y, c6.x
mul_pp r3.x, c10.w, r0.y
mul r0.w, r0, c1.x
mul_pp r2.xyz, r4, c1
mul_pp r2.xyz, r2, r0.w
max_pp r2.w, r0.x, c9
pow r0, r2.w, r3.x
dp3 r1.w, v1, v1
rsq r0.y, r1.w
mul r5.xyz, r2, r0.x
mul_sat r0.y, r0, v1.z
add r1.w, -r0.y, c9.x
pow_pp r0, r1.w, c3.x
mov_pp r1.w, r0.x
texld r0, v0, s0
mov_pp r2.xyz, c8
add_pp r2.xyz, -c7, r2
mad_pp r3.xyz, r1.w, r2, c7
texld r2.xyz, v0, s3
mad_pp r0.xyz, r3, r1.w, r0
add_pp r0.xyz, r0, r1
mul r2.xyz, r2, c2.x
mad r1.xyz, r1.x, -r2, r2
mad_pp r0.xyz, r0, r4, r5
add_pp oC0.xyz, r0, r1
mov_pp oC0.w, r0
"
}
SubProgram "d3d11 " {
// Stats: 59 math, 7 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 3
SetTexture 2 [_BumpMap] 2D 1
SetTexture 3 [_Emission] 2D 2
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [unity_Lightmap] 2D 5
SetTexture 6 [unity_LightmapInd] 2D 6
ConstBuffer "$Globals" 144
Vector 32 [_SpecColor]
Float 48 [_LightAmount]
Float 52 [_AtmosFalloff]
Float 56 [_CloudSpeed]
Float 60 [_CloudHeight]
Float 64 [_Shininess]
Vector 68 [_AtmosNear] 3
Vector 80 [_AtmosFar] 3
ConstBuffer "UnityPerCamera" 128
Vector 0 [_Time]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
"ps_4_0
eefiecedofgjhinmlmjpcknmegijbnmdblondoddabaaaaaalaakaaaaadaaaaaa
cmaaaaaaleaaaaaaoiaaaaaaejfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklklfdeieefcmaajaaaaeaaaaaaahaacaaaafjaaaaaeegiocaaa
aaaaaaaaagaaaaaafjaaaaaeegiocaaaabaaaaaaabaaaaaafkaaaaadaagabaaa
aaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaad
aagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafkaaaaadaagabaaaafaaaaaa
fkaaaaadaagabaaaagaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaae
aahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaafibiaaae
aahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaafibiaaae
aahabaaaafaaaaaaffffaaaafibiaaaeaahabaaaagaaaaaaffffaaaagcbaaaad
pcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaaddcbabaaaadaaaaaa
gfaaaaadpccabaaaaaaaaaaagiaaaaacafaaaaaaefaaaaajpcaabaaaaaaaaaaa
egbabaaaadaaaaaaeghobaaaagaaaaaaaagabaaaagaaaaaadiaaaaahicaabaaa
aaaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaaaebdiaaaaahhcaabaaaaaaaaaaa
egacbaaaaaaaaaaapgapbaaaaaaaaaaadiaaaaakhcaabaaaabaaaaaafgafbaaa
aaaaaaaaaceaaaaaomafnblopdaedfdpdkmnbddpaaaaaaaadcaaaaamhcaabaaa
abaaaaaaagaabaaaaaaaaaaaaceaaaaaolaffbdpaaaaaaaadkmnbddpaaaaaaaa
egacbaaaabaaaaaadcaaaaamhcaabaaaabaaaaaakgakbaaaaaaaaaaaaceaaaaa
olafnblopdaedflpdkmnbddpaaaaaaaaegacbaaaabaaaaaabaaaaaahicaabaaa
aaaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaaaaaaaaa
dkaabaaaaaaaaaaabaaaaaahicaabaaaabaaaaaaegbcbaaaacaaaaaaegbcbaaa
acaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahpcaabaaa
acaaaaaapgapbaaaabaaaaaacgbjbaaaacaaaaaadcaaaaajicaabaaaabaaaaaa
ckbabaaaacaaaaaadkaabaaaabaaaaaaabeaaaaadnaknhdoaoaaaaahdcaabaaa
adaaaaaajgafbaaaacaaaaaapgapbaaaabaaaaaadcaaaaajhcaabaaaabaaaaaa
egacbaaaabaaaaaapgapbaaaaaaaaaaajgahbaaaacaaaaaadgcaaaafbcaabaaa
acaaaaaaakaabaaaacaaaaaaaaaaaaaiicaabaaaaaaaaaaaakaabaiaebaaaaaa
acaaaaaaabeaaaaaaaaaiadpcpaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaa
diaaaaaiicaabaaaaaaaaaaadkaabaaaaaaaaaaabkiacaaaaaaaaaaaadaaaaaa
bjaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaabaaaaaahicaabaaaabaaaaaa
egacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaa
abaaaaaadiaaaaahhcaabaaaabaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaa
diaaaaajicaabaaaabaaaaaackiacaaaaaaaaaaaadaaaaaabkiacaaaabaaaaaa
aaaaaaaabnaaaaaibcaabaaaacaaaaaadkaabaaaabaaaaaadkaabaiaebaaaaaa
abaaaaaabkaaaaagicaabaaaabaaaaaadkaabaiaibaaaaaaabaaaaaadhaaaaak
icaabaaaabaaaaaaakaabaaaacaaaaaadkaabaaaabaaaaaadkaabaiaebaaaaaa
abaaaaaaaaaaaaahbcaabaaaacaaaaaadkaabaaaabaaaaaackbabaaaabaaaaaa
diaaaaaiicaabaaaabaaaaaadkiacaaaaaaaaaaaadaaaaaaabeaaaaaaaaaaadp
dgaaaaafccaabaaaacaaaaaadkbabaaaabaaaaaadcaaaaajdcaabaaaacaaaaaa
pgapbaaaabaaaaaaegaabaaaadaaaaaaegaabaaaacaaaaaaefaaaaajpcaabaaa
acaaaaaaegaabaaaacaaaaaaeghobaaaabaaaaaaaagabaaaadaaaaaaefaaaaaj
pcaabaaaadaaaaaaegbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaaabaaaaaa
dcaaaaapdcaabaaaadaaaaaahgapbaaaadaaaaaaaceaaaaaaaaaaaeaaaaaaaea
aaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaaapaaaaah
icaabaaaabaaaaaaegaabaaaadaaaaaaegaabaaaadaaaaaaddaaaaahicaabaaa
abaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaiadpaaaaaaaiicaabaaaabaaaaaa
dkaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaaadaaaaaa
dkaabaaaabaaaaaaaaaaaaalhcaabaaaaeaaaaaaegacbaiaebaaaaaaadaaaaaa
aceaaaaaaaaaaaaaaaaaaaaaaaaaiadpaaaaaaaadcaaaaajhcaabaaaadaaaaaa
egacbaaaacaaaaaaegacbaaaaeaaaaaaegacbaaaadaaaaaabaaaaaahbcaabaaa
abaaaaaaegacbaaaadaaaaaaegacbaaaabaaaaaadeaaaaahbcaabaaaabaaaaaa
akaabaaaabaaaaaaabeaaaaaaaaaaaaacpaaaaafbcaabaaaabaaaaaaakaabaaa
abaaaaaadiaaaaaiccaabaaaabaaaaaaakiacaaaaaaaaaaaaeaaaaaaabeaaaaa
aaaaaaeddiaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaabkaabaaaabaaaaaa
bjaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaaapcaaaakbcaabaaaaeaaaaaa
aceaaaaaolaffbdpdkmnbddpaaaaaaaaaaaaaaaaigaabaaaadaaaaaabacaaaak
ccaabaaaaeaaaaaaaceaaaaaomafnblopdaedfdpdkmnbddpaaaaaaaaegacbaaa
adaaaaaabacaaaakecaabaaaaeaaaaaaaceaaaaaolafnblopdaedflpdkmnbddp
aaaaaaaaegacbaaaadaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaaaeaaaaaa
egacbaaaaaaaaaaaefaaaaajpcaabaaaadaaaaaaegbabaaaadaaaaaaeghobaaa
afaaaaaaaagabaaaafaaaaaadiaaaaahccaabaaaaaaaaaaadkaabaaaadaaaaaa
abeaaaaaaaaaaaebdiaaaaahocaabaaaabaaaaaaagajbaaaadaaaaaafgafbaaa
aaaaaaaadiaaaaahhcaabaaaaaaaaaaaagaabaaaaaaaaaaajgahbaaaabaaaaaa
aaaaaaakocaabaaaabaaaaaafgiocaiaebaaaaaaaaaaaaaaaeaaaaaaagijcaaa
aaaaaaaaafaaaaaadcaaaaakocaabaaaabaaaaaapgapbaaaaaaaaaaafgaobaaa
abaaaaaafgiocaaaaaaaaaaaaeaaaaaaefaaaaajpcaabaaaadaaaaaaegbabaaa
abaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaadcaaaaajocaabaaaabaaaaaa
fgaobaaaabaaaaaapgapbaaaaaaaaaaaagajbaaaadaaaaaadgaaaaaficcabaaa
aaaaaaaadkaabaaaadaaaaaaaaaaaaahocaabaaaabaaaaaaagajbaaaacaaaaaa
fgaobaaaabaaaaaadiaaaaahocaabaaaabaaaaaaagajbaaaaaaaaaaafgaobaaa
abaaaaaaaaaaaaaiicaabaaaaaaaaaaaakaabaiaebaaaaaaacaaaaaaabeaaaaa
aaaaiadpefaaaaajpcaabaaaadaaaaaaegbabaaaabaaaaaaeghobaaaaeaaaaaa
aagabaaaaeaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaakaabaaa
adaaaaaadiaaaaaipcaabaaaaaaaaaaaegaobaaaaaaaaaaaegiccaaaaaaaaaaa
acaaaaaadiaaaaahhcaabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaa
dcaaaaajhcaabaaaaaaaaaaaegacbaaaaaaaaaaaagaabaaaabaaaaaajgahbaaa
abaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaaeghobaaaadaaaaaa
aagabaaaacaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaagiacaaa
aaaaaaaaadaaaaaadcaaaaakhcaabaaaabaaaaaaegacbaaaacaaaaaaegacbaia
ebaaaaaaabaaaaaaegacbaaaabaaaaaaaaaaaaahhccabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 71 math, 6 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Vector 0 [_Time]
Vector 1 [_LightColor0]
Vector 2 [_SpecColor]
Float 3 [_LightAmount]
Float 4 [_AtmosFalloff]
Float 5 [_CloudSpeed]
Float 6 [_CloudHeight]
Float 7 [_Shininess]
Vector 8 [_AtmosNear]
Vector 9 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_ShadowMapTexture] 2D 5
"3.0-!!ARBfp1.0
PARAM c[12] = { program.local[0..9],
		{ 1, 0.5, 0.41999999, 2 },
		{ 0, 1, 128 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
DP3 R0.x, fragment.texcoord[1], fragment.texcoord[1];
TEX R2.yw, fragment.texcoord[0], texture[2], 2D;
MAD R2.xy, R2.wyzw, c[10].w, -c[10].x;
RSQ R0.w, R0.x;
MOV R1.xyz, fragment.texcoord[2];
MAD R0.xyz, fragment.texcoord[1], R0.w, R1;
MUL R1.xyz, R0.w, fragment.texcoord[1];
ADD R0.w, R1.z, c[10].z;
DP3 R1.w, R0, R0;
RSQ R1.z, R1.w;
RCP R0.w, R0.w;
MUL R1.xy, R1, R0.w;
MOV R0.w, c[10].y;
MUL R0.xyz, R1.z, R0;
MAD R0.w, -R0, c[6].x, c[6].x;
MUL R1.zw, R0.w, R1.xyxy;
MUL R1.xy, R2, R2;
ADD_SAT R1.y, R1.x, R1;
MOV R0.w, c[5].x;
MUL R0.w, R0, c[0].y;
ABS R1.x, R0.w;
FRC R1.x, R1;
CMP R0.w, R0, -R1.x, R1.x;
ADD R1.y, -R1, c[10].x;
RSQ R1.y, R1.y;
RCP R2.z, R1.y;
ADD R3.xyz, -R2, c[11].xxyw;
ADD R1.x, fragment.texcoord[0].z, R0.w;
MOV R1.y, fragment.texcoord[0].w;
ADD R1.xy, R1, R1.zwzw;
TEX R1.xyz, R1, texture[1], 2D;
MAD R2.xyz, R1, R3, R2;
DP3 R0.x, R2, R0;
MAX R0.y, R0.x, c[11].x;
MOV R0.x, c[11].z;
MUL R0.z, R0.x, c[7].x;
MOV R3.xyz, c[8];
POW R0.y, R0.y, R0.z;
ADD R0.w, -R1.x, c[10].x;
TEX R0.x, fragment.texcoord[0], texture[4], 2D;
MUL R0.x, R0, R0.w;
MUL R0.z, R0.x, c[2].x;
DP3 R0.x, fragment.texcoord[1], fragment.texcoord[1];
RSQ R1.w, R0.x;
MUL R3.w, R0.y, R0.z;
MUL_SAT R1.w, R1, fragment.texcoord[1].z;
ADD R1.w, -R1, c[10].x;
POW R1.w, R1.w, c[4].x;
ADD R3.xyz, -R3, c[9];
MAD R3.xyz, R1.w, R3, c[8];
TEX R0, fragment.texcoord[0], texture[0], 2D;
MAD R0.xyz, R3, R1.w, R0;
ADD R3.xyz, R0, R1;
DP3 R1.w, R2, fragment.texcoord[2];
MOV R2, c[2];
MUL R0.xyz, R3, c[1];
MAX R1.y, R1.w, c[11].x;
MUL R1.yzw, R0.xxyz, R1.y;
TXP R0.x, fragment.texcoord[4], texture[5], 2D;
MUL R2.xyz, R2, c[1];
MAD R2.xyz, R2, R3.w, R1.yzww;
MUL R0.y, R0.x, c[10].w;
MUL R1.yzw, R2.xxyz, R0.y;
TEX R2.xyz, fragment.texcoord[0], texture[3], 2D;
MUL R0.y, R2.w, c[1].w;
MUL R0.y, R3.w, R0;
MAD R3.xyz, R3, fragment.texcoord[3], R1.yzww;
MUL R2.xyz, R2, c[3].x;
MAD R1.xyz, R1.x, -R2, R2;
ADD result.color.xyz, R3, R1;
MAD result.color.w, R0.x, R0.y, R0;
END
# 71 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 72 math, 6 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Vector 0 [_Time]
Vector 1 [_LightColor0]
Vector 2 [_SpecColor]
Float 3 [_LightAmount]
Float 4 [_AtmosFalloff]
Float 5 [_CloudSpeed]
Float 6 [_CloudHeight]
Float 7 [_Shininess]
Vector 8 [_AtmosNear]
Vector 9 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_ShadowMapTexture] 2D 5
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s3
dcl_2d s4
dcl_2d s5
def c10, 1.00000000, -0.50000000, 0.41999999, 0.00000000
def c11, 2.00000000, -1.00000000, 128.00000000, 0
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
dcl_texcoord4 v4
dp3_pp r0.x, v1, v1
rsq_pp r0.x, r0.x
mul_pp r1.xyz, r0.x, v1
mov_pp r2.xyz, v2
mad_pp r0.xyz, v1, r0.x, r2
add r0.w, r1.z, c10.z
rcp r1.z, r0.w
mul r2.xy, r1, r1.z
dp3_pp r1.w, r0, r0
rsq_pp r0.w, r1.w
mul_pp r0.xyz, r0.w, r0
mov_pp r1.x, c10.y
mad_pp r1.x, r1, c6, c6
mov r2.z, c0.y
mov_pp r4.xyz, c9
mul r2.z, c5.x, r2
texld r1.yw, v0, s2
mul r2.xy, r1.x, r2
mad_pp r1.xy, r1.wyzw, c11.x, c11.y
mul_pp r1.zw, r1.xyxy, r1.xyxy
add_pp_sat r1.w, r1.z, r1
abs r1.z, r2
add_pp r1.w, -r1, c10.x
rsq_pp r2.w, r1.w
frc r1.z, r1
cmp r1.w, r2.z, r1.z, -r1.z
rcp_pp r1.z, r2.w
add_pp r3.xyz, -r1, c10.wwxw
add_pp r2.z, v0, r1.w
mov_pp r2.w, v0
add_pp r2.xy, r2.zwzw, r2
texld r2.xyz, r2, s1
mad_pp r3.xyz, r2, r3, r1
dp3_pp r0.x, r3, r0
mov_pp r0.w, c7.x
mul_pp r1.y, c11.z, r0.w
max_pp r1.x, r0, c10.w
pow r0, r1.x, r1.y
mov r0.z, r0.x
dp3 r0.y, v1, v1
texld r0.x, v0, s4
add_pp r0.w, -r2.x, c10.x
mul r0.w, r0.x, r0
rsq r0.x, r0.y
mul r0.y, r0.w, c2.x
mul_sat r0.x, r0, v1.z
add r3.w, -r0.x, c10.x
mul r2.w, r0.z, r0.y
pow_pp r1, r3.w, c4.x
mov_pp r1.w, r1.x
add_pp r4.xyz, -c8, r4
mad_pp r1.xyz, r1.w, r4, c8
texld r0, v0, s0
mad_pp r0.xyz, r1, r1.w, r0
dp3_pp r1.w, r3, v2
add_pp r1.xyz, r0, r2
mov_pp r3.xyz, c1
mul_pp r0.xyz, r1, c1
max_pp r1.w, r1, c10
mul_pp r4.xyz, r0, r1.w
texldp r0.x, v4, s5
mul_pp r3.xyz, c2, r3
mul_pp r0.y, r0.x, c11.x
mad r3.xyz, r3, r2.w, r4
mul r3.xyz, r3, r0.y
mad_pp r3.xyz, r1, v3, r3
texld r1.xyz, v0, s3
mov_pp r0.y, c1.w
mul r1.xyz, r1, c3.x
mul_pp r0.y, c2.w, r0
mad r1.xyz, r2.x, -r1, r1
mul r0.y, r2.w, r0
add_pp oC0.xyz, r3, r1
mad oC0.w, r0.x, r0.y, r0
"
}
SubProgram "d3d11 " {
// Stats: 53 math, 6 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_Clouds] 2D 4
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 5
SetTexture 5 [_ShadowMapTexture] 2D 0
ConstBuffer "$Globals" 192
Vector 16 [_LightColor0]
Vector 32 [_SpecColor]
Float 112 [_LightAmount]
Float 116 [_AtmosFalloff]
Float 120 [_CloudSpeed]
Float 124 [_CloudHeight]
Float 128 [_Shininess]
Vector 132 [_AtmosNear] 3
Vector 144 [_AtmosFar] 3
ConstBuffer "UnityPerCamera" 128
Vector 0 [_Time]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
"ps_4_0
eefiecedodenpnlmbppigneabfmhmhmmoooomkfdabaaaaaaneajaaaaadaaaaaa
cmaaaaaaoeaaaaaabiabaaaaejfdeheolaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakeaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaakeaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaakeaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapalaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklklfdeieefcleaiaaaa
eaaaaaaacnacaaaafjaaaaaeegiocaaaaaaaaaaaakaaaaaafjaaaaaeegiocaaa
abaaaaaaabaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaa
fkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaa
aeaaaaaafkaaaaadaagabaaaafaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaa
fibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaa
fibiaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaa
fibiaaaeaahabaaaafaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaad
hcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadhcbabaaaaeaaaaaa
gcbaaaadlcbabaaaafaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacagaaaaaa
efaaaaajpcaabaaaaaaaaaaaegbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaa
acaaaaaadcaaaaapdcaabaaaaaaaaaaahgapbaaaaaaaaaaaaceaaaaaaaaaaaea
aaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaa
apaaaaahicaabaaaaaaaaaaaegaabaaaaaaaaaaaegaabaaaaaaaaaaaddaaaaah
icaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaiadpaaaaaaaiicaabaaa
aaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaa
aaaaaaaadkaabaaaaaaaaaaaaaaaaaalhcaabaaaabaaaaaaegacbaiaebaaaaaa
aaaaaaaaaceaaaaaaaaaaaaaaaaaaaaaaaaaiadpaaaaaaaadiaaaaajicaabaaa
aaaaaaaackiacaaaaaaaaaaaahaaaaaabkiacaaaabaaaaaaaaaaaaaabnaaaaai
icaabaaaabaaaaaadkaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaabkaaaaag
icaabaaaaaaaaaaadkaabaiaibaaaaaaaaaaaaaadhaaaaakicaabaaaaaaaaaaa
dkaabaaaabaaaaaadkaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaaaaaaaaah
bcaabaaaacaaaaaadkaabaaaaaaaaaaackbabaaaabaaaaaadiaaaaaiicaabaaa
aaaaaaaadkiacaaaaaaaaaaaahaaaaaaabeaaaaaaaaaaadpbaaaaaahicaabaaa
abaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaaeeaaaaaficaabaaaabaaaaaa
dkaabaaaabaaaaaadcaaaaajecaabaaaacaaaaaackbabaaaacaaaaaadkaabaaa
abaaaaaaabeaaaaadnaknhdodiaaaaahhcaabaaaadaaaaaapgapbaaaabaaaaaa
cgbjbaaaacaaaaaadcaaaaajhcaabaaaaeaaaaaaegbcbaaaacaaaaaapgapbaaa
abaaaaaaegbcbaaaadaaaaaaaoaaaaahmcaabaaaacaaaaaafgajbaaaadaaaaaa
kgakbaaaacaaaaaadgcaaaafbcaabaaaadaaaaaaakaabaaaadaaaaaaaaaaaaai
icaabaaaabaaaaaaakaabaiaebaaaaaaadaaaaaaabeaaaaaaaaaiadpcpaaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaaiicaabaaaabaaaaaadkaabaaa
abaaaaaabkiacaaaaaaaaaaaahaaaaaabjaaaaaficaabaaaabaaaaaadkaabaaa
abaaaaaadgaaaaafccaabaaaacaaaaaadkbabaaaabaaaaaadcaaaaajdcaabaaa
acaaaaaapgapbaaaaaaaaaaaogakbaaaacaaaaaaegaabaaaacaaaaaaefaaaaaj
pcaabaaaacaaaaaaegaabaaaacaaaaaaeghobaaaabaaaaaaaagabaaaaeaaaaaa
dcaaaaajhcaabaaaaaaaaaaaegacbaaaacaaaaaaegacbaaaabaaaaaaegacbaaa
aaaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaeaaaaaaegacbaaaaeaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaaaaaaaaaegacbaaaaeaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaaaaaaaaaa
egbcbaaaadaaaaaadeaaaaakdcaabaaaaaaaaaaamgaabaaaaaaaaaaaaceaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaacpaaaaafccaabaaaaaaaaaaabkaabaaa
aaaaaaaadiaaaaaiecaabaaaaaaaaaaaakiacaaaaaaaaaaaaiaaaaaaabeaaaaa
aaaaaaeddiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaackaabaaaaaaaaaaa
bjaaaaafccaabaaaaaaaaaaabkaabaaaaaaaaaaaaaaaaaaiecaabaaaaaaaaaaa
akaabaiaebaaaaaaacaaaaaaabeaaaaaaaaaiadpefaaaaajpcaabaaaadaaaaaa
egbabaaaabaaaaaaeghobaaaaeaaaaaaaagabaaaafaaaaaadiaaaaahecaabaaa
aaaaaaaackaabaaaaaaaaaaaakaabaaaadaaaaaadiaaaaaiecaabaaaaaaaaaaa
ckaabaaaaaaaaaaaakiacaaaaaaaaaaaacaaaaaadiaaaaahccaabaaaaaaaaaaa
ckaabaaaaaaaaaaabkaabaaaaaaaaaaadiaaaaajpcaabaaaadaaaaaaegiocaaa
aaaaaaaaabaaaaaaegiocaaaaaaaaaaaacaaaaaadiaaaaahpcaabaaaadaaaaaa
fgafbaaaaaaaaaaaegaobaaaadaaaaaaaaaaaaakocaabaaaaaaaaaaafgiocaia
ebaaaaaaaaaaaaaaaiaaaaaaagijcaaaaaaaaaaaajaaaaaadcaaaaakocaabaaa
aaaaaaaapgapbaaaabaaaaaafgaobaaaaaaaaaaafgiocaaaaaaaaaaaaiaaaaaa
efaaaaajpcaabaaaaeaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaa
abaaaaaadcaaaaajocaabaaaaaaaaaaafgaobaaaaaaaaaaapgapbaaaabaaaaaa
agajbaaaaeaaaaaaaaaaaaahocaabaaaaaaaaaaaagajbaaaacaaaaaafgaobaaa
aaaaaaaadiaaaaaihcaabaaaabaaaaaajgahbaaaaaaaaaaaegiccaaaaaaaaaaa
abaaaaaadiaaaaahocaabaaaaaaaaaaafgaobaaaaaaaaaaaagbjbaaaaeaaaaaa
dcaaaaajhcaabaaaabaaaaaaegacbaaaabaaaaaaagaabaaaaaaaaaaaegacbaaa
adaaaaaaaoaaaaahdcaabaaaadaaaaaaegbabaaaafaaaaaapgbpbaaaafaaaaaa
efaaaaajpcaabaaaafaaaaaaegaabaaaadaaaaaaeghobaaaafaaaaaaaagabaaa
aaaaaaaaaaaaaaahbcaabaaaaaaaaaaaakaabaaaafaaaaaaakaabaaaafaaaaaa
dcaaaaajiccabaaaaaaaaaaadkaabaaaadaaaaaaakaabaaaafaaaaaadkaabaaa
aeaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaaabaaaaaaagaabaaaaaaaaaaa
jgahbaaaaaaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaaeghobaaa
adaaaaaaaagabaaaadaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaa
agiacaaaaaaaaaaaahaaaaaadcaaaaakhcaabaaaabaaaaaaegacbaaaacaaaaaa
egacbaiaebaaaaaaabaaaaaaegacbaaaabaaaaaaaaaaaaahhccabaaaaaaaaaaa
egacbaaaaaaaaaaaegacbaaaabaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 43 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Vector 0 [_Time]
Float 1 [_LightAmount]
Float 2 [_AtmosFalloff]
Float 3 [_CloudSpeed]
Float 4 [_CloudHeight]
Vector 5 [_AtmosNear]
Vector 6 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_ShadowMapTexture] 2D 4
SetTexture 5 [unity_Lightmap] 2D 5
"3.0-!!ARBfp1.0
PARAM c[9] = { program.local[0..6],
		{ 0.5, 1, 0.41999999, 8 },
		{ 2 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
DP3 R0.x, fragment.texcoord[1], fragment.texcoord[1];
RSQ R0.x, R0.x;
MUL R1.xyz, R0.x, fragment.texcoord[1];
MOV R0.x, c[3];
MUL R0.y, R0.x, c[0];
ADD R0.z, R1, c[7];
RCP R0.z, R0.z;
MOV R2.xyz, c[5];
MUL R1.xy, R1, R0.z;
ABS R0.x, R0.y;
FRC R0.z, R0.x;
MOV R0.x, c[7];
CMP R0.y, R0, -R0.z, R0.z;
MAD R0.x, -R0, c[4], c[4];
MUL R0.zw, R0.x, R1.xyxy;
ADD R0.x, fragment.texcoord[0].z, R0.y;
MOV R0.y, fragment.texcoord[0].w;
ADD R0.zw, R0.xyxy, R0;
DP3 R0.x, fragment.texcoord[1], fragment.texcoord[1];
RSQ R1.w, R0.x;
TEX R1.xyz, R0.zwzw, texture[1], 2D;
TEX R0, fragment.texcoord[0], texture[0], 2D;
MUL_SAT R1.w, R1, fragment.texcoord[1].z;
ADD R1.w, -R1, c[7].y;
POW R1.w, R1.w, c[2].x;
ADD R2.xyz, -R2, c[6];
MAD R2.xyz, R1.w, R2, c[5];
MAD R0.xyz, R2, R1.w, R0;
ADD R1.yzw, R0.xxyz, R1.xxyz;
TEX R2, fragment.texcoord[2], texture[5], 2D;
MUL R0.xyz, R2.w, R2;
MUL R3.yzw, R0.xxyz, c[7].w;
TXP R3.x, fragment.texcoord[3], texture[4], 2D;
MUL R2.xyz, R2, R3.x;
MUL R2.xyz, R2, c[8].x;
MIN R2.xyz, R3.yzww, R2;
TEX R0.xyz, fragment.texcoord[0], texture[3], 2D;
MUL R0.xyz, R0, c[1].x;
MUL R3.xyz, R3.yzww, R3.x;
MAD R0.xyz, R1.x, -R0, R0;
MAX R2.xyz, R2, R3;
MAD result.color.xyz, R1.yzww, R2, R0;
MOV result.color.w, R0;
END
# 43 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 41 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Vector 0 [_Time]
Float 1 [_LightAmount]
Float 2 [_AtmosFalloff]
Float 3 [_CloudSpeed]
Float 4 [_CloudHeight]
Vector 5 [_AtmosNear]
Vector 6 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_ShadowMapTexture] 2D 4
SetTexture 5 [unity_Lightmap] 2D 5
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s3
dcl_2d s4
dcl_2d s5
def c7, 1.00000000, 0.41999999, -0.50000000, 8.00000000
def c8, 2.00000000, 0, 0, 0
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xy
dcl_texcoord3 v3
dp3_pp r0.x, v1, v1
rsq_pp r0.x, r0.x
mul_pp r1.xyz, r0.x, v1
add r0.y, r1.z, c7
rcp r0.y, r0.y
mov r0.x, c0.y
mov_pp r0.z, c7
mov_pp r3.xyz, c6
mul r1.xy, r1, r0.y
mul r0.x, c3, r0
abs r0.y, r0.x
frc r0.y, r0
cmp r0.x, r0, r0.y, -r0.y
mad_pp r0.z, r0, c4.x, c4.x
mul r1.xy, r0.z, r1
dp3 r0.y, v1, v1
rsq r0.z, r0.y
mul_sat r0.z, r0, v1
add r1.w, -r0.z, c7.x
pow_pp r2, r1.w, c2.x
mov_pp r1.w, r2.x
add_pp r3.xyz, -c5, r3
mad_pp r2.xyz, r1.w, r3, c5
texldp r4.x, v3, s4
add_pp r0.x, v0.z, r0
mov_pp r0.y, v0.w
add_pp r0.xy, r0, r1
texld r1.xyz, r0, s1
texld r0, v0, s0
mad_pp r0.xyz, r2, r1.w, r0
texld r2, v2, s5
mul_pp r3.xyz, r2.w, r2
add_pp r0.xyz, r0, r1
mul_pp r2.xyz, r2, r4.x
mul_pp r1.yzw, r2.xxyz, c8.x
mul_pp r3.xyz, r3, c7.w
min_pp r1.yzw, r3.xxyz, r1
texld r2.xyz, v0, s3
mul r2.xyz, r2, c1.x
mad r2.xyz, r1.x, -r2, r2
mul_pp r3.xyz, r3, r4.x
max_pp r1.xyz, r1.yzww, r3
mad_pp oC0.xyz, r0, r1, r2
mov_pp oC0.w, r0
"
}
SubProgram "d3d11 " {
// Stats: 30 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_Clouds] 2D 3
SetTexture 2 [_Emission] 2D 2
SetTexture 3 [_ShadowMapTexture] 2D 0
SetTexture 4 [unity_Lightmap] 2D 4
ConstBuffer "$Globals" 208
Float 112 [_LightAmount]
Float 116 [_AtmosFalloff]
Float 120 [_CloudSpeed]
Float 124 [_CloudHeight]
Vector 132 [_AtmosNear] 3
Vector 144 [_AtmosFar] 3
ConstBuffer "UnityPerCamera" 128
Vector 0 [_Time]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
"ps_4_0
eefiecedlgfaoncimdjnfkbbglklkndfdgilfdleabaaaaaakiagaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapalaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefckaafaaaaeaaaaaaagiabaaaafjaaaaaeegiocaaaaaaaaaaaakaaaaaa
fjaaaaaeegiocaaaabaaaaaaabaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaad
aagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaa
fkaaaaadaagabaaaaeaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaae
aahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaafibiaaae
aahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaagcbaaaad
pcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaaddcbabaaaadaaaaaa
gcbaaaadlcbabaaaaeaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacaeaaaaaa
aoaaaaahdcaabaaaaaaaaaaaegbabaaaaeaaaaaapgbpbaaaaeaaaaaaefaaaaaj
pcaabaaaaaaaaaaaegaabaaaaaaaaaaaeghobaaaadaaaaaaaagabaaaaaaaaaaa
aaaaaaahccaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaaaaaaaaaaaefaaaaaj
pcaabaaaabaaaaaaegbabaaaadaaaaaaeghobaaaaeaaaaaaaagabaaaaeaaaaaa
diaaaaahocaabaaaaaaaaaaafgafbaaaaaaaaaaaagajbaaaabaaaaaadiaaaaah
icaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaaaebdiaaaaahhcaabaaa
abaaaaaaegacbaaaabaaaaaapgapbaaaabaaaaaaddaaaaahocaabaaaaaaaaaaa
fgaobaaaaaaaaaaaagajbaaaabaaaaaadiaaaaahhcaabaaaabaaaaaaagaabaaa
aaaaaaaaegacbaaaabaaaaaadeaaaaahhcaabaaaaaaaaaaajgahbaaaaaaaaaaa
egacbaaaabaaaaaadiaaaaajicaabaaaaaaaaaaackiacaaaaaaaaaaaahaaaaaa
bkiacaaaabaaaaaaaaaaaaaabnaaaaaibcaabaaaabaaaaaadkaabaaaaaaaaaaa
dkaabaiaebaaaaaaaaaaaaaabkaaaaagicaabaaaaaaaaaaadkaabaiaibaaaaaa
aaaaaaaadhaaaaakicaabaaaaaaaaaaaakaabaaaabaaaaaadkaabaaaaaaaaaaa
dkaabaiaebaaaaaaaaaaaaaaaaaaaaahbcaabaaaabaaaaaadkaabaaaaaaaaaaa
ckbabaaaabaaaaaabaaaaaahicaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaa
acaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadcaaaaajecaabaaa
abaaaaaackbabaaaacaaaaaadkaabaaaaaaaaaaaabeaaaaadnaknhdodiaaaaah
hcaabaaaacaaaaaapgapbaaaaaaaaaaacgbjbaaaacaaaaaaaoaaaaahmcaabaaa
abaaaaaafgajbaaaacaaaaaakgakbaaaabaaaaaadgcaaaafbcaabaaaacaaaaaa
akaabaaaacaaaaaaaaaaaaaiicaabaaaaaaaaaaaakaabaiaebaaaaaaacaaaaaa
abeaaaaaaaaaiadpcpaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaai
icaabaaaaaaaaaaadkaabaaaaaaaaaaabkiacaaaaaaaaaaaahaaaaaabjaaaaaf
icaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaaibcaabaaaacaaaaaadkiacaaa
aaaaaaaaahaaaaaaabeaaaaaaaaaaadpdgaaaaafccaabaaaabaaaaaadkbabaaa
abaaaaaadcaaaaajdcaabaaaabaaaaaaagaabaaaacaaaaaaogakbaaaabaaaaaa
egaabaaaabaaaaaaefaaaaajpcaabaaaabaaaaaaegaabaaaabaaaaaaeghobaaa
abaaaaaaaagabaaaadaaaaaaaaaaaaakhcaabaaaacaaaaaajgihcaiaebaaaaaa
aaaaaaaaaiaaaaaaegiccaaaaaaaaaaaajaaaaaadcaaaaakhcaabaaaacaaaaaa
pgapbaaaaaaaaaaaegacbaaaacaaaaaajgihcaaaaaaaaaaaaiaaaaaaefaaaaaj
pcaabaaaadaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaabaaaaaa
dcaaaaajhcaabaaaacaaaaaaegacbaaaacaaaaaapgapbaaaaaaaaaaaegacbaaa
adaaaaaadgaaaaaficcabaaaaaaaaaaadkaabaaaadaaaaaaaaaaaaahhcaabaaa
acaaaaaaegacbaaaabaaaaaaegacbaaaacaaaaaaefaaaaajpcaabaaaadaaaaaa
egbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaaacaaaaaadiaaaaaihcaabaaa
adaaaaaaegacbaaaadaaaaaaagiacaaaaaaaaaaaahaaaaaadcaaaaakhcaabaaa
abaaaaaaegacbaaaabaaaaaaegacbaiaebaaaaaaadaaaaaaegacbaaaadaaaaaa
dcaaaaajhccabaaaaaaaaaaaegacbaaaacaaaaaaegacbaaaaaaaaaaaegacbaaa
abaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 83 math, 8 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Vector 0 [_Time]
Vector 1 [_SpecColor]
Float 2 [_LightAmount]
Float 3 [_AtmosFalloff]
Float 4 [_CloudSpeed]
Float 5 [_CloudHeight]
Float 6 [_Shininess]
Vector 7 [_AtmosNear]
Vector 8 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_ShadowMapTexture] 2D 5
SetTexture 6 [unity_Lightmap] 2D 6
SetTexture 7 [unity_LightmapInd] 2D 7
"3.0-!!ARBfp1.0
PARAM c[13] = { program.local[0..8],
		{ 1, 0.5, 0.41999999, 2 },
		{ 0, 1, 0.81649655, 0.57735026 },
		{ -0.40824828, -0.70710677, 0.57735026, 8 },
		{ -0.40824831, 0.70710677, 0.57735026, 128 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
DP3 R0.x, fragment.texcoord[1], fragment.texcoord[1];
RSQ R1.w, R0.x;
MUL R0.xyz, R1.w, fragment.texcoord[1];
ADD R0.z, R0, c[9];
RCP R0.z, R0.z;
MUL R1.xy, R0, R0.z;
MOV R0.x, c[9].y;
MAD R0.x, -R0, c[5], c[5];
MOV R0.z, c[4].x;
MUL R0.z, R0, c[0].y;
TEX R0.yw, fragment.texcoord[0], texture[2], 2D;
MUL R1.xy, R0.x, R1;
MAD R0.xy, R0.wyzw, c[9].w, -c[9].x;
MUL R2.xy, R0, R0;
ADD_SAT R1.z, R2.x, R2.y;
ABS R0.w, R0.z;
ADD R1.z, -R1, c[9].x;
FRC R0.w, R0;
CMP R0.w, R0.z, -R0, R0;
RSQ R1.z, R1.z;
RCP R0.z, R1.z;
ADD R2.x, fragment.texcoord[0].z, R0.w;
MOV R2.y, fragment.texcoord[0].w;
ADD R1.xy, R2, R1;
ADD R2.xyz, -R0, c[10].xxyw;
TEX R1.xyz, R1, texture[1], 2D;
MAD R3.xyz, R1, R2, R0;
TEX R2, fragment.texcoord[2], texture[7], 2D;
MUL R2.xyz, R2.w, R2;
MUL R5.xyz, R2, c[11].w;
DP3_SAT R0.z, R3, c[11];
DP3_SAT R0.y, R3, c[12];
DP3_SAT R0.x, R3, c[10].zxww;
DP3 R0.w, R0, R5;
TEX R2, fragment.texcoord[2], texture[6], 2D;
MUL R0.xyz, R2.w, R2;
MUL R0.xyz, R0, R0.w;
MUL R4.xyz, R0, c[11].w;
TXP R0.x, fragment.texcoord[3], texture[5], 2D;
MUL R2.xyz, R2, R0.x;
MUL R0.yzw, R5.y, c[12].xxyz;
MAD R0.yzw, R5.x, c[10].xzxw, R0;
MAD R0.yzw, R5.z, c[11].xxyz, R0;
DP3 R2.w, R0.yzww, R0.yzww;
MUL R2.xyz, R2, c[9].w;
MUL R5.xyz, R4, R0.x;
MIN R2.xyz, R4, R2;
RSQ R2.w, R2.w;
MUL R0.xyz, R2.w, R0.yzww;
MAX R2.xyz, R2, R5;
MAD R5.xyz, fragment.texcoord[1], R1.w, R0;
DP3 R0.z, R5, R5;
ADD R0.y, -R1.x, c[9].x;
TEX R0.x, fragment.texcoord[0], texture[4], 2D;
MUL R0.x, R0, R0.y;
MUL R0.w, R0.x, c[1].x;
MUL R4.xyz, R4, c[1];
RSQ R0.y, R0.z;
MUL R0.xyz, R0.y, R5;
DP3 R0.y, R3, R0;
MOV R0.x, c[12].w;
MUL R0.z, R0.x, c[6].x;
MAX R0.y, R0, c[10].x;
DP3 R0.x, fragment.texcoord[1], fragment.texcoord[1];
TEX R3.xyz, fragment.texcoord[0], texture[3], 2D;
MUL R4.xyz, R4, R0.w;
POW R0.y, R0.y, R0.z;
RSQ R0.x, R0.x;
MUL_SAT R0.w, R0.x, fragment.texcoord[1].z;
MUL R5.xyz, R4, R0.y;
ADD R0.w, -R0, c[9].x;
MOV R0.xyz, c[7];
POW R1.w, R0.w, c[3].x;
ADD R0.xyz, -R0, c[8];
MAD R4.xyz, R1.w, R0, c[7];
TEX R0, fragment.texcoord[0], texture[0], 2D;
MAD R0.xyz, R4, R1.w, R0;
ADD R0.xyz, R0, R1;
MUL R3.xyz, R3, c[2].x;
MAD R1.xyz, R1.x, -R3, R3;
MAD R0.xyz, R0, R2, R5;
ADD result.color.xyz, R0, R1;
MOV result.color.w, R0;
END
# 83 instructions, 6 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 80 math, 8 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Vector 0 [_Time]
Vector 1 [_SpecColor]
Float 2 [_LightAmount]
Float 3 [_AtmosFalloff]
Float 4 [_CloudSpeed]
Float 5 [_CloudHeight]
Float 6 [_Shininess]
Vector 7 [_AtmosNear]
Vector 8 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_ShadowMapTexture] 2D 5
SetTexture 6 [unity_Lightmap] 2D 6
SetTexture 7 [unity_LightmapInd] 2D 7
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s3
dcl_2d s4
dcl_2d s5
dcl_2d s6
dcl_2d s7
def c9, 1.00000000, -0.50000000, 0.41999999, 0.00000000
def c10, 2.00000000, -1.00000000, 8.00000000, 128.00000000
def c11, -0.40824828, -0.70710677, 0.57735026, 0
def c12, -0.40824831, 0.70710677, 0.57735026, 0
def c13, 0.81649655, 0.00000000, 0.57735026, 0
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xy
dcl_texcoord3 v3
dp3_pp r0.x, v1, v1
rsq_pp r1.w, r0.x
mul_pp r0.xyz, r1.w, v1
add r0.z, r0, c9
rcp r0.z, r0.z
mul r1.xy, r0, r0.z
mov_pp r0.x, c9.y
mad_pp r0.x, r0, c5, c5
mov r0.z, c0.y
mul r0.z, c4.x, r0
texld r0.yw, v0, s2
mul r1.xy, r0.x, r1
mad_pp r0.xy, r0.wyzw, c10.x, c10.y
mul_pp r2.xy, r0, r0
add_pp_sat r1.z, r2.x, r2.y
abs r0.w, r0.z
add_pp r1.z, -r1, c9.x
frc r0.w, r0
cmp r0.w, r0.z, r0, -r0
rsq_pp r1.z, r1.z
rcp_pp r0.z, r1.z
add_pp r2.x, v0.z, r0.w
mov_pp r2.y, v0.w
add_pp r1.xy, r2, r1
add_pp r2.xyz, -r0, c9.wwxw
texld r1.xyz, r1, s1
mad_pp r3.xyz, r1, r2, r0
texld r2, v2, s7
mul_pp r2.xyz, r2.w, r2
mul_pp r5.xyz, r2, c10.z
dp3_pp_sat r0.z, r3, c11
dp3_pp_sat r0.y, r3, c12
dp3_pp_sat r0.x, r3, c13
dp3_pp r0.w, r0, r5
texld r2, v2, s6
mul_pp r0.xyz, r2.w, r2
mul_pp r0.xyz, r0, r0.w
mul_pp r4.xyz, r0, c10.z
texldp r0.x, v3, s5
mul_pp r2.xyz, r2, r0.x
mul r0.yzw, r5.y, c12.xxyz
mad r0.yzw, r5.x, c13.xxyz, r0
mad r0.yzw, r5.z, c11.xxyz, r0
dp3 r2.w, r0.yzww, r0.yzww
mul_pp r2.xyz, r2, c10.x
mul_pp r5.xyz, r4, r0.x
min_pp r2.xyz, r4, r2
rsq r2.w, r2.w
mul r0.xyz, r2.w, r0.yzww
max_pp r2.xyz, r2, r5
mad_pp r5.xyz, v1, r1.w, r0
dp3_pp r0.z, r5, r5
add_pp r0.y, -r1.x, c9.x
texld r0.x, v0, s4
mul r0.x, r0, r0.y
mul r0.w, r0.x, c1.x
mul_pp r4.xyz, r4, c1
rsq_pp r0.y, r0.z
mul_pp r0.xyz, r0.y, r5
dp3_pp r0.x, r3, r0
mov_pp r0.y, c6.x
mul_pp r4.xyz, r4, r0.w
mul_pp r3.x, c10.w, r0.y
max_pp r2.w, r0.x, c9
pow r0, r2.w, r3.x
dp3 r1.w, v1, v1
rsq r0.y, r1.w
mul_sat r0.y, r0, v1.z
mov_pp r3.xyz, c8
add r1.w, -r0.y, c9.x
mul r5.xyz, r4, r0.x
pow_pp r0, r1.w, c3.x
mov_pp r1.w, r0.x
add_pp r3.xyz, -c7, r3
mad_pp r4.xyz, r1.w, r3, c7
texld r0, v0, s0
texld r3.xyz, v0, s3
mad_pp r0.xyz, r4, r1.w, r0
add_pp r0.xyz, r0, r1
mul r3.xyz, r3, c2.x
mad r1.xyz, r1.x, -r3, r3
mad_pp r0.xyz, r0, r2, r5
add_pp oC0.xyz, r0, r1
mov_pp oC0.w, r0
"
}
SubProgram "d3d11 " {
// Stats: 66 math, 8 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_Clouds] 2D 4
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 5
SetTexture 5 [_ShadowMapTexture] 2D 0
SetTexture 6 [unity_Lightmap] 2D 6
SetTexture 7 [unity_LightmapInd] 2D 7
ConstBuffer "$Globals" 208
Vector 32 [_SpecColor]
Float 112 [_LightAmount]
Float 116 [_AtmosFalloff]
Float 120 [_CloudSpeed]
Float 124 [_CloudHeight]
Float 128 [_Shininess]
Vector 132 [_AtmosNear] 3
Vector 144 [_AtmosFar] 3
ConstBuffer "UnityPerCamera" 128
Vector 0 [_Time]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
"ps_4_0
eefiecedbfgjpcaeamdjpmmjgongdpdnkmhjggnpabaaaaaanmalaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapalaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefcneakaaaaeaaaaaaalfacaaaafjaaaaaeegiocaaaaaaaaaaaakaaaaaa
fjaaaaaeegiocaaaabaaaaaaabaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaad
aagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaa
fkaaaaadaagabaaaaeaaaaaafkaaaaadaagabaaaafaaaaaafkaaaaadaagabaaa
agaaaaaafkaaaaadaagabaaaahaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaa
fibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaa
fibiaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaa
fibiaaaeaahabaaaafaaaaaaffffaaaafibiaaaeaahabaaaagaaaaaaffffaaaa
fibiaaaeaahabaaaahaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaad
hcbabaaaacaaaaaagcbaaaaddcbabaaaadaaaaaagcbaaaadlcbabaaaaeaaaaaa
gfaaaaadpccabaaaaaaaaaaagiaaaaacaiaaaaaaaaaaaaakhcaabaaaaaaaaaaa
jgihcaiaebaaaaaaaaaaaaaaaiaaaaaaegiccaaaaaaaaaaaajaaaaaabaaaaaah
icaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaaeeaaaaaficaabaaa
aaaaaaaadkaabaaaaaaaaaaadiaaaaahpcaabaaaabaaaaaapgapbaaaaaaaaaaa
cgbjbaaaacaaaaaadcaaaaajicaabaaaaaaaaaaackbabaaaacaaaaaadkaabaaa
aaaaaaaaabeaaaaadnaknhdoaoaaaaahdcaabaaaacaaaaaajgafbaaaabaaaaaa
pgapbaaaaaaaaaaadgcaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaaaaaaaaai
icaabaaaaaaaaaaaakaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadpcpaaaaaf
icaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaaiicaabaaaaaaaaaaadkaabaaa
aaaaaaaabkiacaaaaaaaaaaaahaaaaaabjaaaaaficaabaaaaaaaaaaadkaabaaa
aaaaaaaadcaaaaakhcaabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaa
jgihcaaaaaaaaaaaaiaaaaaaefaaaaajpcaabaaaadaaaaaaegbabaaaabaaaaaa
eghobaaaaaaaaaaaaagabaaaabaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaa
aaaaaaaapgapbaaaaaaaaaaaegacbaaaadaaaaaadgaaaaaficcabaaaaaaaaaaa
dkaabaaaadaaaaaadiaaaaajicaabaaaaaaaaaaackiacaaaaaaaaaaaahaaaaaa
bkiacaaaabaaaaaaaaaaaaaabnaaaaaibcaabaaaabaaaaaadkaabaaaaaaaaaaa
dkaabaiaebaaaaaaaaaaaaaabkaaaaagicaabaaaaaaaaaaadkaabaiaibaaaaaa
aaaaaaaadhaaaaakicaabaaaaaaaaaaaakaabaaaabaaaaaadkaabaaaaaaaaaaa
dkaabaiaebaaaaaaaaaaaaaaaaaaaaahbcaabaaaadaaaaaadkaabaaaaaaaaaaa
ckbabaaaabaaaaaadiaaaaaiicaabaaaaaaaaaaadkiacaaaaaaaaaaaahaaaaaa
abeaaaaaaaaaaadpdgaaaaafccaabaaaadaaaaaadkbabaaaabaaaaaadcaaaaaj
dcaabaaaacaaaaaapgapbaaaaaaaaaaaegaabaaaacaaaaaaegaabaaaadaaaaaa
efaaaaajpcaabaaaacaaaaaaegaabaaaacaaaaaaeghobaaaabaaaaaaaagabaaa
aeaaaaaaaaaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaacaaaaaa
efaaaaajpcaabaaaadaaaaaaegbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaa
acaaaaaadcaaaaapdcaabaaaadaaaaaahgapbaaaadaaaaaaaceaaaaaaaaaaaea
aaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaa
apaaaaahicaabaaaaaaaaaaaegaabaaaadaaaaaaegaabaaaadaaaaaaddaaaaah
icaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaiadpaaaaaaaiicaabaaa
aaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaa
adaaaaaadkaabaaaaaaaaaaaaaaaaaalhcaabaaaaeaaaaaaegacbaiaebaaaaaa
adaaaaaaaceaaaaaaaaaaaaaaaaaaaaaaaaaiadpaaaaaaaadcaaaaajhcaabaaa
adaaaaaaegacbaaaacaaaaaaegacbaaaaeaaaaaaegacbaaaadaaaaaaapcaaaak
bcaabaaaaeaaaaaaaceaaaaaolaffbdpdkmnbddpaaaaaaaaaaaaaaaaigaabaaa
adaaaaaabacaaaakccaabaaaaeaaaaaaaceaaaaaomafnblopdaedfdpdkmnbddp
aaaaaaaaegacbaaaadaaaaaabacaaaakecaabaaaaeaaaaaaaceaaaaaolafnblo
pdaedflpdkmnbddpaaaaaaaaegacbaaaadaaaaaaefaaaaajpcaabaaaafaaaaaa
egbabaaaadaaaaaaeghobaaaahaaaaaaaagabaaaahaaaaaadiaaaaahicaabaaa
aaaaaaaadkaabaaaafaaaaaaabeaaaaaaaaaaaebdiaaaaahhcaabaaaafaaaaaa
egacbaaaafaaaaaapgapbaaaaaaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaa
aeaaaaaaegacbaaaafaaaaaaefaaaaajpcaabaaaaeaaaaaaegbabaaaadaaaaaa
eghobaaaagaaaaaaaagabaaaagaaaaaadiaaaaahbcaabaaaabaaaaaadkaabaaa
aeaaaaaaabeaaaaaaaaaaaebdiaaaaahhcaabaaaagaaaaaaegacbaaaaeaaaaaa
agaabaaaabaaaaaadiaaaaahhcaabaaaagaaaaaapgapbaaaaaaaaaaaegacbaaa
agaaaaaaaoaaaaahdcaabaaaahaaaaaaegbabaaaaeaaaaaapgbpbaaaaeaaaaaa
efaaaaajpcaabaaaahaaaaaaegaabaaaahaaaaaaeghobaaaafaaaaaaaagabaaa
aaaaaaaaaaaaaaahicaabaaaaaaaaaaaakaabaaaahaaaaaaakaabaaaahaaaaaa
diaaaaahhcaabaaaahaaaaaaegacbaaaagaaaaaaagaabaaaahaaaaaadiaaaaah
hcaabaaaaeaaaaaaegacbaaaaeaaaaaapgapbaaaaaaaaaaaddaaaaahhcaabaaa
aeaaaaaaegacbaaaaeaaaaaaegacbaaaagaaaaaadiaaaaaihcaabaaaagaaaaaa
egacbaaaagaaaaaaegiccaaaaaaaaaaaacaaaaaadeaaaaahhcaabaaaaeaaaaaa
egacbaaaahaaaaaaegacbaaaaeaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaaaaeaaaaaadiaaaaakhcaabaaaaeaaaaaafgafbaaaafaaaaaa
aceaaaaaomafnblopdaedfdpdkmnbddpaaaaaaaadcaaaaamhcaabaaaaeaaaaaa
agaabaaaafaaaaaaaceaaaaaolaffbdpaaaaaaaadkmnbddpaaaaaaaaegacbaaa
aeaaaaaadcaaaaamhcaabaaaaeaaaaaakgakbaaaafaaaaaaaceaaaaaolafnblo
pdaedflpdkmnbddpaaaaaaaaegacbaaaaeaaaaaabaaaaaahicaabaaaaaaaaaaa
egacbaaaaeaaaaaaegacbaaaaeaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaa
aaaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaaaeaaaaaapgapbaaaaaaaaaaa
jgahbaaaabaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaabaaaaaaegacbaaa
abaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaa
abaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahicaabaaaaaaaaaaa
egacbaaaadaaaaaaegacbaaaabaaaaaadeaaaaahicaabaaaaaaaaaaadkaabaaa
aaaaaaaaabeaaaaaaaaaaaaacpaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaa
diaaaaaibcaabaaaabaaaaaaakiacaaaaaaaaaaaaiaaaaaaabeaaaaaaaaaaaed
diaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaakaabaaaabaaaaaabjaaaaaf
icaabaaaaaaaaaaadkaabaaaaaaaaaaaaaaaaaaibcaabaaaabaaaaaaakaabaia
ebaaaaaaacaaaaaaabeaaaaaaaaaiadpefaaaaajpcaabaaaadaaaaaaegbabaaa
abaaaaaaeghobaaaaeaaaaaaaagabaaaafaaaaaadiaaaaahbcaabaaaabaaaaaa
akaabaaaabaaaaaaakaabaaaadaaaaaadiaaaaaibcaabaaaabaaaaaaakaabaaa
abaaaaaaakiacaaaaaaaaaaaacaaaaaadiaaaaahhcaabaaaabaaaaaaagaabaaa
abaaaaaaegacbaaaagaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaaabaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaa
abaaaaaaeghobaaaadaaaaaaaagabaaaadaaaaaadiaaaaaihcaabaaaabaaaaaa
egacbaaaabaaaaaaagiacaaaaaaaaaaaahaaaaaadcaaaaakhcaabaaaabaaaaaa
egacbaaaacaaaaaaegacbaiaebaaaaaaabaaaaaaegacbaaaabaaaaaaaaaaaaah
hccabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES3"
}
}
 }


 // Stats for Vertex shader:
 //       d3d11 : 31 avg math (24..33)
 //        d3d9 : 35 avg math (29..38)
 //      opengl : 32 avg math (26..35)
 // Stats for Fragment shader:
 //       d3d11 : 51 avg math (47..57), 5 avg texture (4..6)
 //        d3d9 : 67 avg math (64..73), 5 avg texture (4..6)
 //      opengl : 67 avg math (62..73), 5 avg texture (4..6)
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="ForwardAdd" "RenderType"="Opaque" }
  ZWrite Off
  Fog {
   Color (0,0,0,0)
  }
  Blend One One
Program "vp" {
SubProgram "opengl " {
// Stats: 34 math
Keywords { "POINT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Matrix 13 [_LightMatrix0]
Vector 17 [_WorldSpaceCameraPos]
Vector 18 [_WorldSpaceLightPos0]
Vector 19 [unity_Scale]
Vector 20 [_MainTex_ST]
Vector 21 [_Clouds_ST]
"3.0-!!ARBvp1.0
PARAM c[22] = { { 1 },
		state.matrix.mvp,
		program.local[5..21] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MOV R0.xyz, vertex.attrib[14];
MUL R2.xyz, vertex.normal.zxyw, R0.yzxw;
MAD R0.xyz, vertex.normal.yzxw, R0.zxyw, -R2;
MOV R1, c[18];
MOV R0.w, c[0].x;
DP4 R2.z, R1, c[11];
DP4 R2.x, R1, c[9];
DP4 R2.y, R1, c[10];
MAD R2.xyz, R2, c[19].w, -vertex.position;
MUL R1.xyz, R0, vertex.attrib[14].w;
MOV R0.xyz, c[17];
DP4 R3.z, R0, c[11];
DP4 R3.x, R0, c[9];
DP4 R3.y, R0, c[10];
MAD R0.xyz, R3, c[19].w, -vertex.position;
DP3 result.texcoord[1].y, R0, R1;
DP3 result.texcoord[1].z, vertex.normal, R0;
DP3 result.texcoord[1].x, R0, vertex.attrib[14];
DP4 R0.w, vertex.position, c[8];
DP4 R0.z, vertex.position, c[7];
DP4 R0.x, vertex.position, c[5];
DP4 R0.y, vertex.position, c[6];
DP3 result.texcoord[2].y, R1, R2;
DP3 result.texcoord[2].z, vertex.normal, R2;
DP3 result.texcoord[2].x, vertex.attrib[14], R2;
DP4 result.texcoord[3].z, R0, c[15];
DP4 result.texcoord[3].y, R0, c[14];
DP4 result.texcoord[3].x, R0, c[13];
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[21].xyxy, c[21];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[20], c[20].zwzw;
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 34 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 37 math
Keywords { "POINT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Matrix 12 [_LightMatrix0]
Vector 16 [_WorldSpaceCameraPos]
Vector 17 [_WorldSpaceLightPos0]
Vector 18 [unity_Scale]
Vector 19 [_MainTex_ST]
Vector 20 [_Clouds_ST]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
def c21, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mov r1.xyz, v1
mov r0, c10
dp4 r3.z, c17, r0
mov r0, c9
dp4 r3.y, c17, r0
mul r2.xyz, v2.zxyw, r1.yzxw
mov r1.xyz, v1
mad r2.xyz, v2.yzxw, r1.zxyw, -r2
mov r1, c8
dp4 r3.x, c17, r1
mad r0.xyz, r3, c18.w, -v0
mul r2.xyz, r2, v1.w
mov r1.xyz, c16
mov r1.w, c21.x
dp3 o3.y, r2, r0
dp3 o3.z, v2, r0
dp3 o3.x, v1, r0
dp4 r0.w, v0, c7
dp4 r0.z, v0, c6
dp4 r0.x, v0, c4
dp4 r0.y, v0, c5
dp4 r3.z, r1, c10
dp4 r3.x, r1, c8
dp4 r3.y, r1, c9
mad r1.xyz, r3, c18.w, -v0
dp3 o2.y, r1, r2
dp3 o2.z, v2, r1
dp3 o2.x, r1, v1
dp4 o4.z, r0, c14
dp4 o4.y, r0, c13
dp4 o4.x, r0, c12
mad o1.zw, v3.xyxy, c20.xyxy, c20
mad o1.xy, v3, c19, c19.zwzw
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 33 math
Keywords { "POINT" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 192
Matrix 48 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0
eefiecedkcfafeokfdfabomcohdmjpedblcpfomoabaaaaaaceahaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefciiafaaaaeaaaabaa
gcabaaaafjaaaaaeegiocaaaaaaaaaaaamaaaaaafjaaaaaeegiocaaaabaaaaaa
afaaaaaafjaaaaaeegiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaad
hcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaad
hccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaagiaaaaacacaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaa
egbabaaaadaaaaaaegiacaaaaaaaaaaaakaaaaaaogikcaaaaaaaaaaaakaaaaaa
dcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaalaaaaaa
kgiocaaaaaaaaaaaalaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaa
cgbjbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaa
abaaaaaaegacbaiaebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaa
aaaaaaaapgbpbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaa
aeaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
adaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaal
hcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaa
egacbaaaabaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaa
adaaaaaabdaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaa
adaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaaacaaaaaa
egacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaa
abaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaa
egacbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaacaaaaaaaaaaaaaa
egiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaa
baaaaaaaagiacaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaa
abaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaaegacbaaa
abaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabdaaaaaapgipcaaa
acaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaa
abaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaah
cccabaaaadaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaa
adaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaaadaaaaaa
egbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaadaaaaaaanaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaadaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaaegiccaaa
aaaaaaaaaeaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaaaaaaaaaadaaaaaa
agaabaaaaaaaaaaaegacbaaaabaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaa
aaaaaaaaafaaaaaakgakbaaaaaaaaaaaegacbaaaabaaaaaadcaaaaakhccabaaa
aeaaaaaaegiccaaaaaaaaaaaagaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaa
doaaaaab"
}
SubProgram "gles " {
Keywords { "POINT" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_5;
  highp vec3 tmpvar_6;
  tmpvar_5 = tmpvar_1.xyz;
  tmpvar_6 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = tmpvar_5.x;
  tmpvar_7[0].y = tmpvar_6.x;
  tmpvar_7[0].z = tmpvar_2.x;
  tmpvar_7[1].x = tmpvar_5.y;
  tmpvar_7[1].y = tmpvar_6.y;
  tmpvar_7[1].z = tmpvar_2.y;
  tmpvar_7[2].x = tmpvar_5.z;
  tmpvar_7[2].y = tmpvar_6.z;
  tmpvar_7[2].z = tmpvar_2.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_7 * (((_World2Object * tmpvar_9).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _LightTexture0;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_5 = vec3(0.0, 0.0, 0.0);
  tmpvar_6 = tmpvar_3;
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_4;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture2D (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_5 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (tmpvar_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_6 = tmpvar_28;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_30;
  tmpvar_30 = ((tmpvar_29.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_30;
  tmpvar_3 = tmpvar_6;
  mediump vec3 tmpvar_31;
  tmpvar_31 = normalize(xlv_TEXCOORD2);
  lightDir_2 = tmpvar_31;
  highp vec3 tmpvar_32;
  tmpvar_32 = normalize(xlv_TEXCOORD1);
  highp float tmpvar_33;
  tmpvar_33 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  mediump vec3 viewDir_34;
  viewDir_34 = tmpvar_32;
  lowp float atten_35;
  atten_35 = texture2D (_LightTexture0, vec2(tmpvar_33)).w;
  lowp vec4 c_36;
  highp float nh_37;
  lowp float tmpvar_38;
  tmpvar_38 = max (0.0, dot (tmpvar_6, lightDir_2));
  mediump float tmpvar_39;
  tmpvar_39 = max (0.0, dot (tmpvar_6, normalize((lightDir_2 + viewDir_34))));
  nh_37 = tmpvar_39;
  mediump float arg1_40;
  arg1_40 = (tmpvar_7 * 128.0);
  highp float tmpvar_41;
  tmpvar_41 = (pow (nh_37, arg1_40) * tmpvar_8);
  highp vec3 tmpvar_42;
  tmpvar_42 = ((((tmpvar_5 * _LightColor0.xyz) * tmpvar_38) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_41)) * (atten_35 * 2.0));
  c_36.xyz = tmpvar_42;
  highp float tmpvar_43;
  tmpvar_43 = (tmpvar_12.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_41) * atten_35));
  c_36.w = tmpvar_43;
  c_1.xyz = c_36.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "POINT" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_5;
  highp vec3 tmpvar_6;
  tmpvar_5 = tmpvar_1.xyz;
  tmpvar_6 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = tmpvar_5.x;
  tmpvar_7[0].y = tmpvar_6.x;
  tmpvar_7[0].z = tmpvar_2.x;
  tmpvar_7[1].x = tmpvar_5.y;
  tmpvar_7[1].y = tmpvar_6.y;
  tmpvar_7[1].z = tmpvar_2.y;
  tmpvar_7[2].x = tmpvar_5.z;
  tmpvar_7[2].y = tmpvar_6.z;
  tmpvar_7[2].z = tmpvar_2.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_7 * (((_World2Object * tmpvar_9).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _LightTexture0;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_5 = vec3(0.0, 0.0, 0.0);
  tmpvar_6 = tmpvar_3;
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_4;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture2D (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_5 = tmpvar_26;
  lowp vec3 normal_27;
  normal_27.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_27.z = sqrt((1.0 - clamp (dot (normal_27.xy, normal_27.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (normal_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_6 = tmpvar_28;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_30;
  tmpvar_30 = ((tmpvar_29.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_30;
  tmpvar_3 = tmpvar_6;
  mediump vec3 tmpvar_31;
  tmpvar_31 = normalize(xlv_TEXCOORD2);
  lightDir_2 = tmpvar_31;
  highp vec3 tmpvar_32;
  tmpvar_32 = normalize(xlv_TEXCOORD1);
  highp float tmpvar_33;
  tmpvar_33 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  mediump vec3 viewDir_34;
  viewDir_34 = tmpvar_32;
  lowp float atten_35;
  atten_35 = texture2D (_LightTexture0, vec2(tmpvar_33)).w;
  lowp vec4 c_36;
  highp float nh_37;
  lowp float tmpvar_38;
  tmpvar_38 = max (0.0, dot (tmpvar_6, lightDir_2));
  mediump float tmpvar_39;
  tmpvar_39 = max (0.0, dot (tmpvar_6, normalize((lightDir_2 + viewDir_34))));
  nh_37 = tmpvar_39;
  mediump float arg1_40;
  arg1_40 = (tmpvar_7 * 128.0);
  highp float tmpvar_41;
  tmpvar_41 = (pow (nh_37, arg1_40) * tmpvar_8);
  highp vec3 tmpvar_42;
  tmpvar_42 = ((((tmpvar_5 * _LightColor0.xyz) * tmpvar_38) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_41)) * (atten_35 * 2.0));
  c_36.xyz = tmpvar_42;
  highp float tmpvar_43;
  tmpvar_43 = (tmpvar_12.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_41) * atten_35));
  c_36.w = tmpvar_43;
  c_1.xyz = c_36.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "POINT" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out mediump vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_5;
  highp vec3 tmpvar_6;
  tmpvar_5 = tmpvar_1.xyz;
  tmpvar_6 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = tmpvar_5.x;
  tmpvar_7[0].y = tmpvar_6.x;
  tmpvar_7[0].z = tmpvar_2.x;
  tmpvar_7[1].x = tmpvar_5.y;
  tmpvar_7[1].y = tmpvar_6.y;
  tmpvar_7[1].z = tmpvar_2.y;
  tmpvar_7[2].x = tmpvar_5.z;
  tmpvar_7[2].y = tmpvar_6.z;
  tmpvar_7[2].z = tmpvar_2.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_7 * (((_World2Object * tmpvar_9).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _Time;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _LightTexture0;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
in highp vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in mediump vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_5 = vec3(0.0, 0.0, 0.0);
  tmpvar_6 = tmpvar_3;
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_4;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_5 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (tmpvar_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_6 = tmpvar_28;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_30;
  tmpvar_30 = ((tmpvar_29.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_30;
  tmpvar_3 = tmpvar_6;
  mediump vec3 tmpvar_31;
  tmpvar_31 = normalize(xlv_TEXCOORD2);
  lightDir_2 = tmpvar_31;
  highp vec3 tmpvar_32;
  tmpvar_32 = normalize(xlv_TEXCOORD1);
  highp float tmpvar_33;
  tmpvar_33 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  mediump vec3 viewDir_34;
  viewDir_34 = tmpvar_32;
  lowp float atten_35;
  atten_35 = texture (_LightTexture0, vec2(tmpvar_33)).w;
  lowp vec4 c_36;
  highp float nh_37;
  lowp float tmpvar_38;
  tmpvar_38 = max (0.0, dot (tmpvar_6, lightDir_2));
  mediump float tmpvar_39;
  tmpvar_39 = max (0.0, dot (tmpvar_6, normalize((lightDir_2 + viewDir_34))));
  nh_37 = tmpvar_39;
  mediump float arg1_40;
  arg1_40 = (tmpvar_7 * 128.0);
  highp float tmpvar_41;
  tmpvar_41 = (pow (nh_37, arg1_40) * tmpvar_8);
  highp vec3 tmpvar_42;
  tmpvar_42 = ((((tmpvar_5 * _LightColor0.xyz) * tmpvar_38) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_41)) * (atten_35 * 2.0));
  c_36.xyz = tmpvar_42;
  highp float tmpvar_43;
  tmpvar_43 = (tmpvar_12.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_41) * atten_35));
  c_36.w = tmpvar_43;
  c_1.xyz = c_36.xyz;
  c_1.w = 0.0;
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 26 math
Keywords { "DIRECTIONAL" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_World2Object]
Vector 9 [_WorldSpaceCameraPos]
Vector 10 [_WorldSpaceLightPos0]
Vector 11 [unity_Scale]
Vector 12 [_MainTex_ST]
Vector 13 [_Clouds_ST]
"3.0-!!ARBvp1.0
PARAM c[14] = { { 1 },
		state.matrix.mvp,
		program.local[5..13] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MOV R0.xyz, vertex.attrib[14];
MUL R1.xyz, vertex.normal.zxyw, R0.yzxw;
MAD R1.xyz, vertex.normal.yzxw, R0.zxyw, -R1;
MOV R0.xyz, c[9];
MOV R0.w, c[0].x;
DP4 R2.z, R0, c[7];
DP4 R2.x, R0, c[5];
DP4 R2.y, R0, c[6];
MAD R0.xyz, R2, c[11].w, -vertex.position;
MUL R2.xyz, R1, vertex.attrib[14].w;
MOV R1, c[10];
DP4 R3.z, R1, c[7];
DP4 R3.x, R1, c[5];
DP4 R3.y, R1, c[6];
DP3 result.texcoord[1].y, R0, R2;
DP3 result.texcoord[2].y, R2, R3;
DP3 result.texcoord[1].z, vertex.normal, R0;
DP3 result.texcoord[1].x, R0, vertex.attrib[14];
DP3 result.texcoord[2].z, vertex.normal, R3;
DP3 result.texcoord[2].x, vertex.attrib[14], R3;
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[13].xyxy, c[13];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[12], c[12].zwzw;
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 26 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 29 math
Keywords { "DIRECTIONAL" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_World2Object]
Vector 8 [_WorldSpaceCameraPos]
Vector 9 [_WorldSpaceLightPos0]
Vector 10 [unity_Scale]
Vector 11 [_MainTex_ST]
Vector 12 [_Clouds_ST]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
def c13, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r0.xyz, v2.yzxw, r0.zxyw, -r1
mul r3.xyz, r0, v1.w
mov r0, c6
dp4 r4.z, c9, r0
mov r0, c5
mov r1.w, c13.x
mov r1.xyz, c8
dp4 r4.y, c9, r0
dp4 r2.z, r1, c6
dp4 r2.x, r1, c4
dp4 r2.y, r1, c5
mad r2.xyz, r2, c10.w, -v0
mov r1, c4
dp4 r4.x, c9, r1
dp3 o2.y, r2, r3
dp3 o3.y, r3, r4
dp3 o2.z, v2, r2
dp3 o2.x, r2, v1
dp3 o3.z, v2, r4
dp3 o3.x, v1, r4
mad o1.zw, v3.xyxy, c12.xyxy, c12
mad o1.xy, v3, c11, c11.zwzw
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 24 math
Keywords { "DIRECTIONAL" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 128
Vector 96 [_MainTex_ST]
Vector 112 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0
eefiecedolmhdabngfkhjhmojmligikjkeaahkeoabaaaaaakeafaaaaadaaaaaa
cmaaaaaapeaaaaaahmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheoiaaaaaaaaeaaaaaa
aiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaheaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefc
caaeaaaaeaaaabaaaiabaaaafjaaaaaeegiocaaaaaaaaaaaaiaaaaaafjaaaaae
egiocaaaabaaaaaaafaaaaaafjaaaaaeegiocaaaacaaaaaaabaaaaaafjaaaaae
egiocaaaadaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaa
abaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaae
pccabaaaaaaaaaaaabaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaa
acaaaaaagfaaaaadhccabaaaadaaaaaagiaaaaacacaaaaaadiaaaaaipcaabaaa
aaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaaadaaaaaa
pgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaa
adaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaadcaaaaal
mccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaahaaaaaakgiocaaa
aaaaaaaaahaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaacgbjbaaa
acaaaaaadcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaa
egacbaiaebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaa
pgbpbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaaaeaaaaaa
egiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaa
baaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaa
abaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaa
abaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaadaaaaaa
bdaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaaadaaaaaa
beaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaaacaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaaabaaaaaa
egacbaaaabaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaa
abaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaacaaaaaaaaaaaaaaegiccaaa
adaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabaaaaaaa
agiacaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaa
egiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaa
dcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabdaaaaaapgipcaaaacaaaaaa
aaaaaaaaegacbaaaabaaaaaabaaaaaahcccabaaaadaaaaaaegacbaaaaaaaaaaa
egacbaaaabaaaaaabaaaaaahbccabaaaadaaaaaaegbcbaaaabaaaaaaegacbaaa
abaaaaaabaaaaaaheccabaaaadaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaa
doaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_5;
  highp vec3 tmpvar_6;
  tmpvar_5 = tmpvar_1.xyz;
  tmpvar_6 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = tmpvar_5.x;
  tmpvar_7[0].y = tmpvar_6.x;
  tmpvar_7[0].z = tmpvar_2.x;
  tmpvar_7[1].x = tmpvar_5.y;
  tmpvar_7[1].y = tmpvar_6.y;
  tmpvar_7[1].z = tmpvar_2.y;
  tmpvar_7[2].x = tmpvar_5.z;
  tmpvar_7[2].y = tmpvar_6.z;
  tmpvar_7[2].z = tmpvar_2.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_4 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_7 * (((_World2Object * tmpvar_9).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_5 = vec3(0.0, 0.0, 0.0);
  tmpvar_6 = tmpvar_3;
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_4;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture2D (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_5 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (tmpvar_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_6 = tmpvar_28;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_30;
  tmpvar_30 = ((tmpvar_29.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_30;
  tmpvar_3 = tmpvar_6;
  lightDir_2 = xlv_TEXCOORD2;
  highp vec3 tmpvar_31;
  tmpvar_31 = normalize(xlv_TEXCOORD1);
  mediump vec3 viewDir_32;
  viewDir_32 = tmpvar_31;
  lowp vec4 c_33;
  highp float nh_34;
  lowp float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_6, lightDir_2));
  mediump float tmpvar_36;
  tmpvar_36 = max (0.0, dot (tmpvar_6, normalize((lightDir_2 + viewDir_32))));
  nh_34 = tmpvar_36;
  mediump float arg1_37;
  arg1_37 = (tmpvar_7 * 128.0);
  highp float tmpvar_38;
  tmpvar_38 = (pow (nh_34, arg1_37) * tmpvar_8);
  highp vec3 tmpvar_39;
  tmpvar_39 = ((((tmpvar_5 * _LightColor0.xyz) * tmpvar_35) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_38)) * 2.0);
  c_33.xyz = tmpvar_39;
  highp float tmpvar_40;
  tmpvar_40 = (tmpvar_12.w + ((_LightColor0.w * _SpecColor.w) * tmpvar_38));
  c_33.w = tmpvar_40;
  c_1.xyz = c_33.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_5;
  highp vec3 tmpvar_6;
  tmpvar_5 = tmpvar_1.xyz;
  tmpvar_6 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = tmpvar_5.x;
  tmpvar_7[0].y = tmpvar_6.x;
  tmpvar_7[0].z = tmpvar_2.x;
  tmpvar_7[1].x = tmpvar_5.y;
  tmpvar_7[1].y = tmpvar_6.y;
  tmpvar_7[1].z = tmpvar_2.y;
  tmpvar_7[2].x = tmpvar_5.z;
  tmpvar_7[2].y = tmpvar_6.z;
  tmpvar_7[2].z = tmpvar_2.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_4 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_7 * (((_World2Object * tmpvar_9).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_5 = vec3(0.0, 0.0, 0.0);
  tmpvar_6 = tmpvar_3;
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_4;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture2D (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_5 = tmpvar_26;
  lowp vec3 normal_27;
  normal_27.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_27.z = sqrt((1.0 - clamp (dot (normal_27.xy, normal_27.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (normal_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_6 = tmpvar_28;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_30;
  tmpvar_30 = ((tmpvar_29.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_30;
  tmpvar_3 = tmpvar_6;
  lightDir_2 = xlv_TEXCOORD2;
  highp vec3 tmpvar_31;
  tmpvar_31 = normalize(xlv_TEXCOORD1);
  mediump vec3 viewDir_32;
  viewDir_32 = tmpvar_31;
  lowp vec4 c_33;
  highp float nh_34;
  lowp float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_6, lightDir_2));
  mediump float tmpvar_36;
  tmpvar_36 = max (0.0, dot (tmpvar_6, normalize((lightDir_2 + viewDir_32))));
  nh_34 = tmpvar_36;
  mediump float arg1_37;
  arg1_37 = (tmpvar_7 * 128.0);
  highp float tmpvar_38;
  tmpvar_38 = (pow (nh_34, arg1_37) * tmpvar_8);
  highp vec3 tmpvar_39;
  tmpvar_39 = ((((tmpvar_5 * _LightColor0.xyz) * tmpvar_35) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_38)) * 2.0);
  c_33.xyz = tmpvar_39;
  highp float tmpvar_40;
  tmpvar_40 = (tmpvar_12.w + ((_LightColor0.w * _SpecColor.w) * tmpvar_38));
  c_33.w = tmpvar_40;
  c_1.xyz = c_33.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out mediump vec3 xlv_TEXCOORD2;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_5;
  highp vec3 tmpvar_6;
  tmpvar_5 = tmpvar_1.xyz;
  tmpvar_6 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = tmpvar_5.x;
  tmpvar_7[0].y = tmpvar_6.x;
  tmpvar_7[0].z = tmpvar_2.x;
  tmpvar_7[1].x = tmpvar_5.y;
  tmpvar_7[1].y = tmpvar_6.y;
  tmpvar_7[1].z = tmpvar_2.y;
  tmpvar_7[2].x = tmpvar_5.z;
  tmpvar_7[2].y = tmpvar_6.z;
  tmpvar_7[2].z = tmpvar_2.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_4 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_7 * (((_World2Object * tmpvar_9).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _Time;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
in highp vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in mediump vec3 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_5 = vec3(0.0, 0.0, 0.0);
  tmpvar_6 = tmpvar_3;
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_4;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_5 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (tmpvar_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_6 = tmpvar_28;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_30;
  tmpvar_30 = ((tmpvar_29.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_30;
  tmpvar_3 = tmpvar_6;
  lightDir_2 = xlv_TEXCOORD2;
  highp vec3 tmpvar_31;
  tmpvar_31 = normalize(xlv_TEXCOORD1);
  mediump vec3 viewDir_32;
  viewDir_32 = tmpvar_31;
  lowp vec4 c_33;
  highp float nh_34;
  lowp float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_6, lightDir_2));
  mediump float tmpvar_36;
  tmpvar_36 = max (0.0, dot (tmpvar_6, normalize((lightDir_2 + viewDir_32))));
  nh_34 = tmpvar_36;
  mediump float arg1_37;
  arg1_37 = (tmpvar_7 * 128.0);
  highp float tmpvar_38;
  tmpvar_38 = (pow (nh_34, arg1_37) * tmpvar_8);
  highp vec3 tmpvar_39;
  tmpvar_39 = ((((tmpvar_5 * _LightColor0.xyz) * tmpvar_35) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_38)) * 2.0);
  c_33.xyz = tmpvar_39;
  highp float tmpvar_40;
  tmpvar_40 = (tmpvar_12.w + ((_LightColor0.w * _SpecColor.w) * tmpvar_38));
  c_33.w = tmpvar_40;
  c_1.xyz = c_33.xyz;
  c_1.w = 0.0;
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 35 math
Keywords { "SPOT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Matrix 13 [_LightMatrix0]
Vector 17 [_WorldSpaceCameraPos]
Vector 18 [_WorldSpaceLightPos0]
Vector 19 [unity_Scale]
Vector 20 [_MainTex_ST]
Vector 21 [_Clouds_ST]
"3.0-!!ARBvp1.0
PARAM c[22] = { { 1 },
		state.matrix.mvp,
		program.local[5..21] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MOV R0.xyz, vertex.attrib[14];
MUL R2.xyz, vertex.normal.zxyw, R0.yzxw;
MAD R0.xyz, vertex.normal.yzxw, R0.zxyw, -R2;
MOV R1, c[18];
MOV R0.w, c[0].x;
DP4 R2.z, R1, c[11];
DP4 R2.x, R1, c[9];
DP4 R2.y, R1, c[10];
MAD R2.xyz, R2, c[19].w, -vertex.position;
MUL R1.xyz, R0, vertex.attrib[14].w;
MOV R0.xyz, c[17];
DP4 R3.z, R0, c[11];
DP4 R3.x, R0, c[9];
DP4 R3.y, R0, c[10];
MAD R0.xyz, R3, c[19].w, -vertex.position;
DP4 R0.w, vertex.position, c[8];
DP3 result.texcoord[1].y, R0, R1;
DP3 result.texcoord[1].z, vertex.normal, R0;
DP3 result.texcoord[1].x, R0, vertex.attrib[14];
DP4 R0.z, vertex.position, c[7];
DP4 R0.x, vertex.position, c[5];
DP4 R0.y, vertex.position, c[6];
DP3 result.texcoord[2].y, R1, R2;
DP3 result.texcoord[2].z, vertex.normal, R2;
DP3 result.texcoord[2].x, vertex.attrib[14], R2;
DP4 result.texcoord[3].w, R0, c[16];
DP4 result.texcoord[3].z, R0, c[15];
DP4 result.texcoord[3].y, R0, c[14];
DP4 result.texcoord[3].x, R0, c[13];
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[21].xyxy, c[21];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[20], c[20].zwzw;
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 35 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 38 math
Keywords { "SPOT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Matrix 12 [_LightMatrix0]
Vector 16 [_WorldSpaceCameraPos]
Vector 17 [_WorldSpaceLightPos0]
Vector 18 [unity_Scale]
Vector 19 [_MainTex_ST]
Vector 20 [_Clouds_ST]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
def c21, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mov r1.xyz, v1
mov r0, c10
dp4 r3.z, c17, r0
mov r0, c9
dp4 r3.y, c17, r0
mul r2.xyz, v2.zxyw, r1.yzxw
mov r1.xyz, v1
mad r2.xyz, v2.yzxw, r1.zxyw, -r2
mov r1, c8
dp4 r3.x, c17, r1
mad r0.xyz, r3, c18.w, -v0
mul r2.xyz, r2, v1.w
mov r1.xyz, c16
mov r1.w, c21.x
dp4 r0.w, v0, c7
dp3 o3.y, r2, r0
dp3 o3.z, v2, r0
dp3 o3.x, v1, r0
dp4 r0.z, v0, c6
dp4 r0.x, v0, c4
dp4 r0.y, v0, c5
dp4 r3.z, r1, c10
dp4 r3.x, r1, c8
dp4 r3.y, r1, c9
mad r1.xyz, r3, c18.w, -v0
dp3 o2.y, r1, r2
dp3 o2.z, v2, r1
dp3 o2.x, r1, v1
dp4 o4.w, r0, c15
dp4 o4.z, r0, c14
dp4 o4.y, r0, c13
dp4 o4.x, r0, c12
mad o1.zw, v3.xyxy, c20.xyxy, c20
mad o1.xy, v3, c19, c19.zwzw
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 33 math
Keywords { "SPOT" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 192
Matrix 48 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0
eefiecedboogmenbcgiampfdlmpmeggpdoilaldjabaaaaaaceahaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefciiafaaaaeaaaabaa
gcabaaaafjaaaaaeegiocaaaaaaaaaaaamaaaaaafjaaaaaeegiocaaaabaaaaaa
afaaaaaafjaaaaaeegiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaad
hcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaad
hccabaaaadaaaaaagfaaaaadpccabaaaaeaaaaaagiaaaaacacaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaa
egbabaaaadaaaaaaegiacaaaaaaaaaaaakaaaaaaogikcaaaaaaaaaaaakaaaaaa
dcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaalaaaaaa
kgiocaaaaaaaaaaaalaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaa
cgbjbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaa
abaaaaaaegacbaiaebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaa
aaaaaaaapgbpbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaa
aeaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
adaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaal
hcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaa
egacbaaaabaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaa
adaaaaaabdaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaa
adaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaaacaaaaaa
egacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaa
abaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaa
egacbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaacaaaaaaaaaaaaaa
egiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaa
baaaaaaaagiacaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaa
abaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaaegacbaaa
abaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabdaaaaaapgipcaaa
acaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaa
abaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaah
cccabaaaadaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaa
adaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaaadaaaaaa
egbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaadaaaaaaanaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaadaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaa
aaaaaaaaaeaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaaaaaaaaaadaaaaaa
agaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaa
aaaaaaaaafaaaaaakgakbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpccabaaa
aeaaaaaaegiocaaaaaaaaaaaagaaaaaapgapbaaaaaaaaaaaegaobaaaabaaaaaa
doaaaaab"
}
SubProgram "gles " {
Keywords { "SPOT" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_5;
  highp vec3 tmpvar_6;
  tmpvar_5 = tmpvar_1.xyz;
  tmpvar_6 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = tmpvar_5.x;
  tmpvar_7[0].y = tmpvar_6.x;
  tmpvar_7[0].z = tmpvar_2.x;
  tmpvar_7[1].x = tmpvar_5.y;
  tmpvar_7[1].y = tmpvar_6.y;
  tmpvar_7[1].z = tmpvar_2.y;
  tmpvar_7[2].x = tmpvar_5.z;
  tmpvar_7[2].y = tmpvar_6.z;
  tmpvar_7[2].z = tmpvar_2.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_7 * (((_World2Object * tmpvar_9).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_5 = vec3(0.0, 0.0, 0.0);
  tmpvar_6 = tmpvar_3;
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_4;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture2D (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_5 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (tmpvar_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_6 = tmpvar_28;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_30;
  tmpvar_30 = ((tmpvar_29.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_30;
  tmpvar_3 = tmpvar_6;
  mediump vec3 tmpvar_31;
  tmpvar_31 = normalize(xlv_TEXCOORD2);
  lightDir_2 = tmpvar_31;
  highp vec3 tmpvar_32;
  tmpvar_32 = normalize(xlv_TEXCOORD1);
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD3.xy / xlv_TEXCOORD3.w) + 0.5);
  highp float tmpvar_34;
  tmpvar_34 = dot (xlv_TEXCOORD3.xyz, xlv_TEXCOORD3.xyz);
  mediump vec3 viewDir_35;
  viewDir_35 = tmpvar_32;
  lowp float atten_36;
  atten_36 = ((float((xlv_TEXCOORD3.z > 0.0)) * texture2D (_LightTexture0, P_33).w) * texture2D (_LightTextureB0, vec2(tmpvar_34)).w);
  lowp vec4 c_37;
  highp float nh_38;
  lowp float tmpvar_39;
  tmpvar_39 = max (0.0, dot (tmpvar_6, lightDir_2));
  mediump float tmpvar_40;
  tmpvar_40 = max (0.0, dot (tmpvar_6, normalize((lightDir_2 + viewDir_35))));
  nh_38 = tmpvar_40;
  mediump float arg1_41;
  arg1_41 = (tmpvar_7 * 128.0);
  highp float tmpvar_42;
  tmpvar_42 = (pow (nh_38, arg1_41) * tmpvar_8);
  highp vec3 tmpvar_43;
  tmpvar_43 = ((((tmpvar_5 * _LightColor0.xyz) * tmpvar_39) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_42)) * (atten_36 * 2.0));
  c_37.xyz = tmpvar_43;
  highp float tmpvar_44;
  tmpvar_44 = (tmpvar_12.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_42) * atten_36));
  c_37.w = tmpvar_44;
  c_1.xyz = c_37.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "SPOT" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_5;
  highp vec3 tmpvar_6;
  tmpvar_5 = tmpvar_1.xyz;
  tmpvar_6 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = tmpvar_5.x;
  tmpvar_7[0].y = tmpvar_6.x;
  tmpvar_7[0].z = tmpvar_2.x;
  tmpvar_7[1].x = tmpvar_5.y;
  tmpvar_7[1].y = tmpvar_6.y;
  tmpvar_7[1].z = tmpvar_2.y;
  tmpvar_7[2].x = tmpvar_5.z;
  tmpvar_7[2].y = tmpvar_6.z;
  tmpvar_7[2].z = tmpvar_2.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_7 * (((_World2Object * tmpvar_9).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_5 = vec3(0.0, 0.0, 0.0);
  tmpvar_6 = tmpvar_3;
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_4;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture2D (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_5 = tmpvar_26;
  lowp vec3 normal_27;
  normal_27.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_27.z = sqrt((1.0 - clamp (dot (normal_27.xy, normal_27.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (normal_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_6 = tmpvar_28;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_30;
  tmpvar_30 = ((tmpvar_29.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_30;
  tmpvar_3 = tmpvar_6;
  mediump vec3 tmpvar_31;
  tmpvar_31 = normalize(xlv_TEXCOORD2);
  lightDir_2 = tmpvar_31;
  highp vec3 tmpvar_32;
  tmpvar_32 = normalize(xlv_TEXCOORD1);
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD3.xy / xlv_TEXCOORD3.w) + 0.5);
  highp float tmpvar_34;
  tmpvar_34 = dot (xlv_TEXCOORD3.xyz, xlv_TEXCOORD3.xyz);
  mediump vec3 viewDir_35;
  viewDir_35 = tmpvar_32;
  lowp float atten_36;
  atten_36 = ((float((xlv_TEXCOORD3.z > 0.0)) * texture2D (_LightTexture0, P_33).w) * texture2D (_LightTextureB0, vec2(tmpvar_34)).w);
  lowp vec4 c_37;
  highp float nh_38;
  lowp float tmpvar_39;
  tmpvar_39 = max (0.0, dot (tmpvar_6, lightDir_2));
  mediump float tmpvar_40;
  tmpvar_40 = max (0.0, dot (tmpvar_6, normalize((lightDir_2 + viewDir_35))));
  nh_38 = tmpvar_40;
  mediump float arg1_41;
  arg1_41 = (tmpvar_7 * 128.0);
  highp float tmpvar_42;
  tmpvar_42 = (pow (nh_38, arg1_41) * tmpvar_8);
  highp vec3 tmpvar_43;
  tmpvar_43 = ((((tmpvar_5 * _LightColor0.xyz) * tmpvar_39) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_42)) * (atten_36 * 2.0));
  c_37.xyz = tmpvar_43;
  highp float tmpvar_44;
  tmpvar_44 = (tmpvar_12.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_42) * atten_36));
  c_37.w = tmpvar_44;
  c_1.xyz = c_37.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "SPOT" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out mediump vec3 xlv_TEXCOORD2;
out highp vec4 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_5;
  highp vec3 tmpvar_6;
  tmpvar_5 = tmpvar_1.xyz;
  tmpvar_6 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = tmpvar_5.x;
  tmpvar_7[0].y = tmpvar_6.x;
  tmpvar_7[0].z = tmpvar_2.x;
  tmpvar_7[1].x = tmpvar_5.y;
  tmpvar_7[1].y = tmpvar_6.y;
  tmpvar_7[1].z = tmpvar_2.y;
  tmpvar_7[2].x = tmpvar_5.z;
  tmpvar_7[2].y = tmpvar_6.z;
  tmpvar_7[2].z = tmpvar_2.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_7 * (((_World2Object * tmpvar_9).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _Time;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
in highp vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in mediump vec3 xlv_TEXCOORD2;
in highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_5 = vec3(0.0, 0.0, 0.0);
  tmpvar_6 = tmpvar_3;
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_4;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_5 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (tmpvar_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_6 = tmpvar_28;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_30;
  tmpvar_30 = ((tmpvar_29.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_30;
  tmpvar_3 = tmpvar_6;
  mediump vec3 tmpvar_31;
  tmpvar_31 = normalize(xlv_TEXCOORD2);
  lightDir_2 = tmpvar_31;
  highp vec3 tmpvar_32;
  tmpvar_32 = normalize(xlv_TEXCOORD1);
  highp vec2 P_33;
  P_33 = ((xlv_TEXCOORD3.xy / xlv_TEXCOORD3.w) + 0.5);
  highp float tmpvar_34;
  tmpvar_34 = dot (xlv_TEXCOORD3.xyz, xlv_TEXCOORD3.xyz);
  mediump vec3 viewDir_35;
  viewDir_35 = tmpvar_32;
  lowp float atten_36;
  atten_36 = ((float((xlv_TEXCOORD3.z > 0.0)) * texture (_LightTexture0, P_33).w) * texture (_LightTextureB0, vec2(tmpvar_34)).w);
  lowp vec4 c_37;
  highp float nh_38;
  lowp float tmpvar_39;
  tmpvar_39 = max (0.0, dot (tmpvar_6, lightDir_2));
  mediump float tmpvar_40;
  tmpvar_40 = max (0.0, dot (tmpvar_6, normalize((lightDir_2 + viewDir_35))));
  nh_38 = tmpvar_40;
  mediump float arg1_41;
  arg1_41 = (tmpvar_7 * 128.0);
  highp float tmpvar_42;
  tmpvar_42 = (pow (nh_38, arg1_41) * tmpvar_8);
  highp vec3 tmpvar_43;
  tmpvar_43 = ((((tmpvar_5 * _LightColor0.xyz) * tmpvar_39) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_42)) * (atten_36 * 2.0));
  c_37.xyz = tmpvar_43;
  highp float tmpvar_44;
  tmpvar_44 = (tmpvar_12.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_42) * atten_36));
  c_37.w = tmpvar_44;
  c_1.xyz = c_37.xyz;
  c_1.w = 0.0;
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 34 math
Keywords { "POINT_COOKIE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Matrix 13 [_LightMatrix0]
Vector 17 [_WorldSpaceCameraPos]
Vector 18 [_WorldSpaceLightPos0]
Vector 19 [unity_Scale]
Vector 20 [_MainTex_ST]
Vector 21 [_Clouds_ST]
"3.0-!!ARBvp1.0
PARAM c[22] = { { 1 },
		state.matrix.mvp,
		program.local[5..21] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MOV R0.xyz, vertex.attrib[14];
MUL R2.xyz, vertex.normal.zxyw, R0.yzxw;
MAD R0.xyz, vertex.normal.yzxw, R0.zxyw, -R2;
MOV R1, c[18];
MOV R0.w, c[0].x;
DP4 R2.z, R1, c[11];
DP4 R2.x, R1, c[9];
DP4 R2.y, R1, c[10];
MAD R2.xyz, R2, c[19].w, -vertex.position;
MUL R1.xyz, R0, vertex.attrib[14].w;
MOV R0.xyz, c[17];
DP4 R3.z, R0, c[11];
DP4 R3.x, R0, c[9];
DP4 R3.y, R0, c[10];
MAD R0.xyz, R3, c[19].w, -vertex.position;
DP3 result.texcoord[1].y, R0, R1;
DP3 result.texcoord[1].z, vertex.normal, R0;
DP3 result.texcoord[1].x, R0, vertex.attrib[14];
DP4 R0.w, vertex.position, c[8];
DP4 R0.z, vertex.position, c[7];
DP4 R0.x, vertex.position, c[5];
DP4 R0.y, vertex.position, c[6];
DP3 result.texcoord[2].y, R1, R2;
DP3 result.texcoord[2].z, vertex.normal, R2;
DP3 result.texcoord[2].x, vertex.attrib[14], R2;
DP4 result.texcoord[3].z, R0, c[15];
DP4 result.texcoord[3].y, R0, c[14];
DP4 result.texcoord[3].x, R0, c[13];
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[21].xyxy, c[21];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[20], c[20].zwzw;
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 34 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 37 math
Keywords { "POINT_COOKIE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Matrix 12 [_LightMatrix0]
Vector 16 [_WorldSpaceCameraPos]
Vector 17 [_WorldSpaceLightPos0]
Vector 18 [unity_Scale]
Vector 19 [_MainTex_ST]
Vector 20 [_Clouds_ST]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
def c21, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mov r1.xyz, v1
mov r0, c10
dp4 r3.z, c17, r0
mov r0, c9
dp4 r3.y, c17, r0
mul r2.xyz, v2.zxyw, r1.yzxw
mov r1.xyz, v1
mad r2.xyz, v2.yzxw, r1.zxyw, -r2
mov r1, c8
dp4 r3.x, c17, r1
mad r0.xyz, r3, c18.w, -v0
mul r2.xyz, r2, v1.w
mov r1.xyz, c16
mov r1.w, c21.x
dp3 o3.y, r2, r0
dp3 o3.z, v2, r0
dp3 o3.x, v1, r0
dp4 r0.w, v0, c7
dp4 r0.z, v0, c6
dp4 r0.x, v0, c4
dp4 r0.y, v0, c5
dp4 r3.z, r1, c10
dp4 r3.x, r1, c8
dp4 r3.y, r1, c9
mad r1.xyz, r3, c18.w, -v0
dp3 o2.y, r1, r2
dp3 o2.z, v2, r1
dp3 o2.x, r1, v1
dp4 o4.z, r0, c14
dp4 o4.y, r0, c13
dp4 o4.x, r0, c12
mad o1.zw, v3.xyxy, c20.xyxy, c20
mad o1.xy, v3, c19, c19.zwzw
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 33 math
Keywords { "POINT_COOKIE" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 192
Matrix 48 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0
eefiecedkcfafeokfdfabomcohdmjpedblcpfomoabaaaaaaceahaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefciiafaaaaeaaaabaa
gcabaaaafjaaaaaeegiocaaaaaaaaaaaamaaaaaafjaaaaaeegiocaaaabaaaaaa
afaaaaaafjaaaaaeegiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaad
hcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaad
hccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaagiaaaaacacaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaa
egbabaaaadaaaaaaegiacaaaaaaaaaaaakaaaaaaogikcaaaaaaaaaaaakaaaaaa
dcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaalaaaaaa
kgiocaaaaaaaaaaaalaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaa
cgbjbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaa
abaaaaaaegacbaiaebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaa
aaaaaaaapgbpbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaa
aeaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
adaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaal
hcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaa
egacbaaaabaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaa
adaaaaaabdaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaa
adaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaaacaaaaaa
egacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaa
abaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaa
egacbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaacaaaaaaaaaaaaaa
egiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaa
baaaaaaaagiacaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaa
abaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaaegacbaaa
abaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabdaaaaaapgipcaaa
acaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaa
abaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaah
cccabaaaadaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaa
adaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaaadaaaaaa
egbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaadaaaaaaanaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaadaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaaegiccaaa
aaaaaaaaaeaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaaaaaaaaaadaaaaaa
agaabaaaaaaaaaaaegacbaaaabaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaa
aaaaaaaaafaaaaaakgakbaaaaaaaaaaaegacbaaaabaaaaaadcaaaaakhccabaaa
aeaaaaaaegiccaaaaaaaaaaaagaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaa
doaaaaab"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_5;
  highp vec3 tmpvar_6;
  tmpvar_5 = tmpvar_1.xyz;
  tmpvar_6 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = tmpvar_5.x;
  tmpvar_7[0].y = tmpvar_6.x;
  tmpvar_7[0].z = tmpvar_2.x;
  tmpvar_7[1].x = tmpvar_5.y;
  tmpvar_7[1].y = tmpvar_6.y;
  tmpvar_7[1].z = tmpvar_2.y;
  tmpvar_7[2].x = tmpvar_5.z;
  tmpvar_7[2].y = tmpvar_6.z;
  tmpvar_7[2].z = tmpvar_2.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_7 * (((_World2Object * tmpvar_9).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform lowp samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_5 = vec3(0.0, 0.0, 0.0);
  tmpvar_6 = tmpvar_3;
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_4;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture2D (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_5 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (tmpvar_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_6 = tmpvar_28;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_30;
  tmpvar_30 = ((tmpvar_29.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_30;
  tmpvar_3 = tmpvar_6;
  mediump vec3 tmpvar_31;
  tmpvar_31 = normalize(xlv_TEXCOORD2);
  lightDir_2 = tmpvar_31;
  highp vec3 tmpvar_32;
  tmpvar_32 = normalize(xlv_TEXCOORD1);
  highp float tmpvar_33;
  tmpvar_33 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  mediump vec3 viewDir_34;
  viewDir_34 = tmpvar_32;
  lowp float atten_35;
  atten_35 = (texture2D (_LightTextureB0, vec2(tmpvar_33)).w * textureCube (_LightTexture0, xlv_TEXCOORD3).w);
  lowp vec4 c_36;
  highp float nh_37;
  lowp float tmpvar_38;
  tmpvar_38 = max (0.0, dot (tmpvar_6, lightDir_2));
  mediump float tmpvar_39;
  tmpvar_39 = max (0.0, dot (tmpvar_6, normalize((lightDir_2 + viewDir_34))));
  nh_37 = tmpvar_39;
  mediump float arg1_40;
  arg1_40 = (tmpvar_7 * 128.0);
  highp float tmpvar_41;
  tmpvar_41 = (pow (nh_37, arg1_40) * tmpvar_8);
  highp vec3 tmpvar_42;
  tmpvar_42 = ((((tmpvar_5 * _LightColor0.xyz) * tmpvar_38) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_41)) * (atten_35 * 2.0));
  c_36.xyz = tmpvar_42;
  highp float tmpvar_43;
  tmpvar_43 = (tmpvar_12.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_41) * atten_35));
  c_36.w = tmpvar_43;
  c_1.xyz = c_36.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "POINT_COOKIE" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_5;
  highp vec3 tmpvar_6;
  tmpvar_5 = tmpvar_1.xyz;
  tmpvar_6 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = tmpvar_5.x;
  tmpvar_7[0].y = tmpvar_6.x;
  tmpvar_7[0].z = tmpvar_2.x;
  tmpvar_7[1].x = tmpvar_5.y;
  tmpvar_7[1].y = tmpvar_6.y;
  tmpvar_7[1].z = tmpvar_2.y;
  tmpvar_7[2].x = tmpvar_5.z;
  tmpvar_7[2].y = tmpvar_6.z;
  tmpvar_7[2].z = tmpvar_2.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_7 * (((_World2Object * tmpvar_9).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform lowp samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_5 = vec3(0.0, 0.0, 0.0);
  tmpvar_6 = tmpvar_3;
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_4;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture2D (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_5 = tmpvar_26;
  lowp vec3 normal_27;
  normal_27.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_27.z = sqrt((1.0 - clamp (dot (normal_27.xy, normal_27.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (normal_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_6 = tmpvar_28;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_30;
  tmpvar_30 = ((tmpvar_29.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_30;
  tmpvar_3 = tmpvar_6;
  mediump vec3 tmpvar_31;
  tmpvar_31 = normalize(xlv_TEXCOORD2);
  lightDir_2 = tmpvar_31;
  highp vec3 tmpvar_32;
  tmpvar_32 = normalize(xlv_TEXCOORD1);
  highp float tmpvar_33;
  tmpvar_33 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  mediump vec3 viewDir_34;
  viewDir_34 = tmpvar_32;
  lowp float atten_35;
  atten_35 = (texture2D (_LightTextureB0, vec2(tmpvar_33)).w * textureCube (_LightTexture0, xlv_TEXCOORD3).w);
  lowp vec4 c_36;
  highp float nh_37;
  lowp float tmpvar_38;
  tmpvar_38 = max (0.0, dot (tmpvar_6, lightDir_2));
  mediump float tmpvar_39;
  tmpvar_39 = max (0.0, dot (tmpvar_6, normalize((lightDir_2 + viewDir_34))));
  nh_37 = tmpvar_39;
  mediump float arg1_40;
  arg1_40 = (tmpvar_7 * 128.0);
  highp float tmpvar_41;
  tmpvar_41 = (pow (nh_37, arg1_40) * tmpvar_8);
  highp vec3 tmpvar_42;
  tmpvar_42 = ((((tmpvar_5 * _LightColor0.xyz) * tmpvar_38) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_41)) * (atten_35 * 2.0));
  c_36.xyz = tmpvar_42;
  highp float tmpvar_43;
  tmpvar_43 = (tmpvar_12.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_41) * atten_35));
  c_36.w = tmpvar_43;
  c_1.xyz = c_36.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out mediump vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_5;
  highp vec3 tmpvar_6;
  tmpvar_5 = tmpvar_1.xyz;
  tmpvar_6 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = tmpvar_5.x;
  tmpvar_7[0].y = tmpvar_6.x;
  tmpvar_7[0].z = tmpvar_2.x;
  tmpvar_7[1].x = tmpvar_5.y;
  tmpvar_7[1].y = tmpvar_6.y;
  tmpvar_7[1].z = tmpvar_2.y;
  tmpvar_7[2].x = tmpvar_5.z;
  tmpvar_7[2].y = tmpvar_6.z;
  tmpvar_7[2].z = tmpvar_2.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_7 * (((_World2Object * tmpvar_9).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _Time;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform lowp samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
in highp vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in mediump vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_5 = vec3(0.0, 0.0, 0.0);
  tmpvar_6 = tmpvar_3;
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_4;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_5 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (tmpvar_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_6 = tmpvar_28;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_30;
  tmpvar_30 = ((tmpvar_29.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_30;
  tmpvar_3 = tmpvar_6;
  mediump vec3 tmpvar_31;
  tmpvar_31 = normalize(xlv_TEXCOORD2);
  lightDir_2 = tmpvar_31;
  highp vec3 tmpvar_32;
  tmpvar_32 = normalize(xlv_TEXCOORD1);
  highp float tmpvar_33;
  tmpvar_33 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  mediump vec3 viewDir_34;
  viewDir_34 = tmpvar_32;
  lowp float atten_35;
  atten_35 = (texture (_LightTextureB0, vec2(tmpvar_33)).w * texture (_LightTexture0, xlv_TEXCOORD3).w);
  lowp vec4 c_36;
  highp float nh_37;
  lowp float tmpvar_38;
  tmpvar_38 = max (0.0, dot (tmpvar_6, lightDir_2));
  mediump float tmpvar_39;
  tmpvar_39 = max (0.0, dot (tmpvar_6, normalize((lightDir_2 + viewDir_34))));
  nh_37 = tmpvar_39;
  mediump float arg1_40;
  arg1_40 = (tmpvar_7 * 128.0);
  highp float tmpvar_41;
  tmpvar_41 = (pow (nh_37, arg1_40) * tmpvar_8);
  highp vec3 tmpvar_42;
  tmpvar_42 = ((((tmpvar_5 * _LightColor0.xyz) * tmpvar_38) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_41)) * (atten_35 * 2.0));
  c_36.xyz = tmpvar_42;
  highp float tmpvar_43;
  tmpvar_43 = (tmpvar_12.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_41) * atten_35));
  c_36.w = tmpvar_43;
  c_1.xyz = c_36.xyz;
  c_1.w = 0.0;
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 32 math
Keywords { "DIRECTIONAL_COOKIE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Matrix 13 [_LightMatrix0]
Vector 17 [_WorldSpaceCameraPos]
Vector 18 [_WorldSpaceLightPos0]
Vector 19 [unity_Scale]
Vector 20 [_MainTex_ST]
Vector 21 [_Clouds_ST]
"3.0-!!ARBvp1.0
PARAM c[22] = { { 1 },
		state.matrix.mvp,
		program.local[5..21] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MOV R0.xyz, vertex.attrib[14];
MUL R1.xyz, vertex.normal.zxyw, R0.yzxw;
MAD R1.xyz, vertex.normal.yzxw, R0.zxyw, -R1;
MOV R0.w, c[0].x;
MOV R0.xyz, c[17];
DP4 R2.z, R0, c[11];
DP4 R2.x, R0, c[9];
DP4 R2.y, R0, c[10];
MAD R0.xyz, R2, c[19].w, -vertex.position;
MUL R2.xyz, R1, vertex.attrib[14].w;
MOV R1, c[18];
DP3 result.texcoord[1].y, R0, R2;
DP4 R3.z, R1, c[11];
DP4 R3.x, R1, c[9];
DP4 R3.y, R1, c[10];
DP3 result.texcoord[1].z, vertex.normal, R0;
DP3 result.texcoord[1].x, R0, vertex.attrib[14];
DP4 R0.w, vertex.position, c[8];
DP4 R0.z, vertex.position, c[7];
DP4 R0.x, vertex.position, c[5];
DP4 R0.y, vertex.position, c[6];
DP3 result.texcoord[2].y, R2, R3;
DP3 result.texcoord[2].z, vertex.normal, R3;
DP3 result.texcoord[2].x, vertex.attrib[14], R3;
DP4 result.texcoord[3].y, R0, c[14];
DP4 result.texcoord[3].x, R0, c[13];
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[21].xyxy, c[21];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[20], c[20].zwzw;
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 32 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 35 math
Keywords { "DIRECTIONAL_COOKIE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Matrix 12 [_LightMatrix0]
Vector 16 [_WorldSpaceCameraPos]
Vector 17 [_WorldSpaceLightPos0]
Vector 18 [unity_Scale]
Vector 19 [_MainTex_ST]
Vector 20 [_Clouds_ST]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
def c21, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r0.xyz, v2.yzxw, r0.zxyw, -r1
mul r3.xyz, r0, v1.w
mov r0, c10
dp4 r4.z, c17, r0
mov r0, c9
dp4 r4.y, c17, r0
mov r1.w, c21.x
mov r1.xyz, c16
dp4 r2.z, r1, c10
dp4 r2.x, r1, c8
dp4 r2.y, r1, c9
mad r2.xyz, r2, c18.w, -v0
mov r1, c8
dp4 r4.x, c17, r1
dp4 r0.w, v0, c7
dp4 r0.z, v0, c6
dp4 r0.x, v0, c4
dp4 r0.y, v0, c5
dp3 o2.y, r2, r3
dp3 o3.y, r3, r4
dp3 o2.z, v2, r2
dp3 o2.x, r2, v1
dp3 o3.z, v2, r4
dp3 o3.x, v1, r4
dp4 o4.y, r0, c13
dp4 o4.x, r0, c12
mad o1.zw, v3.xyxy, c20.xyxy, c20
mad o1.xy, v3, c19, c19.zwzw
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 32 math
Keywords { "DIRECTIONAL_COOKIE" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 192
Matrix 48 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0
eefiecedlfleanfhjabdfadfmhfjnmimlgmfnmccabaaaaaapiagaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaadamaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcfmafaaaaeaaaabaa
fhabaaaafjaaaaaeegiocaaaaaaaaaaaamaaaaaafjaaaaaeegiocaaaabaaaaaa
afaaaaaafjaaaaaeegiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaad
hcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaad
hccabaaaadaaaaaagfaaaaaddccabaaaaeaaaaaagiaaaaacacaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaa
egbabaaaadaaaaaaegiacaaaaaaaaaaaakaaaaaaogikcaaaaaaaaaaaakaaaaaa
dcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaalaaaaaa
kgiocaaaaaaaaaaaalaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaa
cgbjbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaa
abaaaaaaegacbaiaebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaa
aaaaaaaapgbpbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaa
aeaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
adaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaal
hcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaa
egacbaaaabaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaa
adaaaaaabdaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaa
adaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaaacaaaaaa
egacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaa
abaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaa
egacbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaacaaaaaaaaaaaaaa
egiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaa
baaaaaaaagiacaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaa
abaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaaegacbaaa
abaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabdaaaaaapgipcaaa
acaaaaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahcccabaaaadaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaaadaaaaaaegbcbaaaabaaaaaa
egacbaaaabaaaaaabaaaaaaheccabaaaadaaaaaaegbcbaaaacaaaaaaegacbaaa
abaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaa
anaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaamaaaaaaagbabaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaa
aoaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaa
egiocaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadiaaaaai
dcaabaaaabaaaaaafgafbaaaaaaaaaaaegiacaaaaaaaaaaaaeaaaaaadcaaaaak
dcaabaaaaaaaaaaaegiacaaaaaaaaaaaadaaaaaaagaabaaaaaaaaaaaegaabaaa
abaaaaaadcaaaaakdcaabaaaaaaaaaaaegiacaaaaaaaaaaaafaaaaaakgakbaaa
aaaaaaaaegaabaaaaaaaaaaadcaaaaakdccabaaaaeaaaaaaegiacaaaaaaaaaaa
agaaaaaapgapbaaaaaaaaaaaegaabaaaaaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_5;
  highp vec3 tmpvar_6;
  tmpvar_5 = tmpvar_1.xyz;
  tmpvar_6 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = tmpvar_5.x;
  tmpvar_7[0].y = tmpvar_6.x;
  tmpvar_7[0].z = tmpvar_2.x;
  tmpvar_7[1].x = tmpvar_5.y;
  tmpvar_7[1].y = tmpvar_6.y;
  tmpvar_7[1].z = tmpvar_2.y;
  tmpvar_7[2].x = tmpvar_5.z;
  tmpvar_7[2].y = tmpvar_6.z;
  tmpvar_7[2].z = tmpvar_2.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_4 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_7 * (((_World2Object * tmpvar_9).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xy;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _LightTexture0;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_5 = vec3(0.0, 0.0, 0.0);
  tmpvar_6 = tmpvar_3;
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_4;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture2D (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_5 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (tmpvar_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_6 = tmpvar_28;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_30;
  tmpvar_30 = ((tmpvar_29.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_30;
  tmpvar_3 = tmpvar_6;
  lightDir_2 = xlv_TEXCOORD2;
  highp vec3 tmpvar_31;
  tmpvar_31 = normalize(xlv_TEXCOORD1);
  mediump vec3 viewDir_32;
  viewDir_32 = tmpvar_31;
  lowp float atten_33;
  atten_33 = texture2D (_LightTexture0, xlv_TEXCOORD3).w;
  lowp vec4 c_34;
  highp float nh_35;
  lowp float tmpvar_36;
  tmpvar_36 = max (0.0, dot (tmpvar_6, lightDir_2));
  mediump float tmpvar_37;
  tmpvar_37 = max (0.0, dot (tmpvar_6, normalize((lightDir_2 + viewDir_32))));
  nh_35 = tmpvar_37;
  mediump float arg1_38;
  arg1_38 = (tmpvar_7 * 128.0);
  highp float tmpvar_39;
  tmpvar_39 = (pow (nh_35, arg1_38) * tmpvar_8);
  highp vec3 tmpvar_40;
  tmpvar_40 = ((((tmpvar_5 * _LightColor0.xyz) * tmpvar_36) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_39)) * (atten_33 * 2.0));
  c_34.xyz = tmpvar_40;
  highp float tmpvar_41;
  tmpvar_41 = (tmpvar_12.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_39) * atten_33));
  c_34.w = tmpvar_41;
  c_1.xyz = c_34.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL_COOKIE" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_5;
  highp vec3 tmpvar_6;
  tmpvar_5 = tmpvar_1.xyz;
  tmpvar_6 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = tmpvar_5.x;
  tmpvar_7[0].y = tmpvar_6.x;
  tmpvar_7[0].z = tmpvar_2.x;
  tmpvar_7[1].x = tmpvar_5.y;
  tmpvar_7[1].y = tmpvar_6.y;
  tmpvar_7[1].z = tmpvar_2.y;
  tmpvar_7[2].x = tmpvar_5.z;
  tmpvar_7[2].y = tmpvar_6.z;
  tmpvar_7[2].z = tmpvar_2.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_4 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_7 * (((_World2Object * tmpvar_9).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xy;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _LightTexture0;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_5 = vec3(0.0, 0.0, 0.0);
  tmpvar_6 = tmpvar_3;
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_4;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture2D (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_5 = tmpvar_26;
  lowp vec3 normal_27;
  normal_27.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_27.z = sqrt((1.0 - clamp (dot (normal_27.xy, normal_27.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (normal_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_6 = tmpvar_28;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_30;
  tmpvar_30 = ((tmpvar_29.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_30;
  tmpvar_3 = tmpvar_6;
  lightDir_2 = xlv_TEXCOORD2;
  highp vec3 tmpvar_31;
  tmpvar_31 = normalize(xlv_TEXCOORD1);
  mediump vec3 viewDir_32;
  viewDir_32 = tmpvar_31;
  lowp float atten_33;
  atten_33 = texture2D (_LightTexture0, xlv_TEXCOORD3).w;
  lowp vec4 c_34;
  highp float nh_35;
  lowp float tmpvar_36;
  tmpvar_36 = max (0.0, dot (tmpvar_6, lightDir_2));
  mediump float tmpvar_37;
  tmpvar_37 = max (0.0, dot (tmpvar_6, normalize((lightDir_2 + viewDir_32))));
  nh_35 = tmpvar_37;
  mediump float arg1_38;
  arg1_38 = (tmpvar_7 * 128.0);
  highp float tmpvar_39;
  tmpvar_39 = (pow (nh_35, arg1_38) * tmpvar_8);
  highp vec3 tmpvar_40;
  tmpvar_40 = ((((tmpvar_5 * _LightColor0.xyz) * tmpvar_36) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_39)) * (atten_33 * 2.0));
  c_34.xyz = tmpvar_40;
  highp float tmpvar_41;
  tmpvar_41 = (tmpvar_12.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_39) * atten_33));
  c_34.w = tmpvar_41;
  c_1.xyz = c_34.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out mediump vec3 xlv_TEXCOORD2;
out highp vec2 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_5;
  highp vec3 tmpvar_6;
  tmpvar_5 = tmpvar_1.xyz;
  tmpvar_6 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = tmpvar_5.x;
  tmpvar_7[0].y = tmpvar_6.x;
  tmpvar_7[0].z = tmpvar_2.x;
  tmpvar_7[1].x = tmpvar_5.y;
  tmpvar_7[1].y = tmpvar_6.y;
  tmpvar_7[1].z = tmpvar_2.y;
  tmpvar_7[2].x = tmpvar_5.z;
  tmpvar_7[2].y = tmpvar_6.z;
  tmpvar_7[2].z = tmpvar_2.z;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_4 = tmpvar_8;
  highp vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_7 * (((_World2Object * tmpvar_9).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = tmpvar_4;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xy;
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _Time;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _LightTexture0;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
in highp vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in mediump vec3 xlv_TEXCOORD2;
in highp vec2 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  tmpvar_5 = vec3(0.0, 0.0, 0.0);
  tmpvar_6 = tmpvar_3;
  tmpvar_7 = 0.0;
  tmpvar_8 = 0.0;
  mediump vec3 clouds_9;
  mediump vec2 cloudUV_10;
  lowp float fresnel_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_13;
  tmpvar_13 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_11 = tmpvar_13;
  lowp float tmpvar_14;
  tmpvar_14 = pow (fresnel_11, _AtmosFalloff);
  lowp vec3 tmpvar_15;
  tmpvar_15 = (tmpvar_12.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_14)) * tmpvar_14));
  cloudUV_10 = tmpvar_4;
  highp float tmpvar_16;
  tmpvar_16 = (_Time.y * _CloudSpeed);
  highp float tmpvar_17;
  tmpvar_17 = fract(abs(tmpvar_16));
  highp float tmpvar_18;
  if ((tmpvar_16 >= 0.0)) {
    tmpvar_18 = tmpvar_17;
  } else {
    tmpvar_18 = -(tmpvar_17);
  };
  cloudUV_10.x = (cloudUV_10.x + tmpvar_18);
  mediump float height_19;
  height_19 = _CloudHeight;
  mediump vec3 viewDir_20;
  viewDir_20 = xlv_TEXCOORD1;
  highp vec3 v_21;
  mediump float tmpvar_22;
  tmpvar_22 = (height_19 - (height_19 / 2.0));
  mediump vec3 tmpvar_23;
  tmpvar_23 = normalize(viewDir_20);
  v_21 = tmpvar_23;
  v_21.z = (v_21.z + 0.42);
  highp vec2 tmpvar_24;
  tmpvar_24 = (cloudUV_10 + (tmpvar_22 * (v_21.xy / v_21.z)));
  cloudUV_10 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = texture (_Clouds, cloudUV_10).xyz;
  clouds_9 = tmpvar_25;
  mediump vec3 tmpvar_26;
  tmpvar_26 = (tmpvar_15 + clouds_9);
  tmpvar_5 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_28;
  tmpvar_28 = mix (tmpvar_27, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_6 = tmpvar_28;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_29;
  tmpvar_29 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_30;
  tmpvar_30 = ((tmpvar_29.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_30;
  tmpvar_3 = tmpvar_6;
  lightDir_2 = xlv_TEXCOORD2;
  highp vec3 tmpvar_31;
  tmpvar_31 = normalize(xlv_TEXCOORD1);
  mediump vec3 viewDir_32;
  viewDir_32 = tmpvar_31;
  lowp float atten_33;
  atten_33 = texture (_LightTexture0, xlv_TEXCOORD3).w;
  lowp vec4 c_34;
  highp float nh_35;
  lowp float tmpvar_36;
  tmpvar_36 = max (0.0, dot (tmpvar_6, lightDir_2));
  mediump float tmpvar_37;
  tmpvar_37 = max (0.0, dot (tmpvar_6, normalize((lightDir_2 + viewDir_32))));
  nh_35 = tmpvar_37;
  mediump float arg1_38;
  arg1_38 = (tmpvar_7 * 128.0);
  highp float tmpvar_39;
  tmpvar_39 = (pow (nh_35, arg1_38) * tmpvar_8);
  highp vec3 tmpvar_40;
  tmpvar_40 = ((((tmpvar_5 * _LightColor0.xyz) * tmpvar_36) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_39)) * (atten_33 * 2.0));
  c_34.xyz = tmpvar_40;
  highp float tmpvar_41;
  tmpvar_41 = (tmpvar_12.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_39) * atten_33));
  c_34.w = tmpvar_41;
  c_1.xyz = c_34.xyz;
  c_1.w = 0.0;
  _glesFragData[0] = c_1;
}



#endif"
}
}
Program "fp" {
SubProgram "opengl " {
// Stats: 67 math, 5 textures
Keywords { "POINT" }
Vector 0 [_Time]
Vector 1 [_LightColor0]
Vector 2 [_SpecColor]
Float 3 [_AtmosFalloff]
Float 4 [_CloudSpeed]
Float 5 [_CloudHeight]
Float 6 [_Shininess]
Vector 7 [_AtmosNear]
Vector 8 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightTexture0] 2D 5
"3.0-!!ARBfp1.0
PARAM c[11] = { program.local[0..8],
		{ 0, 0.5, 0.41999999, 2 },
		{ 1, 0, 128 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
DP3 R0.x, fragment.texcoord[2], fragment.texcoord[2];
RSQ R0.y, R0.x;
DP3 R0.x, fragment.texcoord[1], fragment.texcoord[1];
MUL R2.xyz, R0.y, fragment.texcoord[2];
RSQ R0.x, R0.x;
MAD R1.xyz, R0.x, fragment.texcoord[1], R2;
DP3 R0.w, R1, R1;
MUL R0.xyz, R0.x, fragment.texcoord[1];
RSQ R0.w, R0.w;
MUL R4.xyz, R0.w, R1;
ADD R0.z, R0, c[9];
RCP R0.w, R0.z;
MUL R1.xy, R0, R0.w;
MOV R0.z, c[9].y;
MAD R0.x, -R0.z, c[5], c[5];
MOV R0.zw, c[10].xyxz;
MUL R1.xy, R0.x, R1;
TEX R3.yw, fragment.texcoord[0], texture[2], 2D;
MAD R0.xy, R3.wyzw, c[9].w, -R0.z;
MUL R1.zw, R0.xyxy, R0.xyxy;
ADD_SAT R1.w, R1.z, R1;
MOV R0.z, c[4].x;
MUL R0.z, R0, c[0].y;
ABS R1.z, R0;
ADD R1.w, -R1, c[10].x;
FRC R1.z, R1;
CMP R1.z, R0, -R1, R1;
RSQ R1.w, R1.w;
RCP R0.z, R1.w;
ADD R3.xyz, -R0, c[10].yyxw;
ADD R1.z, fragment.texcoord[0], R1;
MOV R1.w, fragment.texcoord[0];
ADD R1.xy, R1.zwzw, R1;
TEX R1.xyz, R1, texture[1], 2D;
MAD R3.xyz, R1, R3, R0;
DP3 R0.x, R3, R4;
MAX R0.y, R0.x, c[9].x;
MOV R4.xyz, c[7];
ADD R1.w, -R1.x, c[10].x;
MUL R0.z, R0.w, c[6].x;
TEX R0.x, fragment.texcoord[0], texture[4], 2D;
MUL R0.w, R0.x, R1;
POW R0.x, R0.y, R0.z;
MUL R0.y, R0.w, c[2].x;
DP3 R0.z, fragment.texcoord[1], fragment.texcoord[1];
RSQ R0.w, R0.z;
MUL R1.w, R0.x, R0.y;
MUL_SAT R0.w, R0, fragment.texcoord[1].z;
ADD R0.w, -R0, c[10].x;
POW R0.w, R0.w, c[3].x;
ADD R4.xyz, -R4, c[8];
MAD R4.xyz, R0.w, R4, c[7];
TEX R0.xyz, fragment.texcoord[0], texture[0], 2D;
MAD R0.xyz, R4, R0.w, R0;
ADD R0.xyz, R1, R0;
DP3 R0.w, R3, R2;
MOV R1.xyz, c[2];
MAX R0.w, R0, c[9].x;
MUL R0.xyz, R0, c[1];
MUL R0.xyz, R0, R0.w;
DP3 R0.w, fragment.texcoord[3], fragment.texcoord[3];
TEX R0.w, R0.w, texture[5], 2D;
MUL R1.xyz, R1, c[1];
MUL R0.w, R0, c[9];
MAD R0.xyz, R1, R1.w, R0;
MUL result.color.xyz, R0, R0.w;
MOV result.color.w, c[9].x;
END
# 67 instructions, 5 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 68 math, 5 textures
Keywords { "POINT" }
Vector 0 [_Time]
Vector 1 [_LightColor0]
Vector 2 [_SpecColor]
Float 3 [_AtmosFalloff]
Float 4 [_CloudSpeed]
Float 5 [_CloudHeight]
Float 6 [_Shininess]
Vector 7 [_AtmosNear]
Vector 8 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightTexture0] 2D 5
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s4
dcl_2d s5
def c9, -0.50000000, 0.41999999, 2.00000000, -1.00000000
def c10, 1.00000000, 0.00000000, 128.00000000, 0
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
texld r2.yw, v0, s2
dp3_pp r0.y, v2, v2
rsq_pp r0.y, r0.y
dp3_pp r0.x, v1, v1
rsq_pp r0.x, r0.x
mul_pp r1.xyz, r0.x, v1
mul_pp r3.xyz, r0.y, v2
add r0.w, r1.z, c9.y
rcp r1.z, r0.w
mul r1.xy, r1, r1.z
mad_pp r0.xyz, r0.x, v1, r3
dp3_pp r1.w, r0, r0
rsq_pp r0.w, r1.w
mul_pp r0.xyz, r0.w, r0
mov_pp r1.z, c9.x
mad_pp r1.z, r1, c5.x, c5.x
mov r2.z, c0.y
mul r1.zw, r1.z, r1.xyxy
mad_pp r2.xy, r2.wyzw, c9.z, c9.w
mul_pp r1.xy, r2, r2
add_pp_sat r1.y, r1.x, r1
mul r2.z, c4.x, r2
abs r1.x, r2.z
mov_pp r0.w, c6.x
add_pp r1.y, -r1, c10.x
frc r1.x, r1
cmp r1.x, r2.z, r1, -r1
rsq_pp r1.y, r1.y
rcp_pp r2.z, r1.y
add_pp r4.xyz, -r2, c10.yyxw
mul_pp r2.w, c10.z, r0
add_pp r1.x, v0.z, r1
mov_pp r1.y, v0.w
add_pp r1.xy, r1, r1.zwzw
texld r1.xyz, r1, s1
mad_pp r2.xyz, r1, r4, r2
dp3_pp r0.x, r2, r0
max_pp r1.w, r0.x, c10.y
pow r0, r1.w, r2.w
mov_pp r4.xyz, c8
mov r1.w, r0.x
dp3 r0.y, v1, v1
rsq r0.x, r0.y
mul_sat r0.z, r0.x, v1
add_pp r0.y, -r1.x, c10.x
texld r0.x, v0, s4
mul r0.x, r0, r0.y
mul r2.w, r0.x, c2.x
add r3.w, -r0.z, c10.x
pow_pp r0, r3.w, c3.x
mul r0.w, r1, r2
mov_pp r1.w, r0.x
add_pp r4.xyz, -c7, r4
mad_pp r4.xyz, r1.w, r4, c7
texld r0.xyz, v0, s0
mad_pp r0.xyz, r4, r1.w, r0
dp3_pp r1.w, r2, r3
add_pp r0.xyz, r1, r0
mov_pp r2.xyz, c1
mul_pp r0.xyz, r0, c1
max_pp r1.x, r1.w, c10.y
mul_pp r1.xyz, r0, r1.x
dp3 r0.x, v3, v3
texld r0.x, r0.x, s5
mul_pp r1.w, r0.x, c9.z
mul_pp r2.xyz, c2, r2
mad r0.xyz, r2, r0.w, r1
mul oC0.xyz, r0, r1.w
mov_pp oC0.w, c10.y
"
}
SubProgram "d3d11 " {
// Stats: 52 math, 5 textures
Keywords { "POINT" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_Clouds] 2D 3
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Mask] 2D 4
SetTexture 4 [_LightTexture0] 2D 0
ConstBuffer "$Globals" 192
Vector 16 [_LightColor0]
Vector 32 [_SpecColor]
Float 116 [_AtmosFalloff]
Float 120 [_CloudSpeed]
Float 124 [_CloudHeight]
Float 128 [_Shininess]
Vector 132 [_AtmosNear] 3
Vector 144 [_AtmosFar] 3
ConstBuffer "UnityPerCamera" 128
Vector 0 [_Time]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
"ps_4_0
eefiecedgamlcocbhpemfdkoijamjomhjenbbokcabaaaaaadeajaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefccmaiaaaaeaaaaaaaalacaaaafjaaaaaeegiocaaaaaaaaaaaakaaaaaa
fjaaaaaeegiocaaaabaaaaaaabaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaad
aagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaa
fkaaaaadaagabaaaaeaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaae
aahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaafibiaaae
aahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaagcbaaaad
pcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaa
gcbaaaadhcbabaaaaeaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacaeaaaaaa
diaaaaajbcaabaaaaaaaaaaackiacaaaaaaaaaaaahaaaaaabkiacaaaabaaaaaa
aaaaaaaabnaaaaaiccaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaiaebaaaaaa
aaaaaaaabkaaaaagbcaabaaaaaaaaaaaakaabaiaibaaaaaaaaaaaaaadhaaaaak
bcaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaiaebaaaaaa
aaaaaaaaaaaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaackbabaaaabaaaaaa
diaaaaaiecaabaaaaaaaaaaadkiacaaaaaaaaaaaahaaaaaaabeaaaaaaaaaaadp
baaaaaahicaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaaeeaaaaaf
icaabaaaaaaaaaaadkaabaaaaaaaaaaadcaaaaajbcaabaaaabaaaaaackbabaaa
acaaaaaadkaabaaaaaaaaaaaabeaaaaadnaknhdodiaaaaahpcaabaaaacaaaaaa
pgapbaaaaaaaaaaacgbjbaaaacaaaaaaaoaaaaahdcaabaaaabaaaaaajgafbaaa
acaaaaaaagaabaaaabaaaaaadgaaaaafccaabaaaaaaaaaaadkbabaaaabaaaaaa
dcaaaaajdcaabaaaaaaaaaaakgakbaaaaaaaaaaaegaabaaaabaaaaaaegaabaaa
aaaaaaaaefaaaaajpcaabaaaaaaaaaaaegaabaaaaaaaaaaaeghobaaaabaaaaaa
aagabaaaadaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaaeghobaaa
acaaaaaaaagabaaaacaaaaaadcaaaaapdcaabaaaabaaaaaahgapbaaaabaaaaaa
aceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialp
aaaaaaaaaaaaaaaaapaaaaahicaabaaaaaaaaaaaegaabaaaabaaaaaaegaabaaa
abaaaaaaddaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaiadp
aaaaaaaiicaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaaaaaaiadp
elaaaaafecaabaaaabaaaaaadkaabaaaaaaaaaaaaaaaaaalhcaabaaaadaaaaaa
egacbaiaebaaaaaaabaaaaaaaceaaaaaaaaaaaaaaaaaaaaaaaaaiadpaaaaaaaa
dcaaaaajhcaabaaaabaaaaaaegacbaaaaaaaaaaaegacbaaaadaaaaaaegacbaaa
abaaaaaabaaaaaahicaabaaaaaaaaaaaegbcbaaaadaaaaaaegbcbaaaadaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadcaaaaajocaabaaaacaaaaaa
agbjbaaaadaaaaaapgapbaaaaaaaaaaafgaobaaaacaaaaaadgcaaaafbcaabaaa
acaaaaaaakaabaaaacaaaaaaaaaaaaaiicaabaaaabaaaaaaakaabaiaebaaaaaa
acaaaaaaabeaaaaaaaaaiadpcpaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaa
diaaaaaiicaabaaaabaaaaaadkaabaaaabaaaaaabkiacaaaaaaaaaaaahaaaaaa
bjaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaadaaaaaa
pgapbaaaaaaaaaaaegbcbaaaadaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaa
abaaaaaaegacbaaaadaaaaaadeaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaa
abeaaaaaaaaaaaaabaaaaaahbcaabaaaacaaaaaajgahbaaaacaaaaaajgahbaaa
acaaaaaaeeaaaaafbcaabaaaacaaaaaaakaabaaaacaaaaaadiaaaaahhcaabaaa
acaaaaaaagaabaaaacaaaaaajgahbaaaacaaaaaabaaaaaahbcaabaaaabaaaaaa
egacbaaaabaaaaaaegacbaaaacaaaaaadeaaaaahbcaabaaaabaaaaaaakaabaaa
abaaaaaaabeaaaaaaaaaaaaacpaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaa
diaaaaaiccaabaaaabaaaaaaakiacaaaaaaaaaaaaiaaaaaaabeaaaaaaaaaaaed
diaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaabkaabaaaabaaaaaabjaaaaaf
bcaabaaaabaaaaaaakaabaaaabaaaaaaaaaaaaaiccaabaaaabaaaaaaakaabaia
ebaaaaaaaaaaaaaaabeaaaaaaaaaiadpefaaaaajpcaabaaaacaaaaaaegbabaaa
abaaaaaaeghobaaaadaaaaaaaagabaaaaeaaaaaadiaaaaahccaabaaaabaaaaaa
bkaabaaaabaaaaaaakaabaaaacaaaaaadiaaaaaiccaabaaaabaaaaaabkaabaaa
abaaaaaaakiacaaaaaaaaaaaacaaaaaadiaaaaahbcaabaaaabaaaaaabkaabaaa
abaaaaaaakaabaaaabaaaaaadiaaaaajhcaabaaaacaaaaaaegiccaaaaaaaaaaa
abaaaaaaegiccaaaaaaaaaaaacaaaaaadiaaaaahhcaabaaaabaaaaaaagaabaaa
abaaaaaaegacbaaaacaaaaaaaaaaaaakhcaabaaaacaaaaaajgihcaiaebaaaaaa
aaaaaaaaaiaaaaaaegiccaaaaaaaaaaaajaaaaaadcaaaaakhcaabaaaacaaaaaa
pgapbaaaabaaaaaaegacbaaaacaaaaaajgihcaaaaaaaaaaaaiaaaaaaefaaaaaj
pcaabaaaadaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaabaaaaaa
dcaaaaajhcaabaaaacaaaaaaegacbaaaacaaaaaapgapbaaaabaaaaaaegacbaaa
adaaaaaaaaaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaacaaaaaa
diaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaaegiccaaaaaaaaaaaabaaaaaa
dcaaaaajhcaabaaaaaaaaaaaegacbaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaa
abaaaaaabaaaaaahicaabaaaaaaaaaaaegbcbaaaaeaaaaaaegbcbaaaaeaaaaaa
efaaaaajpcaabaaaabaaaaaapgapbaaaaaaaaaaaeghobaaaaeaaaaaaaagabaaa
aaaaaaaaaaaaaaahicaabaaaaaaaaaaaakaabaaaabaaaaaaakaabaaaabaaaaaa
diaaaaahhccabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaadgaaaaaf
iccabaaaaaaaaaaaabeaaaaaaaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "POINT" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "POINT" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "POINT" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 62 math, 4 textures
Keywords { "DIRECTIONAL" }
Vector 0 [_Time]
Vector 1 [_LightColor0]
Vector 2 [_SpecColor]
Float 3 [_AtmosFalloff]
Float 4 [_CloudSpeed]
Float 5 [_CloudHeight]
Float 6 [_Shininess]
Vector 7 [_AtmosNear]
Vector 8 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 4 [_Mask] 2D 4
"3.0-!!ARBfp1.0
PARAM c[11] = { program.local[0..8],
		{ 0, 0.5, 0.41999999, 2 },
		{ 1, 0, 128 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
DP3 R0.x, fragment.texcoord[1], fragment.texcoord[1];
RSQ R0.x, R0.x;
MOV R1.xyz, fragment.texcoord[2];
MAD R1.xyz, R0.x, fragment.texcoord[1], R1;
DP3 R0.w, R1, R1;
MUL R0.xyz, R0.x, fragment.texcoord[1];
RSQ R0.w, R0.w;
MUL R3.xyz, R0.w, R1;
ADD R0.z, R0, c[9];
RCP R0.w, R0.z;
MUL R1.xy, R0, R0.w;
MOV R0.z, c[9].y;
MAD R0.x, -R0.z, c[5], c[5];
MUL R0.xy, R0.x, R1;
MOV R0.zw, c[10].xyxz;
TEX R1.yw, fragment.texcoord[0], texture[2], 2D;
MAD R1.xy, R1.wyzw, c[9].w, -R0.z;
MUL R1.zw, R1.xyxy, R1.xyxy;
ADD_SAT R1.w, R1.z, R1;
MOV R0.z, c[4].x;
MUL R0.z, R0, c[0].y;
ABS R1.z, R0;
FRC R1.z, R1;
CMP R0.z, R0, -R1, R1;
ADD R1.w, -R1, c[10].x;
RSQ R1.w, R1.w;
RCP R1.z, R1.w;
ADD R2.x, fragment.texcoord[0].z, R0.z;
MOV R2.y, fragment.texcoord[0].w;
ADD R0.xy, R2, R0;
ADD R2.xyz, -R1, c[10].yyxw;
TEX R0.xyz, R0, texture[1], 2D;
MAD R1.xyz, R0, R2, R1;
DP3 R1.w, R1, R3;
MOV R3.xyz, c[7];
ADD R2.y, -R0.x, c[10].x;
TEX R2.x, fragment.texcoord[0], texture[4], 2D;
MUL R2.x, R2, R2.y;
MAX R1.w, R1, c[9].x;
MUL R0.w, R0, c[6].x;
POW R0.w, R1.w, R0.w;
MUL R1.w, R2.x, c[2].x;
DP3 R2.x, fragment.texcoord[1], fragment.texcoord[1];
MUL R0.w, R0, R1;
RSQ R1.w, R2.x;
MUL_SAT R1.w, R1, fragment.texcoord[1].z;
ADD R1.w, -R1, c[10].x;
POW R1.w, R1.w, c[3].x;
ADD R3.xyz, -R3, c[8];
MAD R3.xyz, R1.w, R3, c[7];
TEX R2.xyz, fragment.texcoord[0], texture[0], 2D;
MAD R2.xyz, R3, R1.w, R2;
DP3 R1.x, R1, fragment.texcoord[2];
MAX R1.w, R1.x, c[9].x;
ADD R0.xyz, R0, R2;
MUL R0.xyz, R0, c[1];
MOV R1.xyz, c[2];
MUL R0.xyz, R0, R1.w;
MUL R1.xyz, R1, c[1];
MAD R0.xyz, R1, R0.w, R0;
MUL result.color.xyz, R0, c[9].w;
MOV result.color.w, c[9].x;
END
# 62 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 64 math, 4 textures
Keywords { "DIRECTIONAL" }
Vector 0 [_Time]
Vector 1 [_LightColor0]
Vector 2 [_SpecColor]
Float 3 [_AtmosFalloff]
Float 4 [_CloudSpeed]
Float 5 [_CloudHeight]
Float 6 [_Shininess]
Vector 7 [_AtmosNear]
Vector 8 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 4 [_Mask] 2D 4
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s4
def c9, -0.50000000, 0.41999999, 2.00000000, -1.00000000
def c10, 1.00000000, 0.00000000, 128.00000000, 0
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dp3_pp r0.x, v1, v1
rsq_pp r0.x, r0.x
mul_pp r1.xyz, r0.x, v1
mov_pp r2.xyz, v2
mad_pp r0.xyz, r0.x, v1, r2
add r0.w, r1.z, c9.y
rcp r1.z, r0.w
mul r1.xy, r1, r1.z
dp3_pp r1.w, r0, r0
rsq_pp r0.w, r1.w
mul_pp r0.xyz, r0.w, r0
texld r2.yw, v0, s2
mov_pp r1.z, c9.x
mad_pp r1.z, r1, c5.x, c5.x
mov r2.z, c0.y
mul r1.zw, r1.z, r1.xyxy
mad_pp r2.xy, r2.wyzw, c9.z, c9.w
mul_pp r1.xy, r2, r2
add_pp_sat r1.y, r1.x, r1
mul r2.z, c4.x, r2
abs r1.x, r2.z
mov_pp r0.w, c6.x
add_pp r1.y, -r1, c10.x
frc r1.x, r1
cmp r1.x, r2.z, r1, -r1
rsq_pp r1.y, r1.y
rcp_pp r2.z, r1.y
add_pp r3.xyz, -r2, c10.yyxw
mul_pp r2.w, c10.z, r0
add_pp r1.x, v0.z, r1
mov_pp r1.y, v0.w
add_pp r1.xy, r1, r1.zwzw
texld r1.xyz, r1, s1
mad_pp r2.xyz, r1, r3, r2
dp3_pp r0.x, r2, r0
max_pp r1.w, r0.x, c10.y
pow r0, r1.w, r2.w
mov r1.w, r0.x
dp3 r0.y, v1, v1
rsq r0.x, r0.y
mul_sat r0.z, r0.x, v1
add_pp r0.y, -r1.x, c10.x
texld r0.x, v0, s4
mul r0.x, r0, r0.y
add r3.x, -r0.z, c10
mul r2.w, r0.x, c2.x
pow_pp r0, r3.x, c3.x
mul r0.w, r1, r2
mov_pp r1.w, r0.x
mov_pp r3.xyz, c8
add_pp r3.xyz, -c7, r3
mad_pp r3.xyz, r1.w, r3, c7
texld r0.xyz, v0, s0
mad_pp r0.xyz, r3, r1.w, r0
add_pp r0.xyz, r1, r0
dp3_pp r1.w, r2, v2
mov_pp r1.xyz, c1
max_pp r1.w, r1, c10.y
mul_pp r0.xyz, r0, c1
mul_pp r0.xyz, r0, r1.w
mul_pp r1.xyz, c2, r1
mad r0.xyz, r1, r0.w, r0
mul oC0.xyz, r0, c9.z
mov_pp oC0.w, c10.y
"
}
SubProgram "d3d11 " {
// Stats: 47 math, 4 textures
Keywords { "DIRECTIONAL" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 2
SetTexture 2 [_BumpMap] 2D 1
SetTexture 3 [_Mask] 2D 3
ConstBuffer "$Globals" 128
Vector 16 [_LightColor0]
Vector 32 [_SpecColor]
Float 52 [_AtmosFalloff]
Float 56 [_CloudSpeed]
Float 60 [_CloudHeight]
Float 64 [_Shininess]
Vector 68 [_AtmosNear] 3
Vector 80 [_AtmosFar] 3
ConstBuffer "UnityPerCamera" 128
Vector 0 [_Time]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
"ps_4_0
eefiecedmkiajfckakbijdobcbfabhjaijacanbnabaaaaaaemaiaaaaadaaaaaa
cmaaaaaaleaaaaaaoiaaaaaaejfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklklfdeieefcfmahaaaaeaaaaaaanhabaaaafjaaaaaeegiocaaa
aaaaaaaaagaaaaaafjaaaaaeegiocaaaabaaaaaaabaaaaaafkaaaaadaagabaaa
aaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaad
aagabaaaadaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaa
abaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaafibiaaaeaahabaaa
adaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaa
gcbaaaadhcbabaaaadaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacafaaaaaa
diaaaaajbcaabaaaaaaaaaaackiacaaaaaaaaaaaadaaaaaabkiacaaaabaaaaaa
aaaaaaaabnaaaaaiccaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaiaebaaaaaa
aaaaaaaabkaaaaagbcaabaaaaaaaaaaaakaabaiaibaaaaaaaaaaaaaadhaaaaak
bcaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaiaebaaaaaa
aaaaaaaaaaaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaackbabaaaabaaaaaa
diaaaaaiecaabaaaaaaaaaaadkiacaaaaaaaaaaaadaaaaaaabeaaaaaaaaaaadp
baaaaaahicaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaaeeaaaaaf
icaabaaaaaaaaaaadkaabaaaaaaaaaaadcaaaaajbcaabaaaabaaaaaackbabaaa
acaaaaaadkaabaaaaaaaaaaaabeaaaaadnaknhdodiaaaaahocaabaaaabaaaaaa
pgapbaaaaaaaaaaakgbebaaaacaaaaaadcaaaaajhcaabaaaacaaaaaaegbcbaaa
acaaaaaapgapbaaaaaaaaaaaegbcbaaaadaaaaaaaoaaaaahfcaabaaaabaaaaaa
kgalbaaaabaaaaaaagaabaaaabaaaaaadgcaaaafccaabaaaabaaaaaabkaabaaa
abaaaaaaaaaaaaaiicaabaaaaaaaaaaabkaabaiaebaaaaaaabaaaaaaabeaaaaa
aaaaiadpcpaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaaiicaabaaa
aaaaaaaadkaabaaaaaaaaaaabkiacaaaaaaaaaaaadaaaaaabjaaaaaficaabaaa
aaaaaaaadkaabaaaaaaaaaaadgaaaaafccaabaaaaaaaaaaadkbabaaaabaaaaaa
dcaaaaajdcaabaaaaaaaaaaakgakbaaaaaaaaaaaigaabaaaabaaaaaaegaabaaa
aaaaaaaaefaaaaajpcaabaaaabaaaaaaegaabaaaaaaaaaaaeghobaaaabaaaaaa
aagabaaaacaaaaaaefaaaaajpcaabaaaadaaaaaaegbabaaaabaaaaaaeghobaaa
acaaaaaaaagabaaaabaaaaaadcaaaaapdcaabaaaaaaaaaaahgapbaaaadaaaaaa
aceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialp
aaaaaaaaaaaaaaaaapaaaaahicaabaaaabaaaaaaegaabaaaaaaaaaaaegaabaaa
aaaaaaaaddaaaaahicaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaiadp
aaaaaaaiicaabaaaabaaaaaadkaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadp
elaaaaafecaabaaaaaaaaaaadkaabaaaabaaaaaaaaaaaaalhcaabaaaadaaaaaa
egacbaiaebaaaaaaaaaaaaaaaceaaaaaaaaaaaaaaaaaaaaaaaaaiadpaaaaaaaa
dcaaaaajhcaabaaaaaaaaaaaegacbaaaabaaaaaaegacbaaaadaaaaaaegacbaaa
aaaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaacaaaaaaegacbaaaacaaaaaa
eeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaacaaaaaa
pgapbaaaabaaaaaaegacbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaa
aaaaaaaaegacbaaaacaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaaaaaaaaaa
egbcbaaaadaaaaaadeaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaa
aaaaaaaadeaaaaahccaabaaaaaaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaaaaa
cpaaaaafccaabaaaaaaaaaaabkaabaaaaaaaaaaadiaaaaaiecaabaaaaaaaaaaa
akiacaaaaaaaaaaaaeaaaaaaabeaaaaaaaaaaaeddiaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaackaabaaaaaaaaaaabjaaaaafccaabaaaaaaaaaaabkaabaaa
aaaaaaaaaaaaaaaiecaabaaaaaaaaaaaakaabaiaebaaaaaaabaaaaaaabeaaaaa
aaaaiadpefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaaadaaaaaa
aagabaaaadaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaa
acaaaaaadiaaaaaiecaabaaaaaaaaaaackaabaaaaaaaaaaaakiacaaaaaaaaaaa
acaaaaaadiaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaaaaaaaaaa
diaaaaajhcaabaaaacaaaaaaegiccaaaaaaaaaaaabaaaaaaegiccaaaaaaaaaaa
acaaaaaadiaaaaahhcaabaaaacaaaaaafgafbaaaaaaaaaaaegacbaaaacaaaaaa
aaaaaaakhcaabaaaadaaaaaajgihcaiaebaaaaaaaaaaaaaaaeaaaaaaegiccaaa
aaaaaaaaafaaaaaadcaaaaakhcaabaaaadaaaaaapgapbaaaaaaaaaaaegacbaaa
adaaaaaajgihcaaaaaaaaaaaaeaaaaaaefaaaaajpcaabaaaaeaaaaaaegbabaaa
abaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaadcaaaaajocaabaaaaaaaaaaa
agajbaaaadaaaaaapgapbaaaaaaaaaaaagajbaaaaeaaaaaaaaaaaaahocaabaaa
aaaaaaaaagajbaaaabaaaaaafgaobaaaaaaaaaaadiaaaaaiocaabaaaaaaaaaaa
fgaobaaaaaaaaaaaagijcaaaaaaaaaaaabaaaaaadcaaaaajhcaabaaaaaaaaaaa
jgahbaaaaaaaaaaaagaabaaaaaaaaaaaegacbaaaacaaaaaaaaaaaaahhccabaaa
aaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaadgaaaaaficcabaaaaaaaaaaa
abeaaaaaaaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 73 math, 6 textures
Keywords { "SPOT" }
Vector 0 [_Time]
Vector 1 [_LightColor0]
Vector 2 [_SpecColor]
Float 3 [_AtmosFalloff]
Float 4 [_CloudSpeed]
Float 5 [_CloudHeight]
Float 6 [_Shininess]
Vector 7 [_AtmosNear]
Vector 8 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightTexture0] 2D 5
SetTexture 6 [_LightTextureB0] 2D 6
"3.0-!!ARBfp1.0
PARAM c[11] = { program.local[0..8],
		{ 0, 0.5, 0.41999999, 2 },
		{ 1, 0, 128 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
DP3 R0.x, fragment.texcoord[2], fragment.texcoord[2];
RSQ R0.y, R0.x;
DP3 R0.x, fragment.texcoord[1], fragment.texcoord[1];
MUL R2.xyz, R0.y, fragment.texcoord[2];
RSQ R0.x, R0.x;
MAD R1.xyz, R0.x, fragment.texcoord[1], R2;
DP3 R0.w, R1, R1;
MUL R0.xyz, R0.x, fragment.texcoord[1];
RSQ R0.w, R0.w;
MUL R4.xyz, R0.w, R1;
ADD R0.z, R0, c[9];
RCP R0.w, R0.z;
MUL R1.xy, R0, R0.w;
MOV R0.z, c[9].y;
MAD R0.x, -R0.z, c[5], c[5];
MOV R0.zw, c[10].xyxz;
MUL R1.xy, R0.x, R1;
TEX R3.yw, fragment.texcoord[0], texture[2], 2D;
MAD R0.xy, R3.wyzw, c[9].w, -R0.z;
MUL R1.zw, R0.xyxy, R0.xyxy;
ADD_SAT R1.w, R1.z, R1;
MOV R0.z, c[4].x;
MUL R0.z, R0, c[0].y;
ABS R1.z, R0;
ADD R1.w, -R1, c[10].x;
FRC R1.z, R1;
CMP R1.z, R0, -R1, R1;
RSQ R1.w, R1.w;
RCP R0.z, R1.w;
ADD R3.xyz, -R0, c[10].yyxw;
ADD R1.z, fragment.texcoord[0], R1;
MOV R1.w, fragment.texcoord[0];
ADD R1.xy, R1.zwzw, R1;
TEX R1.xyz, R1, texture[1], 2D;
MAD R3.xyz, R1, R3, R0;
DP3 R0.x, R3, R4;
MAX R0.y, R0.x, c[9].x;
MOV R4.xyz, c[7];
ADD R1.w, -R1.x, c[10].x;
MUL R0.z, R0.w, c[6].x;
TEX R0.x, fragment.texcoord[0], texture[4], 2D;
MUL R0.w, R0.x, R1;
POW R0.x, R0.y, R0.z;
MUL R0.y, R0.w, c[2].x;
DP3 R0.z, fragment.texcoord[1], fragment.texcoord[1];
RSQ R0.w, R0.z;
MUL R2.w, R0.x, R0.y;
MUL_SAT R0.w, R0, fragment.texcoord[1].z;
ADD R0.w, -R0, c[10].x;
DP3 R1.w, fragment.texcoord[3], fragment.texcoord[3];
POW R0.w, R0.w, c[3].x;
ADD R4.xyz, -R4, c[8];
MAD R4.xyz, R0.w, R4, c[7];
TEX R0.xyz, fragment.texcoord[0], texture[0], 2D;
MAD R0.xyz, R4, R0.w, R0;
ADD R0.xyz, R1, R0;
DP3 R0.w, R3, R2;
MOV R1.xyz, c[2];
MAX R0.w, R0, c[9].x;
MUL R0.xyz, R0, c[1];
MUL R0.xyz, R0, R0.w;
RCP R0.w, fragment.texcoord[3].w;
MAD R2.xy, fragment.texcoord[3], R0.w, c[9].y;
TEX R0.w, R2, texture[5], 2D;
SLT R2.x, c[9], fragment.texcoord[3].z;
MUL R1.xyz, R1, c[1];
TEX R1.w, R1.w, texture[6], 2D;
MUL R0.w, R2.x, R0;
MUL R0.w, R0, R1;
MUL R0.w, R0, c[9];
MAD R0.xyz, R1, R2.w, R0;
MUL result.color.xyz, R0, R0.w;
MOV result.color.w, c[9].x;
END
# 73 instructions, 5 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 73 math, 6 textures
Keywords { "SPOT" }
Vector 0 [_Time]
Vector 1 [_LightColor0]
Vector 2 [_SpecColor]
Float 3 [_AtmosFalloff]
Float 4 [_CloudSpeed]
Float 5 [_CloudHeight]
Float 6 [_Shininess]
Vector 7 [_AtmosNear]
Vector 8 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightTexture0] 2D 5
SetTexture 6 [_LightTextureB0] 2D 6
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s4
dcl_2d s5
dcl_2d s6
def c9, -0.50000000, 0.41999999, 2.00000000, -1.00000000
def c10, 1.00000000, 0.00000000, 128.00000000, 0.50000000
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3
texld r2.yw, v0, s2
dp3_pp r0.y, v2, v2
rsq_pp r0.y, r0.y
dp3_pp r0.x, v1, v1
rsq_pp r0.x, r0.x
mul_pp r1.xyz, r0.x, v1
mul_pp r3.xyz, r0.y, v2
mad_pp r0.xyz, r0.x, v1, r3
add r0.w, r1.z, c9.y
rcp r1.z, r0.w
mul r1.xy, r1, r1.z
dp3_pp r1.w, r0, r0
rsq_pp r0.w, r1.w
mul_pp r0.xyz, r0.w, r0
mov_pp r1.z, c9.x
mad_pp r1.z, r1, c5.x, c5.x
mov r2.z, c0.y
mul r1.zw, r1.z, r1.xyxy
mad_pp r2.xy, r2.wyzw, c9.z, c9.w
mul_pp r1.xy, r2, r2
add_pp_sat r1.y, r1.x, r1
mul r2.z, c4.x, r2
abs r1.x, r2.z
mov_pp r0.w, c6.x
add_pp r1.y, -r1, c10.x
frc r1.x, r1
cmp r1.x, r2.z, r1, -r1
rsq_pp r1.y, r1.y
rcp_pp r2.z, r1.y
add_pp r4.xyz, -r2, c10.yyxw
mul_pp r2.w, c10.z, r0
add_pp r1.x, v0.z, r1
mov_pp r1.y, v0.w
add_pp r1.xy, r1, r1.zwzw
texld r1.xyz, r1, s1
mad_pp r2.xyz, r1, r4, r2
dp3_pp r0.x, r2, r0
max_pp r1.w, r0.x, c10.y
pow r0, r1.w, r2.w
mov_pp r4.xyz, c8
dp3 r0.y, v1, v1
mov r1.w, r0.x
rsq r0.x, r0.y
mul_sat r0.z, r0.x, v1
add_pp r0.y, -r1.x, c10.x
texld r0.x, v0, s4
mul r0.x, r0, r0.y
mul r2.w, r0.x, c2.x
add r3.w, -r0.z, c10.x
pow_pp r0, r3.w, c3.x
mov_pp r0.w, r0.x
add_pp r4.xyz, -c7, r4
mad_pp r4.xyz, r0.w, r4, c7
texld r0.xyz, v0, s0
mad_pp r0.xyz, r4, r0.w, r0
add_pp r0.xyz, r1, r0
dp3_pp r0.w, r2, r3
mul_pp r0.xyz, r0, c1
max_pp r0.w, r0, c10.y
mul_pp r2.xyz, r0, r0.w
rcp r0.x, v3.w
mad r3.xy, v3, r0.x, c10.w
dp3 r0.x, v3, v3
texld r0.w, r3, s5
cmp r0.y, -v3.z, c10, c10.x
mul_pp r0.y, r0, r0.w
texld r0.x, r0.x, s6
mul_pp r0.w, r0.y, r0.x
mov_pp r1.xyz, c1
mul r1.w, r1, r2
mul_pp r0.xyz, c2, r1
mul_pp r0.w, r0, c9.z
mad r0.xyz, r0, r1.w, r2
mul oC0.xyz, r0, r0.w
mov_pp oC0.w, c10.y
"
}
SubProgram "d3d11 " {
// Stats: 57 math, 6 textures
Keywords { "SPOT" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_Clouds] 2D 4
SetTexture 2 [_BumpMap] 2D 3
SetTexture 3 [_Mask] 2D 5
SetTexture 4 [_LightTexture0] 2D 0
SetTexture 5 [_LightTextureB0] 2D 1
ConstBuffer "$Globals" 192
Vector 16 [_LightColor0]
Vector 32 [_SpecColor]
Float 116 [_AtmosFalloff]
Float 120 [_CloudSpeed]
Float 124 [_CloudHeight]
Float 128 [_Shininess]
Vector 132 [_AtmosNear] 3
Vector 144 [_AtmosFar] 3
ConstBuffer "UnityPerCamera" 128
Vector 0 [_Time]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
"ps_4_0
eefiecedpjhjpboebhmdjhjlboeeldljnbdminhgabaaaaaaamakaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapapaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefcaeajaaaaeaaaaaaaebacaaaafjaaaaaeegiocaaaaaaaaaaaakaaaaaa
fjaaaaaeegiocaaaabaaaaaaabaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaad
aagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaa
fkaaaaadaagabaaaaeaaaaaafkaaaaadaagabaaaafaaaaaafibiaaaeaahabaaa
aaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaa
acaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaa
aeaaaaaaffffaaaafibiaaaeaahabaaaafaaaaaaffffaaaagcbaaaadpcbabaaa
abaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaad
pcbabaaaaeaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacaeaaaaaadiaaaaaj
bcaabaaaaaaaaaaackiacaaaaaaaaaaaahaaaaaabkiacaaaabaaaaaaaaaaaaaa
bnaaaaaiccaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaa
bkaaaaagbcaabaaaaaaaaaaaakaabaiaibaaaaaaaaaaaaaadhaaaaakbcaabaaa
aaaaaaaabkaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaa
aaaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaackbabaaaabaaaaaadiaaaaai
ecaabaaaaaaaaaaadkiacaaaaaaaaaaaahaaaaaaabeaaaaaaaaaaadpbaaaaaah
icaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaaeeaaaaaficaabaaa
aaaaaaaadkaabaaaaaaaaaaadcaaaaajbcaabaaaabaaaaaackbabaaaacaaaaaa
dkaabaaaaaaaaaaaabeaaaaadnaknhdodiaaaaahpcaabaaaacaaaaaapgapbaaa
aaaaaaaacgbjbaaaacaaaaaaaoaaaaahdcaabaaaabaaaaaajgafbaaaacaaaaaa
agaabaaaabaaaaaadgaaaaafccaabaaaaaaaaaaadkbabaaaabaaaaaadcaaaaaj
dcaabaaaaaaaaaaakgakbaaaaaaaaaaaegaabaaaabaaaaaaegaabaaaaaaaaaaa
efaaaaajpcaabaaaaaaaaaaaegaabaaaaaaaaaaaeghobaaaabaaaaaaaagabaaa
aeaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaaeghobaaaacaaaaaa
aagabaaaadaaaaaadcaaaaapdcaabaaaabaaaaaahgapbaaaabaaaaaaaceaaaaa
aaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaa
aaaaaaaaapaaaaahicaabaaaaaaaaaaaegaabaaaabaaaaaaegaabaaaabaaaaaa
ddaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaiadpaaaaaaai
icaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaaaaaaiadpelaaaaaf
ecaabaaaabaaaaaadkaabaaaaaaaaaaaaaaaaaalhcaabaaaadaaaaaaegacbaia
ebaaaaaaabaaaaaaaceaaaaaaaaaaaaaaaaaaaaaaaaaiadpaaaaaaaadcaaaaaj
hcaabaaaabaaaaaaegacbaaaaaaaaaaaegacbaaaadaaaaaaegacbaaaabaaaaaa
baaaaaahicaabaaaaaaaaaaaegbcbaaaadaaaaaaegbcbaaaadaaaaaaeeaaaaaf
icaabaaaaaaaaaaadkaabaaaaaaaaaaadcaaaaajocaabaaaacaaaaaaagbjbaaa
adaaaaaapgapbaaaaaaaaaaafgaobaaaacaaaaaadgcaaaafbcaabaaaacaaaaaa
akaabaaaacaaaaaaaaaaaaaiicaabaaaabaaaaaaakaabaiaebaaaaaaacaaaaaa
abeaaaaaaaaaiadpcpaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaai
icaabaaaabaaaaaadkaabaaaabaaaaaabkiacaaaaaaaaaaaahaaaaaabjaaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaadaaaaaapgapbaaa
aaaaaaaaegbcbaaaadaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaabaaaaaa
egacbaaaadaaaaaadeaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaa
aaaaaaaabaaaaaahbcaabaaaacaaaaaajgahbaaaacaaaaaajgahbaaaacaaaaaa
eeaaaaafbcaabaaaacaaaaaaakaabaaaacaaaaaadiaaaaahhcaabaaaacaaaaaa
agaabaaaacaaaaaajgahbaaaacaaaaaabaaaaaahbcaabaaaabaaaaaaegacbaaa
abaaaaaaegacbaaaacaaaaaadeaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaa
abeaaaaaaaaaaaaacpaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaadiaaaaai
ccaabaaaabaaaaaaakiacaaaaaaaaaaaaiaaaaaaabeaaaaaaaaaaaeddiaaaaah
bcaabaaaabaaaaaaakaabaaaabaaaaaabkaabaaaabaaaaaabjaaaaafbcaabaaa
abaaaaaaakaabaaaabaaaaaaaaaaaaaiccaabaaaabaaaaaaakaabaiaebaaaaaa
aaaaaaaaabeaaaaaaaaaiadpefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaa
eghobaaaadaaaaaaaagabaaaafaaaaaadiaaaaahccaabaaaabaaaaaabkaabaaa
abaaaaaaakaabaaaacaaaaaadiaaaaaiccaabaaaabaaaaaabkaabaaaabaaaaaa
akiacaaaaaaaaaaaacaaaaaadiaaaaahbcaabaaaabaaaaaabkaabaaaabaaaaaa
akaabaaaabaaaaaadiaaaaajhcaabaaaacaaaaaaegiccaaaaaaaaaaaabaaaaaa
egiccaaaaaaaaaaaacaaaaaadiaaaaahhcaabaaaabaaaaaaagaabaaaabaaaaaa
egacbaaaacaaaaaaaaaaaaakhcaabaaaacaaaaaajgihcaiaebaaaaaaaaaaaaaa
aiaaaaaaegiccaaaaaaaaaaaajaaaaaadcaaaaakhcaabaaaacaaaaaapgapbaaa
abaaaaaaegacbaaaacaaaaaajgihcaaaaaaaaaaaaiaaaaaaefaaaaajpcaabaaa
adaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaacaaaaaadcaaaaaj
hcaabaaaacaaaaaaegacbaaaacaaaaaapgapbaaaabaaaaaaegacbaaaadaaaaaa
aaaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaacaaaaaadiaaaaai
hcaabaaaaaaaaaaaegacbaaaaaaaaaaaegiccaaaaaaaaaaaabaaaaaadcaaaaaj
hcaabaaaaaaaaaaaegacbaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaa
aoaaaaahdcaabaaaabaaaaaaegbabaaaaeaaaaaapgbpbaaaaeaaaaaaaaaaaaak
dcaabaaaabaaaaaaegaabaaaabaaaaaaaceaaaaaaaaaaadpaaaaaadpaaaaaaaa
aaaaaaaaefaaaaajpcaabaaaabaaaaaaegaabaaaabaaaaaaeghobaaaaeaaaaaa
aagabaaaaaaaaaaadbaaaaahicaabaaaaaaaaaaaabeaaaaaaaaaaaaackbabaaa
aeaaaaaaabaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaiadp
diaaaaahicaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaaaaaaaaaabaaaaaah
bcaabaaaabaaaaaaegbcbaaaaeaaaaaaegbcbaaaaeaaaaaaefaaaaajpcaabaaa
abaaaaaaagaabaaaabaaaaaaeghobaaaafaaaaaaaagabaaaabaaaaaaapaaaaah
icaabaaaaaaaaaaapgapbaaaaaaaaaaaagaabaaaabaaaaaadiaaaaahhccabaaa
aaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaadgaaaaaficcabaaaaaaaaaaa
abeaaaaaaaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "SPOT" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "SPOT" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "SPOT" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 69 math, 6 textures
Keywords { "POINT_COOKIE" }
Vector 0 [_Time]
Vector 1 [_LightColor0]
Vector 2 [_SpecColor]
Float 3 [_AtmosFalloff]
Float 4 [_CloudSpeed]
Float 5 [_CloudHeight]
Float 6 [_Shininess]
Vector 7 [_AtmosNear]
Vector 8 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightTextureB0] 2D 5
SetTexture 6 [_LightTexture0] CUBE 6
"3.0-!!ARBfp1.0
PARAM c[11] = { program.local[0..8],
		{ 0, 0.5, 0.41999999, 2 },
		{ 1, 0, 128 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
DP3 R0.x, fragment.texcoord[2], fragment.texcoord[2];
RSQ R0.y, R0.x;
DP3 R0.x, fragment.texcoord[1], fragment.texcoord[1];
MUL R2.xyz, R0.y, fragment.texcoord[2];
RSQ R0.x, R0.x;
MAD R1.xyz, R0.x, fragment.texcoord[1], R2;
DP3 R0.w, R1, R1;
MUL R0.xyz, R0.x, fragment.texcoord[1];
RSQ R0.w, R0.w;
MUL R4.xyz, R0.w, R1;
ADD R0.z, R0, c[9];
RCP R0.w, R0.z;
MUL R1.xy, R0, R0.w;
MOV R0.z, c[9].y;
MAD R0.x, -R0.z, c[5], c[5];
MOV R0.zw, c[10].xyxz;
MUL R1.xy, R0.x, R1;
TEX R3.yw, fragment.texcoord[0], texture[2], 2D;
MAD R0.xy, R3.wyzw, c[9].w, -R0.z;
MUL R1.zw, R0.xyxy, R0.xyxy;
ADD_SAT R1.w, R1.z, R1;
MOV R0.z, c[4].x;
MUL R0.z, R0, c[0].y;
ABS R1.z, R0;
ADD R1.w, -R1, c[10].x;
FRC R1.z, R1;
CMP R1.z, R0, -R1, R1;
RSQ R1.w, R1.w;
RCP R0.z, R1.w;
ADD R3.xyz, -R0, c[10].yyxw;
ADD R1.z, fragment.texcoord[0], R1;
MOV R1.w, fragment.texcoord[0];
ADD R1.xy, R1.zwzw, R1;
TEX R1.xyz, R1, texture[1], 2D;
MAD R3.xyz, R1, R3, R0;
DP3 R0.x, R3, R4;
MAX R0.y, R0.x, c[9].x;
MOV R4.xyz, c[7];
ADD R1.w, -R1.x, c[10].x;
MUL R0.z, R0.w, c[6].x;
TEX R0.x, fragment.texcoord[0], texture[4], 2D;
MUL R0.w, R0.x, R1;
POW R0.x, R0.y, R0.z;
MUL R0.y, R0.w, c[2].x;
DP3 R0.z, fragment.texcoord[1], fragment.texcoord[1];
RSQ R0.w, R0.z;
MUL R1.w, R0.x, R0.y;
MUL_SAT R0.w, R0, fragment.texcoord[1].z;
ADD R0.w, -R0, c[10].x;
POW R0.w, R0.w, c[3].x;
ADD R4.xyz, -R4, c[8];
MAD R4.xyz, R0.w, R4, c[7];
TEX R0.xyz, fragment.texcoord[0], texture[0], 2D;
MAD R0.xyz, R4, R0.w, R0;
DP3 R0.w, R3, R2;
ADD R0.xyz, R1, R0;
MOV R1.xyz, c[2];
DP3 R2.x, fragment.texcoord[3], fragment.texcoord[3];
MAX R0.w, R0, c[9].x;
MUL R0.xyz, R0, c[1];
MUL R0.xyz, R0, R0.w;
MUL R1.xyz, R1, c[1];
TEX R0.w, fragment.texcoord[3], texture[6], CUBE;
TEX R2.w, R2.x, texture[5], 2D;
MUL R0.w, R2, R0;
MUL R0.w, R0, c[9];
MAD R0.xyz, R1, R1.w, R0;
MUL result.color.xyz, R0, R0.w;
MOV result.color.w, c[9].x;
END
# 69 instructions, 5 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 69 math, 6 textures
Keywords { "POINT_COOKIE" }
Vector 0 [_Time]
Vector 1 [_LightColor0]
Vector 2 [_SpecColor]
Float 3 [_AtmosFalloff]
Float 4 [_CloudSpeed]
Float 5 [_CloudHeight]
Float 6 [_Shininess]
Vector 7 [_AtmosNear]
Vector 8 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightTextureB0] 2D 5
SetTexture 6 [_LightTexture0] CUBE 6
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s4
dcl_2d s5
dcl_cube s6
def c9, -0.50000000, 0.41999999, 2.00000000, -1.00000000
def c10, 1.00000000, 0.00000000, 128.00000000, 0
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
texld r2.yw, v0, s2
dp3_pp r0.y, v2, v2
rsq_pp r0.y, r0.y
dp3_pp r0.x, v1, v1
rsq_pp r0.x, r0.x
mul_pp r1.xyz, r0.x, v1
mul_pp r3.xyz, r0.y, v2
add r0.w, r1.z, c9.y
rcp r1.z, r0.w
mul r1.xy, r1, r1.z
mad_pp r0.xyz, r0.x, v1, r3
dp3_pp r1.w, r0, r0
rsq_pp r0.w, r1.w
mul_pp r0.xyz, r0.w, r0
mov_pp r1.z, c9.x
mad_pp r1.z, r1, c5.x, c5.x
mov r2.z, c0.y
mul r1.zw, r1.z, r1.xyxy
mad_pp r2.xy, r2.wyzw, c9.z, c9.w
mul_pp r1.xy, r2, r2
add_pp_sat r1.y, r1.x, r1
mul r2.z, c4.x, r2
abs r1.x, r2.z
mov_pp r0.w, c6.x
add_pp r1.y, -r1, c10.x
frc r1.x, r1
cmp r1.x, r2.z, r1, -r1
rsq_pp r1.y, r1.y
rcp_pp r2.z, r1.y
add_pp r4.xyz, -r2, c10.yyxw
mul_pp r2.w, c10.z, r0
add_pp r1.x, v0.z, r1
mov_pp r1.y, v0.w
add_pp r1.xy, r1, r1.zwzw
texld r1.xyz, r1, s1
mad_pp r2.xyz, r1, r4, r2
dp3_pp r0.x, r2, r0
max_pp r1.w, r0.x, c10.y
pow r0, r1.w, r2.w
mov_pp r4.xyz, c8
dp3 r0.y, v1, v1
mov r1.w, r0.x
rsq r0.x, r0.y
mul_sat r0.z, r0.x, v1
add_pp r0.y, -r1.x, c10.x
texld r0.x, v0, s4
mul r0.x, r0, r0.y
mul r2.w, r0.x, c2.x
add r3.w, -r0.z, c10.x
pow_pp r0, r3.w, c3.x
mov_pp r0.w, r0.x
add_pp r4.xyz, -c7, r4
mad_pp r4.xyz, r0.w, r4, c7
texld r0.xyz, v0, s0
mad_pp r0.xyz, r4, r0.w, r0
add_pp r0.xyz, r1, r0
dp3_pp r0.w, r2, r3
mul_pp r0.xyz, r0, c1
max_pp r0.w, r0, c10.y
mul_pp r2.xyz, r0, r0.w
dp3 r0.x, v3, v3
texld r0.x, r0.x, s5
texld r0.w, v3, s6
mul r0.w, r0.x, r0
mov_pp r1.xyz, c1
mul r1.w, r1, r2
mul_pp r0.xyz, c2, r1
mul_pp r0.w, r0, c9.z
mad r0.xyz, r0, r1.w, r2
mul oC0.xyz, r0, r0.w
mov_pp oC0.w, c10.y
"
}
SubProgram "d3d11 " {
// Stats: 52 math, 6 textures
Keywords { "POINT_COOKIE" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_Clouds] 2D 4
SetTexture 2 [_BumpMap] 2D 3
SetTexture 3 [_Mask] 2D 5
SetTexture 4 [_LightTextureB0] 2D 1
SetTexture 5 [_LightTexture0] CUBE 0
ConstBuffer "$Globals" 192
Vector 16 [_LightColor0]
Vector 32 [_SpecColor]
Float 116 [_AtmosFalloff]
Float 120 [_CloudSpeed]
Float 124 [_CloudHeight]
Float 128 [_Shininess]
Vector 132 [_AtmosNear] 3
Vector 144 [_AtmosFar] 3
ConstBuffer "UnityPerCamera" 128
Vector 0 [_Time]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
"ps_4_0
eefiecedioaafamkecpiilcmafmljkckbenmojnoabaaaaaaheajaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefcgmaiaaaaeaaaaaaablacaaaafjaaaaaeegiocaaaaaaaaaaaakaaaaaa
fjaaaaaeegiocaaaabaaaaaaabaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaad
aagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaa
fkaaaaadaagabaaaaeaaaaaafkaaaaadaagabaaaafaaaaaafibiaaaeaahabaaa
aaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaa
acaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaa
aeaaaaaaffffaaaafidaaaaeaahabaaaafaaaaaaffffaaaagcbaaaadpcbabaaa
abaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaad
hcbabaaaaeaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacaeaaaaaadiaaaaaj
bcaabaaaaaaaaaaackiacaaaaaaaaaaaahaaaaaabkiacaaaabaaaaaaaaaaaaaa
bnaaaaaiccaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaa
bkaaaaagbcaabaaaaaaaaaaaakaabaiaibaaaaaaaaaaaaaadhaaaaakbcaabaaa
aaaaaaaabkaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaa
aaaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaackbabaaaabaaaaaadiaaaaai
ecaabaaaaaaaaaaadkiacaaaaaaaaaaaahaaaaaaabeaaaaaaaaaaadpbaaaaaah
icaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaaeeaaaaaficaabaaa
aaaaaaaadkaabaaaaaaaaaaadcaaaaajbcaabaaaabaaaaaackbabaaaacaaaaaa
dkaabaaaaaaaaaaaabeaaaaadnaknhdodiaaaaahpcaabaaaacaaaaaapgapbaaa
aaaaaaaacgbjbaaaacaaaaaaaoaaaaahdcaabaaaabaaaaaajgafbaaaacaaaaaa
agaabaaaabaaaaaadgaaaaafccaabaaaaaaaaaaadkbabaaaabaaaaaadcaaaaaj
dcaabaaaaaaaaaaakgakbaaaaaaaaaaaegaabaaaabaaaaaaegaabaaaaaaaaaaa
efaaaaajpcaabaaaaaaaaaaaegaabaaaaaaaaaaaeghobaaaabaaaaaaaagabaaa
aeaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaaeghobaaaacaaaaaa
aagabaaaadaaaaaadcaaaaapdcaabaaaabaaaaaahgapbaaaabaaaaaaaceaaaaa
aaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaa
aaaaaaaaapaaaaahicaabaaaaaaaaaaaegaabaaaabaaaaaaegaabaaaabaaaaaa
ddaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaiadpaaaaaaai
icaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaaaaaaiadpelaaaaaf
ecaabaaaabaaaaaadkaabaaaaaaaaaaaaaaaaaalhcaabaaaadaaaaaaegacbaia
ebaaaaaaabaaaaaaaceaaaaaaaaaaaaaaaaaaaaaaaaaiadpaaaaaaaadcaaaaaj
hcaabaaaabaaaaaaegacbaaaaaaaaaaaegacbaaaadaaaaaaegacbaaaabaaaaaa
baaaaaahicaabaaaaaaaaaaaegbcbaaaadaaaaaaegbcbaaaadaaaaaaeeaaaaaf
icaabaaaaaaaaaaadkaabaaaaaaaaaaadcaaaaajocaabaaaacaaaaaaagbjbaaa
adaaaaaapgapbaaaaaaaaaaafgaobaaaacaaaaaadgcaaaafbcaabaaaacaaaaaa
akaabaaaacaaaaaaaaaaaaaiicaabaaaabaaaaaaakaabaiaebaaaaaaacaaaaaa
abeaaaaaaaaaiadpcpaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaai
icaabaaaabaaaaaadkaabaaaabaaaaaabkiacaaaaaaaaaaaahaaaaaabjaaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaadaaaaaapgapbaaa
aaaaaaaaegbcbaaaadaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaabaaaaaa
egacbaaaadaaaaaadeaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaa
aaaaaaaabaaaaaahbcaabaaaacaaaaaajgahbaaaacaaaaaajgahbaaaacaaaaaa
eeaaaaafbcaabaaaacaaaaaaakaabaaaacaaaaaadiaaaaahhcaabaaaacaaaaaa
agaabaaaacaaaaaajgahbaaaacaaaaaabaaaaaahbcaabaaaabaaaaaaegacbaaa
abaaaaaaegacbaaaacaaaaaadeaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaa
abeaaaaaaaaaaaaacpaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaadiaaaaai
ccaabaaaabaaaaaaakiacaaaaaaaaaaaaiaaaaaaabeaaaaaaaaaaaeddiaaaaah
bcaabaaaabaaaaaaakaabaaaabaaaaaabkaabaaaabaaaaaabjaaaaafbcaabaaa
abaaaaaaakaabaaaabaaaaaaaaaaaaaiccaabaaaabaaaaaaakaabaiaebaaaaaa
aaaaaaaaabeaaaaaaaaaiadpefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaa
eghobaaaadaaaaaaaagabaaaafaaaaaadiaaaaahccaabaaaabaaaaaabkaabaaa
abaaaaaaakaabaaaacaaaaaadiaaaaaiccaabaaaabaaaaaabkaabaaaabaaaaaa
akiacaaaaaaaaaaaacaaaaaadiaaaaahbcaabaaaabaaaaaabkaabaaaabaaaaaa
akaabaaaabaaaaaadiaaaaajhcaabaaaacaaaaaaegiccaaaaaaaaaaaabaaaaaa
egiccaaaaaaaaaaaacaaaaaadiaaaaahhcaabaaaabaaaaaaagaabaaaabaaaaaa
egacbaaaacaaaaaaaaaaaaakhcaabaaaacaaaaaajgihcaiaebaaaaaaaaaaaaaa
aiaaaaaaegiccaaaaaaaaaaaajaaaaaadcaaaaakhcaabaaaacaaaaaapgapbaaa
abaaaaaaegacbaaaacaaaaaajgihcaaaaaaaaaaaaiaaaaaaefaaaaajpcaabaaa
adaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaacaaaaaadcaaaaaj
hcaabaaaacaaaaaaegacbaaaacaaaaaapgapbaaaabaaaaaaegacbaaaadaaaaaa
aaaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaacaaaaaadiaaaaai
hcaabaaaaaaaaaaaegacbaaaaaaaaaaaegiccaaaaaaaaaaaabaaaaaadcaaaaaj
hcaabaaaaaaaaaaaegacbaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaa
baaaaaahicaabaaaaaaaaaaaegbcbaaaaeaaaaaaegbcbaaaaeaaaaaaefaaaaaj
pcaabaaaabaaaaaapgapbaaaaaaaaaaaeghobaaaaeaaaaaaaagabaaaabaaaaaa
efaaaaajpcaabaaaacaaaaaaegbcbaaaaeaaaaaaeghobaaaafaaaaaaaagabaaa
aaaaaaaaapaaaaahicaabaaaaaaaaaaaagaabaaaabaaaaaapgapbaaaacaaaaaa
diaaaaahhccabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaadgaaaaaf
iccabaaaaaaaaaaaabeaaaaaaaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "POINT_COOKIE" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 64 math, 5 textures
Keywords { "DIRECTIONAL_COOKIE" }
Vector 0 [_Time]
Vector 1 [_LightColor0]
Vector 2 [_SpecColor]
Float 3 [_AtmosFalloff]
Float 4 [_CloudSpeed]
Float 5 [_CloudHeight]
Float 6 [_Shininess]
Vector 7 [_AtmosNear]
Vector 8 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightTexture0] 2D 5
"3.0-!!ARBfp1.0
PARAM c[11] = { program.local[0..8],
		{ 0, 0.5, 0.41999999, 2 },
		{ 1, 0, 128 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
DP3 R0.x, fragment.texcoord[1], fragment.texcoord[1];
RSQ R0.x, R0.x;
MOV R1.xyz, fragment.texcoord[2];
MAD R1.xyz, R0.x, fragment.texcoord[1], R1;
DP3 R0.w, R1, R1;
MUL R0.xyz, R0.x, fragment.texcoord[1];
RSQ R0.w, R0.w;
MUL R3.xyz, R0.w, R1;
ADD R0.z, R0, c[9];
RCP R0.w, R0.z;
MUL R1.xy, R0, R0.w;
MOV R0.z, c[9].y;
MAD R0.x, -R0.z, c[5], c[5];
MOV R0.zw, c[10].xyxz;
MUL R1.xy, R0.x, R1;
TEX R2.yw, fragment.texcoord[0], texture[2], 2D;
MAD R0.xy, R2.wyzw, c[9].w, -R0.z;
MUL R1.zw, R0.xyxy, R0.xyxy;
ADD_SAT R1.w, R1.z, R1;
MOV R0.z, c[4].x;
MUL R0.z, R0, c[0].y;
ABS R1.z, R0;
ADD R1.w, -R1, c[10].x;
FRC R1.z, R1;
CMP R1.z, R0, -R1, R1;
RSQ R1.w, R1.w;
RCP R0.z, R1.w;
ADD R2.xyz, -R0, c[10].yyxw;
ADD R1.z, fragment.texcoord[0], R1;
MOV R1.w, fragment.texcoord[0];
ADD R1.xy, R1.zwzw, R1;
TEX R1.xyz, R1, texture[1], 2D;
MAD R2.xyz, R1, R2, R0;
DP3 R0.x, R2, R3;
MAX R0.y, R0.x, c[9].x;
MOV R3.xyz, c[7];
ADD R1.w, -R1.x, c[10].x;
MUL R0.z, R0.w, c[6].x;
TEX R0.x, fragment.texcoord[0], texture[4], 2D;
MUL R0.w, R0.x, R1;
POW R0.x, R0.y, R0.z;
MUL R0.y, R0.w, c[2].x;
DP3 R0.z, fragment.texcoord[1], fragment.texcoord[1];
RSQ R0.w, R0.z;
MUL R1.w, R0.x, R0.y;
MUL_SAT R0.w, R0, fragment.texcoord[1].z;
ADD R0.w, -R0, c[10].x;
POW R0.w, R0.w, c[3].x;
ADD R3.xyz, -R3, c[8];
MAD R3.xyz, R0.w, R3, c[7];
TEX R0.xyz, fragment.texcoord[0], texture[0], 2D;
MAD R0.xyz, R3, R0.w, R0;
ADD R0.xyz, R1, R0;
DP3 R0.w, R2, fragment.texcoord[2];
MOV R1.xyz, c[2];
MAX R0.w, R0, c[9].x;
MUL R0.xyz, R0, c[1];
MUL R0.xyz, R0, R0.w;
TEX R0.w, fragment.texcoord[3], texture[5], 2D;
MUL R1.xyz, R1, c[1];
MUL R0.w, R0, c[9];
MAD R0.xyz, R1, R1.w, R0;
MUL result.color.xyz, R0, R0.w;
MOV result.color.w, c[9].x;
END
# 64 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 65 math, 5 textures
Keywords { "DIRECTIONAL_COOKIE" }
Vector 0 [_Time]
Vector 1 [_LightColor0]
Vector 2 [_SpecColor]
Float 3 [_AtmosFalloff]
Float 4 [_CloudSpeed]
Float 5 [_CloudHeight]
Float 6 [_Shininess]
Vector 7 [_AtmosNear]
Vector 8 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightTexture0] 2D 5
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s4
dcl_2d s5
def c9, -0.50000000, 0.41999999, 2.00000000, -1.00000000
def c10, 1.00000000, 0.00000000, 128.00000000, 0
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xy
dp3_pp r0.x, v1, v1
rsq_pp r0.x, r0.x
mul_pp r1.xyz, r0.x, v1
mov_pp r2.xyz, v2
mad_pp r0.xyz, r0.x, v1, r2
add r0.w, r1.z, c9.y
rcp r1.z, r0.w
mul r1.xy, r1, r1.z
dp3_pp r1.w, r0, r0
rsq_pp r0.w, r1.w
mul_pp r0.xyz, r0.w, r0
texld r2.yw, v0, s2
mov_pp r1.z, c9.x
mad_pp r1.z, r1, c5.x, c5.x
mov r2.z, c0.y
mul r1.zw, r1.z, r1.xyxy
mad_pp r2.xy, r2.wyzw, c9.z, c9.w
mul_pp r1.xy, r2, r2
add_pp_sat r1.y, r1.x, r1
mul r2.z, c4.x, r2
abs r1.x, r2.z
mov_pp r0.w, c6.x
add_pp r1.y, -r1, c10.x
frc r1.x, r1
cmp r1.x, r2.z, r1, -r1
rsq_pp r1.y, r1.y
rcp_pp r2.z, r1.y
add_pp r3.xyz, -r2, c10.yyxw
mul_pp r2.w, c10.z, r0
add_pp r1.x, v0.z, r1
mov_pp r1.y, v0.w
add_pp r1.xy, r1, r1.zwzw
texld r1.xyz, r1, s1
mad_pp r2.xyz, r1, r3, r2
dp3_pp r0.x, r2, r0
max_pp r1.w, r0.x, c10.y
pow r0, r1.w, r2.w
dp3 r0.y, v1, v1
mov r1.w, r0.x
rsq r0.x, r0.y
mul_sat r0.z, r0.x, v1
add_pp r0.y, -r1.x, c10.x
texld r0.x, v0, s4
mul r0.x, r0, r0.y
mul r2.w, r0.x, c2.x
add r3.x, -r0.z, c10
pow_pp r0, r3.x, c3.x
mov_pp r0.w, r0.x
mov_pp r3.xyz, c8
add_pp r3.xyz, -c7, r3
mad_pp r3.xyz, r0.w, r3, c7
texld r0.xyz, v0, s0
mad_pp r0.xyz, r3, r0.w, r0
add_pp r0.xyz, r1, r0
dp3_pp r0.w, r2, v2
mov_pp r1.xyz, c1
max_pp r0.w, r0, c10.y
mul_pp r0.xyz, r0, c1
mul_pp r0.xyz, r0, r0.w
texld r0.w, v3, s5
mul r1.w, r1, r2
mul_pp r1.xyz, c2, r1
mul_pp r0.w, r0, c9.z
mad r0.xyz, r1, r1.w, r0
mul oC0.xyz, r0, r0.w
mov_pp oC0.w, c10.y
"
}
SubProgram "d3d11 " {
// Stats: 48 math, 5 textures
Keywords { "DIRECTIONAL_COOKIE" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_Clouds] 2D 3
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Mask] 2D 4
SetTexture 4 [_LightTexture0] 2D 0
ConstBuffer "$Globals" 192
Vector 16 [_LightColor0]
Vector 32 [_SpecColor]
Float 116 [_AtmosFalloff]
Float 120 [_CloudSpeed]
Float 124 [_CloudHeight]
Float 128 [_Shininess]
Vector 132 [_AtmosNear] 3
Vector 144 [_AtmosFar] 3
ConstBuffer "UnityPerCamera" 128
Vector 0 [_Time]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
"ps_4_0
eefiecedhpeghgphioaacaimemjlldjidiohhcimabaaaaaammaiaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaadadaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefcmeahaaaaeaaaaaaapbabaaaafjaaaaaeegiocaaaaaaaaaaaakaaaaaa
fjaaaaaeegiocaaaabaaaaaaabaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaad
aagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaa
fkaaaaadaagabaaaaeaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaae
aahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaafibiaaae
aahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaagcbaaaad
pcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaa
gcbaaaaddcbabaaaaeaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacafaaaaaa
diaaaaajbcaabaaaaaaaaaaackiacaaaaaaaaaaaahaaaaaabkiacaaaabaaaaaa
aaaaaaaabnaaaaaiccaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaiaebaaaaaa
aaaaaaaabkaaaaagbcaabaaaaaaaaaaaakaabaiaibaaaaaaaaaaaaaadhaaaaak
bcaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaiaebaaaaaa
aaaaaaaaaaaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaackbabaaaabaaaaaa
diaaaaaiecaabaaaaaaaaaaadkiacaaaaaaaaaaaahaaaaaaabeaaaaaaaaaaadp
baaaaaahicaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaaeeaaaaaf
icaabaaaaaaaaaaadkaabaaaaaaaaaaadcaaaaajbcaabaaaabaaaaaackbabaaa
acaaaaaadkaabaaaaaaaaaaaabeaaaaadnaknhdodiaaaaahocaabaaaabaaaaaa
pgapbaaaaaaaaaaakgbebaaaacaaaaaadcaaaaajhcaabaaaacaaaaaaegbcbaaa
acaaaaaapgapbaaaaaaaaaaaegbcbaaaadaaaaaaaoaaaaahfcaabaaaabaaaaaa
kgalbaaaabaaaaaaagaabaaaabaaaaaadgcaaaafccaabaaaabaaaaaabkaabaaa
abaaaaaaaaaaaaaiicaabaaaaaaaaaaabkaabaiaebaaaaaaabaaaaaaabeaaaaa
aaaaiadpcpaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaaiicaabaaa
aaaaaaaadkaabaaaaaaaaaaabkiacaaaaaaaaaaaahaaaaaabjaaaaaficaabaaa
aaaaaaaadkaabaaaaaaaaaaadgaaaaafccaabaaaaaaaaaaadkbabaaaabaaaaaa
dcaaaaajdcaabaaaaaaaaaaakgakbaaaaaaaaaaaigaabaaaabaaaaaaegaabaaa
aaaaaaaaefaaaaajpcaabaaaabaaaaaaegaabaaaaaaaaaaaeghobaaaabaaaaaa
aagabaaaadaaaaaaefaaaaajpcaabaaaadaaaaaaegbabaaaabaaaaaaeghobaaa
acaaaaaaaagabaaaacaaaaaadcaaaaapdcaabaaaaaaaaaaahgapbaaaadaaaaaa
aceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialp
aaaaaaaaaaaaaaaaapaaaaahicaabaaaabaaaaaaegaabaaaaaaaaaaaegaabaaa
aaaaaaaaddaaaaahicaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaiadp
aaaaaaaiicaabaaaabaaaaaadkaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadp
elaaaaafecaabaaaaaaaaaaadkaabaaaabaaaaaaaaaaaaalhcaabaaaadaaaaaa
egacbaiaebaaaaaaaaaaaaaaaceaaaaaaaaaaaaaaaaaaaaaaaaaiadpaaaaaaaa
dcaaaaajhcaabaaaaaaaaaaaegacbaaaabaaaaaaegacbaaaadaaaaaaegacbaaa
aaaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaacaaaaaaegacbaaaacaaaaaa
eeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaacaaaaaa
pgapbaaaabaaaaaaegacbaaaacaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaa
aaaaaaaaegacbaaaacaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaaaaaaaaaa
egbcbaaaadaaaaaadeaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaa
aaaaaaaadeaaaaahccaabaaaaaaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaaaaa
cpaaaaafccaabaaaaaaaaaaabkaabaaaaaaaaaaadiaaaaaiecaabaaaaaaaaaaa
akiacaaaaaaaaaaaaiaaaaaaabeaaaaaaaaaaaeddiaaaaahccaabaaaaaaaaaaa
bkaabaaaaaaaaaaackaabaaaaaaaaaaabjaaaaafccaabaaaaaaaaaaabkaabaaa
aaaaaaaaaaaaaaaiecaabaaaaaaaaaaaakaabaiaebaaaaaaabaaaaaaabeaaaaa
aaaaiadpefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaaadaaaaaa
aagabaaaaeaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaa
acaaaaaadiaaaaaiecaabaaaaaaaaaaackaabaaaaaaaaaaaakiacaaaaaaaaaaa
acaaaaaadiaaaaahccaabaaaaaaaaaaackaabaaaaaaaaaaabkaabaaaaaaaaaaa
diaaaaajhcaabaaaacaaaaaaegiccaaaaaaaaaaaabaaaaaaegiccaaaaaaaaaaa
acaaaaaadiaaaaahhcaabaaaacaaaaaafgafbaaaaaaaaaaaegacbaaaacaaaaaa
aaaaaaakhcaabaaaadaaaaaajgihcaiaebaaaaaaaaaaaaaaaiaaaaaaegiccaaa
aaaaaaaaajaaaaaadcaaaaakhcaabaaaadaaaaaapgapbaaaaaaaaaaaegacbaaa
adaaaaaajgihcaaaaaaaaaaaaiaaaaaaefaaaaajpcaabaaaaeaaaaaaegbabaaa
abaaaaaaeghobaaaaaaaaaaaaagabaaaabaaaaaadcaaaaajocaabaaaaaaaaaaa
agajbaaaadaaaaaapgapbaaaaaaaaaaaagajbaaaaeaaaaaaaaaaaaahocaabaaa
aaaaaaaaagajbaaaabaaaaaafgaobaaaaaaaaaaadiaaaaaiocaabaaaaaaaaaaa
fgaobaaaaaaaaaaaagijcaaaaaaaaaaaabaaaaaadcaaaaajhcaabaaaaaaaaaaa
jgahbaaaaaaaaaaaagaabaaaaaaaaaaaegacbaaaacaaaaaaefaaaaajpcaabaaa
abaaaaaaegbabaaaaeaaaaaaeghobaaaaeaaaaaaaagabaaaaaaaaaaaaaaaaaah
icaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhccabaaa
aaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaadgaaaaaficcabaaaaaaaaaaa
abeaaaaaaaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL_COOKIE" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" }
"!!GLES3"
}
}
 }


 // Stats for Vertex shader:
 //       d3d11 : 29 math
 //        d3d9 : 32 math
 //      opengl : 31 math
 // Stats for Fragment shader:
 //       d3d11 : 22 math, 2 texture
 //        d3d9 : 30 math, 2 texture
 //      opengl : 32 math, 2 texture
 Pass {
  Name "PREPASS"
  Tags { "LIGHTMODE"="PrePassBase" "RenderType"="Opaque" }
  Fog { Mode Off }
Program "vp" {
SubProgram "opengl " {
// Stats: 31 math
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Vector 13 [_WorldSpaceCameraPos]
Vector 14 [unity_Scale]
Vector 15 [_MainTex_ST]
Vector 16 [_Clouds_ST]
"3.0-!!ARBvp1.0
PARAM c[17] = { { 1 },
		state.matrix.mvp,
		program.local[5..16] };
TEMP R0;
TEMP R1;
TEMP R2;
MOV R0.xyz, vertex.attrib[14];
MUL R1.xyz, vertex.normal.zxyw, R0.yzxw;
MAD R0.xyz, vertex.normal.yzxw, R0.zxyw, -R1;
MUL R1.xyz, R0, vertex.attrib[14].w;
MOV R0.xyz, c[13];
MOV R0.w, c[0].x;
DP4 R2.z, R0, c[11];
DP4 R2.x, R0, c[9];
DP4 R2.y, R0, c[10];
MAD R0.xyz, R2, c[14].w, -vertex.position;
DP3 result.texcoord[1].y, R0, R1;
DP3 result.texcoord[1].z, vertex.normal, R0;
DP3 result.texcoord[1].x, R0, vertex.attrib[14];
DP3 R0.y, R1, c[5];
DP3 R0.x, vertex.attrib[14], c[5];
DP3 R0.z, vertex.normal, c[5];
MUL result.texcoord[2].xyz, R0, c[14].w;
DP3 R0.y, R1, c[6];
DP3 R0.x, vertex.attrib[14], c[6];
DP3 R0.z, vertex.normal, c[6];
MUL result.texcoord[3].xyz, R0, c[14].w;
DP3 R0.y, R1, c[7];
DP3 R0.x, vertex.attrib[14], c[7];
DP3 R0.z, vertex.normal, c[7];
MUL result.texcoord[4].xyz, R0, c[14].w;
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[16].xyxy, c[16];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[15], c[15].zwzw;
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 31 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 32 math
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 12 [_WorldSpaceCameraPos]
Vector 13 [unity_Scale]
Vector 14 [_MainTex_ST]
Vector 15 [_Clouds_ST]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
def c16, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r0.xyz, v2.yzxw, r0.zxyw, -r1
mul r1.xyz, r0, v1.w
mov r0.xyz, c12
mov r0.w, c16.x
dp4 r2.z, r0, c10
dp4 r2.x, r0, c8
dp4 r2.y, r0, c9
mad r0.xyz, r2, c13.w, -v0
dp3 o2.y, r0, r1
dp3 o2.z, v2, r0
dp3 o2.x, r0, v1
dp3 r0.y, r1, c4
dp3 r0.x, v1, c4
dp3 r0.z, v2, c4
mul o3.xyz, r0, c13.w
dp3 r0.y, r1, c5
dp3 r0.x, v1, c5
dp3 r0.z, v2, c5
mul o4.xyz, r0, c13.w
dp3 r0.y, r1, c6
dp3 r0.x, v1, c6
dp3 r0.z, v2, c6
mul o5.xyz, r0, c13.w
mad o1.zw, v3.xyxy, c15.xyxy, c15
mad o1.xy, v3, c14, c14.zwzw
dp4 o0.w, v0, c3
dp4 o0.z, v0, c2
dp4 o0.y, v0, c1
dp4 o0.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 29 math
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 128
Vector 96 [_MainTex_ST]
Vector 112 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityPerDraw" 2
"vs_4_0
eefiecedcickmfpgjmhififlogomidohjmhklellabaaaaaabeahaaaaadaaaaaa
cmaaaaaapeaaaaaakmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheolaaaaaaaagaaaaaa
aiaaaaaajiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakeaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaakeaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaakeaaaaaa
aeaaaaaaaaaaaaaaadaaaaaaafaaaaaaahaiaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklfdeieefcgaafaaaaeaaaabaafiabaaaafjaaaaae
egiocaaaaaaaaaaaaiaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaafjaaaaae
egiocaaaacaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaa
abaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaae
pccabaaaaaaaaaaaabaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaa
acaaaaaagfaaaaadhccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaagfaaaaad
hccabaaaafaaaaaagiaaaaacadaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaacaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
acaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaacaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpccabaaaaaaaaaaaegiocaaaacaaaaaaadaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaa
aaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaadcaaaaalmccabaaaabaaaaaa
agbebaaaadaaaaaaagiecaaaaaaaaaaaahaaaaaakgiocaaaaaaaaaaaahaaaaaa
diaaaaajhcaabaaaaaaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaaacaaaaaa
bbaaaaaadcaaaaalhcaabaaaaaaaaaaaegiccaaaacaaaaaabaaaaaaaagiacaaa
abaaaaaaaeaaaaaaegacbaaaaaaaaaaadcaaaaalhcaabaaaaaaaaaaaegiccaaa
acaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaaaaaaaaaaaaaaaaai
hcaabaaaaaaaaaaaegacbaaaaaaaaaaaegiccaaaacaaaaaabdaaaaaadcaaaaal
hcaabaaaaaaaaaaaegacbaaaaaaaaaaapgipcaaaacaaaaaabeaaaaaaegbcbaia
ebaaaaaaaaaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaa
aaaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaaaaaaaaaa
diaaaaahhcaabaaaabaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaadcaaaaak
hcaabaaaabaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaiaebaaaaaa
abaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaapgbpbaaaabaaaaaa
baaaaaahcccabaaaacaaaaaaegacbaaaabaaaaaaegacbaaaaaaaaaaadgaaaaag
bcaabaaaaaaaaaaaakiacaaaacaaaaaaamaaaaaadgaaaaagccaabaaaaaaaaaaa
akiacaaaacaaaaaaanaaaaaadgaaaaagecaabaaaaaaaaaaaakiacaaaacaaaaaa
aoaaaaaabaaaaaahccaabaaaacaaaaaaegacbaaaabaaaaaaegacbaaaaaaaaaaa
baaaaaahbcaabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaaaaaaaaaabaaaaaah
ecaabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaaaaaaaaaadiaaaaaihccabaaa
adaaaaaaegacbaaaacaaaaaapgipcaaaacaaaaaabeaaaaaadgaaaaagbcaabaaa
aaaaaaaabkiacaaaacaaaaaaamaaaaaadgaaaaagccaabaaaaaaaaaaabkiacaaa
acaaaaaaanaaaaaadgaaaaagecaabaaaaaaaaaaabkiacaaaacaaaaaaaoaaaaaa
baaaaaahccaabaaaacaaaaaaegacbaaaabaaaaaaegacbaaaaaaaaaaabaaaaaah
bcaabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaaaaaaaaaabaaaaaahecaabaaa
acaaaaaaegbcbaaaacaaaaaaegacbaaaaaaaaaaadiaaaaaihccabaaaaeaaaaaa
egacbaaaacaaaaaapgipcaaaacaaaaaabeaaaaaadgaaaaagbcaabaaaaaaaaaaa
ckiacaaaacaaaaaaamaaaaaadgaaaaagccaabaaaaaaaaaaackiacaaaacaaaaaa
anaaaaaadgaaaaagecaabaaaaaaaaaaackiacaaaacaaaaaaaoaaaaaabaaaaaah
ccaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaaaaaaaaabaaaaaahbcaabaaa
abaaaaaaegbcbaaaabaaaaaaegacbaaaaaaaaaaabaaaaaahecaabaaaabaaaaaa
egbcbaaaacaaaaaaegacbaaaaaaaaaaadiaaaaaihccabaaaafaaaaaaegacbaaa
abaaaaaapgipcaaaacaaaaaabeaaaaaadoaaaaab"
}
SubProgram "gles " {
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  tmpvar_4 = tmpvar_1.xyz;
  tmpvar_5 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_4.x;
  tmpvar_6[0].y = tmpvar_5.x;
  tmpvar_6[0].z = tmpvar_2.x;
  tmpvar_6[1].x = tmpvar_4.y;
  tmpvar_6[1].y = tmpvar_5.y;
  tmpvar_6[1].z = tmpvar_2.y;
  tmpvar_6[2].x = tmpvar_4.z;
  tmpvar_6[2].y = tmpvar_5.z;
  tmpvar_6[2].z = tmpvar_2.z;
  vec3 v_7;
  v_7.x = _Object2World[0].x;
  v_7.y = _Object2World[1].x;
  v_7.z = _Object2World[2].x;
  vec3 v_8;
  v_8.x = _Object2World[0].y;
  v_8.y = _Object2World[1].y;
  v_8.z = _Object2World[2].y;
  vec3 v_9;
  v_9.x = _Object2World[0].z;
  v_9.y = _Object2World[1].z;
  v_9.z = _Object2World[2].z;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_6 * (((_World2Object * tmpvar_10).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = ((tmpvar_6 * v_7) * unity_Scale.w);
  xlv_TEXCOORD3 = ((tmpvar_6 * v_8) * unity_Scale.w);
  xlv_TEXCOORD4 = ((tmpvar_6 * v_9) * unity_Scale.w);
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 res_1;
  lowp vec3 worldN_2;
  lowp vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_5;
  mediump float tmpvar_6;
  tmpvar_5 = tmpvar_3;
  tmpvar_6 = 0.0;
  mediump vec3 clouds_7;
  mediump vec2 cloudUV_8;
  cloudUV_8 = tmpvar_4;
  highp float tmpvar_9;
  tmpvar_9 = (_Time.y * _CloudSpeed);
  highp float tmpvar_10;
  tmpvar_10 = fract(abs(tmpvar_9));
  highp float tmpvar_11;
  if ((tmpvar_9 >= 0.0)) {
    tmpvar_11 = tmpvar_10;
  } else {
    tmpvar_11 = -(tmpvar_10);
  };
  cloudUV_8.x = (cloudUV_8.x + tmpvar_11);
  mediump float height_12;
  height_12 = _CloudHeight;
  mediump vec3 viewDir_13;
  viewDir_13 = xlv_TEXCOORD1;
  highp vec3 v_14;
  mediump float tmpvar_15;
  tmpvar_15 = (height_12 - (height_12 / 2.0));
  mediump vec3 tmpvar_16;
  tmpvar_16 = normalize(viewDir_13);
  v_14 = tmpvar_16;
  v_14.z = (v_14.z + 0.42);
  highp vec2 tmpvar_17;
  tmpvar_17 = (cloudUV_8 + (tmpvar_15 * (v_14.xy / v_14.z)));
  cloudUV_8 = tmpvar_17;
  lowp vec3 tmpvar_18;
  tmpvar_18 = texture2D (_Clouds, cloudUV_8).xyz;
  clouds_7 = tmpvar_18;
  lowp vec3 tmpvar_19;
  tmpvar_19 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_20;
  tmpvar_20 = mix (tmpvar_19, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_5 = tmpvar_20;
  tmpvar_6 = _Shininess;
  highp float tmpvar_21;
  tmpvar_21 = dot (xlv_TEXCOORD2, tmpvar_5);
  worldN_2.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (xlv_TEXCOORD3, tmpvar_5);
  worldN_2.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (xlv_TEXCOORD4, tmpvar_5);
  worldN_2.z = tmpvar_23;
  tmpvar_3 = worldN_2;
  res_1.xyz = ((worldN_2 * 0.5) + 0.5);
  res_1.w = tmpvar_6;
  gl_FragData[0] = res_1;
}



#endif"
}
SubProgram "glesdesktop " {
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  tmpvar_4 = tmpvar_1.xyz;
  tmpvar_5 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_4.x;
  tmpvar_6[0].y = tmpvar_5.x;
  tmpvar_6[0].z = tmpvar_2.x;
  tmpvar_6[1].x = tmpvar_4.y;
  tmpvar_6[1].y = tmpvar_5.y;
  tmpvar_6[1].z = tmpvar_2.y;
  tmpvar_6[2].x = tmpvar_4.z;
  tmpvar_6[2].y = tmpvar_5.z;
  tmpvar_6[2].z = tmpvar_2.z;
  vec3 v_7;
  v_7.x = _Object2World[0].x;
  v_7.y = _Object2World[1].x;
  v_7.z = _Object2World[2].x;
  vec3 v_8;
  v_8.x = _Object2World[0].y;
  v_8.y = _Object2World[1].y;
  v_8.z = _Object2World[2].y;
  vec3 v_9;
  v_9.x = _Object2World[0].z;
  v_9.y = _Object2World[1].z;
  v_9.z = _Object2World[2].z;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_6 * (((_World2Object * tmpvar_10).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = ((tmpvar_6 * v_7) * unity_Scale.w);
  xlv_TEXCOORD3 = ((tmpvar_6 * v_8) * unity_Scale.w);
  xlv_TEXCOORD4 = ((tmpvar_6 * v_9) * unity_Scale.w);
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 res_1;
  lowp vec3 worldN_2;
  lowp vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_5;
  mediump float tmpvar_6;
  tmpvar_5 = tmpvar_3;
  tmpvar_6 = 0.0;
  mediump vec3 clouds_7;
  mediump vec2 cloudUV_8;
  cloudUV_8 = tmpvar_4;
  highp float tmpvar_9;
  tmpvar_9 = (_Time.y * _CloudSpeed);
  highp float tmpvar_10;
  tmpvar_10 = fract(abs(tmpvar_9));
  highp float tmpvar_11;
  if ((tmpvar_9 >= 0.0)) {
    tmpvar_11 = tmpvar_10;
  } else {
    tmpvar_11 = -(tmpvar_10);
  };
  cloudUV_8.x = (cloudUV_8.x + tmpvar_11);
  mediump float height_12;
  height_12 = _CloudHeight;
  mediump vec3 viewDir_13;
  viewDir_13 = xlv_TEXCOORD1;
  highp vec3 v_14;
  mediump float tmpvar_15;
  tmpvar_15 = (height_12 - (height_12 / 2.0));
  mediump vec3 tmpvar_16;
  tmpvar_16 = normalize(viewDir_13);
  v_14 = tmpvar_16;
  v_14.z = (v_14.z + 0.42);
  highp vec2 tmpvar_17;
  tmpvar_17 = (cloudUV_8 + (tmpvar_15 * (v_14.xy / v_14.z)));
  cloudUV_8 = tmpvar_17;
  lowp vec3 tmpvar_18;
  tmpvar_18 = texture2D (_Clouds, cloudUV_8).xyz;
  clouds_7 = tmpvar_18;
  lowp vec3 normal_19;
  normal_19.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_19.z = sqrt((1.0 - clamp (dot (normal_19.xy, normal_19.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_20;
  tmpvar_20 = mix (normal_19, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_5 = tmpvar_20;
  tmpvar_6 = _Shininess;
  highp float tmpvar_21;
  tmpvar_21 = dot (xlv_TEXCOORD2, tmpvar_5);
  worldN_2.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (xlv_TEXCOORD3, tmpvar_5);
  worldN_2.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (xlv_TEXCOORD4, tmpvar_5);
  worldN_2.z = tmpvar_23;
  tmpvar_3 = worldN_2;
  res_1.xyz = ((worldN_2 * 0.5) + 0.5);
  res_1.w = tmpvar_6;
  gl_FragData[0] = res_1;
}



#endif"
}
SubProgram "gles3 " {
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec3 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  tmpvar_4 = tmpvar_1.xyz;
  tmpvar_5 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_4.x;
  tmpvar_6[0].y = tmpvar_5.x;
  tmpvar_6[0].z = tmpvar_2.x;
  tmpvar_6[1].x = tmpvar_4.y;
  tmpvar_6[1].y = tmpvar_5.y;
  tmpvar_6[1].z = tmpvar_2.y;
  tmpvar_6[2].x = tmpvar_4.z;
  tmpvar_6[2].y = tmpvar_5.z;
  tmpvar_6[2].z = tmpvar_2.z;
  vec3 v_7;
  v_7.x = _Object2World[0].x;
  v_7.y = _Object2World[1].x;
  v_7.z = _Object2World[2].x;
  vec3 v_8;
  v_8.x = _Object2World[0].y;
  v_8.y = _Object2World[1].y;
  v_8.z = _Object2World[2].y;
  vec3 v_9;
  v_9.x = _Object2World[0].z;
  v_9.y = _Object2World[1].z;
  v_9.z = _Object2World[2].z;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_6 * (((_World2Object * tmpvar_10).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = ((tmpvar_6 * v_7) * unity_Scale.w);
  xlv_TEXCOORD3 = ((tmpvar_6 * v_8) * unity_Scale.w);
  xlv_TEXCOORD4 = ((tmpvar_6 * v_9) * unity_Scale.w);
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _Time;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
in highp vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec3 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 res_1;
  lowp vec3 worldN_2;
  lowp vec3 tmpvar_3;
  highp vec2 tmpvar_4;
  tmpvar_4 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_5;
  mediump float tmpvar_6;
  tmpvar_5 = tmpvar_3;
  tmpvar_6 = 0.0;
  mediump vec3 clouds_7;
  mediump vec2 cloudUV_8;
  cloudUV_8 = tmpvar_4;
  highp float tmpvar_9;
  tmpvar_9 = (_Time.y * _CloudSpeed);
  highp float tmpvar_10;
  tmpvar_10 = fract(abs(tmpvar_9));
  highp float tmpvar_11;
  if ((tmpvar_9 >= 0.0)) {
    tmpvar_11 = tmpvar_10;
  } else {
    tmpvar_11 = -(tmpvar_10);
  };
  cloudUV_8.x = (cloudUV_8.x + tmpvar_11);
  mediump float height_12;
  height_12 = _CloudHeight;
  mediump vec3 viewDir_13;
  viewDir_13 = xlv_TEXCOORD1;
  highp vec3 v_14;
  mediump float tmpvar_15;
  tmpvar_15 = (height_12 - (height_12 / 2.0));
  mediump vec3 tmpvar_16;
  tmpvar_16 = normalize(viewDir_13);
  v_14 = tmpvar_16;
  v_14.z = (v_14.z + 0.42);
  highp vec2 tmpvar_17;
  tmpvar_17 = (cloudUV_8 + (tmpvar_15 * (v_14.xy / v_14.z)));
  cloudUV_8 = tmpvar_17;
  lowp vec3 tmpvar_18;
  tmpvar_18 = texture (_Clouds, cloudUV_8).xyz;
  clouds_7 = tmpvar_18;
  lowp vec3 tmpvar_19;
  tmpvar_19 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_20;
  tmpvar_20 = mix (tmpvar_19, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_5 = tmpvar_20;
  tmpvar_6 = _Shininess;
  highp float tmpvar_21;
  tmpvar_21 = dot (xlv_TEXCOORD2, tmpvar_5);
  worldN_2.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (xlv_TEXCOORD3, tmpvar_5);
  worldN_2.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (xlv_TEXCOORD4, tmpvar_5);
  worldN_2.z = tmpvar_23;
  tmpvar_3 = worldN_2;
  res_1.xyz = ((worldN_2 * 0.5) + 0.5);
  res_1.w = tmpvar_6;
  _glesFragData[0] = res_1;
}



#endif"
}
}
Program "fp" {
SubProgram "opengl " {
// Stats: 32 math, 2 textures
Vector 0 [_Time]
Float 1 [_CloudSpeed]
Float 2 [_CloudHeight]
Float 3 [_Shininess]
SetTexture 0 [_Clouds] 2D 0
SetTexture 1 [_BumpMap] 2D 1
"3.0-!!ARBfp1.0
PARAM c[6] = { program.local[0..3],
		{ 0.5, 0.41999999, 2, 1 },
		{ 0, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
DP3 R0.x, fragment.texcoord[1], fragment.texcoord[1];
RSQ R0.x, R0.x;
MUL R0.xyz, R0.x, fragment.texcoord[1];
ADD R0.z, R0, c[4].y;
RCP R0.z, R0.z;
MUL R1.xy, R0, R0.z;
MOV R0.x, c[4];
MAD R0.x, -R0, c[2], c[2];
MOV R0.z, c[1].x;
MUL R2.xy, R0.x, R1;
TEX R0.yw, fragment.texcoord[0], texture[1], 2D;
MAD R1.xy, R0.wyzw, c[4].z, -c[4].w;
MUL R0.xy, R1, R1;
ADD_SAT R0.y, R0.x, R0;
MUL R0.z, R0, c[0].y;
ABS R0.x, R0.z;
ADD R0.y, -R0, c[4].w;
RSQ R0.y, R0.y;
RCP R1.z, R0.y;
FRC R0.x, R0;
CMP R0.x, R0.z, -R0, R0;
ADD R0.x, fragment.texcoord[0].z, R0;
MOV R0.y, fragment.texcoord[0].w;
ADD R0.xy, R0, R2;
TEX R0.xyz, R0, texture[0], 2D;
ADD R2.xyz, -R1, c[5].xxyw;
MAD R1.xyz, R0, R2, R1;
DP3 R0.z, fragment.texcoord[4], R1;
DP3 R0.x, R1, fragment.texcoord[2];
DP3 R0.y, R1, fragment.texcoord[3];
MAD result.color.xyz, R0, c[4].x, c[4].x;
MOV result.color.w, c[3].x;
END
# 32 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 30 math, 2 textures
Vector 0 [_Time]
Float 1 [_CloudSpeed]
Float 2 [_CloudHeight]
Float 3 [_Shininess]
SetTexture 0 [_Clouds] 2D 0
SetTexture 1 [_BumpMap] 2D 1
"ps_3_0
dcl_2d s0
dcl_2d s1
def c4, -0.50000000, 0.41999999, 2.00000000, -1.00000000
def c5, 1.00000000, 0.00000000, 0.50000000, 0
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2.xyz
dcl_texcoord3 v3.xyz
dcl_texcoord4 v4.xyz
dp3_pp r0.x, v1, v1
rsq_pp r0.x, r0.x
mul_pp r0.xyz, r0.x, v1
add r0.z, r0, c4.y
rcp r0.z, r0.z
mul r1.xy, r0, r0.z
mov_pp r0.x, c4
mad_pp r0.x, r0, c2, c2
mov r0.z, c0.y
mul r2.xy, r0.x, r1
texld r0.yw, v0, s1
mad_pp r1.xy, r0.wyzw, c4.z, c4.w
mul_pp r0.xy, r1, r1
add_pp_sat r0.y, r0.x, r0
mul r0.z, c1.x, r0
abs r0.x, r0.z
add_pp r0.y, -r0, c5.x
rsq_pp r0.y, r0.y
rcp_pp r1.z, r0.y
frc r0.x, r0
cmp r0.x, r0.z, r0, -r0
add_pp r0.x, v0.z, r0
mov_pp r0.y, v0.w
add_pp r0.xy, r0, r2
texld r0.xyz, r0, s0
add_pp r2.xyz, -r1, c5.yyxw
mad_pp r1.xyz, r0, r2, r1
dp3 r0.z, v4, r1
dp3 r0.x, r1, v2
dp3 r0.y, r1, v3
mad_pp oC0.xyz, r0, c5.z, c5.z
mov_pp oC0.w, c3.x
"
}
SubProgram "d3d11 " {
// Stats: 22 math, 2 textures
SetTexture 0 [_Clouds] 2D 1
SetTexture 1 [_BumpMap] 2D 0
ConstBuffer "$Globals" 128
Float 56 [_CloudSpeed]
Float 60 [_CloudHeight]
Float 64 [_Shininess]
ConstBuffer "UnityPerCamera" 128
Vector 0 [_Time]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
"ps_4_0
eefiecedomhhihdfcnoohbcpofpcoplpegoepaceabaaaaaaeaafaaaaadaaaaaa
cmaaaaaaoeaaaaaabiabaaaaejfdeheolaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakeaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaakeaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaakeaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklklfdeieefccaaeaaaa
eaaaaaaaaiabaaaafjaaaaaeegiocaaaaaaaaaaaafaaaaaafjaaaaaeegiocaaa
abaaaaaaabaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaa
fibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaa
gcbaaaadpcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaa
adaaaaaagcbaaaadhcbabaaaaeaaaaaagcbaaaadhcbabaaaafaaaaaagfaaaaad
pccabaaaaaaaaaaagiaaaaacadaaaaaadiaaaaajbcaabaaaaaaaaaaackiacaaa
aaaaaaaaadaaaaaabkiacaaaabaaaaaaaaaaaaaabnaaaaaiccaabaaaaaaaaaaa
akaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaabkaaaaagbcaabaaaaaaaaaaa
akaabaiaibaaaaaaaaaaaaaadhaaaaakbcaabaaaaaaaaaaabkaabaaaaaaaaaaa
akaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaaaaaaaaahbcaabaaaaaaaaaaa
akaabaaaaaaaaaaackbabaaaabaaaaaabaaaaaahecaabaaaaaaaaaaaegbcbaaa
acaaaaaaegbcbaaaacaaaaaaeeaaaaafecaabaaaaaaaaaaackaabaaaaaaaaaaa
diaaaaahdcaabaaaabaaaaaakgakbaaaaaaaaaaaegbabaaaacaaaaaadcaaaaaj
ecaabaaaaaaaaaaackbabaaaacaaaaaackaabaaaaaaaaaaaabeaaaaadnaknhdo
aoaaaaahmcaabaaaaaaaaaaaagaebaaaabaaaaaakgakbaaaaaaaaaaadiaaaaai
bcaabaaaabaaaaaadkiacaaaaaaaaaaaadaaaaaaabeaaaaaaaaaaadpdgaaaaaf
ccaabaaaaaaaaaaadkbabaaaabaaaaaadcaaaaajdcaabaaaaaaaaaaaagaabaaa
abaaaaaaogakbaaaaaaaaaaaegaabaaaaaaaaaaaefaaaaajpcaabaaaaaaaaaaa
egaabaaaaaaaaaaaeghobaaaaaaaaaaaaagabaaaabaaaaaaefaaaaajpcaabaaa
abaaaaaaegbabaaaabaaaaaaeghobaaaabaaaaaaaagabaaaaaaaaaaadcaaaaap
dcaabaaaabaaaaaahgapbaaaabaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaa
aaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaaapaaaaahicaabaaa
aaaaaaaaegaabaaaabaaaaaaegaabaaaabaaaaaaddaaaaahicaabaaaaaaaaaaa
dkaabaaaaaaaaaaaabeaaaaaaaaaiadpaaaaaaaiicaabaaaaaaaaaaadkaabaia
ebaaaaaaaaaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaaabaaaaaadkaabaaa
aaaaaaaaaaaaaaalhcaabaaaacaaaaaaegacbaiaebaaaaaaabaaaaaaaceaaaaa
aaaaaaaaaaaaaaaaaaaaiadpaaaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaaaacaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaabaaaaaa
egbcbaaaadaaaaaaegacbaaaaaaaaaaabaaaaaahccaabaaaabaaaaaaegbcbaaa
aeaaaaaaegacbaaaaaaaaaaabaaaaaahecaabaaaabaaaaaaegbcbaaaafaaaaaa
egacbaaaaaaaaaaadcaaaaaphccabaaaaaaaaaaaegacbaaaabaaaaaaaceaaaaa
aaaaaadpaaaaaadpaaaaaadpaaaaaaaaaceaaaaaaaaaaadpaaaaaadpaaaaaadp
aaaaaaaadgaaaaagiccabaaaaaaaaaaaakiacaaaaaaaaaaaaeaaaaaadoaaaaab
"
}
SubProgram "gles " {
"!!GLES"
}
SubProgram "glesdesktop " {
"!!GLES"
}
SubProgram "gles3 " {
"!!GLES3"
}
}
 }


 // Stats for Vertex shader:
 //       d3d11 : 29 avg math (21..35)
 //        d3d9 : 34 avg math (26..43)
 //      opengl : 33 avg math (25..42)
 // Stats for Fragment shader:
 //       d3d11 : 45 avg math (32..64), 6 avg texture (5..8)
 //        d3d9 : 58 avg math (42..80), 6 avg texture (5..8)
 //      opengl : 61 avg math (44..83), 6 avg texture (5..8)
 Pass {
  Name "PREPASS"
  Tags { "LIGHTMODE"="PrePassFinal" "RenderType"="Opaque" }
  ZWrite Off
Program "vp" {
SubProgram "opengl " {
// Stats: 42 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Vector 13 [_WorldSpaceCameraPos]
Vector 14 [_ProjectionParams]
Vector 15 [unity_SHAr]
Vector 16 [unity_SHAg]
Vector 17 [unity_SHAb]
Vector 18 [unity_SHBr]
Vector 19 [unity_SHBg]
Vector 20 [unity_SHBb]
Vector 21 [unity_SHC]
Vector 22 [unity_Scale]
Vector 23 [_MainTex_ST]
Vector 24 [_Clouds_ST]
"3.0-!!ARBvp1.0
PARAM c[25] = { { 1, 0.5 },
		state.matrix.mvp,
		program.local[5..24] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R1.xyz, vertex.normal, c[22].w;
DP3 R2.w, R1, c[6];
DP3 R0.x, R1, c[5];
DP3 R0.z, R1, c[7];
MOV R0.y, R2.w;
MUL R1, R0.xyzz, R0.yzzx;
MOV R0.w, c[0].x;
DP4 R2.z, R0, c[17];
DP4 R2.y, R0, c[16];
DP4 R2.x, R0, c[15];
MUL R0.y, R2.w, R2.w;
DP4 R3.z, R1, c[20];
DP4 R3.x, R1, c[18];
DP4 R3.y, R1, c[19];
ADD R2.xyz, R2, R3;
MAD R0.w, R0.x, R0.x, -R0.y;
MUL R3.xyz, R0.w, c[21];
MOV R1.xyz, vertex.attrib[14];
MUL R0.xyz, vertex.normal.zxyw, R1.yzxw;
MAD R0.xyz, vertex.normal.yzxw, R1.zxyw, -R0;
MUL R0.xyz, R0, vertex.attrib[14].w;
MOV R1.xyz, c[13];
ADD result.texcoord[3].xyz, R2, R3;
MOV R1.w, c[0].x;
DP4 R0.w, vertex.position, c[4];
DP4 R2.z, R1, c[11];
DP4 R2.x, R1, c[9];
DP4 R2.y, R1, c[10];
MAD R2.xyz, R2, c[22].w, -vertex.position;
DP3 result.texcoord[1].y, R2, R0;
DP4 R0.z, vertex.position, c[3];
DP4 R0.x, vertex.position, c[1];
DP4 R0.y, vertex.position, c[2];
MUL R1.xyz, R0.xyww, c[0].y;
MUL R1.y, R1, c[14].x;
DP3 result.texcoord[1].z, vertex.normal, R2;
DP3 result.texcoord[1].x, R2, vertex.attrib[14];
ADD result.texcoord[2].xy, R1, R1.z;
MOV result.position, R0;
MOV result.texcoord[2].zw, R0;
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[24].xyxy, c[24];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[23], c[23].zwzw;
END
# 42 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 43 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 12 [_WorldSpaceCameraPos]
Vector 13 [_ProjectionParams]
Vector 14 [_ScreenParams]
Vector 15 [unity_SHAr]
Vector 16 [unity_SHAg]
Vector 17 [unity_SHAb]
Vector 18 [unity_SHBr]
Vector 19 [unity_SHBg]
Vector 20 [unity_SHBb]
Vector 21 [unity_SHC]
Vector 22 [unity_Scale]
Vector 23 [_MainTex_ST]
Vector 24 [_Clouds_ST]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
def c25, 1.00000000, 0.50000000, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mul r1.xyz, v2, c22.w
dp3 r2.w, r1, c5
dp3 r0.x, r1, c4
dp3 r0.z, r1, c6
mov r0.y, r2.w
mul r1, r0.xyzz, r0.yzzx
mov r0.w, c25.x
dp4 r2.z, r0, c17
dp4 r2.y, r0, c16
dp4 r2.x, r0, c15
mul r0.y, r2.w, r2.w
mad r0.w, r0.x, r0.x, -r0.y
dp4 r3.z, r1, c20
dp4 r3.y, r1, c19
dp4 r3.x, r1, c18
add r2.xyz, r2, r3
mul r3.xyz, r0.w, c21
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r0.xyz, v2.yzxw, r0.zxyw, -r1
mul r0.xyz, r0, v1.w
mov r1.xyz, c12
add o4.xyz, r2, r3
mov r1.w, c25.x
dp4 r0.w, v0, c3
dp4 r2.z, r1, c10
dp4 r2.x, r1, c8
dp4 r2.y, r1, c9
mad r2.xyz, r2, c22.w, -v0
dp3 o2.y, r2, r0
dp4 r0.z, v0, c2
dp4 r0.x, v0, c0
dp4 r0.y, v0, c1
mul r1.xyz, r0.xyww, c25.y
mul r1.y, r1, c13.x
dp3 o2.z, v2, r2
dp3 o2.x, r2, v1
mad o3.xy, r1.z, c14.zwzw, r1
mov o0, r0
mov o3.zw, r0
mad o1.zw, v3.xyxy, c24.xyxy, c24
mad o1.xy, v3, c23, c23.zwzw
"
}
SubProgram "d3d11 " {
// Stats: 35 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 144
Vector 96 [_MainTex_ST]
Vector 112 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0
eefiecedblhadbhdihmbcoldiiggpoghbcfcebggabaaaaaagaahaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
apaaaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcmeafaaaaeaaaabaa
hbabaaaafjaaaaaeegiocaaaaaaaaaaaaiaaaaaafjaaaaaeegiocaaaabaaaaaa
agaaaaaafjaaaaaeegiocaaaacaaaaaacnaaaaaafjaaaaaeegiocaaaadaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaad
hcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaad
pccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaagiaaaaacaeaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaa
aaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaadcaaaaalmccabaaaabaaaaaa
agbebaaaadaaaaaaagiecaaaaaaaaaaaahaaaaaakgiocaaaaaaaaaaaahaaaaaa
diaaaaahhcaabaaaabaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaadcaaaaak
hcaabaaaabaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaiaebaaaaaa
abaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaapgbpbaaaabaaaaaa
diaaaaajhcaabaaaacaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaaadaaaaaa
bbaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaa
abaaaaaaaeaaaaaaegacbaaaacaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaa
adaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaaacaaaaaaaaaaaaai
hcaabaaaacaaaaaaegacbaaaacaaaaaaegiccaaaadaaaaaabdaaaaaadcaaaaal
hcaabaaaacaaaaaaegacbaaaacaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaia
ebaaaaaaaaaaaaaabaaaaaahcccabaaaacaaaaaaegacbaaaabaaaaaaegacbaaa
acaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaaacaaaaaa
baaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaaacaaaaaadiaaaaai
ccaabaaaaaaaaaaabkaabaaaaaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaak
ncaabaaaabaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadp
aaaaaadpdgaaaaafmccabaaaadaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaa
adaaaaaakgakbaaaabaaaaaamgaabaaaabaaaaaadiaaaaaihcaabaaaaaaaaaaa
egbcbaaaacaaaaaapgipcaaaadaaaaaabeaaaaaadiaaaaaihcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaaklcaabaaaaaaaaaaa
egiicaaaadaaaaaaamaaaaaaagaabaaaaaaaaaaaegaibaaaabaaaaaadcaaaaak
hcaabaaaaaaaaaaaegiccaaaadaaaaaaaoaaaaaakgakbaaaaaaaaaaaegadbaaa
aaaaaaaadgaaaaaficaabaaaaaaaaaaaabeaaaaaaaaaiadpbbaaaaaibcaabaaa
abaaaaaaegiocaaaacaaaaaacgaaaaaaegaobaaaaaaaaaaabbaaaaaiccaabaaa
abaaaaaaegiocaaaacaaaaaachaaaaaaegaobaaaaaaaaaaabbaaaaaiecaabaaa
abaaaaaaegiocaaaacaaaaaaciaaaaaaegaobaaaaaaaaaaadiaaaaahpcaabaaa
acaaaaaajgacbaaaaaaaaaaaegakbaaaaaaaaaaabbaaaaaibcaabaaaadaaaaaa
egiocaaaacaaaaaacjaaaaaaegaobaaaacaaaaaabbaaaaaiccaabaaaadaaaaaa
egiocaaaacaaaaaackaaaaaaegaobaaaacaaaaaabbaaaaaiecaabaaaadaaaaaa
egiocaaaacaaaaaaclaaaaaaegaobaaaacaaaaaaaaaaaaahhcaabaaaabaaaaaa
egacbaaaabaaaaaaegacbaaaadaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaabkaabaaaaaaaaaaadcaaaaakbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
akaabaaaaaaaaaaabkaabaiaebaaaaaaaaaaaaaadcaaaaakhccabaaaaeaaaaaa
egiccaaaacaaaaaacmaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadoaaaaab
"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  highp vec3 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_5.zw;
  mat3 tmpvar_9;
  tmpvar_9[0] = _Object2World[0].xyz;
  tmpvar_9[1] = _Object2World[1].xyz;
  tmpvar_9[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = (tmpvar_9 * (tmpvar_2 * unity_Scale.w));
  mediump vec3 tmpvar_11;
  mediump vec4 normal_12;
  normal_12 = tmpvar_10;
  highp float vC_13;
  mediump vec3 x3_14;
  mediump vec3 x2_15;
  mediump vec3 x1_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAr, normal_12);
  x1_16.x = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAg, normal_12);
  x1_16.y = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAb, normal_12);
  x1_16.z = tmpvar_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_12.xyzz * normal_12.yzzx);
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBr, tmpvar_20);
  x2_15.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBg, tmpvar_20);
  x2_15.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBb, tmpvar_20);
  x2_15.z = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = ((normal_12.x * normal_12.x) - (normal_12.y * normal_12.y));
  vC_13 = tmpvar_24;
  highp vec3 tmpvar_25;
  tmpvar_25 = (unity_SHC.xyz * vC_13);
  x3_14 = tmpvar_25;
  tmpvar_11 = ((x1_16 + x2_15) + x3_14);
  tmpvar_4 = tmpvar_11;
  highp vec3 tmpvar_26;
  highp vec3 tmpvar_27;
  tmpvar_26 = tmpvar_1.xyz;
  tmpvar_27 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_28;
  tmpvar_28[0].x = tmpvar_26.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = tmpvar_2.x;
  tmpvar_28[1].x = tmpvar_26.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = tmpvar_2.y;
  tmpvar_28[2].x = tmpvar_26.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = tmpvar_2.z;
  highp vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = _WorldSpaceCameraPos;
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_28 * (((_World2Object * tmpvar_29).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = o_6;
  xlv_TEXCOORD3 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D _LightBuffer;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  lowp float tmpvar_9;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = tmpvar_4;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  tmpvar_9 = 0.0;
  mediump vec3 clouds_10;
  mediump vec2 cloudUV_11;
  lowp float fresnel_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_14;
  tmpvar_14 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_12 = tmpvar_14;
  lowp float tmpvar_15;
  tmpvar_15 = pow (fresnel_12, _AtmosFalloff);
  lowp vec3 tmpvar_16;
  tmpvar_16 = (tmpvar_13.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_15)) * tmpvar_15));
  cloudUV_11 = tmpvar_5;
  highp float tmpvar_17;
  tmpvar_17 = (_Time.y * _CloudSpeed);
  highp float tmpvar_18;
  tmpvar_18 = fract(abs(tmpvar_17));
  highp float tmpvar_19;
  if ((tmpvar_17 >= 0.0)) {
    tmpvar_19 = tmpvar_18;
  } else {
    tmpvar_19 = -(tmpvar_18);
  };
  cloudUV_11.x = (cloudUV_11.x + tmpvar_19);
  mediump float height_20;
  height_20 = _CloudHeight;
  mediump vec3 viewDir_21;
  viewDir_21 = xlv_TEXCOORD1;
  highp vec3 v_22;
  mediump float tmpvar_23;
  tmpvar_23 = (height_20 - (height_20 / 2.0));
  mediump vec3 tmpvar_24;
  tmpvar_24 = normalize(viewDir_21);
  v_22 = tmpvar_24;
  v_22.z = (v_22.z + 0.42);
  highp vec2 tmpvar_25;
  tmpvar_25 = (cloudUV_11 + (tmpvar_23 * (v_22.xy / v_22.z)));
  cloudUV_11 = tmpvar_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = texture2D (_Clouds, cloudUV_11).xyz;
  clouds_10 = tmpvar_26;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (tmpvar_16 + clouds_10);
  tmpvar_6 = tmpvar_27;
  lowp vec3 tmpvar_28;
  tmpvar_28 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_29;
  tmpvar_29 = mix (tmpvar_28, vec3(0.0, 0.0, 1.0), clouds_10);
  tmpvar_7 = tmpvar_29;
  mediump vec4 tmpvar_30;
  tmpvar_30.w = 0.0;
  tmpvar_30.xyz = clouds_10;
  lowp vec4 arg0_31;
  arg0_31 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_32;
  tmpvar_32 = mix (arg0_31, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_30).xyz;
  tmpvar_8 = tmpvar_32;
  lowp vec4 tmpvar_33;
  tmpvar_33 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_34;
  tmpvar_34 = ((tmpvar_33.xyz * (1.0 - clouds_10)) * _SpecColor.xyz).x;
  tmpvar_9 = tmpvar_34;
  tmpvar_4 = tmpvar_7;
  lowp vec4 tmpvar_35;
  tmpvar_35 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_35;
  mediump vec4 tmpvar_36;
  tmpvar_36 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.w = tmpvar_36.w;
  highp vec3 tmpvar_37;
  tmpvar_37 = (tmpvar_36.xyz + xlv_TEXCOORD3);
  light_3.xyz = tmpvar_37;
  lowp vec4 c_38;
  lowp float spec_39;
  mediump float tmpvar_40;
  tmpvar_40 = (tmpvar_36.w * tmpvar_9);
  spec_39 = tmpvar_40;
  mediump vec3 tmpvar_41;
  tmpvar_41 = ((tmpvar_6 * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_39));
  c_38.xyz = tmpvar_41;
  c_38.w = (tmpvar_13.w + (spec_39 * _SpecColor.w));
  c_2 = c_38;
  c_2.xyz = (c_2.xyz + tmpvar_8);
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  highp vec3 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_5.zw;
  mat3 tmpvar_9;
  tmpvar_9[0] = _Object2World[0].xyz;
  tmpvar_9[1] = _Object2World[1].xyz;
  tmpvar_9[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = (tmpvar_9 * (tmpvar_2 * unity_Scale.w));
  mediump vec3 tmpvar_11;
  mediump vec4 normal_12;
  normal_12 = tmpvar_10;
  highp float vC_13;
  mediump vec3 x3_14;
  mediump vec3 x2_15;
  mediump vec3 x1_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAr, normal_12);
  x1_16.x = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAg, normal_12);
  x1_16.y = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAb, normal_12);
  x1_16.z = tmpvar_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_12.xyzz * normal_12.yzzx);
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBr, tmpvar_20);
  x2_15.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBg, tmpvar_20);
  x2_15.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBb, tmpvar_20);
  x2_15.z = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = ((normal_12.x * normal_12.x) - (normal_12.y * normal_12.y));
  vC_13 = tmpvar_24;
  highp vec3 tmpvar_25;
  tmpvar_25 = (unity_SHC.xyz * vC_13);
  x3_14 = tmpvar_25;
  tmpvar_11 = ((x1_16 + x2_15) + x3_14);
  tmpvar_4 = tmpvar_11;
  highp vec3 tmpvar_26;
  highp vec3 tmpvar_27;
  tmpvar_26 = tmpvar_1.xyz;
  tmpvar_27 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_28;
  tmpvar_28[0].x = tmpvar_26.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = tmpvar_2.x;
  tmpvar_28[1].x = tmpvar_26.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = tmpvar_2.y;
  tmpvar_28[2].x = tmpvar_26.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = tmpvar_2.z;
  highp vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = _WorldSpaceCameraPos;
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_28 * (((_World2Object * tmpvar_29).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = o_6;
  xlv_TEXCOORD3 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D _LightBuffer;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  lowp float tmpvar_9;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = tmpvar_4;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  tmpvar_9 = 0.0;
  mediump vec3 clouds_10;
  mediump vec2 cloudUV_11;
  lowp float fresnel_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_14;
  tmpvar_14 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_12 = tmpvar_14;
  lowp float tmpvar_15;
  tmpvar_15 = pow (fresnel_12, _AtmosFalloff);
  lowp vec3 tmpvar_16;
  tmpvar_16 = (tmpvar_13.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_15)) * tmpvar_15));
  cloudUV_11 = tmpvar_5;
  highp float tmpvar_17;
  tmpvar_17 = (_Time.y * _CloudSpeed);
  highp float tmpvar_18;
  tmpvar_18 = fract(abs(tmpvar_17));
  highp float tmpvar_19;
  if ((tmpvar_17 >= 0.0)) {
    tmpvar_19 = tmpvar_18;
  } else {
    tmpvar_19 = -(tmpvar_18);
  };
  cloudUV_11.x = (cloudUV_11.x + tmpvar_19);
  mediump float height_20;
  height_20 = _CloudHeight;
  mediump vec3 viewDir_21;
  viewDir_21 = xlv_TEXCOORD1;
  highp vec3 v_22;
  mediump float tmpvar_23;
  tmpvar_23 = (height_20 - (height_20 / 2.0));
  mediump vec3 tmpvar_24;
  tmpvar_24 = normalize(viewDir_21);
  v_22 = tmpvar_24;
  v_22.z = (v_22.z + 0.42);
  highp vec2 tmpvar_25;
  tmpvar_25 = (cloudUV_11 + (tmpvar_23 * (v_22.xy / v_22.z)));
  cloudUV_11 = tmpvar_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = texture2D (_Clouds, cloudUV_11).xyz;
  clouds_10 = tmpvar_26;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (tmpvar_16 + clouds_10);
  tmpvar_6 = tmpvar_27;
  lowp vec3 normal_28;
  normal_28.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_28.z = sqrt((1.0 - clamp (dot (normal_28.xy, normal_28.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_29;
  tmpvar_29 = mix (normal_28, vec3(0.0, 0.0, 1.0), clouds_10);
  tmpvar_7 = tmpvar_29;
  mediump vec4 tmpvar_30;
  tmpvar_30.w = 0.0;
  tmpvar_30.xyz = clouds_10;
  lowp vec4 arg0_31;
  arg0_31 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_32;
  tmpvar_32 = mix (arg0_31, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_30).xyz;
  tmpvar_8 = tmpvar_32;
  lowp vec4 tmpvar_33;
  tmpvar_33 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_34;
  tmpvar_34 = ((tmpvar_33.xyz * (1.0 - clouds_10)) * _SpecColor.xyz).x;
  tmpvar_9 = tmpvar_34;
  tmpvar_4 = tmpvar_7;
  lowp vec4 tmpvar_35;
  tmpvar_35 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_35;
  mediump vec4 tmpvar_36;
  tmpvar_36 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.w = tmpvar_36.w;
  highp vec3 tmpvar_37;
  tmpvar_37 = (tmpvar_36.xyz + xlv_TEXCOORD3);
  light_3.xyz = tmpvar_37;
  lowp vec4 c_38;
  lowp float spec_39;
  mediump float tmpvar_40;
  tmpvar_40 = (tmpvar_36.w * tmpvar_9);
  spec_39 = tmpvar_40;
  mediump vec3 tmpvar_41;
  tmpvar_41 = ((tmpvar_6 * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_39));
  c_38.xyz = tmpvar_41;
  c_38.w = (tmpvar_13.w + (spec_39 * _SpecColor.w));
  c_2 = c_38;
  c_2.xyz = (c_2.xyz + tmpvar_8);
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out highp vec4 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  highp vec3 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_5.zw;
  mat3 tmpvar_9;
  tmpvar_9[0] = _Object2World[0].xyz;
  tmpvar_9[1] = _Object2World[1].xyz;
  tmpvar_9[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = (tmpvar_9 * (tmpvar_2 * unity_Scale.w));
  mediump vec3 tmpvar_11;
  mediump vec4 normal_12;
  normal_12 = tmpvar_10;
  highp float vC_13;
  mediump vec3 x3_14;
  mediump vec3 x2_15;
  mediump vec3 x1_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAr, normal_12);
  x1_16.x = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAg, normal_12);
  x1_16.y = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAb, normal_12);
  x1_16.z = tmpvar_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_12.xyzz * normal_12.yzzx);
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBr, tmpvar_20);
  x2_15.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBg, tmpvar_20);
  x2_15.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBb, tmpvar_20);
  x2_15.z = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = ((normal_12.x * normal_12.x) - (normal_12.y * normal_12.y));
  vC_13 = tmpvar_24;
  highp vec3 tmpvar_25;
  tmpvar_25 = (unity_SHC.xyz * vC_13);
  x3_14 = tmpvar_25;
  tmpvar_11 = ((x1_16 + x2_15) + x3_14);
  tmpvar_4 = tmpvar_11;
  highp vec3 tmpvar_26;
  highp vec3 tmpvar_27;
  tmpvar_26 = tmpvar_1.xyz;
  tmpvar_27 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_28;
  tmpvar_28[0].x = tmpvar_26.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = tmpvar_2.x;
  tmpvar_28[1].x = tmpvar_26.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = tmpvar_2.y;
  tmpvar_28[2].x = tmpvar_26.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = tmpvar_2.z;
  highp vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = _WorldSpaceCameraPos;
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_28 * (((_World2Object * tmpvar_29).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = o_6;
  xlv_TEXCOORD3 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _Time;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D _LightBuffer;
in highp vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  lowp float tmpvar_9;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = tmpvar_4;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  tmpvar_9 = 0.0;
  mediump vec3 clouds_10;
  mediump vec2 cloudUV_11;
  lowp float fresnel_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_14;
  tmpvar_14 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_12 = tmpvar_14;
  lowp float tmpvar_15;
  tmpvar_15 = pow (fresnel_12, _AtmosFalloff);
  lowp vec3 tmpvar_16;
  tmpvar_16 = (tmpvar_13.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_15)) * tmpvar_15));
  cloudUV_11 = tmpvar_5;
  highp float tmpvar_17;
  tmpvar_17 = (_Time.y * _CloudSpeed);
  highp float tmpvar_18;
  tmpvar_18 = fract(abs(tmpvar_17));
  highp float tmpvar_19;
  if ((tmpvar_17 >= 0.0)) {
    tmpvar_19 = tmpvar_18;
  } else {
    tmpvar_19 = -(tmpvar_18);
  };
  cloudUV_11.x = (cloudUV_11.x + tmpvar_19);
  mediump float height_20;
  height_20 = _CloudHeight;
  mediump vec3 viewDir_21;
  viewDir_21 = xlv_TEXCOORD1;
  highp vec3 v_22;
  mediump float tmpvar_23;
  tmpvar_23 = (height_20 - (height_20 / 2.0));
  mediump vec3 tmpvar_24;
  tmpvar_24 = normalize(viewDir_21);
  v_22 = tmpvar_24;
  v_22.z = (v_22.z + 0.42);
  highp vec2 tmpvar_25;
  tmpvar_25 = (cloudUV_11 + (tmpvar_23 * (v_22.xy / v_22.z)));
  cloudUV_11 = tmpvar_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = texture (_Clouds, cloudUV_11).xyz;
  clouds_10 = tmpvar_26;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (tmpvar_16 + clouds_10);
  tmpvar_6 = tmpvar_27;
  lowp vec3 tmpvar_28;
  tmpvar_28 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_29;
  tmpvar_29 = mix (tmpvar_28, vec3(0.0, 0.0, 1.0), clouds_10);
  tmpvar_7 = tmpvar_29;
  mediump vec4 tmpvar_30;
  tmpvar_30.w = 0.0;
  tmpvar_30.xyz = clouds_10;
  lowp vec4 arg0_31;
  arg0_31 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_32;
  tmpvar_32 = mix (arg0_31, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_30).xyz;
  tmpvar_8 = tmpvar_32;
  lowp vec4 tmpvar_33;
  tmpvar_33 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_34;
  tmpvar_34 = ((tmpvar_33.xyz * (1.0 - clouds_10)) * _SpecColor.xyz).x;
  tmpvar_9 = tmpvar_34;
  tmpvar_4 = tmpvar_7;
  lowp vec4 tmpvar_35;
  tmpvar_35 = textureProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_35;
  mediump vec4 tmpvar_36;
  tmpvar_36 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.w = tmpvar_36.w;
  highp vec3 tmpvar_37;
  tmpvar_37 = (tmpvar_36.xyz + xlv_TEXCOORD3);
  light_3.xyz = tmpvar_37;
  lowp vec4 c_38;
  lowp float spec_39;
  mediump float tmpvar_40;
  tmpvar_40 = (tmpvar_36.w * tmpvar_9);
  spec_39 = tmpvar_40;
  mediump vec3 tmpvar_41;
  tmpvar_41 = ((tmpvar_6 * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_39));
  c_38.xyz = tmpvar_41;
  c_38.w = (tmpvar_13.w + (spec_39 * _SpecColor.w));
  c_2 = c_38;
  c_2.xyz = (c_2.xyz + tmpvar_8);
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 34 math
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" ATTR14
Matrix 9 [_Object2World]
Matrix 13 [_World2Object]
Vector 17 [_WorldSpaceCameraPos]
Vector 18 [_ProjectionParams]
Vector 19 [unity_ShadowFadeCenterAndType]
Vector 20 [unity_Scale]
Vector 21 [unity_LightmapST]
Vector 22 [_MainTex_ST]
Vector 23 [_Clouds_ST]
"3.0-!!ARBvp1.0
PARAM c[24] = { { 1, 0.5 },
		state.matrix.modelview[0],
		state.matrix.mvp,
		program.local[9..23] };
TEMP R0;
TEMP R1;
TEMP R2;
MOV R0.xyz, vertex.attrib[14];
MUL R1.xyz, vertex.normal.zxyw, R0.yzxw;
MAD R0.xyz, vertex.normal.yzxw, R0.zxyw, -R1;
MUL R0.xyz, R0, vertex.attrib[14].w;
MOV R1.xyz, c[17];
MOV R1.w, c[0].x;
DP4 R0.w, vertex.position, c[8];
DP4 R2.z, R1, c[15];
DP4 R2.x, R1, c[13];
DP4 R2.y, R1, c[14];
MAD R2.xyz, R2, c[20].w, -vertex.position;
DP3 result.texcoord[1].y, R2, R0;
DP4 R0.z, vertex.position, c[7];
DP4 R0.x, vertex.position, c[5];
DP4 R0.y, vertex.position, c[6];
MUL R1.xyz, R0.xyww, c[0].y;
MUL R1.y, R1, c[18].x;
ADD result.texcoord[2].xy, R1, R1.z;
MOV result.position, R0;
MOV R0.x, c[0];
ADD R0.y, R0.x, -c[19].w;
DP4 R0.x, vertex.position, c[3];
DP4 R1.z, vertex.position, c[11];
DP4 R1.x, vertex.position, c[9];
DP4 R1.y, vertex.position, c[10];
ADD R1.xyz, R1, -c[19];
DP3 result.texcoord[1].z, vertex.normal, R2;
DP3 result.texcoord[1].x, R2, vertex.attrib[14];
MOV result.texcoord[2].zw, R0;
MUL result.texcoord[4].xyz, R1, c[19].w;
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[23].xyxy, c[23];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[22], c[22].zwzw;
MAD result.texcoord[3].xy, vertex.texcoord[1], c[21], c[21].zwzw;
MUL result.texcoord[4].w, -R0.x, R0.y;
END
# 34 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 35 math
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_modelview0]
Matrix 4 [glstate_matrix_mvp]
Matrix 8 [_Object2World]
Matrix 12 [_World2Object]
Vector 16 [_WorldSpaceCameraPos]
Vector 17 [_ProjectionParams]
Vector 18 [_ScreenParams]
Vector 19 [unity_ShadowFadeCenterAndType]
Vector 20 [unity_Scale]
Vector 21 [unity_LightmapST]
Vector 22 [_MainTex_ST]
Vector 23 [_Clouds_ST]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
def c24, 1.00000000, 0.50000000, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
dcl_texcoord1 v4
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r0.xyz, v2.yzxw, r0.zxyw, -r1
mul r0.xyz, r0, v1.w
mov r1.xyz, c16
mov r1.w, c24.x
dp4 r0.w, v0, c7
dp4 r2.z, r1, c14
dp4 r2.x, r1, c12
dp4 r2.y, r1, c13
mad r2.xyz, r2, c20.w, -v0
dp3 o2.y, r2, r0
dp4 r0.z, v0, c6
dp4 r0.x, v0, c4
dp4 r0.y, v0, c5
mul r1.xyz, r0.xyww, c24.y
mul r1.y, r1, c17.x
mad o3.xy, r1.z, c18.zwzw, r1
mov o0, r0
mov r0.x, c19.w
add r0.y, c24.x, -r0.x
dp4 r0.x, v0, c2
dp4 r1.z, v0, c10
dp4 r1.x, v0, c8
dp4 r1.y, v0, c9
add r1.xyz, r1, -c19
dp3 o2.z, v2, r2
dp3 o2.x, r2, v1
mov o3.zw, r0
mul o5.xyz, r1, c19.w
mad o1.zw, v3.xyxy, c23.xyxy, c23
mad o1.xy, v3, c22, c22.zwzw
mad o4.xy, v4, c21, c21.zwzw
mul o5.w, -r0.x, r0.y
"
}
SubProgram "d3d11 " {
// Stats: 33 math
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 176
Vector 96 [unity_LightmapST]
Vector 112 [_MainTex_ST]
Vector 128 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityShadows" 416
Vector 400 [unity_ShadowFadeCenterAndType]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 64 [glstate_matrix_modelview0]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityShadows" 2
BindCB  "UnityPerDraw" 3
"vs_4_0
eefiecedengncbfcnjkpimleickikppmdilaggojabaaaaaagmahaaaaadaaaaaa
cmaaaaaapeaaaaaakmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheolaaaaaaaagaaaaaa
aiaaaaaajiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakeaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
apaaaaaakeaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaadamaaaakeaaaaaa
aeaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklfdeieefcliafaaaaeaaaabaagoabaaaafjaaaaae
egiocaaaaaaaaaaaajaaaaaafjaaaaaeegiocaaaabaaaaaaagaaaaaafjaaaaae
egiocaaaacaaaaaabkaaaaaafjaaaaaeegiocaaaadaaaaaabfaaaaaafpaaaaad
pcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaa
fpaaaaaddcbabaaaadaaaaaafpaaaaaddcbabaaaaeaaaaaaghaaaaaepccabaaa
aaaaaaaaabaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaa
gfaaaaadpccabaaaadaaaaaagfaaaaaddccabaaaaeaaaaaagfaaaaadpccabaaa
afaaaaaagiaaaaacadaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaa
egiocaaaadaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaa
aaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaa
egiocaaaadaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaa
aaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaa
abaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaahaaaaaaogikcaaaaaaaaaaa
ahaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaa
aiaaaaaakgiocaaaaaaaaaaaaiaaaaaadiaaaaahhcaabaaaabaaaaaajgbebaaa
abaaaaaacgbjbaaaacaaaaaadcaaaaakhcaabaaaabaaaaaajgbebaaaacaaaaaa
cgbjbaaaabaaaaaaegacbaiaebaaaaaaabaaaaaadiaaaaahhcaabaaaabaaaaaa
egacbaaaabaaaaaapgbpbaaaabaaaaaadiaaaaajhcaabaaaacaaaaaafgifcaaa
abaaaaaaaeaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaacaaaaaa
egiccaaaadaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaaacaaaaaa
dcaaaaalhcaabaaaacaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaabaaaaaa
aeaaaaaaegacbaaaacaaaaaaaaaaaaaihcaabaaaacaaaaaaegacbaaaacaaaaaa
egiccaaaadaaaaaabdaaaaaadcaaaaalhcaabaaaacaaaaaaegacbaaaacaaaaaa
pgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaa
acaaaaaaegacbaaaabaaaaaaegacbaaaacaaaaaabaaaaaahbccabaaaacaaaaaa
egbcbaaaabaaaaaaegacbaaaacaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaa
acaaaaaaegacbaaaacaaaaaadiaaaaaiccaabaaaaaaaaaaabkaabaaaaaaaaaaa
akiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaaabaaaaaaagahbaaaaaaaaaaa
aceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadpdgaaaaafmccabaaaadaaaaaa
kgaobaaaaaaaaaaaaaaaaaahdccabaaaadaaaaaakgakbaaaabaaaaaamgaabaaa
abaaaaaadcaaaaaldccabaaaaeaaaaaaegbabaaaaeaaaaaaegiacaaaaaaaaaaa
agaaaaaaogikcaaaaaaaaaaaagaaaaaadiaaaaaihcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaa
adaaaaaaamaaaaaaagbabaaaaaaaaaaaegacbaaaaaaaaaaadcaaaaakhcaabaaa
aaaaaaaaegiccaaaadaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegacbaaaaaaaaaaa
dcaaaaakhcaabaaaaaaaaaaaegiccaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaa
egacbaaaaaaaaaaaaaaaaaajhcaabaaaaaaaaaaaegacbaaaaaaaaaaaegiccaia
ebaaaaaaacaaaaaabjaaaaaadiaaaaaihccabaaaafaaaaaaegacbaaaaaaaaaaa
pgipcaaaacaaaaaabjaaaaaadiaaaaaibcaabaaaaaaaaaaabkbabaaaaaaaaaaa
ckiacaaaadaaaaaaafaaaaaadcaaaaakbcaabaaaaaaaaaaackiacaaaadaaaaaa
aeaaaaaaakbabaaaaaaaaaaaakaabaaaaaaaaaaadcaaaaakbcaabaaaaaaaaaaa
ckiacaaaadaaaaaaagaaaaaackbabaaaaaaaaaaaakaabaaaaaaaaaaadcaaaaak
bcaabaaaaaaaaaaackiacaaaadaaaaaaahaaaaaadkbabaaaaaaaaaaaakaabaaa
aaaaaaaaaaaaaaajccaabaaaaaaaaaaadkiacaiaebaaaaaaacaaaaaabjaaaaaa
abeaaaaaaaaaiadpdiaaaaaiiccabaaaafaaaaaabkaabaaaaaaaaaaaakaabaia
ebaaaaaaaaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_5.zw;
  tmpvar_4.xyz = (((_Object2World * _glesVertex).xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  tmpvar_4.w = (-((glstate_matrix_modelview0 * _glesVertex).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  highp vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_1.xyz;
  tmpvar_10 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_11;
  tmpvar_11[0].x = tmpvar_9.x;
  tmpvar_11[0].y = tmpvar_10.x;
  tmpvar_11[0].z = tmpvar_2.x;
  tmpvar_11[1].x = tmpvar_9.y;
  tmpvar_11[1].y = tmpvar_10.y;
  tmpvar_11[1].z = tmpvar_2.y;
  tmpvar_11[2].x = tmpvar_9.z;
  tmpvar_11[2].y = tmpvar_10.z;
  tmpvar_11[2].z = tmpvar_2.z;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_11 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = o_6;
  xlv_TEXCOORD3 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD4 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec3 lmIndirect_3;
  mediump vec3 lmFull_4;
  mediump float lmFade_5;
  mediump vec4 light_6;
  lowp vec3 tmpvar_7;
  highp vec2 tmpvar_8;
  tmpvar_8 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  lowp vec3 tmpvar_11;
  lowp float tmpvar_12;
  tmpvar_9 = vec3(0.0, 0.0, 0.0);
  tmpvar_10 = tmpvar_7;
  tmpvar_11 = vec3(0.0, 0.0, 0.0);
  tmpvar_12 = 0.0;
  mediump vec3 clouds_13;
  mediump vec2 cloudUV_14;
  lowp float fresnel_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_17;
  tmpvar_17 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_15 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = pow (fresnel_15, _AtmosFalloff);
  lowp vec3 tmpvar_19;
  tmpvar_19 = (tmpvar_16.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_18)) * tmpvar_18));
  cloudUV_14 = tmpvar_8;
  highp float tmpvar_20;
  tmpvar_20 = (_Time.y * _CloudSpeed);
  highp float tmpvar_21;
  tmpvar_21 = fract(abs(tmpvar_20));
  highp float tmpvar_22;
  if ((tmpvar_20 >= 0.0)) {
    tmpvar_22 = tmpvar_21;
  } else {
    tmpvar_22 = -(tmpvar_21);
  };
  cloudUV_14.x = (cloudUV_14.x + tmpvar_22);
  mediump float height_23;
  height_23 = _CloudHeight;
  mediump vec3 viewDir_24;
  viewDir_24 = xlv_TEXCOORD1;
  highp vec3 v_25;
  mediump float tmpvar_26;
  tmpvar_26 = (height_23 - (height_23 / 2.0));
  mediump vec3 tmpvar_27;
  tmpvar_27 = normalize(viewDir_24);
  v_25 = tmpvar_27;
  v_25.z = (v_25.z + 0.42);
  highp vec2 tmpvar_28;
  tmpvar_28 = (cloudUV_14 + (tmpvar_26 * (v_25.xy / v_25.z)));
  cloudUV_14 = tmpvar_28;
  lowp vec3 tmpvar_29;
  tmpvar_29 = texture2D (_Clouds, cloudUV_14).xyz;
  clouds_13 = tmpvar_29;
  mediump vec3 tmpvar_30;
  tmpvar_30 = (tmpvar_19 + clouds_13);
  tmpvar_9 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_32;
  tmpvar_32 = mix (tmpvar_31, vec3(0.0, 0.0, 1.0), clouds_13);
  tmpvar_10 = tmpvar_32;
  mediump vec4 tmpvar_33;
  tmpvar_33.w = 0.0;
  tmpvar_33.xyz = clouds_13;
  lowp vec4 arg0_34;
  arg0_34 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_35;
  tmpvar_35 = mix (arg0_34, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_33).xyz;
  tmpvar_11 = tmpvar_35;
  lowp vec4 tmpvar_36;
  tmpvar_36 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_37;
  tmpvar_37 = ((tmpvar_36.xyz * (1.0 - clouds_13)) * _SpecColor.xyz).x;
  tmpvar_12 = tmpvar_37;
  tmpvar_7 = tmpvar_10;
  lowp vec4 tmpvar_38;
  tmpvar_38 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_6 = tmpvar_38;
  mediump vec4 tmpvar_39;
  tmpvar_39 = -(log2(max (light_6, vec4(0.001, 0.001, 0.001, 0.001))));
  light_6.w = tmpvar_39.w;
  highp float tmpvar_40;
  tmpvar_40 = ((sqrt(dot (xlv_TEXCOORD4, xlv_TEXCOORD4)) * unity_LightmapFade.z) + unity_LightmapFade.w);
  lmFade_5 = tmpvar_40;
  lowp vec3 tmpvar_41;
  tmpvar_41 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD3).xyz);
  lmFull_4 = tmpvar_41;
  lowp vec3 tmpvar_42;
  tmpvar_42 = (2.0 * texture2D (unity_LightmapInd, xlv_TEXCOORD3).xyz);
  lmIndirect_3 = tmpvar_42;
  light_6.xyz = (tmpvar_39.xyz + mix (lmIndirect_3, lmFull_4, vec3(clamp (lmFade_5, 0.0, 1.0))));
  lowp vec4 c_43;
  lowp float spec_44;
  mediump float tmpvar_45;
  tmpvar_45 = (tmpvar_39.w * tmpvar_12);
  spec_44 = tmpvar_45;
  mediump vec3 tmpvar_46;
  tmpvar_46 = ((tmpvar_9 * light_6.xyz) + ((light_6.xyz * _SpecColor.xyz) * spec_44));
  c_43.xyz = tmpvar_46;
  c_43.w = (tmpvar_16.w + (spec_44 * _SpecColor.w));
  c_2 = c_43;
  c_2.xyz = (c_2.xyz + tmpvar_11);
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_5.zw;
  tmpvar_4.xyz = (((_Object2World * _glesVertex).xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  tmpvar_4.w = (-((glstate_matrix_modelview0 * _glesVertex).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  highp vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_1.xyz;
  tmpvar_10 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_11;
  tmpvar_11[0].x = tmpvar_9.x;
  tmpvar_11[0].y = tmpvar_10.x;
  tmpvar_11[0].z = tmpvar_2.x;
  tmpvar_11[1].x = tmpvar_9.y;
  tmpvar_11[1].y = tmpvar_10.y;
  tmpvar_11[1].z = tmpvar_2.y;
  tmpvar_11[2].x = tmpvar_9.z;
  tmpvar_11[2].y = tmpvar_10.z;
  tmpvar_11[2].z = tmpvar_2.z;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_11 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = o_6;
  xlv_TEXCOORD3 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD4 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec3 lmIndirect_3;
  mediump vec3 lmFull_4;
  mediump float lmFade_5;
  mediump vec4 light_6;
  lowp vec3 tmpvar_7;
  highp vec2 tmpvar_8;
  tmpvar_8 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  lowp vec3 tmpvar_11;
  lowp float tmpvar_12;
  tmpvar_9 = vec3(0.0, 0.0, 0.0);
  tmpvar_10 = tmpvar_7;
  tmpvar_11 = vec3(0.0, 0.0, 0.0);
  tmpvar_12 = 0.0;
  mediump vec3 clouds_13;
  mediump vec2 cloudUV_14;
  lowp float fresnel_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_17;
  tmpvar_17 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_15 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = pow (fresnel_15, _AtmosFalloff);
  lowp vec3 tmpvar_19;
  tmpvar_19 = (tmpvar_16.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_18)) * tmpvar_18));
  cloudUV_14 = tmpvar_8;
  highp float tmpvar_20;
  tmpvar_20 = (_Time.y * _CloudSpeed);
  highp float tmpvar_21;
  tmpvar_21 = fract(abs(tmpvar_20));
  highp float tmpvar_22;
  if ((tmpvar_20 >= 0.0)) {
    tmpvar_22 = tmpvar_21;
  } else {
    tmpvar_22 = -(tmpvar_21);
  };
  cloudUV_14.x = (cloudUV_14.x + tmpvar_22);
  mediump float height_23;
  height_23 = _CloudHeight;
  mediump vec3 viewDir_24;
  viewDir_24 = xlv_TEXCOORD1;
  highp vec3 v_25;
  mediump float tmpvar_26;
  tmpvar_26 = (height_23 - (height_23 / 2.0));
  mediump vec3 tmpvar_27;
  tmpvar_27 = normalize(viewDir_24);
  v_25 = tmpvar_27;
  v_25.z = (v_25.z + 0.42);
  highp vec2 tmpvar_28;
  tmpvar_28 = (cloudUV_14 + (tmpvar_26 * (v_25.xy / v_25.z)));
  cloudUV_14 = tmpvar_28;
  lowp vec3 tmpvar_29;
  tmpvar_29 = texture2D (_Clouds, cloudUV_14).xyz;
  clouds_13 = tmpvar_29;
  mediump vec3 tmpvar_30;
  tmpvar_30 = (tmpvar_19 + clouds_13);
  tmpvar_9 = tmpvar_30;
  lowp vec3 normal_31;
  normal_31.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_31.z = sqrt((1.0 - clamp (dot (normal_31.xy, normal_31.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_32;
  tmpvar_32 = mix (normal_31, vec3(0.0, 0.0, 1.0), clouds_13);
  tmpvar_10 = tmpvar_32;
  mediump vec4 tmpvar_33;
  tmpvar_33.w = 0.0;
  tmpvar_33.xyz = clouds_13;
  lowp vec4 arg0_34;
  arg0_34 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_35;
  tmpvar_35 = mix (arg0_34, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_33).xyz;
  tmpvar_11 = tmpvar_35;
  lowp vec4 tmpvar_36;
  tmpvar_36 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_37;
  tmpvar_37 = ((tmpvar_36.xyz * (1.0 - clouds_13)) * _SpecColor.xyz).x;
  tmpvar_12 = tmpvar_37;
  tmpvar_7 = tmpvar_10;
  lowp vec4 tmpvar_38;
  tmpvar_38 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_6 = tmpvar_38;
  mediump vec4 tmpvar_39;
  tmpvar_39 = -(log2(max (light_6, vec4(0.001, 0.001, 0.001, 0.001))));
  light_6.w = tmpvar_39.w;
  lowp vec4 tmpvar_40;
  tmpvar_40 = texture2D (unity_Lightmap, xlv_TEXCOORD3);
  lowp vec4 tmpvar_41;
  tmpvar_41 = texture2D (unity_LightmapInd, xlv_TEXCOORD3);
  highp float tmpvar_42;
  tmpvar_42 = ((sqrt(dot (xlv_TEXCOORD4, xlv_TEXCOORD4)) * unity_LightmapFade.z) + unity_LightmapFade.w);
  lmFade_5 = tmpvar_42;
  lowp vec3 tmpvar_43;
  tmpvar_43 = ((8.0 * tmpvar_40.w) * tmpvar_40.xyz);
  lmFull_4 = tmpvar_43;
  lowp vec3 tmpvar_44;
  tmpvar_44 = ((8.0 * tmpvar_41.w) * tmpvar_41.xyz);
  lmIndirect_3 = tmpvar_44;
  light_6.xyz = (tmpvar_39.xyz + mix (lmIndirect_3, lmFull_4, vec3(clamp (lmFade_5, 0.0, 1.0))));
  lowp vec4 c_45;
  lowp float spec_46;
  mediump float tmpvar_47;
  tmpvar_47 = (tmpvar_39.w * tmpvar_12);
  spec_46 = tmpvar_47;
  mediump vec3 tmpvar_48;
  tmpvar_48 = ((tmpvar_9 * light_6.xyz) + ((light_6.xyz * _SpecColor.xyz) * spec_46));
  c_45.xyz = tmpvar_48;
  c_45.w = (tmpvar_16.w + (spec_46 * _SpecColor.w));
  c_2 = c_45;
  c_2.xyz = (c_2.xyz + tmpvar_11);
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out highp vec4 xlv_TEXCOORD2;
out highp vec2 xlv_TEXCOORD3;
out highp vec4 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_5.zw;
  tmpvar_4.xyz = (((_Object2World * _glesVertex).xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  tmpvar_4.w = (-((glstate_matrix_modelview0 * _glesVertex).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  highp vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_1.xyz;
  tmpvar_10 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_11;
  tmpvar_11[0].x = tmpvar_9.x;
  tmpvar_11[0].y = tmpvar_10.x;
  tmpvar_11[0].z = tmpvar_2.x;
  tmpvar_11[1].x = tmpvar_9.y;
  tmpvar_11[1].y = tmpvar_10.y;
  tmpvar_11[1].z = tmpvar_2.y;
  tmpvar_11[2].x = tmpvar_9.z;
  tmpvar_11[2].y = tmpvar_10.z;
  tmpvar_11[2].z = tmpvar_2.z;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_11 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = o_6;
  xlv_TEXCOORD3 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD4 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _Time;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
in highp vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
in highp vec2 xlv_TEXCOORD3;
in highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec3 lmIndirect_3;
  mediump vec3 lmFull_4;
  mediump float lmFade_5;
  mediump vec4 light_6;
  lowp vec3 tmpvar_7;
  highp vec2 tmpvar_8;
  tmpvar_8 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  lowp vec3 tmpvar_11;
  lowp float tmpvar_12;
  tmpvar_9 = vec3(0.0, 0.0, 0.0);
  tmpvar_10 = tmpvar_7;
  tmpvar_11 = vec3(0.0, 0.0, 0.0);
  tmpvar_12 = 0.0;
  mediump vec3 clouds_13;
  mediump vec2 cloudUV_14;
  lowp float fresnel_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_17;
  tmpvar_17 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_15 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = pow (fresnel_15, _AtmosFalloff);
  lowp vec3 tmpvar_19;
  tmpvar_19 = (tmpvar_16.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_18)) * tmpvar_18));
  cloudUV_14 = tmpvar_8;
  highp float tmpvar_20;
  tmpvar_20 = (_Time.y * _CloudSpeed);
  highp float tmpvar_21;
  tmpvar_21 = fract(abs(tmpvar_20));
  highp float tmpvar_22;
  if ((tmpvar_20 >= 0.0)) {
    tmpvar_22 = tmpvar_21;
  } else {
    tmpvar_22 = -(tmpvar_21);
  };
  cloudUV_14.x = (cloudUV_14.x + tmpvar_22);
  mediump float height_23;
  height_23 = _CloudHeight;
  mediump vec3 viewDir_24;
  viewDir_24 = xlv_TEXCOORD1;
  highp vec3 v_25;
  mediump float tmpvar_26;
  tmpvar_26 = (height_23 - (height_23 / 2.0));
  mediump vec3 tmpvar_27;
  tmpvar_27 = normalize(viewDir_24);
  v_25 = tmpvar_27;
  v_25.z = (v_25.z + 0.42);
  highp vec2 tmpvar_28;
  tmpvar_28 = (cloudUV_14 + (tmpvar_26 * (v_25.xy / v_25.z)));
  cloudUV_14 = tmpvar_28;
  lowp vec3 tmpvar_29;
  tmpvar_29 = texture (_Clouds, cloudUV_14).xyz;
  clouds_13 = tmpvar_29;
  mediump vec3 tmpvar_30;
  tmpvar_30 = (tmpvar_19 + clouds_13);
  tmpvar_9 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_32;
  tmpvar_32 = mix (tmpvar_31, vec3(0.0, 0.0, 1.0), clouds_13);
  tmpvar_10 = tmpvar_32;
  mediump vec4 tmpvar_33;
  tmpvar_33.w = 0.0;
  tmpvar_33.xyz = clouds_13;
  lowp vec4 arg0_34;
  arg0_34 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_35;
  tmpvar_35 = mix (arg0_34, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_33).xyz;
  tmpvar_11 = tmpvar_35;
  lowp vec4 tmpvar_36;
  tmpvar_36 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_37;
  tmpvar_37 = ((tmpvar_36.xyz * (1.0 - clouds_13)) * _SpecColor.xyz).x;
  tmpvar_12 = tmpvar_37;
  tmpvar_7 = tmpvar_10;
  lowp vec4 tmpvar_38;
  tmpvar_38 = textureProj (_LightBuffer, xlv_TEXCOORD2);
  light_6 = tmpvar_38;
  mediump vec4 tmpvar_39;
  tmpvar_39 = -(log2(max (light_6, vec4(0.001, 0.001, 0.001, 0.001))));
  light_6.w = tmpvar_39.w;
  highp float tmpvar_40;
  tmpvar_40 = ((sqrt(dot (xlv_TEXCOORD4, xlv_TEXCOORD4)) * unity_LightmapFade.z) + unity_LightmapFade.w);
  lmFade_5 = tmpvar_40;
  lowp vec3 tmpvar_41;
  tmpvar_41 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD3).xyz);
  lmFull_4 = tmpvar_41;
  lowp vec3 tmpvar_42;
  tmpvar_42 = (2.0 * texture (unity_LightmapInd, xlv_TEXCOORD3).xyz);
  lmIndirect_3 = tmpvar_42;
  light_6.xyz = (tmpvar_39.xyz + mix (lmIndirect_3, lmFull_4, vec3(clamp (lmFade_5, 0.0, 1.0))));
  lowp vec4 c_43;
  lowp float spec_44;
  mediump float tmpvar_45;
  tmpvar_45 = (tmpvar_39.w * tmpvar_12);
  spec_44 = tmpvar_45;
  mediump vec3 tmpvar_46;
  tmpvar_46 = ((tmpvar_9 * light_6.xyz) + ((light_6.xyz * _SpecColor.xyz) * spec_44));
  c_43.xyz = tmpvar_46;
  c_43.w = (tmpvar_16.w + (spec_44 * _SpecColor.w));
  c_2 = c_43;
  c_2.xyz = (c_2.xyz + tmpvar_11);
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 25 math
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" ATTR14
Matrix 5 [_World2Object]
Vector 9 [_WorldSpaceCameraPos]
Vector 10 [_ProjectionParams]
Vector 11 [unity_Scale]
Vector 12 [unity_LightmapST]
Vector 13 [_MainTex_ST]
Vector 14 [_Clouds_ST]
"3.0-!!ARBvp1.0
PARAM c[15] = { { 1, 0.5 },
		state.matrix.mvp,
		program.local[5..14] };
TEMP R0;
TEMP R1;
TEMP R2;
MOV R0.xyz, vertex.attrib[14];
MUL R1.xyz, vertex.normal.zxyw, R0.yzxw;
MAD R0.xyz, vertex.normal.yzxw, R0.zxyw, -R1;
MUL R0.xyz, R0, vertex.attrib[14].w;
MOV R1.xyz, c[9];
MOV R1.w, c[0].x;
DP4 R0.w, vertex.position, c[4];
DP4 R2.z, R1, c[7];
DP4 R2.x, R1, c[5];
DP4 R2.y, R1, c[6];
MAD R2.xyz, R2, c[11].w, -vertex.position;
DP3 result.texcoord[1].y, R2, R0;
DP4 R0.z, vertex.position, c[3];
DP4 R0.x, vertex.position, c[1];
DP4 R0.y, vertex.position, c[2];
MUL R1.xyz, R0.xyww, c[0].y;
MUL R1.y, R1, c[10].x;
DP3 result.texcoord[1].z, vertex.normal, R2;
DP3 result.texcoord[1].x, R2, vertex.attrib[14];
ADD result.texcoord[2].xy, R1, R1.z;
MOV result.position, R0;
MOV result.texcoord[2].zw, R0;
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[14].xyxy, c[14];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[13], c[13].zwzw;
MAD result.texcoord[3].xy, vertex.texcoord[1], c[12], c[12].zwzw;
END
# 25 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 26 math
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_World2Object]
Vector 8 [_WorldSpaceCameraPos]
Vector 9 [_ProjectionParams]
Vector 10 [_ScreenParams]
Vector 11 [unity_Scale]
Vector 12 [unity_LightmapST]
Vector 13 [_MainTex_ST]
Vector 14 [_Clouds_ST]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
def c15, 1.00000000, 0.50000000, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
dcl_texcoord1 v4
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r0.xyz, v2.yzxw, r0.zxyw, -r1
mul r0.xyz, r0, v1.w
mov r1.xyz, c8
mov r1.w, c15.x
dp4 r0.w, v0, c3
dp4 r2.z, r1, c6
dp4 r2.x, r1, c4
dp4 r2.y, r1, c5
mad r2.xyz, r2, c11.w, -v0
dp3 o2.y, r2, r0
dp4 r0.z, v0, c2
dp4 r0.x, v0, c0
dp4 r0.y, v0, c1
mul r1.xyz, r0.xyww, c15.y
mul r1.y, r1, c9.x
dp3 o2.z, v2, r2
dp3 o2.x, r2, v1
mad o3.xy, r1.z, c10.zwzw, r1
mov o0, r0
mov o3.zw, r0
mad o1.zw, v3.xyxy, c14.xyxy, c14
mad o1.xy, v3, c13, c13.zwzw
mad o4.xy, v4, c12, c12.zwzw
"
}
SubProgram "d3d11 " {
// Stats: 21 math
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 176
Vector 96 [unity_LightmapST]
Vector 112 [_MainTex_ST]
Vector 128 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityPerDraw" 2
"vs_4_0
eefiecedeimifhggmadmdbppgoemlndglogmdhcmabaaaaaaiaafaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
apaaaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaadamaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcoeadaaaaeaaaabaa
pjaaaaaafjaaaaaeegiocaaaaaaaaaaaajaaaaaafjaaaaaeegiocaaaabaaaaaa
agaaaaaafjaaaaaeegiocaaaacaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaa
fpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaa
adaaaaaafpaaaaaddcbabaaaaeaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaa
gfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadpccabaaa
adaaaaaagfaaaaaddccabaaaaeaaaaaagiaaaaacadaaaaaadiaaaaaipcaabaaa
aaaaaaaafgbfbaaaaaaaaaaaegiocaaaacaaaaaaabaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaacaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaacaaaaaakgbkbaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaadaaaaaa
pgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaa
ahaaaaaaogikcaaaaaaaaaaaahaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaa
adaaaaaaagiecaaaaaaaaaaaaiaaaaaakgiocaaaaaaaaaaaaiaaaaaadiaaaaah
hcaabaaaabaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaadcaaaaakhcaabaaa
abaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaiaebaaaaaaabaaaaaa
diaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaapgbpbaaaabaaaaaadiaaaaaj
hcaabaaaacaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaaacaaaaaabbaaaaaa
dcaaaaalhcaabaaaacaaaaaaegiccaaaacaaaaaabaaaaaaaagiacaaaabaaaaaa
aeaaaaaaegacbaaaacaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaaacaaaaaa
bcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaaacaaaaaaaaaaaaaihcaabaaa
acaaaaaaegacbaaaacaaaaaaegiccaaaacaaaaaabdaaaaaadcaaaaalhcaabaaa
acaaaaaaegacbaaaacaaaaaapgipcaaaacaaaaaabeaaaaaaegbcbaiaebaaaaaa
aaaaaaaabaaaaaahcccabaaaacaaaaaaegacbaaaabaaaaaaegacbaaaacaaaaaa
baaaaaahbccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaaacaaaaaabaaaaaah
eccabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaaacaaaaaadiaaaaaiccaabaaa
aaaaaaaabkaabaaaaaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaa
abaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadp
dgaaaaafmccabaaaadaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaadaaaaaa
kgakbaaaabaaaaaamgaabaaaabaaaaaadcaaaaaldccabaaaaeaaaaaaegbabaaa
aeaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaadoaaaaab
"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_5;
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_7;
  tmpvar_7.x = tmpvar_6.x;
  tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
  o_5.xy = (tmpvar_7 + tmpvar_6.w);
  o_5.zw = tmpvar_4.zw;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = _WorldSpaceCameraPos;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_10 * (((_World2Object * tmpvar_11).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = o_5;
  xlv_TEXCOORD3 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  mediump float tmpvar_9;
  lowp float tmpvar_10;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = tmpvar_4;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  tmpvar_9 = 0.0;
  tmpvar_10 = 0.0;
  mediump vec3 clouds_11;
  mediump vec2 cloudUV_12;
  lowp float fresnel_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_15;
  tmpvar_15 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_13 = tmpvar_15;
  lowp float tmpvar_16;
  tmpvar_16 = pow (fresnel_13, _AtmosFalloff);
  lowp vec3 tmpvar_17;
  tmpvar_17 = (tmpvar_14.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_16)) * tmpvar_16));
  cloudUV_12 = tmpvar_5;
  highp float tmpvar_18;
  tmpvar_18 = (_Time.y * _CloudSpeed);
  highp float tmpvar_19;
  tmpvar_19 = fract(abs(tmpvar_18));
  highp float tmpvar_20;
  if ((tmpvar_18 >= 0.0)) {
    tmpvar_20 = tmpvar_19;
  } else {
    tmpvar_20 = -(tmpvar_19);
  };
  cloudUV_12.x = (cloudUV_12.x + tmpvar_20);
  mediump float height_21;
  height_21 = _CloudHeight;
  mediump vec3 viewDir_22;
  viewDir_22 = xlv_TEXCOORD1;
  highp vec3 v_23;
  mediump float tmpvar_24;
  tmpvar_24 = (height_21 - (height_21 / 2.0));
  mediump vec3 tmpvar_25;
  tmpvar_25 = normalize(viewDir_22);
  v_23 = tmpvar_25;
  v_23.z = (v_23.z + 0.42);
  highp vec2 tmpvar_26;
  tmpvar_26 = (cloudUV_12 + (tmpvar_24 * (v_23.xy / v_23.z)));
  cloudUV_12 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = texture2D (_Clouds, cloudUV_12).xyz;
  clouds_11 = tmpvar_27;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_17 + clouds_11);
  tmpvar_6 = tmpvar_28;
  lowp vec3 tmpvar_29;
  tmpvar_29 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_30;
  tmpvar_30 = mix (tmpvar_29, vec3(0.0, 0.0, 1.0), clouds_11);
  tmpvar_7 = tmpvar_30;
  mediump vec4 tmpvar_31;
  tmpvar_31.w = 0.0;
  tmpvar_31.xyz = clouds_11;
  lowp vec4 arg0_32;
  arg0_32 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_33;
  tmpvar_33 = mix (arg0_32, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_31).xyz;
  tmpvar_8 = tmpvar_33;
  tmpvar_9 = _Shininess;
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_35;
  tmpvar_35 = ((tmpvar_34.xyz * (1.0 - clouds_11)) * _SpecColor.xyz).x;
  tmpvar_10 = tmpvar_35;
  tmpvar_4 = tmpvar_7;
  lowp vec4 tmpvar_36;
  tmpvar_36 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_36;
  highp vec3 tmpvar_37;
  tmpvar_37 = normalize(xlv_TEXCOORD1);
  mediump vec4 tmpvar_38;
  mediump vec3 viewDir_39;
  viewDir_39 = tmpvar_37;
  highp float nh_40;
  mat3 tmpvar_41;
  tmpvar_41[0].x = 0.816497;
  tmpvar_41[0].y = -0.408248;
  tmpvar_41[0].z = -0.408248;
  tmpvar_41[1].x = 0.0;
  tmpvar_41[1].y = 0.707107;
  tmpvar_41[1].z = -0.707107;
  tmpvar_41[2].x = 0.57735;
  tmpvar_41[2].y = 0.57735;
  tmpvar_41[2].z = 0.57735;
  mediump vec3 normal_42;
  normal_42 = tmpvar_7;
  mediump vec3 scalePerBasisVector_43;
  mediump vec3 lm_44;
  lowp vec3 tmpvar_45;
  tmpvar_45 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD3).xyz);
  lm_44 = tmpvar_45;
  lowp vec3 tmpvar_46;
  tmpvar_46 = (2.0 * texture2D (unity_LightmapInd, xlv_TEXCOORD3).xyz);
  scalePerBasisVector_43 = tmpvar_46;
  lm_44 = (lm_44 * dot (clamp ((tmpvar_41 * normal_42), 0.0, 1.0), scalePerBasisVector_43));
  vec3 v_47;
  v_47.x = tmpvar_41[0].x;
  v_47.y = tmpvar_41[1].x;
  v_47.z = tmpvar_41[2].x;
  vec3 v_48;
  v_48.x = tmpvar_41[0].y;
  v_48.y = tmpvar_41[1].y;
  v_48.z = tmpvar_41[2].y;
  vec3 v_49;
  v_49.x = tmpvar_41[0].z;
  v_49.y = tmpvar_41[1].z;
  v_49.z = tmpvar_41[2].z;
  mediump float tmpvar_50;
  tmpvar_50 = max (0.0, dot (tmpvar_7, normalize((normalize((((scalePerBasisVector_43.x * v_47) + (scalePerBasisVector_43.y * v_48)) + (scalePerBasisVector_43.z * v_49))) + viewDir_39))));
  nh_40 = tmpvar_50;
  mediump float arg1_51;
  arg1_51 = (tmpvar_9 * 128.0);
  highp vec4 tmpvar_52;
  tmpvar_52.xyz = lm_44;
  tmpvar_52.w = pow (nh_40, arg1_51);
  tmpvar_38 = tmpvar_52;
  mediump vec4 tmpvar_53;
  tmpvar_53 = (-(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001)))) + tmpvar_38);
  light_3 = tmpvar_53;
  lowp vec4 c_54;
  lowp float spec_55;
  mediump float tmpvar_56;
  tmpvar_56 = (tmpvar_53.w * tmpvar_10);
  spec_55 = tmpvar_56;
  mediump vec3 tmpvar_57;
  tmpvar_57 = ((tmpvar_6 * tmpvar_53.xyz) + ((tmpvar_53.xyz * _SpecColor.xyz) * spec_55));
  c_54.xyz = tmpvar_57;
  c_54.w = (tmpvar_14.w + (spec_55 * _SpecColor.w));
  c_2 = c_54;
  c_2.xyz = (c_2.xyz + tmpvar_8);
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_5;
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_7;
  tmpvar_7.x = tmpvar_6.x;
  tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
  o_5.xy = (tmpvar_7 + tmpvar_6.w);
  o_5.zw = tmpvar_4.zw;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = _WorldSpaceCameraPos;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_10 * (((_World2Object * tmpvar_11).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = o_5;
  xlv_TEXCOORD3 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  mediump float tmpvar_9;
  lowp float tmpvar_10;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = tmpvar_4;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  tmpvar_9 = 0.0;
  tmpvar_10 = 0.0;
  mediump vec3 clouds_11;
  mediump vec2 cloudUV_12;
  lowp float fresnel_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_15;
  tmpvar_15 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_13 = tmpvar_15;
  lowp float tmpvar_16;
  tmpvar_16 = pow (fresnel_13, _AtmosFalloff);
  lowp vec3 tmpvar_17;
  tmpvar_17 = (tmpvar_14.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_16)) * tmpvar_16));
  cloudUV_12 = tmpvar_5;
  highp float tmpvar_18;
  tmpvar_18 = (_Time.y * _CloudSpeed);
  highp float tmpvar_19;
  tmpvar_19 = fract(abs(tmpvar_18));
  highp float tmpvar_20;
  if ((tmpvar_18 >= 0.0)) {
    tmpvar_20 = tmpvar_19;
  } else {
    tmpvar_20 = -(tmpvar_19);
  };
  cloudUV_12.x = (cloudUV_12.x + tmpvar_20);
  mediump float height_21;
  height_21 = _CloudHeight;
  mediump vec3 viewDir_22;
  viewDir_22 = xlv_TEXCOORD1;
  highp vec3 v_23;
  mediump float tmpvar_24;
  tmpvar_24 = (height_21 - (height_21 / 2.0));
  mediump vec3 tmpvar_25;
  tmpvar_25 = normalize(viewDir_22);
  v_23 = tmpvar_25;
  v_23.z = (v_23.z + 0.42);
  highp vec2 tmpvar_26;
  tmpvar_26 = (cloudUV_12 + (tmpvar_24 * (v_23.xy / v_23.z)));
  cloudUV_12 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = texture2D (_Clouds, cloudUV_12).xyz;
  clouds_11 = tmpvar_27;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_17 + clouds_11);
  tmpvar_6 = tmpvar_28;
  lowp vec3 normal_29;
  normal_29.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_29.z = sqrt((1.0 - clamp (dot (normal_29.xy, normal_29.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_30;
  tmpvar_30 = mix (normal_29, vec3(0.0, 0.0, 1.0), clouds_11);
  tmpvar_7 = tmpvar_30;
  mediump vec4 tmpvar_31;
  tmpvar_31.w = 0.0;
  tmpvar_31.xyz = clouds_11;
  lowp vec4 arg0_32;
  arg0_32 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_33;
  tmpvar_33 = mix (arg0_32, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_31).xyz;
  tmpvar_8 = tmpvar_33;
  tmpvar_9 = _Shininess;
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_35;
  tmpvar_35 = ((tmpvar_34.xyz * (1.0 - clouds_11)) * _SpecColor.xyz).x;
  tmpvar_10 = tmpvar_35;
  tmpvar_4 = tmpvar_7;
  lowp vec4 tmpvar_36;
  tmpvar_36 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_36;
  lowp vec4 tmpvar_37;
  tmpvar_37 = texture2D (unity_Lightmap, xlv_TEXCOORD3);
  lowp vec4 tmpvar_38;
  tmpvar_38 = texture2D (unity_LightmapInd, xlv_TEXCOORD3);
  highp vec3 tmpvar_39;
  tmpvar_39 = normalize(xlv_TEXCOORD1);
  mediump vec4 tmpvar_40;
  mediump vec3 viewDir_41;
  viewDir_41 = tmpvar_39;
  highp float nh_42;
  mat3 tmpvar_43;
  tmpvar_43[0].x = 0.816497;
  tmpvar_43[0].y = -0.408248;
  tmpvar_43[0].z = -0.408248;
  tmpvar_43[1].x = 0.0;
  tmpvar_43[1].y = 0.707107;
  tmpvar_43[1].z = -0.707107;
  tmpvar_43[2].x = 0.57735;
  tmpvar_43[2].y = 0.57735;
  tmpvar_43[2].z = 0.57735;
  mediump vec3 normal_44;
  normal_44 = tmpvar_7;
  mediump vec3 scalePerBasisVector_45;
  mediump vec3 lm_46;
  lowp vec3 tmpvar_47;
  tmpvar_47 = ((8.0 * tmpvar_37.w) * tmpvar_37.xyz);
  lm_46 = tmpvar_47;
  lowp vec3 tmpvar_48;
  tmpvar_48 = ((8.0 * tmpvar_38.w) * tmpvar_38.xyz);
  scalePerBasisVector_45 = tmpvar_48;
  lm_46 = (lm_46 * dot (clamp ((tmpvar_43 * normal_44), 0.0, 1.0), scalePerBasisVector_45));
  vec3 v_49;
  v_49.x = tmpvar_43[0].x;
  v_49.y = tmpvar_43[1].x;
  v_49.z = tmpvar_43[2].x;
  vec3 v_50;
  v_50.x = tmpvar_43[0].y;
  v_50.y = tmpvar_43[1].y;
  v_50.z = tmpvar_43[2].y;
  vec3 v_51;
  v_51.x = tmpvar_43[0].z;
  v_51.y = tmpvar_43[1].z;
  v_51.z = tmpvar_43[2].z;
  mediump float tmpvar_52;
  tmpvar_52 = max (0.0, dot (tmpvar_7, normalize((normalize((((scalePerBasisVector_45.x * v_49) + (scalePerBasisVector_45.y * v_50)) + (scalePerBasisVector_45.z * v_51))) + viewDir_41))));
  nh_42 = tmpvar_52;
  mediump float arg1_53;
  arg1_53 = (tmpvar_9 * 128.0);
  highp vec4 tmpvar_54;
  tmpvar_54.xyz = lm_46;
  tmpvar_54.w = pow (nh_42, arg1_53);
  tmpvar_40 = tmpvar_54;
  mediump vec4 tmpvar_55;
  tmpvar_55 = (-(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001)))) + tmpvar_40);
  light_3 = tmpvar_55;
  lowp vec4 c_56;
  lowp float spec_57;
  mediump float tmpvar_58;
  tmpvar_58 = (tmpvar_55.w * tmpvar_10);
  spec_57 = tmpvar_58;
  mediump vec3 tmpvar_59;
  tmpvar_59 = ((tmpvar_6 * tmpvar_55.xyz) + ((tmpvar_55.xyz * _SpecColor.xyz) * spec_57));
  c_56.xyz = tmpvar_59;
  c_56.w = (tmpvar_14.w + (spec_57 * _SpecColor.w));
  c_2 = c_56;
  c_2.xyz = (c_2.xyz + tmpvar_8);
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out highp vec4 xlv_TEXCOORD2;
out highp vec2 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_5;
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_7;
  tmpvar_7.x = tmpvar_6.x;
  tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
  o_5.xy = (tmpvar_7 + tmpvar_6.w);
  o_5.zw = tmpvar_4.zw;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = _WorldSpaceCameraPos;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_10 * (((_World2Object * tmpvar_11).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = o_5;
  xlv_TEXCOORD3 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _Time;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
in highp vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
in highp vec2 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  mediump float tmpvar_9;
  lowp float tmpvar_10;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = tmpvar_4;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  tmpvar_9 = 0.0;
  tmpvar_10 = 0.0;
  mediump vec3 clouds_11;
  mediump vec2 cloudUV_12;
  lowp float fresnel_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_15;
  tmpvar_15 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_13 = tmpvar_15;
  lowp float tmpvar_16;
  tmpvar_16 = pow (fresnel_13, _AtmosFalloff);
  lowp vec3 tmpvar_17;
  tmpvar_17 = (tmpvar_14.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_16)) * tmpvar_16));
  cloudUV_12 = tmpvar_5;
  highp float tmpvar_18;
  tmpvar_18 = (_Time.y * _CloudSpeed);
  highp float tmpvar_19;
  tmpvar_19 = fract(abs(tmpvar_18));
  highp float tmpvar_20;
  if ((tmpvar_18 >= 0.0)) {
    tmpvar_20 = tmpvar_19;
  } else {
    tmpvar_20 = -(tmpvar_19);
  };
  cloudUV_12.x = (cloudUV_12.x + tmpvar_20);
  mediump float height_21;
  height_21 = _CloudHeight;
  mediump vec3 viewDir_22;
  viewDir_22 = xlv_TEXCOORD1;
  highp vec3 v_23;
  mediump float tmpvar_24;
  tmpvar_24 = (height_21 - (height_21 / 2.0));
  mediump vec3 tmpvar_25;
  tmpvar_25 = normalize(viewDir_22);
  v_23 = tmpvar_25;
  v_23.z = (v_23.z + 0.42);
  highp vec2 tmpvar_26;
  tmpvar_26 = (cloudUV_12 + (tmpvar_24 * (v_23.xy / v_23.z)));
  cloudUV_12 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = texture (_Clouds, cloudUV_12).xyz;
  clouds_11 = tmpvar_27;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_17 + clouds_11);
  tmpvar_6 = tmpvar_28;
  lowp vec3 tmpvar_29;
  tmpvar_29 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_30;
  tmpvar_30 = mix (tmpvar_29, vec3(0.0, 0.0, 1.0), clouds_11);
  tmpvar_7 = tmpvar_30;
  mediump vec4 tmpvar_31;
  tmpvar_31.w = 0.0;
  tmpvar_31.xyz = clouds_11;
  lowp vec4 arg0_32;
  arg0_32 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_33;
  tmpvar_33 = mix (arg0_32, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_31).xyz;
  tmpvar_8 = tmpvar_33;
  tmpvar_9 = _Shininess;
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_35;
  tmpvar_35 = ((tmpvar_34.xyz * (1.0 - clouds_11)) * _SpecColor.xyz).x;
  tmpvar_10 = tmpvar_35;
  tmpvar_4 = tmpvar_7;
  lowp vec4 tmpvar_36;
  tmpvar_36 = textureProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_36;
  highp vec3 tmpvar_37;
  tmpvar_37 = normalize(xlv_TEXCOORD1);
  mediump vec4 tmpvar_38;
  mediump vec3 viewDir_39;
  viewDir_39 = tmpvar_37;
  highp float nh_40;
  mat3 tmpvar_41;
  tmpvar_41[0].x = 0.816497;
  tmpvar_41[0].y = -0.408248;
  tmpvar_41[0].z = -0.408248;
  tmpvar_41[1].x = 0.0;
  tmpvar_41[1].y = 0.707107;
  tmpvar_41[1].z = -0.707107;
  tmpvar_41[2].x = 0.57735;
  tmpvar_41[2].y = 0.57735;
  tmpvar_41[2].z = 0.57735;
  mediump vec3 normal_42;
  normal_42 = tmpvar_7;
  mediump vec3 scalePerBasisVector_43;
  mediump vec3 lm_44;
  lowp vec3 tmpvar_45;
  tmpvar_45 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD3).xyz);
  lm_44 = tmpvar_45;
  lowp vec3 tmpvar_46;
  tmpvar_46 = (2.0 * texture (unity_LightmapInd, xlv_TEXCOORD3).xyz);
  scalePerBasisVector_43 = tmpvar_46;
  lm_44 = (lm_44 * dot (clamp ((tmpvar_41 * normal_42), 0.0, 1.0), scalePerBasisVector_43));
  vec3 v_47;
  v_47.x = tmpvar_41[0].x;
  v_47.y = tmpvar_41[1].x;
  v_47.z = tmpvar_41[2].x;
  vec3 v_48;
  v_48.x = tmpvar_41[0].y;
  v_48.y = tmpvar_41[1].y;
  v_48.z = tmpvar_41[2].y;
  vec3 v_49;
  v_49.x = tmpvar_41[0].z;
  v_49.y = tmpvar_41[1].z;
  v_49.z = tmpvar_41[2].z;
  mediump float tmpvar_50;
  tmpvar_50 = max (0.0, dot (tmpvar_7, normalize((normalize((((scalePerBasisVector_43.x * v_47) + (scalePerBasisVector_43.y * v_48)) + (scalePerBasisVector_43.z * v_49))) + viewDir_39))));
  nh_40 = tmpvar_50;
  mediump float arg1_51;
  arg1_51 = (tmpvar_9 * 128.0);
  highp vec4 tmpvar_52;
  tmpvar_52.xyz = lm_44;
  tmpvar_52.w = pow (nh_40, arg1_51);
  tmpvar_38 = tmpvar_52;
  mediump vec4 tmpvar_53;
  tmpvar_53 = (-(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001)))) + tmpvar_38);
  light_3 = tmpvar_53;
  lowp vec4 c_54;
  lowp float spec_55;
  mediump float tmpvar_56;
  tmpvar_56 = (tmpvar_53.w * tmpvar_10);
  spec_55 = tmpvar_56;
  mediump vec3 tmpvar_57;
  tmpvar_57 = ((tmpvar_6 * tmpvar_53.xyz) + ((tmpvar_53.xyz * _SpecColor.xyz) * spec_55));
  c_54.xyz = tmpvar_57;
  c_54.w = (tmpvar_14.w + (spec_55 * _SpecColor.w));
  c_2 = c_54;
  c_2.xyz = (c_2.xyz + tmpvar_8);
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 42 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Vector 13 [_WorldSpaceCameraPos]
Vector 14 [_ProjectionParams]
Vector 15 [unity_SHAr]
Vector 16 [unity_SHAg]
Vector 17 [unity_SHAb]
Vector 18 [unity_SHBr]
Vector 19 [unity_SHBg]
Vector 20 [unity_SHBb]
Vector 21 [unity_SHC]
Vector 22 [unity_Scale]
Vector 23 [_MainTex_ST]
Vector 24 [_Clouds_ST]
"3.0-!!ARBvp1.0
PARAM c[25] = { { 1, 0.5 },
		state.matrix.mvp,
		program.local[5..24] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R1.xyz, vertex.normal, c[22].w;
DP3 R2.w, R1, c[6];
DP3 R0.x, R1, c[5];
DP3 R0.z, R1, c[7];
MOV R0.y, R2.w;
MUL R1, R0.xyzz, R0.yzzx;
MOV R0.w, c[0].x;
DP4 R2.z, R0, c[17];
DP4 R2.y, R0, c[16];
DP4 R2.x, R0, c[15];
MUL R0.y, R2.w, R2.w;
DP4 R3.z, R1, c[20];
DP4 R3.x, R1, c[18];
DP4 R3.y, R1, c[19];
ADD R2.xyz, R2, R3;
MAD R0.w, R0.x, R0.x, -R0.y;
MUL R3.xyz, R0.w, c[21];
MOV R1.xyz, vertex.attrib[14];
MUL R0.xyz, vertex.normal.zxyw, R1.yzxw;
MAD R0.xyz, vertex.normal.yzxw, R1.zxyw, -R0;
MUL R0.xyz, R0, vertex.attrib[14].w;
MOV R1.xyz, c[13];
ADD result.texcoord[3].xyz, R2, R3;
MOV R1.w, c[0].x;
DP4 R0.w, vertex.position, c[4];
DP4 R2.z, R1, c[11];
DP4 R2.x, R1, c[9];
DP4 R2.y, R1, c[10];
MAD R2.xyz, R2, c[22].w, -vertex.position;
DP3 result.texcoord[1].y, R2, R0;
DP4 R0.z, vertex.position, c[3];
DP4 R0.x, vertex.position, c[1];
DP4 R0.y, vertex.position, c[2];
MUL R1.xyz, R0.xyww, c[0].y;
MUL R1.y, R1, c[14].x;
DP3 result.texcoord[1].z, vertex.normal, R2;
DP3 result.texcoord[1].x, R2, vertex.attrib[14];
ADD result.texcoord[2].xy, R1, R1.z;
MOV result.position, R0;
MOV result.texcoord[2].zw, R0;
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[24].xyxy, c[24];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[23], c[23].zwzw;
END
# 42 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 43 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 12 [_WorldSpaceCameraPos]
Vector 13 [_ProjectionParams]
Vector 14 [_ScreenParams]
Vector 15 [unity_SHAr]
Vector 16 [unity_SHAg]
Vector 17 [unity_SHAb]
Vector 18 [unity_SHBr]
Vector 19 [unity_SHBg]
Vector 20 [unity_SHBb]
Vector 21 [unity_SHC]
Vector 22 [unity_Scale]
Vector 23 [_MainTex_ST]
Vector 24 [_Clouds_ST]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
def c25, 1.00000000, 0.50000000, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mul r1.xyz, v2, c22.w
dp3 r2.w, r1, c5
dp3 r0.x, r1, c4
dp3 r0.z, r1, c6
mov r0.y, r2.w
mul r1, r0.xyzz, r0.yzzx
mov r0.w, c25.x
dp4 r2.z, r0, c17
dp4 r2.y, r0, c16
dp4 r2.x, r0, c15
mul r0.y, r2.w, r2.w
mad r0.w, r0.x, r0.x, -r0.y
dp4 r3.z, r1, c20
dp4 r3.y, r1, c19
dp4 r3.x, r1, c18
add r2.xyz, r2, r3
mul r3.xyz, r0.w, c21
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r0.xyz, v2.yzxw, r0.zxyw, -r1
mul r0.xyz, r0, v1.w
mov r1.xyz, c12
add o4.xyz, r2, r3
mov r1.w, c25.x
dp4 r0.w, v0, c3
dp4 r2.z, r1, c10
dp4 r2.x, r1, c8
dp4 r2.y, r1, c9
mad r2.xyz, r2, c22.w, -v0
dp3 o2.y, r2, r0
dp4 r0.z, v0, c2
dp4 r0.x, v0, c0
dp4 r0.y, v0, c1
mul r1.xyz, r0.xyww, c25.y
mul r1.y, r1, c13.x
dp3 o2.z, v2, r2
dp3 o2.x, r2, v1
mad o3.xy, r1.z, c14.zwzw, r1
mov o0, r0
mov o3.zw, r0
mad o1.zw, v3.xyxy, c24.xyxy, c24
mad o1.xy, v3, c23, c23.zwzw
"
}
SubProgram "d3d11 " {
// Stats: 35 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 144
Vector 96 [_MainTex_ST]
Vector 112 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0
eefiecedblhadbhdihmbcoldiiggpoghbcfcebggabaaaaaagaahaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
apaaaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcmeafaaaaeaaaabaa
hbabaaaafjaaaaaeegiocaaaaaaaaaaaaiaaaaaafjaaaaaeegiocaaaabaaaaaa
agaaaaaafjaaaaaeegiocaaaacaaaaaacnaaaaaafjaaaaaeegiocaaaadaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaad
hcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaad
pccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaagiaaaaacaeaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaa
aaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaadcaaaaalmccabaaaabaaaaaa
agbebaaaadaaaaaaagiecaaaaaaaaaaaahaaaaaakgiocaaaaaaaaaaaahaaaaaa
diaaaaahhcaabaaaabaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaadcaaaaak
hcaabaaaabaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaiaebaaaaaa
abaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaapgbpbaaaabaaaaaa
diaaaaajhcaabaaaacaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaaadaaaaaa
bbaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaa
abaaaaaaaeaaaaaaegacbaaaacaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaa
adaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaaacaaaaaaaaaaaaai
hcaabaaaacaaaaaaegacbaaaacaaaaaaegiccaaaadaaaaaabdaaaaaadcaaaaal
hcaabaaaacaaaaaaegacbaaaacaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaia
ebaaaaaaaaaaaaaabaaaaaahcccabaaaacaaaaaaegacbaaaabaaaaaaegacbaaa
acaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaaacaaaaaa
baaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaaacaaaaaadiaaaaai
ccaabaaaaaaaaaaabkaabaaaaaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaak
ncaabaaaabaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadp
aaaaaadpdgaaaaafmccabaaaadaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaa
adaaaaaakgakbaaaabaaaaaamgaabaaaabaaaaaadiaaaaaihcaabaaaaaaaaaaa
egbcbaaaacaaaaaapgipcaaaadaaaaaabeaaaaaadiaaaaaihcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaaklcaabaaaaaaaaaaa
egiicaaaadaaaaaaamaaaaaaagaabaaaaaaaaaaaegaibaaaabaaaaaadcaaaaak
hcaabaaaaaaaaaaaegiccaaaadaaaaaaaoaaaaaakgakbaaaaaaaaaaaegadbaaa
aaaaaaaadgaaaaaficaabaaaaaaaaaaaabeaaaaaaaaaiadpbbaaaaaibcaabaaa
abaaaaaaegiocaaaacaaaaaacgaaaaaaegaobaaaaaaaaaaabbaaaaaiccaabaaa
abaaaaaaegiocaaaacaaaaaachaaaaaaegaobaaaaaaaaaaabbaaaaaiecaabaaa
abaaaaaaegiocaaaacaaaaaaciaaaaaaegaobaaaaaaaaaaadiaaaaahpcaabaaa
acaaaaaajgacbaaaaaaaaaaaegakbaaaaaaaaaaabbaaaaaibcaabaaaadaaaaaa
egiocaaaacaaaaaacjaaaaaaegaobaaaacaaaaaabbaaaaaiccaabaaaadaaaaaa
egiocaaaacaaaaaackaaaaaaegaobaaaacaaaaaabbaaaaaiecaabaaaadaaaaaa
egiocaaaacaaaaaaclaaaaaaegaobaaaacaaaaaaaaaaaaahhcaabaaaabaaaaaa
egacbaaaabaaaaaaegacbaaaadaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaa
aaaaaaaabkaabaaaaaaaaaaadcaaaaakbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
akaabaaaaaaaaaaabkaabaiaebaaaaaaaaaaaaaadcaaaaakhccabaaaaeaaaaaa
egiccaaaacaaaaaacmaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadoaaaaab
"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  highp vec3 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_5.zw;
  mat3 tmpvar_9;
  tmpvar_9[0] = _Object2World[0].xyz;
  tmpvar_9[1] = _Object2World[1].xyz;
  tmpvar_9[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = (tmpvar_9 * (tmpvar_2 * unity_Scale.w));
  mediump vec3 tmpvar_11;
  mediump vec4 normal_12;
  normal_12 = tmpvar_10;
  highp float vC_13;
  mediump vec3 x3_14;
  mediump vec3 x2_15;
  mediump vec3 x1_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAr, normal_12);
  x1_16.x = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAg, normal_12);
  x1_16.y = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAb, normal_12);
  x1_16.z = tmpvar_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_12.xyzz * normal_12.yzzx);
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBr, tmpvar_20);
  x2_15.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBg, tmpvar_20);
  x2_15.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBb, tmpvar_20);
  x2_15.z = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = ((normal_12.x * normal_12.x) - (normal_12.y * normal_12.y));
  vC_13 = tmpvar_24;
  highp vec3 tmpvar_25;
  tmpvar_25 = (unity_SHC.xyz * vC_13);
  x3_14 = tmpvar_25;
  tmpvar_11 = ((x1_16 + x2_15) + x3_14);
  tmpvar_4 = tmpvar_11;
  highp vec3 tmpvar_26;
  highp vec3 tmpvar_27;
  tmpvar_26 = tmpvar_1.xyz;
  tmpvar_27 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_28;
  tmpvar_28[0].x = tmpvar_26.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = tmpvar_2.x;
  tmpvar_28[1].x = tmpvar_26.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = tmpvar_2.y;
  tmpvar_28[2].x = tmpvar_26.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = tmpvar_2.z;
  highp vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = _WorldSpaceCameraPos;
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_28 * (((_World2Object * tmpvar_29).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = o_6;
  xlv_TEXCOORD3 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D _LightBuffer;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  lowp float tmpvar_9;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = tmpvar_4;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  tmpvar_9 = 0.0;
  mediump vec3 clouds_10;
  mediump vec2 cloudUV_11;
  lowp float fresnel_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_14;
  tmpvar_14 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_12 = tmpvar_14;
  lowp float tmpvar_15;
  tmpvar_15 = pow (fresnel_12, _AtmosFalloff);
  lowp vec3 tmpvar_16;
  tmpvar_16 = (tmpvar_13.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_15)) * tmpvar_15));
  cloudUV_11 = tmpvar_5;
  highp float tmpvar_17;
  tmpvar_17 = (_Time.y * _CloudSpeed);
  highp float tmpvar_18;
  tmpvar_18 = fract(abs(tmpvar_17));
  highp float tmpvar_19;
  if ((tmpvar_17 >= 0.0)) {
    tmpvar_19 = tmpvar_18;
  } else {
    tmpvar_19 = -(tmpvar_18);
  };
  cloudUV_11.x = (cloudUV_11.x + tmpvar_19);
  mediump float height_20;
  height_20 = _CloudHeight;
  mediump vec3 viewDir_21;
  viewDir_21 = xlv_TEXCOORD1;
  highp vec3 v_22;
  mediump float tmpvar_23;
  tmpvar_23 = (height_20 - (height_20 / 2.0));
  mediump vec3 tmpvar_24;
  tmpvar_24 = normalize(viewDir_21);
  v_22 = tmpvar_24;
  v_22.z = (v_22.z + 0.42);
  highp vec2 tmpvar_25;
  tmpvar_25 = (cloudUV_11 + (tmpvar_23 * (v_22.xy / v_22.z)));
  cloudUV_11 = tmpvar_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = texture2D (_Clouds, cloudUV_11).xyz;
  clouds_10 = tmpvar_26;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (tmpvar_16 + clouds_10);
  tmpvar_6 = tmpvar_27;
  lowp vec3 tmpvar_28;
  tmpvar_28 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_29;
  tmpvar_29 = mix (tmpvar_28, vec3(0.0, 0.0, 1.0), clouds_10);
  tmpvar_7 = tmpvar_29;
  mediump vec4 tmpvar_30;
  tmpvar_30.w = 0.0;
  tmpvar_30.xyz = clouds_10;
  lowp vec4 arg0_31;
  arg0_31 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_32;
  tmpvar_32 = mix (arg0_31, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_30).xyz;
  tmpvar_8 = tmpvar_32;
  lowp vec4 tmpvar_33;
  tmpvar_33 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_34;
  tmpvar_34 = ((tmpvar_33.xyz * (1.0 - clouds_10)) * _SpecColor.xyz).x;
  tmpvar_9 = tmpvar_34;
  tmpvar_4 = tmpvar_7;
  lowp vec4 tmpvar_35;
  tmpvar_35 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_35;
  mediump vec4 tmpvar_36;
  tmpvar_36 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_36.w;
  highp vec3 tmpvar_37;
  tmpvar_37 = (tmpvar_36.xyz + xlv_TEXCOORD3);
  light_3.xyz = tmpvar_37;
  lowp vec4 c_38;
  lowp float spec_39;
  mediump float tmpvar_40;
  tmpvar_40 = (tmpvar_36.w * tmpvar_9);
  spec_39 = tmpvar_40;
  mediump vec3 tmpvar_41;
  tmpvar_41 = ((tmpvar_6 * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_39));
  c_38.xyz = tmpvar_41;
  c_38.w = (tmpvar_13.w + (spec_39 * _SpecColor.w));
  c_2 = c_38;
  c_2.xyz = (c_2.xyz + tmpvar_8);
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  highp vec3 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_5.zw;
  mat3 tmpvar_9;
  tmpvar_9[0] = _Object2World[0].xyz;
  tmpvar_9[1] = _Object2World[1].xyz;
  tmpvar_9[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = (tmpvar_9 * (tmpvar_2 * unity_Scale.w));
  mediump vec3 tmpvar_11;
  mediump vec4 normal_12;
  normal_12 = tmpvar_10;
  highp float vC_13;
  mediump vec3 x3_14;
  mediump vec3 x2_15;
  mediump vec3 x1_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAr, normal_12);
  x1_16.x = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAg, normal_12);
  x1_16.y = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAb, normal_12);
  x1_16.z = tmpvar_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_12.xyzz * normal_12.yzzx);
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBr, tmpvar_20);
  x2_15.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBg, tmpvar_20);
  x2_15.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBb, tmpvar_20);
  x2_15.z = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = ((normal_12.x * normal_12.x) - (normal_12.y * normal_12.y));
  vC_13 = tmpvar_24;
  highp vec3 tmpvar_25;
  tmpvar_25 = (unity_SHC.xyz * vC_13);
  x3_14 = tmpvar_25;
  tmpvar_11 = ((x1_16 + x2_15) + x3_14);
  tmpvar_4 = tmpvar_11;
  highp vec3 tmpvar_26;
  highp vec3 tmpvar_27;
  tmpvar_26 = tmpvar_1.xyz;
  tmpvar_27 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_28;
  tmpvar_28[0].x = tmpvar_26.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = tmpvar_2.x;
  tmpvar_28[1].x = tmpvar_26.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = tmpvar_2.y;
  tmpvar_28[2].x = tmpvar_26.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = tmpvar_2.z;
  highp vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = _WorldSpaceCameraPos;
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_28 * (((_World2Object * tmpvar_29).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = o_6;
  xlv_TEXCOORD3 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D _LightBuffer;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  lowp float tmpvar_9;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = tmpvar_4;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  tmpvar_9 = 0.0;
  mediump vec3 clouds_10;
  mediump vec2 cloudUV_11;
  lowp float fresnel_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_14;
  tmpvar_14 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_12 = tmpvar_14;
  lowp float tmpvar_15;
  tmpvar_15 = pow (fresnel_12, _AtmosFalloff);
  lowp vec3 tmpvar_16;
  tmpvar_16 = (tmpvar_13.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_15)) * tmpvar_15));
  cloudUV_11 = tmpvar_5;
  highp float tmpvar_17;
  tmpvar_17 = (_Time.y * _CloudSpeed);
  highp float tmpvar_18;
  tmpvar_18 = fract(abs(tmpvar_17));
  highp float tmpvar_19;
  if ((tmpvar_17 >= 0.0)) {
    tmpvar_19 = tmpvar_18;
  } else {
    tmpvar_19 = -(tmpvar_18);
  };
  cloudUV_11.x = (cloudUV_11.x + tmpvar_19);
  mediump float height_20;
  height_20 = _CloudHeight;
  mediump vec3 viewDir_21;
  viewDir_21 = xlv_TEXCOORD1;
  highp vec3 v_22;
  mediump float tmpvar_23;
  tmpvar_23 = (height_20 - (height_20 / 2.0));
  mediump vec3 tmpvar_24;
  tmpvar_24 = normalize(viewDir_21);
  v_22 = tmpvar_24;
  v_22.z = (v_22.z + 0.42);
  highp vec2 tmpvar_25;
  tmpvar_25 = (cloudUV_11 + (tmpvar_23 * (v_22.xy / v_22.z)));
  cloudUV_11 = tmpvar_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = texture2D (_Clouds, cloudUV_11).xyz;
  clouds_10 = tmpvar_26;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (tmpvar_16 + clouds_10);
  tmpvar_6 = tmpvar_27;
  lowp vec3 normal_28;
  normal_28.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_28.z = sqrt((1.0 - clamp (dot (normal_28.xy, normal_28.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_29;
  tmpvar_29 = mix (normal_28, vec3(0.0, 0.0, 1.0), clouds_10);
  tmpvar_7 = tmpvar_29;
  mediump vec4 tmpvar_30;
  tmpvar_30.w = 0.0;
  tmpvar_30.xyz = clouds_10;
  lowp vec4 arg0_31;
  arg0_31 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_32;
  tmpvar_32 = mix (arg0_31, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_30).xyz;
  tmpvar_8 = tmpvar_32;
  lowp vec4 tmpvar_33;
  tmpvar_33 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_34;
  tmpvar_34 = ((tmpvar_33.xyz * (1.0 - clouds_10)) * _SpecColor.xyz).x;
  tmpvar_9 = tmpvar_34;
  tmpvar_4 = tmpvar_7;
  lowp vec4 tmpvar_35;
  tmpvar_35 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_35;
  mediump vec4 tmpvar_36;
  tmpvar_36 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_36.w;
  highp vec3 tmpvar_37;
  tmpvar_37 = (tmpvar_36.xyz + xlv_TEXCOORD3);
  light_3.xyz = tmpvar_37;
  lowp vec4 c_38;
  lowp float spec_39;
  mediump float tmpvar_40;
  tmpvar_40 = (tmpvar_36.w * tmpvar_9);
  spec_39 = tmpvar_40;
  mediump vec3 tmpvar_41;
  tmpvar_41 = ((tmpvar_6 * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_39));
  c_38.xyz = tmpvar_41;
  c_38.w = (tmpvar_13.w + (spec_39 * _SpecColor.w));
  c_2 = c_38;
  c_2.xyz = (c_2.xyz + tmpvar_8);
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out highp vec4 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  highp vec3 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_5.zw;
  mat3 tmpvar_9;
  tmpvar_9[0] = _Object2World[0].xyz;
  tmpvar_9[1] = _Object2World[1].xyz;
  tmpvar_9[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = (tmpvar_9 * (tmpvar_2 * unity_Scale.w));
  mediump vec3 tmpvar_11;
  mediump vec4 normal_12;
  normal_12 = tmpvar_10;
  highp float vC_13;
  mediump vec3 x3_14;
  mediump vec3 x2_15;
  mediump vec3 x1_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAr, normal_12);
  x1_16.x = tmpvar_17;
  highp float tmpvar_18;
  tmpvar_18 = dot (unity_SHAg, normal_12);
  x1_16.y = tmpvar_18;
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHAb, normal_12);
  x1_16.z = tmpvar_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = (normal_12.xyzz * normal_12.yzzx);
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBr, tmpvar_20);
  x2_15.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHBg, tmpvar_20);
  x2_15.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHBb, tmpvar_20);
  x2_15.z = tmpvar_23;
  mediump float tmpvar_24;
  tmpvar_24 = ((normal_12.x * normal_12.x) - (normal_12.y * normal_12.y));
  vC_13 = tmpvar_24;
  highp vec3 tmpvar_25;
  tmpvar_25 = (unity_SHC.xyz * vC_13);
  x3_14 = tmpvar_25;
  tmpvar_11 = ((x1_16 + x2_15) + x3_14);
  tmpvar_4 = tmpvar_11;
  highp vec3 tmpvar_26;
  highp vec3 tmpvar_27;
  tmpvar_26 = tmpvar_1.xyz;
  tmpvar_27 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_28;
  tmpvar_28[0].x = tmpvar_26.x;
  tmpvar_28[0].y = tmpvar_27.x;
  tmpvar_28[0].z = tmpvar_2.x;
  tmpvar_28[1].x = tmpvar_26.y;
  tmpvar_28[1].y = tmpvar_27.y;
  tmpvar_28[1].z = tmpvar_2.y;
  tmpvar_28[2].x = tmpvar_26.z;
  tmpvar_28[2].y = tmpvar_27.z;
  tmpvar_28[2].z = tmpvar_2.z;
  highp vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = _WorldSpaceCameraPos;
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_28 * (((_World2Object * tmpvar_29).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = o_6;
  xlv_TEXCOORD3 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _Time;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D _LightBuffer;
in highp vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  lowp float tmpvar_9;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = tmpvar_4;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  tmpvar_9 = 0.0;
  mediump vec3 clouds_10;
  mediump vec2 cloudUV_11;
  lowp float fresnel_12;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_14;
  tmpvar_14 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_12 = tmpvar_14;
  lowp float tmpvar_15;
  tmpvar_15 = pow (fresnel_12, _AtmosFalloff);
  lowp vec3 tmpvar_16;
  tmpvar_16 = (tmpvar_13.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_15)) * tmpvar_15));
  cloudUV_11 = tmpvar_5;
  highp float tmpvar_17;
  tmpvar_17 = (_Time.y * _CloudSpeed);
  highp float tmpvar_18;
  tmpvar_18 = fract(abs(tmpvar_17));
  highp float tmpvar_19;
  if ((tmpvar_17 >= 0.0)) {
    tmpvar_19 = tmpvar_18;
  } else {
    tmpvar_19 = -(tmpvar_18);
  };
  cloudUV_11.x = (cloudUV_11.x + tmpvar_19);
  mediump float height_20;
  height_20 = _CloudHeight;
  mediump vec3 viewDir_21;
  viewDir_21 = xlv_TEXCOORD1;
  highp vec3 v_22;
  mediump float tmpvar_23;
  tmpvar_23 = (height_20 - (height_20 / 2.0));
  mediump vec3 tmpvar_24;
  tmpvar_24 = normalize(viewDir_21);
  v_22 = tmpvar_24;
  v_22.z = (v_22.z + 0.42);
  highp vec2 tmpvar_25;
  tmpvar_25 = (cloudUV_11 + (tmpvar_23 * (v_22.xy / v_22.z)));
  cloudUV_11 = tmpvar_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = texture (_Clouds, cloudUV_11).xyz;
  clouds_10 = tmpvar_26;
  mediump vec3 tmpvar_27;
  tmpvar_27 = (tmpvar_16 + clouds_10);
  tmpvar_6 = tmpvar_27;
  lowp vec3 tmpvar_28;
  tmpvar_28 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_29;
  tmpvar_29 = mix (tmpvar_28, vec3(0.0, 0.0, 1.0), clouds_10);
  tmpvar_7 = tmpvar_29;
  mediump vec4 tmpvar_30;
  tmpvar_30.w = 0.0;
  tmpvar_30.xyz = clouds_10;
  lowp vec4 arg0_31;
  arg0_31 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_32;
  tmpvar_32 = mix (arg0_31, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_30).xyz;
  tmpvar_8 = tmpvar_32;
  lowp vec4 tmpvar_33;
  tmpvar_33 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_34;
  tmpvar_34 = ((tmpvar_33.xyz * (1.0 - clouds_10)) * _SpecColor.xyz).x;
  tmpvar_9 = tmpvar_34;
  tmpvar_4 = tmpvar_7;
  lowp vec4 tmpvar_35;
  tmpvar_35 = textureProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_35;
  mediump vec4 tmpvar_36;
  tmpvar_36 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_36.w;
  highp vec3 tmpvar_37;
  tmpvar_37 = (tmpvar_36.xyz + xlv_TEXCOORD3);
  light_3.xyz = tmpvar_37;
  lowp vec4 c_38;
  lowp float spec_39;
  mediump float tmpvar_40;
  tmpvar_40 = (tmpvar_36.w * tmpvar_9);
  spec_39 = tmpvar_40;
  mediump vec3 tmpvar_41;
  tmpvar_41 = ((tmpvar_6 * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_39));
  c_38.xyz = tmpvar_41;
  c_38.w = (tmpvar_13.w + (spec_39 * _SpecColor.w));
  c_2 = c_38;
  c_2.xyz = (c_2.xyz + tmpvar_8);
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 34 math
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" ATTR14
Matrix 9 [_Object2World]
Matrix 13 [_World2Object]
Vector 17 [_WorldSpaceCameraPos]
Vector 18 [_ProjectionParams]
Vector 19 [unity_ShadowFadeCenterAndType]
Vector 20 [unity_Scale]
Vector 21 [unity_LightmapST]
Vector 22 [_MainTex_ST]
Vector 23 [_Clouds_ST]
"3.0-!!ARBvp1.0
PARAM c[24] = { { 1, 0.5 },
		state.matrix.modelview[0],
		state.matrix.mvp,
		program.local[9..23] };
TEMP R0;
TEMP R1;
TEMP R2;
MOV R0.xyz, vertex.attrib[14];
MUL R1.xyz, vertex.normal.zxyw, R0.yzxw;
MAD R0.xyz, vertex.normal.yzxw, R0.zxyw, -R1;
MUL R0.xyz, R0, vertex.attrib[14].w;
MOV R1.xyz, c[17];
MOV R1.w, c[0].x;
DP4 R0.w, vertex.position, c[8];
DP4 R2.z, R1, c[15];
DP4 R2.x, R1, c[13];
DP4 R2.y, R1, c[14];
MAD R2.xyz, R2, c[20].w, -vertex.position;
DP3 result.texcoord[1].y, R2, R0;
DP4 R0.z, vertex.position, c[7];
DP4 R0.x, vertex.position, c[5];
DP4 R0.y, vertex.position, c[6];
MUL R1.xyz, R0.xyww, c[0].y;
MUL R1.y, R1, c[18].x;
ADD result.texcoord[2].xy, R1, R1.z;
MOV result.position, R0;
MOV R0.x, c[0];
ADD R0.y, R0.x, -c[19].w;
DP4 R0.x, vertex.position, c[3];
DP4 R1.z, vertex.position, c[11];
DP4 R1.x, vertex.position, c[9];
DP4 R1.y, vertex.position, c[10];
ADD R1.xyz, R1, -c[19];
DP3 result.texcoord[1].z, vertex.normal, R2;
DP3 result.texcoord[1].x, R2, vertex.attrib[14];
MOV result.texcoord[2].zw, R0;
MUL result.texcoord[4].xyz, R1, c[19].w;
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[23].xyxy, c[23];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[22], c[22].zwzw;
MAD result.texcoord[3].xy, vertex.texcoord[1], c[21], c[21].zwzw;
MUL result.texcoord[4].w, -R0.x, R0.y;
END
# 34 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 35 math
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_modelview0]
Matrix 4 [glstate_matrix_mvp]
Matrix 8 [_Object2World]
Matrix 12 [_World2Object]
Vector 16 [_WorldSpaceCameraPos]
Vector 17 [_ProjectionParams]
Vector 18 [_ScreenParams]
Vector 19 [unity_ShadowFadeCenterAndType]
Vector 20 [unity_Scale]
Vector 21 [unity_LightmapST]
Vector 22 [_MainTex_ST]
Vector 23 [_Clouds_ST]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
dcl_texcoord4 o5
def c24, 1.00000000, 0.50000000, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
dcl_texcoord1 v4
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r0.xyz, v2.yzxw, r0.zxyw, -r1
mul r0.xyz, r0, v1.w
mov r1.xyz, c16
mov r1.w, c24.x
dp4 r0.w, v0, c7
dp4 r2.z, r1, c14
dp4 r2.x, r1, c12
dp4 r2.y, r1, c13
mad r2.xyz, r2, c20.w, -v0
dp3 o2.y, r2, r0
dp4 r0.z, v0, c6
dp4 r0.x, v0, c4
dp4 r0.y, v0, c5
mul r1.xyz, r0.xyww, c24.y
mul r1.y, r1, c17.x
mad o3.xy, r1.z, c18.zwzw, r1
mov o0, r0
mov r0.x, c19.w
add r0.y, c24.x, -r0.x
dp4 r0.x, v0, c2
dp4 r1.z, v0, c10
dp4 r1.x, v0, c8
dp4 r1.y, v0, c9
add r1.xyz, r1, -c19
dp3 o2.z, v2, r2
dp3 o2.x, r2, v1
mov o3.zw, r0
mul o5.xyz, r1, c19.w
mad o1.zw, v3.xyxy, c23.xyxy, c23
mad o1.xy, v3, c22, c22.zwzw
mad o4.xy, v4, c21, c21.zwzw
mul o5.w, -r0.x, r0.y
"
}
SubProgram "d3d11 " {
// Stats: 33 math
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 176
Vector 96 [unity_LightmapST]
Vector 112 [_MainTex_ST]
Vector 128 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityShadows" 416
Vector 400 [unity_ShadowFadeCenterAndType]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 64 [glstate_matrix_modelview0]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityShadows" 2
BindCB  "UnityPerDraw" 3
"vs_4_0
eefiecedengncbfcnjkpimleickikppmdilaggojabaaaaaagmahaaaaadaaaaaa
cmaaaaaapeaaaaaakmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheolaaaaaaaagaaaaaa
aiaaaaaajiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakeaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
apaaaaaakeaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaadamaaaakeaaaaaa
aeaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklfdeieefcliafaaaaeaaaabaagoabaaaafjaaaaae
egiocaaaaaaaaaaaajaaaaaafjaaaaaeegiocaaaabaaaaaaagaaaaaafjaaaaae
egiocaaaacaaaaaabkaaaaaafjaaaaaeegiocaaaadaaaaaabfaaaaaafpaaaaad
pcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaa
fpaaaaaddcbabaaaadaaaaaafpaaaaaddcbabaaaaeaaaaaaghaaaaaepccabaaa
aaaaaaaaabaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaa
gfaaaaadpccabaaaadaaaaaagfaaaaaddccabaaaaeaaaaaagfaaaaadpccabaaa
afaaaaaagiaaaaacadaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaa
egiocaaaadaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaa
aaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaa
egiocaaaadaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaa
aaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaa
abaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaahaaaaaaogikcaaaaaaaaaaa
ahaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaa
aiaaaaaakgiocaaaaaaaaaaaaiaaaaaadiaaaaahhcaabaaaabaaaaaajgbebaaa
abaaaaaacgbjbaaaacaaaaaadcaaaaakhcaabaaaabaaaaaajgbebaaaacaaaaaa
cgbjbaaaabaaaaaaegacbaiaebaaaaaaabaaaaaadiaaaaahhcaabaaaabaaaaaa
egacbaaaabaaaaaapgbpbaaaabaaaaaadiaaaaajhcaabaaaacaaaaaafgifcaaa
abaaaaaaaeaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaacaaaaaa
egiccaaaadaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaaacaaaaaa
dcaaaaalhcaabaaaacaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaabaaaaaa
aeaaaaaaegacbaaaacaaaaaaaaaaaaaihcaabaaaacaaaaaaegacbaaaacaaaaaa
egiccaaaadaaaaaabdaaaaaadcaaaaalhcaabaaaacaaaaaaegacbaaaacaaaaaa
pgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaa
acaaaaaaegacbaaaabaaaaaaegacbaaaacaaaaaabaaaaaahbccabaaaacaaaaaa
egbcbaaaabaaaaaaegacbaaaacaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaa
acaaaaaaegacbaaaacaaaaaadiaaaaaiccaabaaaaaaaaaaabkaabaaaaaaaaaaa
akiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaaabaaaaaaagahbaaaaaaaaaaa
aceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadpdgaaaaafmccabaaaadaaaaaa
kgaobaaaaaaaaaaaaaaaaaahdccabaaaadaaaaaakgakbaaaabaaaaaamgaabaaa
abaaaaaadcaaaaaldccabaaaaeaaaaaaegbabaaaaeaaaaaaegiacaaaaaaaaaaa
agaaaaaaogikcaaaaaaaaaaaagaaaaaadiaaaaaihcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaa
adaaaaaaamaaaaaaagbabaaaaaaaaaaaegacbaaaaaaaaaaadcaaaaakhcaabaaa
aaaaaaaaegiccaaaadaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegacbaaaaaaaaaaa
dcaaaaakhcaabaaaaaaaaaaaegiccaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaa
egacbaaaaaaaaaaaaaaaaaajhcaabaaaaaaaaaaaegacbaaaaaaaaaaaegiccaia
ebaaaaaaacaaaaaabjaaaaaadiaaaaaihccabaaaafaaaaaaegacbaaaaaaaaaaa
pgipcaaaacaaaaaabjaaaaaadiaaaaaibcaabaaaaaaaaaaabkbabaaaaaaaaaaa
ckiacaaaadaaaaaaafaaaaaadcaaaaakbcaabaaaaaaaaaaackiacaaaadaaaaaa
aeaaaaaaakbabaaaaaaaaaaaakaabaaaaaaaaaaadcaaaaakbcaabaaaaaaaaaaa
ckiacaaaadaaaaaaagaaaaaackbabaaaaaaaaaaaakaabaaaaaaaaaaadcaaaaak
bcaabaaaaaaaaaaackiacaaaadaaaaaaahaaaaaadkbabaaaaaaaaaaaakaabaaa
aaaaaaaaaaaaaaajccaabaaaaaaaaaaadkiacaiaebaaaaaaacaaaaaabjaaaaaa
abeaaaaaaaaaiadpdiaaaaaiiccabaaaafaaaaaabkaabaaaaaaaaaaaakaabaia
ebaaaaaaaaaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_5.zw;
  tmpvar_4.xyz = (((_Object2World * _glesVertex).xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  tmpvar_4.w = (-((glstate_matrix_modelview0 * _glesVertex).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  highp vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_1.xyz;
  tmpvar_10 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_11;
  tmpvar_11[0].x = tmpvar_9.x;
  tmpvar_11[0].y = tmpvar_10.x;
  tmpvar_11[0].z = tmpvar_2.x;
  tmpvar_11[1].x = tmpvar_9.y;
  tmpvar_11[1].y = tmpvar_10.y;
  tmpvar_11[1].z = tmpvar_2.y;
  tmpvar_11[2].x = tmpvar_9.z;
  tmpvar_11[2].y = tmpvar_10.z;
  tmpvar_11[2].z = tmpvar_2.z;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_11 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = o_6;
  xlv_TEXCOORD3 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD4 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec3 lmIndirect_3;
  mediump vec3 lmFull_4;
  mediump float lmFade_5;
  mediump vec4 light_6;
  lowp vec3 tmpvar_7;
  highp vec2 tmpvar_8;
  tmpvar_8 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  lowp vec3 tmpvar_11;
  lowp float tmpvar_12;
  tmpvar_9 = vec3(0.0, 0.0, 0.0);
  tmpvar_10 = tmpvar_7;
  tmpvar_11 = vec3(0.0, 0.0, 0.0);
  tmpvar_12 = 0.0;
  mediump vec3 clouds_13;
  mediump vec2 cloudUV_14;
  lowp float fresnel_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_17;
  tmpvar_17 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_15 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = pow (fresnel_15, _AtmosFalloff);
  lowp vec3 tmpvar_19;
  tmpvar_19 = (tmpvar_16.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_18)) * tmpvar_18));
  cloudUV_14 = tmpvar_8;
  highp float tmpvar_20;
  tmpvar_20 = (_Time.y * _CloudSpeed);
  highp float tmpvar_21;
  tmpvar_21 = fract(abs(tmpvar_20));
  highp float tmpvar_22;
  if ((tmpvar_20 >= 0.0)) {
    tmpvar_22 = tmpvar_21;
  } else {
    tmpvar_22 = -(tmpvar_21);
  };
  cloudUV_14.x = (cloudUV_14.x + tmpvar_22);
  mediump float height_23;
  height_23 = _CloudHeight;
  mediump vec3 viewDir_24;
  viewDir_24 = xlv_TEXCOORD1;
  highp vec3 v_25;
  mediump float tmpvar_26;
  tmpvar_26 = (height_23 - (height_23 / 2.0));
  mediump vec3 tmpvar_27;
  tmpvar_27 = normalize(viewDir_24);
  v_25 = tmpvar_27;
  v_25.z = (v_25.z + 0.42);
  highp vec2 tmpvar_28;
  tmpvar_28 = (cloudUV_14 + (tmpvar_26 * (v_25.xy / v_25.z)));
  cloudUV_14 = tmpvar_28;
  lowp vec3 tmpvar_29;
  tmpvar_29 = texture2D (_Clouds, cloudUV_14).xyz;
  clouds_13 = tmpvar_29;
  mediump vec3 tmpvar_30;
  tmpvar_30 = (tmpvar_19 + clouds_13);
  tmpvar_9 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_32;
  tmpvar_32 = mix (tmpvar_31, vec3(0.0, 0.0, 1.0), clouds_13);
  tmpvar_10 = tmpvar_32;
  mediump vec4 tmpvar_33;
  tmpvar_33.w = 0.0;
  tmpvar_33.xyz = clouds_13;
  lowp vec4 arg0_34;
  arg0_34 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_35;
  tmpvar_35 = mix (arg0_34, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_33).xyz;
  tmpvar_11 = tmpvar_35;
  lowp vec4 tmpvar_36;
  tmpvar_36 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_37;
  tmpvar_37 = ((tmpvar_36.xyz * (1.0 - clouds_13)) * _SpecColor.xyz).x;
  tmpvar_12 = tmpvar_37;
  tmpvar_7 = tmpvar_10;
  lowp vec4 tmpvar_38;
  tmpvar_38 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_6 = tmpvar_38;
  mediump vec4 tmpvar_39;
  tmpvar_39 = max (light_6, vec4(0.001, 0.001, 0.001, 0.001));
  light_6.w = tmpvar_39.w;
  highp float tmpvar_40;
  tmpvar_40 = ((sqrt(dot (xlv_TEXCOORD4, xlv_TEXCOORD4)) * unity_LightmapFade.z) + unity_LightmapFade.w);
  lmFade_5 = tmpvar_40;
  lowp vec3 tmpvar_41;
  tmpvar_41 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD3).xyz);
  lmFull_4 = tmpvar_41;
  lowp vec3 tmpvar_42;
  tmpvar_42 = (2.0 * texture2D (unity_LightmapInd, xlv_TEXCOORD3).xyz);
  lmIndirect_3 = tmpvar_42;
  light_6.xyz = (tmpvar_39.xyz + mix (lmIndirect_3, lmFull_4, vec3(clamp (lmFade_5, 0.0, 1.0))));
  lowp vec4 c_43;
  lowp float spec_44;
  mediump float tmpvar_45;
  tmpvar_45 = (tmpvar_39.w * tmpvar_12);
  spec_44 = tmpvar_45;
  mediump vec3 tmpvar_46;
  tmpvar_46 = ((tmpvar_9 * light_6.xyz) + ((light_6.xyz * _SpecColor.xyz) * spec_44));
  c_43.xyz = tmpvar_46;
  c_43.w = (tmpvar_16.w + (spec_44 * _SpecColor.w));
  c_2 = c_43;
  c_2.xyz = (c_2.xyz + tmpvar_11);
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_5.zw;
  tmpvar_4.xyz = (((_Object2World * _glesVertex).xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  tmpvar_4.w = (-((glstate_matrix_modelview0 * _glesVertex).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  highp vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_1.xyz;
  tmpvar_10 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_11;
  tmpvar_11[0].x = tmpvar_9.x;
  tmpvar_11[0].y = tmpvar_10.x;
  tmpvar_11[0].z = tmpvar_2.x;
  tmpvar_11[1].x = tmpvar_9.y;
  tmpvar_11[1].y = tmpvar_10.y;
  tmpvar_11[1].z = tmpvar_2.y;
  tmpvar_11[2].x = tmpvar_9.z;
  tmpvar_11[2].y = tmpvar_10.z;
  tmpvar_11[2].z = tmpvar_2.z;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_11 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = o_6;
  xlv_TEXCOORD3 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD4 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec3 lmIndirect_3;
  mediump vec3 lmFull_4;
  mediump float lmFade_5;
  mediump vec4 light_6;
  lowp vec3 tmpvar_7;
  highp vec2 tmpvar_8;
  tmpvar_8 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  lowp vec3 tmpvar_11;
  lowp float tmpvar_12;
  tmpvar_9 = vec3(0.0, 0.0, 0.0);
  tmpvar_10 = tmpvar_7;
  tmpvar_11 = vec3(0.0, 0.0, 0.0);
  tmpvar_12 = 0.0;
  mediump vec3 clouds_13;
  mediump vec2 cloudUV_14;
  lowp float fresnel_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_17;
  tmpvar_17 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_15 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = pow (fresnel_15, _AtmosFalloff);
  lowp vec3 tmpvar_19;
  tmpvar_19 = (tmpvar_16.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_18)) * tmpvar_18));
  cloudUV_14 = tmpvar_8;
  highp float tmpvar_20;
  tmpvar_20 = (_Time.y * _CloudSpeed);
  highp float tmpvar_21;
  tmpvar_21 = fract(abs(tmpvar_20));
  highp float tmpvar_22;
  if ((tmpvar_20 >= 0.0)) {
    tmpvar_22 = tmpvar_21;
  } else {
    tmpvar_22 = -(tmpvar_21);
  };
  cloudUV_14.x = (cloudUV_14.x + tmpvar_22);
  mediump float height_23;
  height_23 = _CloudHeight;
  mediump vec3 viewDir_24;
  viewDir_24 = xlv_TEXCOORD1;
  highp vec3 v_25;
  mediump float tmpvar_26;
  tmpvar_26 = (height_23 - (height_23 / 2.0));
  mediump vec3 tmpvar_27;
  tmpvar_27 = normalize(viewDir_24);
  v_25 = tmpvar_27;
  v_25.z = (v_25.z + 0.42);
  highp vec2 tmpvar_28;
  tmpvar_28 = (cloudUV_14 + (tmpvar_26 * (v_25.xy / v_25.z)));
  cloudUV_14 = tmpvar_28;
  lowp vec3 tmpvar_29;
  tmpvar_29 = texture2D (_Clouds, cloudUV_14).xyz;
  clouds_13 = tmpvar_29;
  mediump vec3 tmpvar_30;
  tmpvar_30 = (tmpvar_19 + clouds_13);
  tmpvar_9 = tmpvar_30;
  lowp vec3 normal_31;
  normal_31.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_31.z = sqrt((1.0 - clamp (dot (normal_31.xy, normal_31.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_32;
  tmpvar_32 = mix (normal_31, vec3(0.0, 0.0, 1.0), clouds_13);
  tmpvar_10 = tmpvar_32;
  mediump vec4 tmpvar_33;
  tmpvar_33.w = 0.0;
  tmpvar_33.xyz = clouds_13;
  lowp vec4 arg0_34;
  arg0_34 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_35;
  tmpvar_35 = mix (arg0_34, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_33).xyz;
  tmpvar_11 = tmpvar_35;
  lowp vec4 tmpvar_36;
  tmpvar_36 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_37;
  tmpvar_37 = ((tmpvar_36.xyz * (1.0 - clouds_13)) * _SpecColor.xyz).x;
  tmpvar_12 = tmpvar_37;
  tmpvar_7 = tmpvar_10;
  lowp vec4 tmpvar_38;
  tmpvar_38 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_6 = tmpvar_38;
  mediump vec4 tmpvar_39;
  tmpvar_39 = max (light_6, vec4(0.001, 0.001, 0.001, 0.001));
  light_6.w = tmpvar_39.w;
  lowp vec4 tmpvar_40;
  tmpvar_40 = texture2D (unity_Lightmap, xlv_TEXCOORD3);
  lowp vec4 tmpvar_41;
  tmpvar_41 = texture2D (unity_LightmapInd, xlv_TEXCOORD3);
  highp float tmpvar_42;
  tmpvar_42 = ((sqrt(dot (xlv_TEXCOORD4, xlv_TEXCOORD4)) * unity_LightmapFade.z) + unity_LightmapFade.w);
  lmFade_5 = tmpvar_42;
  lowp vec3 tmpvar_43;
  tmpvar_43 = ((8.0 * tmpvar_40.w) * tmpvar_40.xyz);
  lmFull_4 = tmpvar_43;
  lowp vec3 tmpvar_44;
  tmpvar_44 = ((8.0 * tmpvar_41.w) * tmpvar_41.xyz);
  lmIndirect_3 = tmpvar_44;
  light_6.xyz = (tmpvar_39.xyz + mix (lmIndirect_3, lmFull_4, vec3(clamp (lmFade_5, 0.0, 1.0))));
  lowp vec4 c_45;
  lowp float spec_46;
  mediump float tmpvar_47;
  tmpvar_47 = (tmpvar_39.w * tmpvar_12);
  spec_46 = tmpvar_47;
  mediump vec3 tmpvar_48;
  tmpvar_48 = ((tmpvar_9 * light_6.xyz) + ((light_6.xyz * _SpecColor.xyz) * spec_46));
  c_45.xyz = tmpvar_48;
  c_45.w = (tmpvar_16.w + (spec_46 * _SpecColor.w));
  c_2 = c_45;
  c_2.xyz = (c_2.xyz + tmpvar_11);
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out highp vec4 xlv_TEXCOORD2;
out highp vec2 xlv_TEXCOORD3;
out highp vec4 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_5 * 0.5);
  highp vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7.x;
  tmpvar_8.y = (tmpvar_7.y * _ProjectionParams.x);
  o_6.xy = (tmpvar_8 + tmpvar_7.w);
  o_6.zw = tmpvar_5.zw;
  tmpvar_4.xyz = (((_Object2World * _glesVertex).xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  tmpvar_4.w = (-((glstate_matrix_modelview0 * _glesVertex).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  highp vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_1.xyz;
  tmpvar_10 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_11;
  tmpvar_11[0].x = tmpvar_9.x;
  tmpvar_11[0].y = tmpvar_10.x;
  tmpvar_11[0].z = tmpvar_2.x;
  tmpvar_11[1].x = tmpvar_9.y;
  tmpvar_11[1].y = tmpvar_10.y;
  tmpvar_11[1].z = tmpvar_2.y;
  tmpvar_11[2].x = tmpvar_9.z;
  tmpvar_11[2].y = tmpvar_10.z;
  tmpvar_11[2].z = tmpvar_2.z;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  gl_Position = tmpvar_5;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_11 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = o_6;
  xlv_TEXCOORD3 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD4 = tmpvar_4;
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _Time;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
in highp vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
in highp vec2 xlv_TEXCOORD3;
in highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec3 lmIndirect_3;
  mediump vec3 lmFull_4;
  mediump float lmFade_5;
  mediump vec4 light_6;
  lowp vec3 tmpvar_7;
  highp vec2 tmpvar_8;
  tmpvar_8 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_9;
  lowp vec3 tmpvar_10;
  lowp vec3 tmpvar_11;
  lowp float tmpvar_12;
  tmpvar_9 = vec3(0.0, 0.0, 0.0);
  tmpvar_10 = tmpvar_7;
  tmpvar_11 = vec3(0.0, 0.0, 0.0);
  tmpvar_12 = 0.0;
  mediump vec3 clouds_13;
  mediump vec2 cloudUV_14;
  lowp float fresnel_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_17;
  tmpvar_17 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_15 = tmpvar_17;
  lowp float tmpvar_18;
  tmpvar_18 = pow (fresnel_15, _AtmosFalloff);
  lowp vec3 tmpvar_19;
  tmpvar_19 = (tmpvar_16.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_18)) * tmpvar_18));
  cloudUV_14 = tmpvar_8;
  highp float tmpvar_20;
  tmpvar_20 = (_Time.y * _CloudSpeed);
  highp float tmpvar_21;
  tmpvar_21 = fract(abs(tmpvar_20));
  highp float tmpvar_22;
  if ((tmpvar_20 >= 0.0)) {
    tmpvar_22 = tmpvar_21;
  } else {
    tmpvar_22 = -(tmpvar_21);
  };
  cloudUV_14.x = (cloudUV_14.x + tmpvar_22);
  mediump float height_23;
  height_23 = _CloudHeight;
  mediump vec3 viewDir_24;
  viewDir_24 = xlv_TEXCOORD1;
  highp vec3 v_25;
  mediump float tmpvar_26;
  tmpvar_26 = (height_23 - (height_23 / 2.0));
  mediump vec3 tmpvar_27;
  tmpvar_27 = normalize(viewDir_24);
  v_25 = tmpvar_27;
  v_25.z = (v_25.z + 0.42);
  highp vec2 tmpvar_28;
  tmpvar_28 = (cloudUV_14 + (tmpvar_26 * (v_25.xy / v_25.z)));
  cloudUV_14 = tmpvar_28;
  lowp vec3 tmpvar_29;
  tmpvar_29 = texture (_Clouds, cloudUV_14).xyz;
  clouds_13 = tmpvar_29;
  mediump vec3 tmpvar_30;
  tmpvar_30 = (tmpvar_19 + clouds_13);
  tmpvar_9 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_32;
  tmpvar_32 = mix (tmpvar_31, vec3(0.0, 0.0, 1.0), clouds_13);
  tmpvar_10 = tmpvar_32;
  mediump vec4 tmpvar_33;
  tmpvar_33.w = 0.0;
  tmpvar_33.xyz = clouds_13;
  lowp vec4 arg0_34;
  arg0_34 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_35;
  tmpvar_35 = mix (arg0_34, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_33).xyz;
  tmpvar_11 = tmpvar_35;
  lowp vec4 tmpvar_36;
  tmpvar_36 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_37;
  tmpvar_37 = ((tmpvar_36.xyz * (1.0 - clouds_13)) * _SpecColor.xyz).x;
  tmpvar_12 = tmpvar_37;
  tmpvar_7 = tmpvar_10;
  lowp vec4 tmpvar_38;
  tmpvar_38 = textureProj (_LightBuffer, xlv_TEXCOORD2);
  light_6 = tmpvar_38;
  mediump vec4 tmpvar_39;
  tmpvar_39 = max (light_6, vec4(0.001, 0.001, 0.001, 0.001));
  light_6.w = tmpvar_39.w;
  highp float tmpvar_40;
  tmpvar_40 = ((sqrt(dot (xlv_TEXCOORD4, xlv_TEXCOORD4)) * unity_LightmapFade.z) + unity_LightmapFade.w);
  lmFade_5 = tmpvar_40;
  lowp vec3 tmpvar_41;
  tmpvar_41 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD3).xyz);
  lmFull_4 = tmpvar_41;
  lowp vec3 tmpvar_42;
  tmpvar_42 = (2.0 * texture (unity_LightmapInd, xlv_TEXCOORD3).xyz);
  lmIndirect_3 = tmpvar_42;
  light_6.xyz = (tmpvar_39.xyz + mix (lmIndirect_3, lmFull_4, vec3(clamp (lmFade_5, 0.0, 1.0))));
  lowp vec4 c_43;
  lowp float spec_44;
  mediump float tmpvar_45;
  tmpvar_45 = (tmpvar_39.w * tmpvar_12);
  spec_44 = tmpvar_45;
  mediump vec3 tmpvar_46;
  tmpvar_46 = ((tmpvar_9 * light_6.xyz) + ((light_6.xyz * _SpecColor.xyz) * spec_44));
  c_43.xyz = tmpvar_46;
  c_43.w = (tmpvar_16.w + (spec_44 * _SpecColor.w));
  c_2 = c_43;
  c_2.xyz = (c_2.xyz + tmpvar_11);
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 25 math
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" ATTR14
Matrix 5 [_World2Object]
Vector 9 [_WorldSpaceCameraPos]
Vector 10 [_ProjectionParams]
Vector 11 [unity_Scale]
Vector 12 [unity_LightmapST]
Vector 13 [_MainTex_ST]
Vector 14 [_Clouds_ST]
"3.0-!!ARBvp1.0
PARAM c[15] = { { 1, 0.5 },
		state.matrix.mvp,
		program.local[5..14] };
TEMP R0;
TEMP R1;
TEMP R2;
MOV R0.xyz, vertex.attrib[14];
MUL R1.xyz, vertex.normal.zxyw, R0.yzxw;
MAD R0.xyz, vertex.normal.yzxw, R0.zxyw, -R1;
MUL R0.xyz, R0, vertex.attrib[14].w;
MOV R1.xyz, c[9];
MOV R1.w, c[0].x;
DP4 R0.w, vertex.position, c[4];
DP4 R2.z, R1, c[7];
DP4 R2.x, R1, c[5];
DP4 R2.y, R1, c[6];
MAD R2.xyz, R2, c[11].w, -vertex.position;
DP3 result.texcoord[1].y, R2, R0;
DP4 R0.z, vertex.position, c[3];
DP4 R0.x, vertex.position, c[1];
DP4 R0.y, vertex.position, c[2];
MUL R1.xyz, R0.xyww, c[0].y;
MUL R1.y, R1, c[10].x;
DP3 result.texcoord[1].z, vertex.normal, R2;
DP3 result.texcoord[1].x, R2, vertex.attrib[14];
ADD result.texcoord[2].xy, R1, R1.z;
MOV result.position, R0;
MOV result.texcoord[2].zw, R0;
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[14].xyxy, c[14];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[13], c[13].zwzw;
MAD result.texcoord[3].xy, vertex.texcoord[1], c[12], c[12].zwzw;
END
# 25 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 26 math
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_World2Object]
Vector 8 [_WorldSpaceCameraPos]
Vector 9 [_ProjectionParams]
Vector 10 [_ScreenParams]
Vector 11 [unity_Scale]
Vector 12 [unity_LightmapST]
Vector 13 [_MainTex_ST]
Vector 14 [_Clouds_ST]
"vs_3_0
dcl_position o0
dcl_texcoord0 o1
dcl_texcoord1 o2
dcl_texcoord2 o3
dcl_texcoord3 o4
def c15, 1.00000000, 0.50000000, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
dcl_texcoord1 v4
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r0.xyz, v2.yzxw, r0.zxyw, -r1
mul r0.xyz, r0, v1.w
mov r1.xyz, c8
mov r1.w, c15.x
dp4 r0.w, v0, c3
dp4 r2.z, r1, c6
dp4 r2.x, r1, c4
dp4 r2.y, r1, c5
mad r2.xyz, r2, c11.w, -v0
dp3 o2.y, r2, r0
dp4 r0.z, v0, c2
dp4 r0.x, v0, c0
dp4 r0.y, v0, c1
mul r1.xyz, r0.xyww, c15.y
mul r1.y, r1, c9.x
dp3 o2.z, v2, r2
dp3 o2.x, r2, v1
mad o3.xy, r1.z, c10.zwzw, r1
mov o0, r0
mov o3.zw, r0
mad o1.zw, v3.xyxy, c14.xyxy, c14
mad o1.xy, v3, c13, c13.zwzw
mad o4.xy, v4, c12, c12.zwzw
"
}
SubProgram "d3d11 " {
// Stats: 21 math
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 176
Vector 96 [unity_LightmapST]
Vector 112 [_MainTex_ST]
Vector 128 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityPerDraw" 2
"vs_4_0
eefiecedeimifhggmadmdbppgoemlndglogmdhcmabaaaaaaiaafaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
apaaaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaadamaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcoeadaaaaeaaaabaa
pjaaaaaafjaaaaaeegiocaaaaaaaaaaaajaaaaaafjaaaaaeegiocaaaabaaaaaa
agaaaaaafjaaaaaeegiocaaaacaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaa
fpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaa
adaaaaaafpaaaaaddcbabaaaaeaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaa
gfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadpccabaaa
adaaaaaagfaaaaaddccabaaaaeaaaaaagiaaaaacadaaaaaadiaaaaaipcaabaaa
aaaaaaaafgbfbaaaaaaaaaaaegiocaaaacaaaaaaabaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaacaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaacaaaaaakgbkbaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaadaaaaaa
pgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaa
ahaaaaaaogikcaaaaaaaaaaaahaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaa
adaaaaaaagiecaaaaaaaaaaaaiaaaaaakgiocaaaaaaaaaaaaiaaaaaadiaaaaah
hcaabaaaabaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaadcaaaaakhcaabaaa
abaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaiaebaaaaaaabaaaaaa
diaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaapgbpbaaaabaaaaaadiaaaaaj
hcaabaaaacaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaaacaaaaaabbaaaaaa
dcaaaaalhcaabaaaacaaaaaaegiccaaaacaaaaaabaaaaaaaagiacaaaabaaaaaa
aeaaaaaaegacbaaaacaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaaacaaaaaa
bcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaaacaaaaaaaaaaaaaihcaabaaa
acaaaaaaegacbaaaacaaaaaaegiccaaaacaaaaaabdaaaaaadcaaaaalhcaabaaa
acaaaaaaegacbaaaacaaaaaapgipcaaaacaaaaaabeaaaaaaegbcbaiaebaaaaaa
aaaaaaaabaaaaaahcccabaaaacaaaaaaegacbaaaabaaaaaaegacbaaaacaaaaaa
baaaaaahbccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaaacaaaaaabaaaaaah
eccabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaaacaaaaaadiaaaaaiccaabaaa
aaaaaaaabkaabaaaaaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaa
abaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadp
dgaaaaafmccabaaaadaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaadaaaaaa
kgakbaaaabaaaaaamgaabaaaabaaaaaadcaaaaaldccabaaaaeaaaaaaegbabaaa
aeaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaadoaaaaab
"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_5;
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_7;
  tmpvar_7.x = tmpvar_6.x;
  tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
  o_5.xy = (tmpvar_7 + tmpvar_6.w);
  o_5.zw = tmpvar_4.zw;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = _WorldSpaceCameraPos;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_10 * (((_World2Object * tmpvar_11).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = o_5;
  xlv_TEXCOORD3 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  mediump float tmpvar_9;
  lowp float tmpvar_10;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = tmpvar_4;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  tmpvar_9 = 0.0;
  tmpvar_10 = 0.0;
  mediump vec3 clouds_11;
  mediump vec2 cloudUV_12;
  lowp float fresnel_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_15;
  tmpvar_15 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_13 = tmpvar_15;
  lowp float tmpvar_16;
  tmpvar_16 = pow (fresnel_13, _AtmosFalloff);
  lowp vec3 tmpvar_17;
  tmpvar_17 = (tmpvar_14.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_16)) * tmpvar_16));
  cloudUV_12 = tmpvar_5;
  highp float tmpvar_18;
  tmpvar_18 = (_Time.y * _CloudSpeed);
  highp float tmpvar_19;
  tmpvar_19 = fract(abs(tmpvar_18));
  highp float tmpvar_20;
  if ((tmpvar_18 >= 0.0)) {
    tmpvar_20 = tmpvar_19;
  } else {
    tmpvar_20 = -(tmpvar_19);
  };
  cloudUV_12.x = (cloudUV_12.x + tmpvar_20);
  mediump float height_21;
  height_21 = _CloudHeight;
  mediump vec3 viewDir_22;
  viewDir_22 = xlv_TEXCOORD1;
  highp vec3 v_23;
  mediump float tmpvar_24;
  tmpvar_24 = (height_21 - (height_21 / 2.0));
  mediump vec3 tmpvar_25;
  tmpvar_25 = normalize(viewDir_22);
  v_23 = tmpvar_25;
  v_23.z = (v_23.z + 0.42);
  highp vec2 tmpvar_26;
  tmpvar_26 = (cloudUV_12 + (tmpvar_24 * (v_23.xy / v_23.z)));
  cloudUV_12 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = texture2D (_Clouds, cloudUV_12).xyz;
  clouds_11 = tmpvar_27;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_17 + clouds_11);
  tmpvar_6 = tmpvar_28;
  lowp vec3 tmpvar_29;
  tmpvar_29 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_30;
  tmpvar_30 = mix (tmpvar_29, vec3(0.0, 0.0, 1.0), clouds_11);
  tmpvar_7 = tmpvar_30;
  mediump vec4 tmpvar_31;
  tmpvar_31.w = 0.0;
  tmpvar_31.xyz = clouds_11;
  lowp vec4 arg0_32;
  arg0_32 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_33;
  tmpvar_33 = mix (arg0_32, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_31).xyz;
  tmpvar_8 = tmpvar_33;
  tmpvar_9 = _Shininess;
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_35;
  tmpvar_35 = ((tmpvar_34.xyz * (1.0 - clouds_11)) * _SpecColor.xyz).x;
  tmpvar_10 = tmpvar_35;
  tmpvar_4 = tmpvar_7;
  lowp vec4 tmpvar_36;
  tmpvar_36 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_36;
  highp vec3 tmpvar_37;
  tmpvar_37 = normalize(xlv_TEXCOORD1);
  mediump vec4 tmpvar_38;
  mediump vec3 viewDir_39;
  viewDir_39 = tmpvar_37;
  highp float nh_40;
  mat3 tmpvar_41;
  tmpvar_41[0].x = 0.816497;
  tmpvar_41[0].y = -0.408248;
  tmpvar_41[0].z = -0.408248;
  tmpvar_41[1].x = 0.0;
  tmpvar_41[1].y = 0.707107;
  tmpvar_41[1].z = -0.707107;
  tmpvar_41[2].x = 0.57735;
  tmpvar_41[2].y = 0.57735;
  tmpvar_41[2].z = 0.57735;
  mediump vec3 normal_42;
  normal_42 = tmpvar_7;
  mediump vec3 scalePerBasisVector_43;
  mediump vec3 lm_44;
  lowp vec3 tmpvar_45;
  tmpvar_45 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD3).xyz);
  lm_44 = tmpvar_45;
  lowp vec3 tmpvar_46;
  tmpvar_46 = (2.0 * texture2D (unity_LightmapInd, xlv_TEXCOORD3).xyz);
  scalePerBasisVector_43 = tmpvar_46;
  lm_44 = (lm_44 * dot (clamp ((tmpvar_41 * normal_42), 0.0, 1.0), scalePerBasisVector_43));
  vec3 v_47;
  v_47.x = tmpvar_41[0].x;
  v_47.y = tmpvar_41[1].x;
  v_47.z = tmpvar_41[2].x;
  vec3 v_48;
  v_48.x = tmpvar_41[0].y;
  v_48.y = tmpvar_41[1].y;
  v_48.z = tmpvar_41[2].y;
  vec3 v_49;
  v_49.x = tmpvar_41[0].z;
  v_49.y = tmpvar_41[1].z;
  v_49.z = tmpvar_41[2].z;
  mediump float tmpvar_50;
  tmpvar_50 = max (0.0, dot (tmpvar_7, normalize((normalize((((scalePerBasisVector_43.x * v_47) + (scalePerBasisVector_43.y * v_48)) + (scalePerBasisVector_43.z * v_49))) + viewDir_39))));
  nh_40 = tmpvar_50;
  mediump float arg1_51;
  arg1_51 = (tmpvar_9 * 128.0);
  highp vec4 tmpvar_52;
  tmpvar_52.xyz = lm_44;
  tmpvar_52.w = pow (nh_40, arg1_51);
  tmpvar_38 = tmpvar_52;
  mediump vec4 tmpvar_53;
  tmpvar_53 = (max (light_3, vec4(0.001, 0.001, 0.001, 0.001)) + tmpvar_38);
  light_3 = tmpvar_53;
  lowp vec4 c_54;
  lowp float spec_55;
  mediump float tmpvar_56;
  tmpvar_56 = (tmpvar_53.w * tmpvar_10);
  spec_55 = tmpvar_56;
  mediump vec3 tmpvar_57;
  tmpvar_57 = ((tmpvar_6 * tmpvar_53.xyz) + ((tmpvar_53.xyz * _SpecColor.xyz) * spec_55));
  c_54.xyz = tmpvar_57;
  c_54.w = (tmpvar_14.w + (spec_55 * _SpecColor.w));
  c_2 = c_54;
  c_2.xyz = (c_2.xyz + tmpvar_8);
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_5;
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_7;
  tmpvar_7.x = tmpvar_6.x;
  tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
  o_5.xy = (tmpvar_7 + tmpvar_6.w);
  o_5.zw = tmpvar_4.zw;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = _WorldSpaceCameraPos;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_10 * (((_World2Object * tmpvar_11).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = o_5;
  xlv_TEXCOORD3 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _Time;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  mediump float tmpvar_9;
  lowp float tmpvar_10;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = tmpvar_4;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  tmpvar_9 = 0.0;
  tmpvar_10 = 0.0;
  mediump vec3 clouds_11;
  mediump vec2 cloudUV_12;
  lowp float fresnel_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_15;
  tmpvar_15 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_13 = tmpvar_15;
  lowp float tmpvar_16;
  tmpvar_16 = pow (fresnel_13, _AtmosFalloff);
  lowp vec3 tmpvar_17;
  tmpvar_17 = (tmpvar_14.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_16)) * tmpvar_16));
  cloudUV_12 = tmpvar_5;
  highp float tmpvar_18;
  tmpvar_18 = (_Time.y * _CloudSpeed);
  highp float tmpvar_19;
  tmpvar_19 = fract(abs(tmpvar_18));
  highp float tmpvar_20;
  if ((tmpvar_18 >= 0.0)) {
    tmpvar_20 = tmpvar_19;
  } else {
    tmpvar_20 = -(tmpvar_19);
  };
  cloudUV_12.x = (cloudUV_12.x + tmpvar_20);
  mediump float height_21;
  height_21 = _CloudHeight;
  mediump vec3 viewDir_22;
  viewDir_22 = xlv_TEXCOORD1;
  highp vec3 v_23;
  mediump float tmpvar_24;
  tmpvar_24 = (height_21 - (height_21 / 2.0));
  mediump vec3 tmpvar_25;
  tmpvar_25 = normalize(viewDir_22);
  v_23 = tmpvar_25;
  v_23.z = (v_23.z + 0.42);
  highp vec2 tmpvar_26;
  tmpvar_26 = (cloudUV_12 + (tmpvar_24 * (v_23.xy / v_23.z)));
  cloudUV_12 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = texture2D (_Clouds, cloudUV_12).xyz;
  clouds_11 = tmpvar_27;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_17 + clouds_11);
  tmpvar_6 = tmpvar_28;
  lowp vec3 normal_29;
  normal_29.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_29.z = sqrt((1.0 - clamp (dot (normal_29.xy, normal_29.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_30;
  tmpvar_30 = mix (normal_29, vec3(0.0, 0.0, 1.0), clouds_11);
  tmpvar_7 = tmpvar_30;
  mediump vec4 tmpvar_31;
  tmpvar_31.w = 0.0;
  tmpvar_31.xyz = clouds_11;
  lowp vec4 arg0_32;
  arg0_32 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_33;
  tmpvar_33 = mix (arg0_32, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_31).xyz;
  tmpvar_8 = tmpvar_33;
  tmpvar_9 = _Shininess;
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_35;
  tmpvar_35 = ((tmpvar_34.xyz * (1.0 - clouds_11)) * _SpecColor.xyz).x;
  tmpvar_10 = tmpvar_35;
  tmpvar_4 = tmpvar_7;
  lowp vec4 tmpvar_36;
  tmpvar_36 = texture2DProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_36;
  lowp vec4 tmpvar_37;
  tmpvar_37 = texture2D (unity_Lightmap, xlv_TEXCOORD3);
  lowp vec4 tmpvar_38;
  tmpvar_38 = texture2D (unity_LightmapInd, xlv_TEXCOORD3);
  highp vec3 tmpvar_39;
  tmpvar_39 = normalize(xlv_TEXCOORD1);
  mediump vec4 tmpvar_40;
  mediump vec3 viewDir_41;
  viewDir_41 = tmpvar_39;
  highp float nh_42;
  mat3 tmpvar_43;
  tmpvar_43[0].x = 0.816497;
  tmpvar_43[0].y = -0.408248;
  tmpvar_43[0].z = -0.408248;
  tmpvar_43[1].x = 0.0;
  tmpvar_43[1].y = 0.707107;
  tmpvar_43[1].z = -0.707107;
  tmpvar_43[2].x = 0.57735;
  tmpvar_43[2].y = 0.57735;
  tmpvar_43[2].z = 0.57735;
  mediump vec3 normal_44;
  normal_44 = tmpvar_7;
  mediump vec3 scalePerBasisVector_45;
  mediump vec3 lm_46;
  lowp vec3 tmpvar_47;
  tmpvar_47 = ((8.0 * tmpvar_37.w) * tmpvar_37.xyz);
  lm_46 = tmpvar_47;
  lowp vec3 tmpvar_48;
  tmpvar_48 = ((8.0 * tmpvar_38.w) * tmpvar_38.xyz);
  scalePerBasisVector_45 = tmpvar_48;
  lm_46 = (lm_46 * dot (clamp ((tmpvar_43 * normal_44), 0.0, 1.0), scalePerBasisVector_45));
  vec3 v_49;
  v_49.x = tmpvar_43[0].x;
  v_49.y = tmpvar_43[1].x;
  v_49.z = tmpvar_43[2].x;
  vec3 v_50;
  v_50.x = tmpvar_43[0].y;
  v_50.y = tmpvar_43[1].y;
  v_50.z = tmpvar_43[2].y;
  vec3 v_51;
  v_51.x = tmpvar_43[0].z;
  v_51.y = tmpvar_43[1].z;
  v_51.z = tmpvar_43[2].z;
  mediump float tmpvar_52;
  tmpvar_52 = max (0.0, dot (tmpvar_7, normalize((normalize((((scalePerBasisVector_45.x * v_49) + (scalePerBasisVector_45.y * v_50)) + (scalePerBasisVector_45.z * v_51))) + viewDir_41))));
  nh_42 = tmpvar_52;
  mediump float arg1_53;
  arg1_53 = (tmpvar_9 * 128.0);
  highp vec4 tmpvar_54;
  tmpvar_54.xyz = lm_46;
  tmpvar_54.w = pow (nh_42, arg1_53);
  tmpvar_40 = tmpvar_54;
  mediump vec4 tmpvar_55;
  tmpvar_55 = (max (light_3, vec4(0.001, 0.001, 0.001, 0.001)) + tmpvar_40);
  light_3 = tmpvar_55;
  lowp vec4 c_56;
  lowp float spec_57;
  mediump float tmpvar_58;
  tmpvar_58 = (tmpvar_55.w * tmpvar_10);
  spec_57 = tmpvar_58;
  mediump vec3 tmpvar_59;
  tmpvar_59 = ((tmpvar_6 * tmpvar_55.xyz) + ((tmpvar_55.xyz * _SpecColor.xyz) * spec_57));
  c_56.xyz = tmpvar_59;
  c_56.w = (tmpvar_14.w + (spec_57 * _SpecColor.w));
  c_2 = c_56;
  c_2.xyz = (c_2.xyz + tmpvar_8);
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out highp vec4 xlv_TEXCOORD2;
out highp vec2 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_5;
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_7;
  tmpvar_7.x = tmpvar_6.x;
  tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
  o_5.xy = (tmpvar_7 + tmpvar_6.w);
  o_5.zw = tmpvar_4.zw;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = _WorldSpaceCameraPos;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = (tmpvar_10 * (((_World2Object * tmpvar_11).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD2 = o_5;
  xlv_TEXCOORD3 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _Time;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _AtmosFalloff;
uniform lowp float _CloudSpeed;
uniform lowp float _CloudHeight;
uniform lowp float _Shininess;
uniform lowp vec3 _AtmosNear;
uniform lowp vec3 _AtmosFar;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
in highp vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
in highp vec2 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  highp vec2 tmpvar_5;
  tmpvar_5 = xlv_TEXCOORD0.zw;
  lowp vec3 tmpvar_6;
  lowp vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  mediump float tmpvar_9;
  lowp float tmpvar_10;
  tmpvar_6 = vec3(0.0, 0.0, 0.0);
  tmpvar_7 = tmpvar_4;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  tmpvar_9 = 0.0;
  tmpvar_10 = 0.0;
  mediump vec3 clouds_11;
  mediump vec2 cloudUV_12;
  lowp float fresnel_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture (_MainTex, xlv_TEXCOORD0.xy);
  highp float tmpvar_15;
  tmpvar_15 = (1.0 - clamp (normalize(xlv_TEXCOORD1).z, 0.0, 1.0));
  fresnel_13 = tmpvar_15;
  lowp float tmpvar_16;
  tmpvar_16 = pow (fresnel_13, _AtmosFalloff);
  lowp vec3 tmpvar_17;
  tmpvar_17 = (tmpvar_14.xyz + (mix (_AtmosNear, _AtmosFar, vec3(tmpvar_16)) * tmpvar_16));
  cloudUV_12 = tmpvar_5;
  highp float tmpvar_18;
  tmpvar_18 = (_Time.y * _CloudSpeed);
  highp float tmpvar_19;
  tmpvar_19 = fract(abs(tmpvar_18));
  highp float tmpvar_20;
  if ((tmpvar_18 >= 0.0)) {
    tmpvar_20 = tmpvar_19;
  } else {
    tmpvar_20 = -(tmpvar_19);
  };
  cloudUV_12.x = (cloudUV_12.x + tmpvar_20);
  mediump float height_21;
  height_21 = _CloudHeight;
  mediump vec3 viewDir_22;
  viewDir_22 = xlv_TEXCOORD1;
  highp vec3 v_23;
  mediump float tmpvar_24;
  tmpvar_24 = (height_21 - (height_21 / 2.0));
  mediump vec3 tmpvar_25;
  tmpvar_25 = normalize(viewDir_22);
  v_23 = tmpvar_25;
  v_23.z = (v_23.z + 0.42);
  highp vec2 tmpvar_26;
  tmpvar_26 = (cloudUV_12 + (tmpvar_24 * (v_23.xy / v_23.z)));
  cloudUV_12 = tmpvar_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = texture (_Clouds, cloudUV_12).xyz;
  clouds_11 = tmpvar_27;
  mediump vec3 tmpvar_28;
  tmpvar_28 = (tmpvar_17 + clouds_11);
  tmpvar_6 = tmpvar_28;
  lowp vec3 tmpvar_29;
  tmpvar_29 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_30;
  tmpvar_30 = mix (tmpvar_29, vec3(0.0, 0.0, 1.0), clouds_11);
  tmpvar_7 = tmpvar_30;
  mediump vec4 tmpvar_31;
  tmpvar_31.w = 0.0;
  tmpvar_31.xyz = clouds_11;
  lowp vec4 arg0_32;
  arg0_32 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_33;
  tmpvar_33 = mix (arg0_32, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_31).xyz;
  tmpvar_8 = tmpvar_33;
  tmpvar_9 = _Shininess;
  lowp vec4 tmpvar_34;
  tmpvar_34 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_35;
  tmpvar_35 = ((tmpvar_34.xyz * (1.0 - clouds_11)) * _SpecColor.xyz).x;
  tmpvar_10 = tmpvar_35;
  tmpvar_4 = tmpvar_7;
  lowp vec4 tmpvar_36;
  tmpvar_36 = textureProj (_LightBuffer, xlv_TEXCOORD2);
  light_3 = tmpvar_36;
  highp vec3 tmpvar_37;
  tmpvar_37 = normalize(xlv_TEXCOORD1);
  mediump vec4 tmpvar_38;
  mediump vec3 viewDir_39;
  viewDir_39 = tmpvar_37;
  highp float nh_40;
  mat3 tmpvar_41;
  tmpvar_41[0].x = 0.816497;
  tmpvar_41[0].y = -0.408248;
  tmpvar_41[0].z = -0.408248;
  tmpvar_41[1].x = 0.0;
  tmpvar_41[1].y = 0.707107;
  tmpvar_41[1].z = -0.707107;
  tmpvar_41[2].x = 0.57735;
  tmpvar_41[2].y = 0.57735;
  tmpvar_41[2].z = 0.57735;
  mediump vec3 normal_42;
  normal_42 = tmpvar_7;
  mediump vec3 scalePerBasisVector_43;
  mediump vec3 lm_44;
  lowp vec3 tmpvar_45;
  tmpvar_45 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD3).xyz);
  lm_44 = tmpvar_45;
  lowp vec3 tmpvar_46;
  tmpvar_46 = (2.0 * texture (unity_LightmapInd, xlv_TEXCOORD3).xyz);
  scalePerBasisVector_43 = tmpvar_46;
  lm_44 = (lm_44 * dot (clamp ((tmpvar_41 * normal_42), 0.0, 1.0), scalePerBasisVector_43));
  vec3 v_47;
  v_47.x = tmpvar_41[0].x;
  v_47.y = tmpvar_41[1].x;
  v_47.z = tmpvar_41[2].x;
  vec3 v_48;
  v_48.x = tmpvar_41[0].y;
  v_48.y = tmpvar_41[1].y;
  v_48.z = tmpvar_41[2].y;
  vec3 v_49;
  v_49.x = tmpvar_41[0].z;
  v_49.y = tmpvar_41[1].z;
  v_49.z = tmpvar_41[2].z;
  mediump float tmpvar_50;
  tmpvar_50 = max (0.0, dot (tmpvar_7, normalize((normalize((((scalePerBasisVector_43.x * v_47) + (scalePerBasisVector_43.y * v_48)) + (scalePerBasisVector_43.z * v_49))) + viewDir_39))));
  nh_40 = tmpvar_50;
  mediump float arg1_51;
  arg1_51 = (tmpvar_9 * 128.0);
  highp vec4 tmpvar_52;
  tmpvar_52.xyz = lm_44;
  tmpvar_52.w = pow (nh_40, arg1_51);
  tmpvar_38 = tmpvar_52;
  mediump vec4 tmpvar_53;
  tmpvar_53 = (max (light_3, vec4(0.001, 0.001, 0.001, 0.001)) + tmpvar_38);
  light_3 = tmpvar_53;
  lowp vec4 c_54;
  lowp float spec_55;
  mediump float tmpvar_56;
  tmpvar_56 = (tmpvar_53.w * tmpvar_10);
  spec_55 = tmpvar_56;
  mediump vec3 tmpvar_57;
  tmpvar_57 = ((tmpvar_6 * tmpvar_53.xyz) + ((tmpvar_53.xyz * _SpecColor.xyz) * spec_55));
  c_54.xyz = tmpvar_57;
  c_54.w = (tmpvar_14.w + (spec_55 * _SpecColor.w));
  c_2 = c_54;
  c_2.xyz = (c_2.xyz + tmpvar_8);
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
}
Program "fp" {
SubProgram "opengl " {
// Stats: 48 math, 5 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Vector 0 [_Time]
Vector 1 [_SpecColor]
Float 2 [_LightAmount]
Float 3 [_AtmosFalloff]
Float 4 [_CloudSpeed]
Float 5 [_CloudHeight]
Vector 6 [_AtmosNear]
Vector 7 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
"3.0-!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 0.5, 1, 0.41999999 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
DP3 R0.x, fragment.texcoord[1], fragment.texcoord[1];
RSQ R0.x, R0.x;
MUL_SAT R0.w, R0.x, fragment.texcoord[1].z;
ADD R0.w, -R0, c[8].y;
POW R2.x, R0.w, c[3].x;
MOV R0.xyz, c[6];
ADD R0.xyz, -R0, c[7];
DP3 R0.w, fragment.texcoord[1], fragment.texcoord[1];
TEX R1, fragment.texcoord[0], texture[0], 2D;
MAD R0.xyz, R2.x, R0, c[6];
MAD R2.xyz, R0, R2.x, R1;
RSQ R0.w, R0.w;
MUL R0.xyz, R0.w, fragment.texcoord[1];
ADD R0.z, R0, c[8];
RCP R1.x, R0.z;
MOV R0.w, c[4].x;
MUL R0.w, R0, c[0].y;
MUL R0.xy, R0, R1.x;
ABS R0.z, R0.w;
FRC R1.x, R0.z;
MOV R0.z, c[8].x;
CMP R0.w, R0, -R1.x, R1.x;
MAD R0.z, -R0, c[5].x, c[5].x;
MUL R1.xy, R0.z, R0;
ADD R0.x, fragment.texcoord[0].z, R0.w;
MOV R0.y, fragment.texcoord[0].w;
ADD R1.xy, R0, R1;
TXP R0, fragment.texcoord[2], texture[5], 2D;
TEX R4.xyz, R1, texture[1], 2D;
LG2 R0.x, R0.x;
LG2 R0.z, R0.z;
LG2 R0.y, R0.y;
ADD R1.xyz, -R0, fragment.texcoord[3];
MUL R3.xyz, R1, c[1];
ADD R0.y, -R4.x, c[8];
TEX R0.x, fragment.texcoord[0], texture[4], 2D;
MUL R0.x, R0, R0.y;
MUL R2.w, R0.x, c[1].x;
LG2 R0.w, R0.w;
MUL R0.w, -R0, R2;
TEX R0.xyz, fragment.texcoord[0], texture[3], 2D;
MUL R0.xyz, R0, c[2].x;
ADD R2.xyz, R2, R4;
MUL R3.xyz, R3, R0.w;
MAD R0.xyz, R4.x, -R0, R0;
MAD R1.xyz, R2, R1, R3;
ADD result.color.xyz, R1, R0;
MAD result.color.w, R0, c[1], R1;
END
# 48 instructions, 5 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 46 math, 5 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Vector 0 [_Time]
Vector 1 [_SpecColor]
Float 2 [_LightAmount]
Float 3 [_AtmosFalloff]
Float 4 [_CloudSpeed]
Float 5 [_CloudHeight]
Vector 6 [_AtmosNear]
Vector 7 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s3
dcl_2d s4
dcl_2d s5
def c8, 1.00000000, 0.41999999, -0.50000000, 0
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2
dcl_texcoord3 v3.xyz
dp3 r0.x, v1, v1
rsq r0.x, r0.x
mul_sat r0.x, r0, v1.z
add r1.x, -r0, c8
pow_pp r0, r1.x, c3.x
mov_pp r1.xyz, c7
dp3_pp r2.x, v1, v1
mov_pp r0.w, r0.x
add_pp r1.xyz, -c6, r1
mad_pp r0.xyz, r0.w, r1, c6
texld r1, v0, s0
mad_pp r1.xyz, r0, r0.w, r1
rsq_pp r2.x, r2.x
mul_pp r0.xyz, r2.x, v1
add r2.x, r0.z, c8.y
mov r0.w, c0.y
mul r0.z, c4.x, r0.w
rcp r2.x, r2.x
mul r0.xy, r0, r2.x
abs r0.w, r0.z
frc r0.w, r0
cmp r0.z, r0, r0.w, -r0.w
mov_pp r2.x, c8.z
mad_pp r0.w, r2.x, c5.x, c5.x
mul r2.xy, r0.w, r0
add_pp r0.x, v0.z, r0.z
mov_pp r0.y, v0.w
add_pp r2.xy, r0, r2
texldp r0, v2, s5
texld r4.xyz, r2, s1
log_pp r0.x, r0.x
log_pp r0.z, r0.z
log_pp r0.y, r0.y
add_pp r2.xyz, -r0, v3
add_pp r0.y, -r4.x, c8.x
texld r0.x, v0, s4
mul r0.x, r0, r0.y
mul r2.w, r0.x, c1.x
log_pp r0.w, r0.w
mul_pp r0.w, -r0, r2
mul_pp r3.xyz, r2, c1
texld r0.xyz, v0, s3
mul r0.xyz, r0, c2.x
add_pp r1.xyz, r1, r4
mul_pp r3.xyz, r3, r0.w
mad r0.xyz, r4.x, -r0, r0
mad_pp r1.xyz, r1, r2, r3
add_pp oC0.xyz, r1, r0
mad_pp oC0.w, r0, c1, r1
"
}
SubProgram "d3d11 " {
// Stats: 33 math, 5 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 2
SetTexture 2 [_Emission] 2D 1
SetTexture 3 [_Mask] 2D 3
SetTexture 4 [_LightBuffer] 2D 4
ConstBuffer "$Globals" 144
Vector 32 [_SpecColor]
Float 48 [_LightAmount]
Float 52 [_AtmosFalloff]
Float 56 [_CloudSpeed]
Float 60 [_CloudHeight]
Vector 68 [_AtmosNear] 3
Vector 80 [_AtmosFar] 3
ConstBuffer "UnityPerCamera" 128
Vector 0 [_Time]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
"ps_4_0
eefiecedgikeknkmclgckejoojebiagnbmmihdlkabaaaaaaaaahaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaapalaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefcpiafaaaaeaaaaaaahoabaaaafjaaaaaeegiocaaaaaaaaaaaagaaaaaa
fjaaaaaeegiocaaaabaaaaaaabaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaad
aagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaa
fkaaaaadaagabaaaaeaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaae
aahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaafibiaaae
aahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaagcbaaaad
pcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaadlcbabaaaadaaaaaa
gcbaaaadhcbabaaaaeaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacaeaaaaaa
diaaaaajbcaabaaaaaaaaaaackiacaaaaaaaaaaaadaaaaaabkiacaaaabaaaaaa
aaaaaaaabnaaaaaiccaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaiaebaaaaaa
aaaaaaaabkaaaaagbcaabaaaaaaaaaaaakaabaiaibaaaaaaaaaaaaaadhaaaaak
bcaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaiaebaaaaaa
aaaaaaaaaaaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaackbabaaaabaaaaaa
baaaaaahecaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaaeeaaaaaf
ecaabaaaaaaaaaaackaabaaaaaaaaaaadcaaaaajicaabaaaaaaaaaaackbabaaa
acaaaaaackaabaaaaaaaaaaaabeaaaaadnaknhdodiaaaaahhcaabaaaabaaaaaa
kgakbaaaaaaaaaaacgbjbaaaacaaaaaaaoaaaaahmcaabaaaaaaaaaaafgajbaaa
abaaaaaapgapbaaaaaaaaaaadgcaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaa
aaaaaaaibcaabaaaabaaaaaaakaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadp
cpaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaadiaaaaaibcaabaaaabaaaaaa
akaabaaaabaaaaaabkiacaaaaaaaaaaaadaaaaaabjaaaaafbcaabaaaabaaaaaa
akaabaaaabaaaaaadiaaaaaiccaabaaaabaaaaaadkiacaaaaaaaaaaaadaaaaaa
abeaaaaaaaaaaadpdgaaaaafccaabaaaaaaaaaaadkbabaaaabaaaaaadcaaaaaj
dcaabaaaaaaaaaaafgafbaaaabaaaaaaogakbaaaaaaaaaaaegaabaaaaaaaaaaa
efaaaaajpcaabaaaaaaaaaaaegaabaaaaaaaaaaaeghobaaaabaaaaaaaagabaaa
acaaaaaaaaaaaaakocaabaaaabaaaaaafgiocaiaebaaaaaaaaaaaaaaaeaaaaaa
agijcaaaaaaaaaaaafaaaaaadcaaaaakocaabaaaabaaaaaaagaabaaaabaaaaaa
fgaobaaaabaaaaaafgiocaaaaaaaaaaaaeaaaaaaefaaaaajpcaabaaaacaaaaaa
egbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaadcaaaaajhcaabaaa
abaaaaaajgahbaaaabaaaaaaagaabaaaabaaaaaaegacbaaaacaaaaaaaaaaaaah
hcaabaaaabaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaaaaaaaaaiicaabaaa
aaaaaaaaakaabaiaebaaaaaaaaaaaaaaabeaaaaaaaaaiadpefaaaaajpcaabaaa
adaaaaaaegbabaaaabaaaaaaeghobaaaadaaaaaaaagabaaaadaaaaaadiaaaaah
icaabaaaaaaaaaaadkaabaaaaaaaaaaaakaabaaaadaaaaaadiaaaaaiicaabaaa
aaaaaaaadkaabaaaaaaaaaaaakiacaaaaaaaaaaaacaaaaaaaoaaaaahdcaabaaa
acaaaaaaegbabaaaadaaaaaapgbpbaaaadaaaaaaefaaaaajpcaabaaaadaaaaaa
egaabaaaacaaaaaaeghobaaaaeaaaaaaaagabaaaaeaaaaaacpaaaaafpcaabaaa
adaaaaaaegaobaaaadaaaaaadiaaaaaiicaabaaaaaaaaaaadkaabaaaaaaaaaaa
dkaabaiaebaaaaaaadaaaaaaaaaaaaaihcaabaaaacaaaaaaegacbaiaebaaaaaa
adaaaaaaegbcbaaaaeaaaaaadiaaaaaihcaabaaaadaaaaaaegacbaaaacaaaaaa
egiccaaaaaaaaaaaacaaaaaadiaaaaahhcaabaaaadaaaaaapgapbaaaaaaaaaaa
egacbaaaadaaaaaadcaaaaakiccabaaaaaaaaaaadkaabaaaaaaaaaaadkiacaaa
aaaaaaaaacaaaaaadkaabaaaacaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaa
abaaaaaaegacbaaaacaaaaaaegacbaaaadaaaaaaefaaaaajpcaabaaaacaaaaaa
egbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaaabaaaaaadiaaaaaihcaabaaa
acaaaaaaegacbaaaacaaaaaaagiacaaaaaaaaaaaadaaaaaadcaaaaakhcaabaaa
aaaaaaaaegacbaaaaaaaaaaaegacbaiaebaaaaaaacaaaaaaegacbaaaacaaaaaa
aaaaaaahhccabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadoaaaaab
"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 59 math, 7 textures
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Vector 0 [_Time]
Vector 1 [_SpecColor]
Float 2 [_LightAmount]
Float 3 [_AtmosFalloff]
Float 4 [_CloudSpeed]
Float 5 [_CloudHeight]
Vector 6 [_AtmosNear]
Vector 7 [_AtmosFar]
Vector 8 [unity_LightmapFade]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
SetTexture 6 [unity_Lightmap] 2D 6
SetTexture 7 [unity_LightmapInd] 2D 7
"3.0-!!ARBfp1.0
PARAM c[10] = { program.local[0..8],
		{ 0.5, 8, 1, 0.41999999 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEX R1, fragment.texcoord[3], texture[6], 2D;
TEX R0, fragment.texcoord[3], texture[7], 2D;
MUL R0.xyz, R0.w, R0;
MUL R1.xyz, R1.w, R1;
MUL R0.xyz, R0, c[9].y;
DP4 R0.w, fragment.texcoord[4], fragment.texcoord[4];
RSQ R0.w, R0.w;
RCP R0.w, R0.w;
DP3 R1.w, fragment.texcoord[1], fragment.texcoord[1];
RSQ R1.w, R1.w;
MUL R2.xyz, R1.w, fragment.texcoord[1];
ADD R2.w, R2.z, c[9];
MOV R1.w, c[4].x;
MUL R2.z, R1.w, c[0].y;
RCP R2.w, R2.w;
MUL R2.xy, R2, R2.w;
ABS R1.w, R2.z;
FRC R2.w, R1;
MOV R1.w, c[9].x;
MAD R1.w, -R1, c[5].x, c[5].x;
MUL R3.xy, R1.w, R2;
CMP R2.z, R2, -R2.w, R2.w;
MAD R1.xyz, R1, c[9].y, -R0;
MAD_SAT R0.w, R0, c[8].z, c[8];
MAD R1.xyz, R0.w, R1, R0;
TXP R0, fragment.texcoord[2], texture[5], 2D;
ADD R2.x, fragment.texcoord[0].z, R2.z;
MOV R2.y, fragment.texcoord[0].w;
ADD R2.xy, R2, R3;
LG2 R0.x, R0.x;
LG2 R0.y, R0.y;
LG2 R0.z, R0.z;
ADD R3.xyz, -R0, R1;
TEX R1.xyz, R2, texture[1], 2D;
MUL R0.xyz, R3, c[1];
ADD R1.w, -R1.x, c[9].z;
TEX R2.x, fragment.texcoord[0], texture[4], 2D;
MUL R1.w, R2.x, R1;
LG2 R0.w, R0.w;
MUL R1.w, R1, c[1].x;
MUL R1.w, -R0, R1;
DP3 R2.x, fragment.texcoord[1], fragment.texcoord[1];
RSQ R0.w, R2.x;
MUL R5.xyz, R0, R1.w;
MUL_SAT R0.w, R0, fragment.texcoord[1].z;
ADD R0.w, -R0, c[9].z;
MOV R0.xyz, c[6];
TEX R2.xyz, fragment.texcoord[0], texture[3], 2D;
POW R2.w, R0.w, c[3].x;
ADD R0.xyz, -R0, c[7];
MAD R4.xyz, R2.w, R0, c[6];
TEX R0, fragment.texcoord[0], texture[0], 2D;
MAD R0.xyz, R4, R2.w, R0;
ADD R0.xyz, R0, R1;
MUL R2.xyz, R2, c[2].x;
MAD R1.xyz, R1.x, -R2, R2;
MAD R0.xyz, R0, R3, R5;
ADD result.color.xyz, R0, R1;
MAD result.color.w, R1, c[1], R0;
END
# 59 instructions, 6 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 55 math, 7 textures
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Vector 0 [_Time]
Vector 1 [_SpecColor]
Float 2 [_LightAmount]
Float 3 [_AtmosFalloff]
Float 4 [_CloudSpeed]
Float 5 [_CloudHeight]
Vector 6 [_AtmosNear]
Vector 7 [_AtmosFar]
Vector 8 [unity_LightmapFade]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
SetTexture 6 [unity_Lightmap] 2D 6
SetTexture 7 [unity_LightmapInd] 2D 7
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s3
dcl_2d s4
dcl_2d s5
dcl_2d s6
dcl_2d s7
def c9, 1.00000000, 0.41999999, -0.50000000, 8.00000000
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2
dcl_texcoord3 v3.xy
dcl_texcoord4 v4
texld r0, v3, s6
mul_pp r0.xyz, r0.w, r0
texld r1, v3, s7
mul_pp r1.xyz, r1.w, r1
mul_pp r1.xyz, r1, c9.w
dp4 r0.w, v4, v4
rsq r0.w, r0.w
rcp r1.w, r0.w
mad_pp r2.xyz, r0, c9.w, -r1
texldp r0, v2, s5
mad_sat r1.w, r1, c8.z, c8
mad_pp r1.xyz, r1.w, r2, r1
dp3_pp r1.w, v1, v1
log_pp r0.x, r0.x
log_pp r0.y, r0.y
log_pp r0.z, r0.z
add_pp r4.xyz, -r0, r1
rsq_pp r1.w, r1.w
mul_pp r1.xyz, r1.w, v1
add r0.y, r1.z, c9
rcp r0.z, r0.y
mul r1.xy, r1, r0.z
log_pp r1.w, r0.w
mov r0.x, c0.y
mul r0.x, c4, r0
abs r0.y, r0.x
frc r0.y, r0
cmp r0.x, r0, r0.y, -r0.y
mov_pp r0.z, c9
mad_pp r0.y, r0.z, c5.x, c5.x
mul r1.xy, r0.y, r1
dp3 r0.w, v1, v1
rsq r0.w, r0.w
add_pp r0.x, v0.z, r0
mov_pp r0.y, v0.w
add_pp r1.xy, r0, r1
texld r1.xyz, r1, s1
add_pp r2.y, -r1.x, c9.x
texld r2.x, v0, s4
mul r2.x, r2, r2.y
mul r2.x, r2, c1
mul_pp r1.w, -r1, r2.x
mul_pp r0.xyz, r4, c1
mul_sat r0.w, r0, v1.z
add r2.x, -r0.w, c9
mul_pp r5.xyz, r0, r1.w
pow_pp r0, r2.x, c3.x
mov_pp r2.w, r0.x
texld r0, v0, s0
mov_pp r2.xyz, c7
add_pp r2.xyz, -c6, r2
mad_pp r3.xyz, r2.w, r2, c6
texld r2.xyz, v0, s3
mad_pp r0.xyz, r3, r2.w, r0
add_pp r0.xyz, r0, r1
mul r2.xyz, r2, c2.x
mad r1.xyz, r1.x, -r2, r2
mad_pp r0.xyz, r0, r4, r5
add_pp oC0.xyz, r0, r1
mad_pp oC0.w, r1, c1, r0
"
}
SubProgram "d3d11 " {
// Stats: 41 math, 7 textures
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 2
SetTexture 2 [_Emission] 2D 1
SetTexture 3 [_Mask] 2D 3
SetTexture 4 [_LightBuffer] 2D 4
SetTexture 5 [unity_Lightmap] 2D 5
SetTexture 6 [unity_LightmapInd] 2D 6
ConstBuffer "$Globals" 176
Vector 32 [_SpecColor]
Float 48 [_LightAmount]
Float 52 [_AtmosFalloff]
Float 56 [_CloudSpeed]
Float 60 [_CloudHeight]
Vector 68 [_AtmosNear] 3
Vector 80 [_AtmosFar] 3
Vector 144 [unity_LightmapFade]
ConstBuffer "UnityPerCamera" 128
Vector 0 [_Time]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
"ps_4_0
eefiecedglglmmlpaejfonpldgienomjpcajhmpeabaaaaaakaaiaaaaadaaaaaa
cmaaaaaaoeaaaaaabiabaaaaejfdeheolaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakeaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaapalaaaakeaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaadadaaaakeaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapapaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklklfdeieefciaahaaaa
eaaaaaaaoaabaaaafjaaaaaeegiocaaaaaaaaaaaakaaaaaafjaaaaaeegiocaaa
abaaaaaaabaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaa
fkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaa
aeaaaaaafkaaaaadaagabaaaafaaaaaafkaaaaadaagabaaaagaaaaaafibiaaae
aahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaae
aahabaaaacaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaafibiaaae
aahabaaaaeaaaaaaffffaaaafibiaaaeaahabaaaafaaaaaaffffaaaafibiaaae
aahabaaaagaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaadhcbabaaa
acaaaaaagcbaaaadlcbabaaaadaaaaaagcbaaaaddcbabaaaaeaaaaaagcbaaaad
pcbabaaaafaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacafaaaaaadiaaaaaj
bcaabaaaaaaaaaaackiacaaaaaaaaaaaadaaaaaabkiacaaaabaaaaaaaaaaaaaa
bnaaaaaiccaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaa
bkaaaaagbcaabaaaaaaaaaaaakaabaiaibaaaaaaaaaaaaaadhaaaaakbcaabaaa
aaaaaaaabkaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaa
aaaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaackbabaaaabaaaaaabaaaaaah
ecaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaaeeaaaaafecaabaaa
aaaaaaaackaabaaaaaaaaaaadcaaaaajicaabaaaaaaaaaaackbabaaaacaaaaaa
ckaabaaaaaaaaaaaabeaaaaadnaknhdodiaaaaahhcaabaaaabaaaaaakgakbaaa
aaaaaaaacgbjbaaaacaaaaaaaoaaaaahmcaabaaaaaaaaaaafgajbaaaabaaaaaa
pgapbaaaaaaaaaaadgcaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaaaaaaaaai
bcaabaaaabaaaaaaakaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadpcpaaaaaf
bcaabaaaabaaaaaaakaabaaaabaaaaaadiaaaaaibcaabaaaabaaaaaaakaabaaa
abaaaaaabkiacaaaaaaaaaaaadaaaaaabjaaaaafbcaabaaaabaaaaaaakaabaaa
abaaaaaadiaaaaaiccaabaaaabaaaaaadkiacaaaaaaaaaaaadaaaaaaabeaaaaa
aaaaaadpdgaaaaafccaabaaaaaaaaaaadkbabaaaabaaaaaadcaaaaajdcaabaaa
aaaaaaaafgafbaaaabaaaaaaogakbaaaaaaaaaaaegaabaaaaaaaaaaaefaaaaaj
pcaabaaaaaaaaaaaegaabaaaaaaaaaaaeghobaaaabaaaaaaaagabaaaacaaaaaa
aaaaaaakocaabaaaabaaaaaafgiocaiaebaaaaaaaaaaaaaaaeaaaaaaagijcaaa
aaaaaaaaafaaaaaadcaaaaakocaabaaaabaaaaaaagaabaaaabaaaaaafgaobaaa
abaaaaaafgiocaaaaaaaaaaaaeaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaa
abaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaadcaaaaajhcaabaaaabaaaaaa
jgahbaaaabaaaaaaagaabaaaabaaaaaaegacbaaaacaaaaaaaaaaaaahhcaabaaa
abaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaaaaaaaaaiicaabaaaaaaaaaaa
akaabaiaebaaaaaaaaaaaaaaabeaaaaaaaaaiadpefaaaaajpcaabaaaadaaaaaa
egbabaaaabaaaaaaeghobaaaadaaaaaaaagabaaaadaaaaaadiaaaaahicaabaaa
aaaaaaaadkaabaaaaaaaaaaaakaabaaaadaaaaaadiaaaaaiicaabaaaaaaaaaaa
dkaabaaaaaaaaaaaakiacaaaaaaaaaaaacaaaaaaaoaaaaahdcaabaaaacaaaaaa
egbabaaaadaaaaaapgbpbaaaadaaaaaaefaaaaajpcaabaaaadaaaaaaegaabaaa
acaaaaaaeghobaaaaeaaaaaaaagabaaaaeaaaaaacpaaaaafpcaabaaaadaaaaaa
egaobaaaadaaaaaadiaaaaaiicaabaaaaaaaaaaadkaabaaaaaaaaaaadkaabaia
ebaaaaaaadaaaaaabbaaaaahicaabaaaabaaaaaaegbobaaaafaaaaaaegbobaaa
afaaaaaaelaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadccaaaalicaabaaa
abaaaaaadkaabaaaabaaaaaackiacaaaaaaaaaaaajaaaaaadkiacaaaaaaaaaaa
ajaaaaaaefaaaaajpcaabaaaaeaaaaaaegbabaaaaeaaaaaaeghobaaaagaaaaaa
aagabaaaagaaaaaadiaaaaahbcaabaaaacaaaaaadkaabaaaaeaaaaaaabeaaaaa
aaaaaaebdiaaaaahhcaabaaaacaaaaaaegacbaaaaeaaaaaaagaabaaaacaaaaaa
efaaaaajpcaabaaaaeaaaaaaegbabaaaaeaaaaaaeghobaaaafaaaaaaaagabaaa
afaaaaaadiaaaaahicaabaaaadaaaaaadkaabaaaaeaaaaaaabeaaaaaaaaaaaeb
dcaaaaakhcaabaaaaeaaaaaapgapbaaaadaaaaaaegacbaaaaeaaaaaaegacbaia
ebaaaaaaacaaaaaadcaaaaajhcaabaaaacaaaaaapgapbaaaabaaaaaaegacbaaa
aeaaaaaaegacbaaaacaaaaaaaaaaaaaihcaabaaaacaaaaaaegacbaaaacaaaaaa
egacbaiaebaaaaaaadaaaaaadiaaaaaihcaabaaaadaaaaaaegacbaaaacaaaaaa
egiccaaaaaaaaaaaacaaaaaadiaaaaahhcaabaaaadaaaaaapgapbaaaaaaaaaaa
egacbaaaadaaaaaadcaaaaakiccabaaaaaaaaaaadkaabaaaaaaaaaaadkiacaaa
aaaaaaaaacaaaaaadkaabaaaacaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaa
abaaaaaaegacbaaaacaaaaaaegacbaaaadaaaaaaefaaaaajpcaabaaaacaaaaaa
egbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaaabaaaaaadiaaaaaihcaabaaa
acaaaaaaegacbaaaacaaaaaaagiacaaaaaaaaaaaadaaaaaadcaaaaakhcaabaaa
aaaaaaaaegacbaaaaaaaaaaaegacbaiaebaaaaaaacaaaaaaegacbaaaacaaaaaa
aaaaaaahhccabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadoaaaaab
"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 83 math, 8 textures
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
Vector 0 [_Time]
Vector 1 [_SpecColor]
Float 2 [_LightAmount]
Float 3 [_AtmosFalloff]
Float 4 [_CloudSpeed]
Float 5 [_CloudHeight]
Float 6 [_Shininess]
Vector 7 [_AtmosNear]
Vector 8 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
SetTexture 6 [unity_Lightmap] 2D 6
SetTexture 7 [unity_LightmapInd] 2D 7
"3.0-!!ARBfp1.0
PARAM c[13] = { program.local[0..8],
		{ 1, 0.5, 0.41999999, 2 },
		{ 0, 1, 0.81649655, 0.57735026 },
		{ -0.40824828, -0.70710677, 0.57735026, 8 },
		{ -0.40824831, 0.70710677, 0.57735026, 128 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEX R0, fragment.texcoord[3], texture[7], 2D;
MUL R0.xyz, R0.w, R0;
DP3 R1.x, fragment.texcoord[1], fragment.texcoord[1];
MUL R4.xyz, R0, c[11].w;
RSQ R0.w, R1.x;
MUL R0.xyz, R0.w, fragment.texcoord[1];
MUL R1.xyz, R4.y, c[12];
MAD R1.xyz, R4.x, c[10].zxww, R1;
ADD R0.z, R0, c[9];
MAD R3.xyz, R4.z, c[11], R1;
RCP R0.z, R0.z;
MUL R1.xy, R0, R0.z;
MOV R0.x, c[9].y;
MAD R0.x, -R0, c[5], c[5];
MOV R0.z, c[4].x;
MUL R1.zw, R0.x, R1.xyxy;
TEX R2.yw, fragment.texcoord[0], texture[2], 2D;
MAD R0.xy, R2.wyzw, c[9].w, -c[9].x;
MUL R1.xy, R0, R0;
ADD_SAT R1.y, R1.x, R1;
MUL R0.z, R0, c[0].y;
ABS R1.x, R0.z;
ADD R1.y, -R1, c[9].x;
FRC R1.x, R1;
CMP R1.x, R0.z, -R1, R1;
RSQ R1.y, R1.y;
RCP R0.z, R1.y;
ADD R2.xyz, -R0, c[10].xxyw;
ADD R1.x, fragment.texcoord[0].z, R1;
MOV R1.y, fragment.texcoord[0].w;
ADD R1.xy, R1, R1.zwzw;
TEX R1.xyz, R1, texture[1], 2D;
MAD R2.xyz, R1, R2, R0;
DP3 R0.x, R3, R3;
RSQ R0.x, R0.x;
MUL R3.xyz, R0.x, R3;
MAD R3.xyz, fragment.texcoord[1], R0.w, R3;
DP3 R2.w, R3, R3;
RSQ R2.w, R2.w;
DP3_SAT R0.z, R2, c[11];
DP3_SAT R0.y, R2, c[12];
DP3_SAT R0.x, R2, c[10].zxww;
DP3 R1.w, R0, R4;
TEX R0, fragment.texcoord[3], texture[6], 2D;
MUL R0.xyz, R0.w, R0;
MUL R0.xyz, R0, R1.w;
MUL R3.xyz, R2.w, R3;
DP3 R1.w, R2, R3;
TXP R2, fragment.texcoord[2], texture[5], 2D;
MOV R0.w, c[12];
TEX R3.xyz, fragment.texcoord[0], texture[3], 2D;
MUL R0.xyz, R0, c[11].w;
MAX R1.w, R1, c[10].x;
MUL R0.w, R0, c[6].x;
POW R0.w, R1.w, R0.w;
LG2 R2.x, R2.x;
LG2 R2.y, R2.y;
LG2 R2.z, R2.z;
LG2 R2.w, R2.w;
ADD R2, -R2, R0;
ADD R0.y, -R1.x, c[9].x;
TEX R0.x, fragment.texcoord[0], texture[4], 2D;
MUL R0.w, R0.x, R0.y;
MUL R1.w, R0, c[1].x;
DP3 R0.w, fragment.texcoord[1], fragment.texcoord[1];
RSQ R0.w, R0.w;
MUL_SAT R0.w, R0, fragment.texcoord[1].z;
MUL R1.w, R2, R1;
MUL R0.xyz, R2, c[1];
MUL R5.xyz, R0, R1.w;
ADD R0.w, -R0, c[9].x;
MOV R0.xyz, c[7];
POW R2.w, R0.w, c[3].x;
ADD R0.xyz, -R0, c[8];
MAD R4.xyz, R2.w, R0, c[7];
TEX R0, fragment.texcoord[0], texture[0], 2D;
MAD R0.xyz, R4, R2.w, R0;
ADD R0.xyz, R0, R1;
MUL R3.xyz, R3, c[2].x;
MAD R1.xyz, R1.x, -R3, R3;
MAD R0.xyz, R0, R2, R5;
ADD result.color.xyz, R0, R1;
MAD result.color.w, R1, c[1], R0;
END
# 83 instructions, 6 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 80 math, 8 textures
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
Vector 0 [_Time]
Vector 1 [_SpecColor]
Float 2 [_LightAmount]
Float 3 [_AtmosFalloff]
Float 4 [_CloudSpeed]
Float 5 [_CloudHeight]
Float 6 [_Shininess]
Vector 7 [_AtmosNear]
Vector 8 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
SetTexture 6 [unity_Lightmap] 2D 6
SetTexture 7 [unity_LightmapInd] 2D 7
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s3
dcl_2d s4
dcl_2d s5
dcl_2d s6
dcl_2d s7
def c9, 1.00000000, -0.50000000, 0.41999999, 0.00000000
def c10, 2.00000000, -1.00000000, 8.00000000, 128.00000000
def c11, -0.40824828, -0.70710677, 0.57735026, 0
def c12, -0.40824831, 0.70710677, 0.57735026, 0
def c13, 0.81649655, 0.00000000, 0.57735026, 0
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2
dcl_texcoord3 v3.xy
texld r0, v3, s7
mul_pp r0.xyz, r0.w, r0
dp3_pp r1.x, v1, v1
mul_pp r4.xyz, r0, c10.z
rsq_pp r0.w, r1.x
mul_pp r0.xyz, r0.w, v1
mul r1.xyz, r4.y, c12
mad r1.xyz, r4.x, c13, r1
add r0.z, r0, c9
mad r3.xyz, r4.z, c11, r1
rcp r0.z, r0.z
mul r1.xy, r0, r0.z
mov_pp r0.x, c9.y
mad_pp r0.x, r0, c5, c5
mov r0.z, c0.y
mul r1.zw, r0.x, r1.xyxy
texld r2.yw, v0, s2
mad_pp r0.xy, r2.wyzw, c10.x, c10.y
mul_pp r1.xy, r0, r0
add_pp_sat r1.y, r1.x, r1
mul r0.z, c4.x, r0
abs r1.x, r0.z
add_pp r1.y, -r1, c9.x
frc r1.x, r1
cmp r1.x, r0.z, r1, -r1
rsq_pp r1.y, r1.y
rcp_pp r0.z, r1.y
add_pp r2.xyz, -r0, c9.wwxw
add_pp r1.x, v0.z, r1
mov_pp r1.y, v0.w
add_pp r1.xy, r1, r1.zwzw
texld r1.xyz, r1, s1
mad_pp r2.xyz, r1, r2, r0
dp3 r0.x, r3, r3
rsq r0.x, r0.x
mul r3.xyz, r0.x, r3
mad_pp r3.xyz, v1, r0.w, r3
dp3_pp r2.w, r3, r3
rsq_pp r2.w, r2.w
mul_pp r3.xyz, r2.w, r3
dp3_pp_sat r0.z, r2, c11
dp3_pp_sat r0.y, r2, c12
dp3_pp_sat r0.x, r2, c13
dp3_pp r1.w, r0, r4
texld r0, v3, s6
mul_pp r0.xyz, r0.w, r0
dp3_pp r0.w, r2, r3
mul_pp r0.xyz, r0, r1.w
mov_pp r1.w, c6.x
mul_pp r1.w, c10, r1
max_pp r0.w, r0, c9
pow r2, r0.w, r1.w
mul_pp r2.xyz, r0, c10.z
texldp r0, v2, s5
log_pp r0.x, r0.x
log_pp r0.y, r0.y
log_pp r0.z, r0.z
log_pp r0.w, r0.w
add_pp r2, -r0, r2
dp3 r0.w, v1, v1
rsq r0.w, r0.w
mul_pp r0.xyz, r2, c1
add_pp r1.w, -r1.x, c9.x
texld r3.x, v0, s4
mul r1.w, r3.x, r1
mul r1.w, r1, c1.x
mul_pp r1.w, r2, r1
mul_sat r0.w, r0, v1.z
mov_pp r3.xyz, c8
add r2.w, -r0, c9.x
mul_pp r5.xyz, r0, r1.w
pow_pp r0, r2.w, c3.x
mov_pp r2.w, r0.x
add_pp r3.xyz, -c7, r3
mad_pp r4.xyz, r2.w, r3, c7
texld r0, v0, s0
texld r3.xyz, v0, s3
mad_pp r0.xyz, r4, r2.w, r0
add_pp r0.xyz, r0, r1
mul r3.xyz, r3, c2.x
mad r1.xyz, r1.x, -r3, r3
mad_pp r0.xyz, r0, r2, r5
add_pp oC0.xyz, r0, r1
mad_pp oC0.w, r1, c1, r0
"
}
SubProgram "d3d11 " {
// Stats: 64 math, 8 textures
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 3
SetTexture 2 [_BumpMap] 2D 1
SetTexture 3 [_Emission] 2D 2
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
SetTexture 6 [unity_Lightmap] 2D 6
SetTexture 7 [unity_LightmapInd] 2D 7
ConstBuffer "$Globals" 176
Vector 32 [_SpecColor]
Float 48 [_LightAmount]
Float 52 [_AtmosFalloff]
Float 56 [_CloudSpeed]
Float 60 [_CloudHeight]
Float 64 [_Shininess]
Vector 68 [_AtmosNear] 3
Vector 80 [_AtmosFar] 3
ConstBuffer "UnityPerCamera" 128
Vector 0 [_Time]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
"ps_4_0
eefiecedpjgelhbilejabeimiedmonhhkhmgejacabaaaaaajialaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaapalaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaadadaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefcjaakaaaaeaaaaaaakeacaaaafjaaaaaeegiocaaaaaaaaaaaagaaaaaa
fjaaaaaeegiocaaaabaaaaaaabaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaad
aagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaa
fkaaaaadaagabaaaaeaaaaaafkaaaaadaagabaaaafaaaaaafkaaaaadaagabaaa
agaaaaaafkaaaaadaagabaaaahaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaa
fibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaa
fibiaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaa
fibiaaaeaahabaaaafaaaaaaffffaaaafibiaaaeaahabaaaagaaaaaaffffaaaa
fibiaaaeaahabaaaahaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaad
hcbabaaaacaaaaaagcbaaaadlcbabaaaadaaaaaagcbaaaaddcbabaaaaeaaaaaa
gfaaaaadpccabaaaaaaaaaaagiaaaaacagaaaaaaefaaaaajpcaabaaaaaaaaaaa
egbabaaaaeaaaaaaeghobaaaahaaaaaaaagabaaaahaaaaaadiaaaaahicaabaaa
aaaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaaaebdiaaaaahhcaabaaaaaaaaaaa
egacbaaaaaaaaaaapgapbaaaaaaaaaaadiaaaaakhcaabaaaabaaaaaafgafbaaa
aaaaaaaaaceaaaaaomafnblopdaedfdpdkmnbddpaaaaaaaadcaaaaamhcaabaaa
abaaaaaaagaabaaaaaaaaaaaaceaaaaaolaffbdpaaaaaaaadkmnbddpaaaaaaaa
egacbaaaabaaaaaadcaaaaamhcaabaaaabaaaaaakgakbaaaaaaaaaaaaceaaaaa
olafnblopdaedflpdkmnbddpaaaaaaaaegacbaaaabaaaaaabaaaaaahicaabaaa
aaaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaaaaaaaaa
dkaabaaaaaaaaaaabaaaaaahicaabaaaabaaaaaaegbcbaaaacaaaaaaegbcbaaa
acaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahpcaabaaa
acaaaaaapgapbaaaabaaaaaacgbjbaaaacaaaaaadcaaaaajicaabaaaabaaaaaa
ckbabaaaacaaaaaadkaabaaaabaaaaaaabeaaaaadnaknhdoaoaaaaahdcaabaaa
adaaaaaajgafbaaaacaaaaaapgapbaaaabaaaaaadcaaaaajhcaabaaaabaaaaaa
egacbaaaabaaaaaapgapbaaaaaaaaaaajgahbaaaacaaaaaadgcaaaafbcaabaaa
acaaaaaaakaabaaaacaaaaaaaaaaaaaiicaabaaaaaaaaaaaakaabaiaebaaaaaa
acaaaaaaabeaaaaaaaaaiadpcpaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaa
diaaaaaiicaabaaaaaaaaaaadkaabaaaaaaaaaaabkiacaaaaaaaaaaaadaaaaaa
bjaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaabaaaaaahicaabaaaabaaaaaa
egacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaa
abaaaaaadiaaaaahhcaabaaaabaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaa
diaaaaajicaabaaaabaaaaaackiacaaaaaaaaaaaadaaaaaabkiacaaaabaaaaaa
aaaaaaaabnaaaaaibcaabaaaacaaaaaadkaabaaaabaaaaaadkaabaiaebaaaaaa
abaaaaaabkaaaaagicaabaaaabaaaaaadkaabaiaibaaaaaaabaaaaaadhaaaaak
icaabaaaabaaaaaaakaabaaaacaaaaaadkaabaaaabaaaaaadkaabaiaebaaaaaa
abaaaaaaaaaaaaahbcaabaaaacaaaaaadkaabaaaabaaaaaackbabaaaabaaaaaa
diaaaaaiicaabaaaabaaaaaadkiacaaaaaaaaaaaadaaaaaaabeaaaaaaaaaaadp
dgaaaaafccaabaaaacaaaaaadkbabaaaabaaaaaadcaaaaajdcaabaaaacaaaaaa
pgapbaaaabaaaaaaegaabaaaadaaaaaaegaabaaaacaaaaaaefaaaaajpcaabaaa
acaaaaaaegaabaaaacaaaaaaeghobaaaabaaaaaaaagabaaaadaaaaaaefaaaaaj
pcaabaaaadaaaaaaegbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaaabaaaaaa
dcaaaaapdcaabaaaadaaaaaahgapbaaaadaaaaaaaceaaaaaaaaaaaeaaaaaaaea
aaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaaapaaaaah
icaabaaaabaaaaaaegaabaaaadaaaaaaegaabaaaadaaaaaaddaaaaahicaabaaa
abaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaiadpaaaaaaaiicaabaaaabaaaaaa
dkaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaaadaaaaaa
dkaabaaaabaaaaaaaaaaaaalhcaabaaaaeaaaaaaegacbaiaebaaaaaaadaaaaaa
aceaaaaaaaaaaaaaaaaaaaaaaaaaiadpaaaaaaaadcaaaaajhcaabaaaadaaaaaa
egacbaaaacaaaaaaegacbaaaaeaaaaaaegacbaaaadaaaaaabaaaaaahbcaabaaa
abaaaaaaegacbaaaadaaaaaaegacbaaaabaaaaaadeaaaaahbcaabaaaabaaaaaa
akaabaaaabaaaaaaabeaaaaaaaaaaaaacpaaaaafbcaabaaaabaaaaaaakaabaaa
abaaaaaadiaaaaaiccaabaaaabaaaaaaakiacaaaaaaaaaaaaeaaaaaaabeaaaaa
aaaaaaeddiaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaabkaabaaaabaaaaaa
bjaaaaaficaabaaaabaaaaaaakaabaaaabaaaaaaaoaaaaahdcaabaaaaeaaaaaa
egbabaaaadaaaaaapgbpbaaaadaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaa
aeaaaaaaeghobaaaafaaaaaaaagabaaaafaaaaaacpaaaaafpcaabaaaaeaaaaaa
egaobaaaaeaaaaaaapcaaaakbcaabaaaafaaaaaaaceaaaaaolaffbdpdkmnbddp
aaaaaaaaaaaaaaaaigaabaaaadaaaaaabacaaaakccaabaaaafaaaaaaaceaaaaa
omafnblopdaedfdpdkmnbddpaaaaaaaaegacbaaaadaaaaaabacaaaakecaabaaa
afaaaaaaaceaaaaaolafnblopdaedflpdkmnbddpaaaaaaaaegacbaaaadaaaaaa
baaaaaahbcaabaaaaaaaaaaaegacbaaaafaaaaaaegacbaaaaaaaaaaaefaaaaaj
pcaabaaaadaaaaaaegbabaaaaeaaaaaaeghobaaaagaaaaaaaagabaaaagaaaaaa
diaaaaahccaabaaaaaaaaaaadkaabaaaadaaaaaaabeaaaaaaaaaaaebdiaaaaah
hcaabaaaadaaaaaaegacbaaaadaaaaaafgafbaaaaaaaaaaadiaaaaahhcaabaaa
abaaaaaaagaabaaaaaaaaaaaegacbaaaadaaaaaaaaaaaaaipcaabaaaabaaaaaa
egaobaaaabaaaaaaegaobaiaebaaaaaaaeaaaaaaaaaaaaaibcaabaaaaaaaaaaa
akaabaiaebaaaaaaacaaaaaaabeaaaaaaaaaiadpefaaaaajpcaabaaaadaaaaaa
egbabaaaabaaaaaaeghobaaaaeaaaaaaaagabaaaaeaaaaaadiaaaaahbcaabaaa
aaaaaaaaakaabaaaaaaaaaaaakaabaaaadaaaaaadiaaaaaibcaabaaaaaaaaaaa
akaabaaaaaaaaaaaakiacaaaaaaaaaaaacaaaaaadiaaaaahbcaabaaaaaaaaaaa
akaabaaaaaaaaaaadkaabaaaabaaaaaadiaaaaaihcaabaaaadaaaaaaegacbaaa
abaaaaaaegiccaaaaaaaaaaaacaaaaaadiaaaaahhcaabaaaadaaaaaaagaabaaa
aaaaaaaaegacbaaaadaaaaaaaaaaaaakhcaabaaaaeaaaaaajgihcaiaebaaaaaa
aaaaaaaaaeaaaaaaegiccaaaaaaaaaaaafaaaaaadcaaaaakhcaabaaaaeaaaaaa
pgapbaaaaaaaaaaaegacbaaaaeaaaaaajgihcaaaaaaaaaaaaeaaaaaaefaaaaaj
pcaabaaaafaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaa
dcaaaaajocaabaaaaaaaaaaaagajbaaaaeaaaaaapgapbaaaaaaaaaaaagajbaaa
afaaaaaadcaaaaakiccabaaaaaaaaaaaakaabaaaaaaaaaaadkiacaaaaaaaaaaa
acaaaaaadkaabaaaafaaaaaaaaaaaaahhcaabaaaaaaaaaaaegacbaaaacaaaaaa
jgahbaaaaaaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaa
abaaaaaaegacbaaaadaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaa
eghobaaaadaaaaaaaagabaaaacaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaa
abaaaaaaagiacaaaaaaaaaaaadaaaaaadcaaaaakhcaabaaaabaaaaaaegacbaaa
acaaaaaaegacbaiaebaaaaaaabaaaaaaegacbaaaabaaaaaaaaaaaaahhccabaaa
aaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadoaaaaab"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 44 math, 5 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Vector 0 [_Time]
Vector 1 [_SpecColor]
Float 2 [_LightAmount]
Float 3 [_AtmosFalloff]
Float 4 [_CloudSpeed]
Float 5 [_CloudHeight]
Vector 6 [_AtmosNear]
Vector 7 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
"3.0-!!ARBfp1.0
PARAM c[9] = { program.local[0..7],
		{ 0.5, 1, 0.41999999 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
DP3 R0.x, fragment.texcoord[1], fragment.texcoord[1];
RSQ R0.x, R0.x;
MUL R1.xyz, R0.x, fragment.texcoord[1];
MOV R0.x, c[4];
MUL R0.y, R0.x, c[0];
ADD R0.z, R1, c[8];
RCP R0.z, R0.z;
MOV R2.xyz, c[6];
MUL R1.xy, R1, R0.z;
ABS R0.x, R0.y;
FRC R0.z, R0.x;
MOV R0.x, c[8];
CMP R0.y, R0, -R0.z, R0.z;
MAD R0.x, -R0, c[5], c[5];
MUL R0.zw, R0.x, R1.xyxy;
ADD R0.x, fragment.texcoord[0].z, R0.y;
MOV R0.y, fragment.texcoord[0].w;
ADD R0.xy, R0, R0.zwzw;
DP3 R0.z, fragment.texcoord[1], fragment.texcoord[1];
RSQ R1.w, R0.z;
TEX R1.xyz, R0, texture[1], 2D;
MUL_SAT R1.w, R1, fragment.texcoord[1].z;
ADD R1.w, -R1, c[8].y;
TEX R0, fragment.texcoord[0], texture[0], 2D;
POW R1.w, R1.w, c[3].x;
ADD R2.xyz, -R2, c[7];
MAD R2.xyz, R1.w, R2, c[6];
MAD R2.xyz, R2, R1.w, R0;
ADD R3.xyz, R2, R1;
TXP R2, fragment.texcoord[2], texture[5], 2D;
ADD R1.yzw, R2.xxyz, fragment.texcoord[3].xxyz;
ADD R0.y, -R1.x, c[8];
TEX R0.x, fragment.texcoord[0], texture[4], 2D;
MUL R0.x, R0, R0.y;
MUL R0.x, R0, c[1];
MUL R2.w, R2, R0.x;
MUL R2.xyz, R1.yzww, c[1];
TEX R0.xyz, fragment.texcoord[0], texture[3], 2D;
MUL R0.xyz, R0, c[2].x;
MAD R0.xyz, R1.x, -R0, R0;
MUL R2.xyz, R2, R2.w;
MAD R1.xyz, R3, R1.yzww, R2;
ADD result.color.xyz, R1, R0;
MAD result.color.w, R2, c[1], R0;
END
# 44 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 42 math, 5 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Vector 0 [_Time]
Vector 1 [_SpecColor]
Float 2 [_LightAmount]
Float 3 [_AtmosFalloff]
Float 4 [_CloudSpeed]
Float 5 [_CloudHeight]
Vector 6 [_AtmosNear]
Vector 7 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s3
dcl_2d s4
dcl_2d s5
def c8, 1.00000000, 0.41999999, -0.50000000, 0
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2
dcl_texcoord3 v3.xyz
dp3_pp r0.x, v1, v1
rsq_pp r0.x, r0.x
mul_pp r1.xyz, r0.x, v1
add r0.y, r1.z, c8
rcp r0.y, r0.y
mov r0.x, c0.y
mov_pp r0.z, c8
mov_pp r3.xyz, c7
mul r1.xy, r1, r0.y
mul r0.x, c4, r0
abs r0.y, r0.x
frc r0.y, r0
cmp r0.x, r0, r0.y, -r0.y
mad_pp r0.z, r0, c5.x, c5.x
mul r1.xy, r0.z, r1
dp3 r0.y, v1, v1
rsq r0.z, r0.y
mul_sat r0.z, r0, v1
add r2.w, -r0.z, c8.x
add_pp r3.xyz, -c6, r3
add_pp r0.x, v0.z, r0
mov_pp r0.y, v0.w
add_pp r0.xy, r0, r1
texld r2.xyz, r0, s1
pow_pp r0, r2.w, c3.x
mov_pp r0.w, r0.x
mad_pp r0.xyz, r0.w, r3, c6
texld r1, v0, s0
mad_pp r1.xyz, r0, r0.w, r1
add_pp r1.xyz, r1, r2
add_pp r0.y, -r2.x, c8.x
texld r0.x, v0, s4
mul r0.x, r0, r0.y
mul r2.y, r0.x, c1.x
texldp r0, v2, s5
mul_pp r0.w, r0, r2.y
add_pp r2.yzw, r0.xxyz, v3.xxyz
texld r0.xyz, v0, s3
mul_pp r3.xyz, r2.yzww, c1
mul r0.xyz, r0, c2.x
mul_pp r3.xyz, r3, r0.w
mad r0.xyz, r2.x, -r0, r0
mad_pp r1.xyz, r1, r2.yzww, r3
add_pp oC0.xyz, r1, r0
mad_pp oC0.w, r0, c1, r1
"
}
SubProgram "d3d11 " {
// Stats: 32 math, 5 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 2
SetTexture 2 [_Emission] 2D 1
SetTexture 3 [_Mask] 2D 3
SetTexture 4 [_LightBuffer] 2D 4
ConstBuffer "$Globals" 144
Vector 32 [_SpecColor]
Float 48 [_LightAmount]
Float 52 [_AtmosFalloff]
Float 56 [_CloudSpeed]
Float 60 [_CloudHeight]
Vector 68 [_AtmosNear] 3
Vector 80 [_AtmosFar] 3
ConstBuffer "UnityPerCamera" 128
Vector 0 [_Time]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
"ps_4_0
eefiecedagapagbmbniibagonjjaaonoaccfhdegabaaaaaaoeagaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaapalaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefcnmafaaaaeaaaaaaahhabaaaafjaaaaaeegiocaaaaaaaaaaaagaaaaaa
fjaaaaaeegiocaaaabaaaaaaabaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaad
aagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaa
fkaaaaadaagabaaaaeaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaae
aahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaafibiaaae
aahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaagcbaaaad
pcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaadlcbabaaaadaaaaaa
gcbaaaadhcbabaaaaeaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacaeaaaaaa
diaaaaajbcaabaaaaaaaaaaackiacaaaaaaaaaaaadaaaaaabkiacaaaabaaaaaa
aaaaaaaabnaaaaaiccaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaiaebaaaaaa
aaaaaaaabkaaaaagbcaabaaaaaaaaaaaakaabaiaibaaaaaaaaaaaaaadhaaaaak
bcaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaiaebaaaaaa
aaaaaaaaaaaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaackbabaaaabaaaaaa
baaaaaahecaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaaeeaaaaaf
ecaabaaaaaaaaaaackaabaaaaaaaaaaadcaaaaajicaabaaaaaaaaaaackbabaaa
acaaaaaackaabaaaaaaaaaaaabeaaaaadnaknhdodiaaaaahhcaabaaaabaaaaaa
kgakbaaaaaaaaaaacgbjbaaaacaaaaaaaoaaaaahmcaabaaaaaaaaaaafgajbaaa
abaaaaaapgapbaaaaaaaaaaadgcaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaa
aaaaaaaibcaabaaaabaaaaaaakaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadp
cpaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaadiaaaaaibcaabaaaabaaaaaa
akaabaaaabaaaaaabkiacaaaaaaaaaaaadaaaaaabjaaaaafbcaabaaaabaaaaaa
akaabaaaabaaaaaadiaaaaaiccaabaaaabaaaaaadkiacaaaaaaaaaaaadaaaaaa
abeaaaaaaaaaaadpdgaaaaafccaabaaaaaaaaaaadkbabaaaabaaaaaadcaaaaaj
dcaabaaaaaaaaaaafgafbaaaabaaaaaaogakbaaaaaaaaaaaegaabaaaaaaaaaaa
efaaaaajpcaabaaaaaaaaaaaegaabaaaaaaaaaaaeghobaaaabaaaaaaaagabaaa
acaaaaaaaaaaaaakocaabaaaabaaaaaafgiocaiaebaaaaaaaaaaaaaaaeaaaaaa
agijcaaaaaaaaaaaafaaaaaadcaaaaakocaabaaaabaaaaaaagaabaaaabaaaaaa
fgaobaaaabaaaaaafgiocaaaaaaaaaaaaeaaaaaaefaaaaajpcaabaaaacaaaaaa
egbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaadcaaaaajhcaabaaa
abaaaaaajgahbaaaabaaaaaaagaabaaaabaaaaaaegacbaaaacaaaaaaaaaaaaah
hcaabaaaabaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaaaaaaaaaiicaabaaa
aaaaaaaaakaabaiaebaaaaaaaaaaaaaaabeaaaaaaaaaiadpefaaaaajpcaabaaa
adaaaaaaegbabaaaabaaaaaaeghobaaaadaaaaaaaagabaaaadaaaaaadiaaaaah
icaabaaaaaaaaaaadkaabaaaaaaaaaaaakaabaaaadaaaaaadiaaaaaiicaabaaa
aaaaaaaadkaabaaaaaaaaaaaakiacaaaaaaaaaaaacaaaaaaaoaaaaahdcaabaaa
acaaaaaaegbabaaaadaaaaaapgbpbaaaadaaaaaaefaaaaajpcaabaaaadaaaaaa
egaabaaaacaaaaaaeghobaaaaeaaaaaaaagabaaaaeaaaaaadiaaaaahicaabaaa
aaaaaaaadkaabaaaaaaaaaaadkaabaaaadaaaaaaaaaaaaahhcaabaaaacaaaaaa
egacbaaaadaaaaaaegbcbaaaaeaaaaaadiaaaaaihcaabaaaadaaaaaaegacbaaa
acaaaaaaegiccaaaaaaaaaaaacaaaaaadiaaaaahhcaabaaaadaaaaaapgapbaaa
aaaaaaaaegacbaaaadaaaaaadcaaaaakiccabaaaaaaaaaaadkaabaaaaaaaaaaa
dkiacaaaaaaaaaaaacaaaaaadkaabaaaacaaaaaadcaaaaajhcaabaaaabaaaaaa
egacbaaaabaaaaaaegacbaaaacaaaaaaegacbaaaadaaaaaaefaaaaajpcaabaaa
acaaaaaaegbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaaabaaaaaadiaaaaai
hcaabaaaacaaaaaaegacbaaaacaaaaaaagiacaaaaaaaaaaaadaaaaaadcaaaaak
hcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaiaebaaaaaaacaaaaaaegacbaaa
acaaaaaaaaaaaaahhccabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaa
doaaaaab"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 55 math, 7 textures
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Vector 0 [_Time]
Vector 1 [_SpecColor]
Float 2 [_LightAmount]
Float 3 [_AtmosFalloff]
Float 4 [_CloudSpeed]
Float 5 [_CloudHeight]
Vector 6 [_AtmosNear]
Vector 7 [_AtmosFar]
Vector 8 [unity_LightmapFade]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
SetTexture 6 [unity_Lightmap] 2D 6
SetTexture 7 [unity_LightmapInd] 2D 7
"3.0-!!ARBfp1.0
PARAM c[10] = { program.local[0..8],
		{ 0.5, 8, 1, 0.41999999 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEX R0, fragment.texcoord[3], texture[6], 2D;
MUL R1.xyz, R0.w, R0;
TEX R0, fragment.texcoord[3], texture[7], 2D;
MUL R0.xyz, R0.w, R0;
MUL R0.xyz, R0, c[9].y;
DP3 R1.w, fragment.texcoord[1], fragment.texcoord[1];
RSQ R1.w, R1.w;
MUL R2.xyz, R1.w, fragment.texcoord[1];
ADD R0.w, R2.z, c[9];
RCP R1.w, R0.w;
MAD R1.xyz, R1, c[9].y, -R0;
MUL R2.xy, R2, R1.w;
MOV R0.w, c[4].x;
MUL R1.w, R0, c[0].y;
ABS R2.z, R1.w;
FRC R2.z, R2;
CMP R1.w, R1, -R2.z, R2.z;
MOV R0.w, c[9].x;
MAD R0.w, -R0, c[5].x, c[5].x;
MUL R2.xy, R0.w, R2;
DP4 R0.w, fragment.texcoord[4], fragment.texcoord[4];
RSQ R0.w, R0.w;
RCP R0.w, R0.w;
ADD R2.z, fragment.texcoord[0], R1.w;
MOV R2.w, fragment.texcoord[0];
ADD R3.xy, R2.zwzw, R2;
MAD_SAT R0.w, R0, c[8].z, c[8];
MAD R2.xyz, R0.w, R1, R0;
TXP R0, fragment.texcoord[2], texture[5], 2D;
TEX R1.xyz, R3, texture[1], 2D;
ADD R3.xyz, R0, R2;
ADD R0.y, -R1.x, c[9].z;
TEX R0.x, fragment.texcoord[0], texture[4], 2D;
MUL R1.w, R0.x, R0.y;
MUL R1.w, R1, c[1].x;
MUL R1.w, R0, R1;
MUL R0.xyz, R3, c[1];
DP3 R2.x, fragment.texcoord[1], fragment.texcoord[1];
RSQ R0.w, R2.x;
MUL R5.xyz, R0, R1.w;
MUL_SAT R0.w, R0, fragment.texcoord[1].z;
ADD R0.w, -R0, c[9].z;
MOV R0.xyz, c[6];
TEX R2.xyz, fragment.texcoord[0], texture[3], 2D;
POW R2.w, R0.w, c[3].x;
ADD R0.xyz, -R0, c[7];
MAD R4.xyz, R2.w, R0, c[6];
TEX R0, fragment.texcoord[0], texture[0], 2D;
MAD R0.xyz, R4, R2.w, R0;
ADD R0.xyz, R0, R1;
MUL R2.xyz, R2, c[2].x;
MAD R1.xyz, R1.x, -R2, R2;
MAD R0.xyz, R0, R3, R5;
ADD result.color.xyz, R0, R1;
MAD result.color.w, R1, c[1], R0;
END
# 55 instructions, 6 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 51 math, 7 textures
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Vector 0 [_Time]
Vector 1 [_SpecColor]
Float 2 [_LightAmount]
Float 3 [_AtmosFalloff]
Float 4 [_CloudSpeed]
Float 5 [_CloudHeight]
Vector 6 [_AtmosNear]
Vector 7 [_AtmosFar]
Vector 8 [unity_LightmapFade]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
SetTexture 6 [unity_Lightmap] 2D 6
SetTexture 7 [unity_LightmapInd] 2D 7
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s3
dcl_2d s4
dcl_2d s5
dcl_2d s6
dcl_2d s7
def c9, 1.00000000, 0.41999999, -0.50000000, 8.00000000
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2
dcl_texcoord3 v3.xy
dcl_texcoord4 v4
dp3_pp r0.x, v1, v1
rsq_pp r0.x, r0.x
mul_pp r1.xyz, r0.x, v1
add r0.x, r1.z, c9.y
rcp r0.y, r0.x
mov r0.x, c0.y
mul r0.w, c4.x, r0.x
mov_pp r0.x, c9.z
mov_pp r3.xyz, c7
mul r1.xy, r1, r0.y
mad_pp r0.x, r0, c5, c5
mul r0.xy, r0.x, r1
abs r0.z, r0.w
frc r1.x, r0.z
cmp r1.x, r0.w, r1, -r1
dp3 r0.z, v1, v1
rsq r0.w, r0.z
add_pp r0.z, v0, r1.x
mul_sat r1.x, r0.w, v1.z
add r2.z, -r1.x, c9.x
mov_pp r0.w, v0
add_pp r2.xy, r0.zwzw, r0
pow_pp r0, r2.z, c3.x
mov_pp r0.w, r0.x
add_pp r3.xyz, -c6, r3
mad_pp r0.xyz, r0.w, r3, c6
texld r1, v0, s0
mad_pp r1.xyz, r0, r0.w, r1
texld r4.xyz, r2, s1
texld r0, v3, s6
mul_pp r2.xyz, r0.w, r0
texld r0, v3, s7
mul_pp r0.xyz, r0.w, r0
mul_pp r0.xyz, r0, c9.w
dp4 r2.w, v4, v4
rsq r0.w, r2.w
rcp r0.w, r0.w
mad_pp r2.xyz, r2, c9.w, -r0
mad_sat r0.w, r0, c8.z, c8
mad_pp r2.xyz, r0.w, r2, r0
texldp r0, v2, s5
add_pp r2.xyz, r0, r2
add_pp r0.y, -r4.x, c9.x
texld r0.x, v0, s4
mul r0.x, r0, r0.y
mul r2.w, r0.x, c1.x
mul_pp r0.w, r0, r2
mul_pp r3.xyz, r2, c1
texld r0.xyz, v0, s3
mul r0.xyz, r0, c2.x
add_pp r1.xyz, r1, r4
mul_pp r3.xyz, r3, r0.w
mad r0.xyz, r4.x, -r0, r0
mad_pp r1.xyz, r1, r2, r3
add_pp oC0.xyz, r1, r0
mad_pp oC0.w, r0, c1, r1
"
}
SubProgram "d3d11 " {
// Stats: 40 math, 7 textures
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 2
SetTexture 2 [_Emission] 2D 1
SetTexture 3 [_Mask] 2D 3
SetTexture 4 [_LightBuffer] 2D 4
SetTexture 5 [unity_Lightmap] 2D 5
SetTexture 6 [unity_LightmapInd] 2D 6
ConstBuffer "$Globals" 176
Vector 32 [_SpecColor]
Float 48 [_LightAmount]
Float 52 [_AtmosFalloff]
Float 56 [_CloudSpeed]
Float 60 [_CloudHeight]
Vector 68 [_AtmosNear] 3
Vector 80 [_AtmosFar] 3
Vector 144 [unity_LightmapFade]
ConstBuffer "UnityPerCamera" 128
Vector 0 [_Time]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
"ps_4_0
eefiecedkkmafmmhojhegkgklooojiigdijffmjgabaaaaaaieaiaaaaadaaaaaa
cmaaaaaaoeaaaaaabiabaaaaejfdeheolaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakeaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaapalaaaakeaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaadadaaaakeaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapapaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklklfdeieefcgeahaaaa
eaaaaaaanjabaaaafjaaaaaeegiocaaaaaaaaaaaakaaaaaafjaaaaaeegiocaaa
abaaaaaaabaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaa
fkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaa
aeaaaaaafkaaaaadaagabaaaafaaaaaafkaaaaadaagabaaaagaaaaaafibiaaae
aahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaae
aahabaaaacaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaafibiaaae
aahabaaaaeaaaaaaffffaaaafibiaaaeaahabaaaafaaaaaaffffaaaafibiaaae
aahabaaaagaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaadhcbabaaa
acaaaaaagcbaaaadlcbabaaaadaaaaaagcbaaaaddcbabaaaaeaaaaaagcbaaaad
pcbabaaaafaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacafaaaaaadiaaaaaj
bcaabaaaaaaaaaaackiacaaaaaaaaaaaadaaaaaabkiacaaaabaaaaaaaaaaaaaa
bnaaaaaiccaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaa
bkaaaaagbcaabaaaaaaaaaaaakaabaiaibaaaaaaaaaaaaaadhaaaaakbcaabaaa
aaaaaaaabkaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaa
aaaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaackbabaaaabaaaaaabaaaaaah
ecaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaaeeaaaaafecaabaaa
aaaaaaaackaabaaaaaaaaaaadcaaaaajicaabaaaaaaaaaaackbabaaaacaaaaaa
ckaabaaaaaaaaaaaabeaaaaadnaknhdodiaaaaahhcaabaaaabaaaaaakgakbaaa
aaaaaaaacgbjbaaaacaaaaaaaoaaaaahmcaabaaaaaaaaaaafgajbaaaabaaaaaa
pgapbaaaaaaaaaaadgcaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaaaaaaaaai
bcaabaaaabaaaaaaakaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadpcpaaaaaf
bcaabaaaabaaaaaaakaabaaaabaaaaaadiaaaaaibcaabaaaabaaaaaaakaabaaa
abaaaaaabkiacaaaaaaaaaaaadaaaaaabjaaaaafbcaabaaaabaaaaaaakaabaaa
abaaaaaadiaaaaaiccaabaaaabaaaaaadkiacaaaaaaaaaaaadaaaaaaabeaaaaa
aaaaaadpdgaaaaafccaabaaaaaaaaaaadkbabaaaabaaaaaadcaaaaajdcaabaaa
aaaaaaaafgafbaaaabaaaaaaogakbaaaaaaaaaaaegaabaaaaaaaaaaaefaaaaaj
pcaabaaaaaaaaaaaegaabaaaaaaaaaaaeghobaaaabaaaaaaaagabaaaacaaaaaa
aaaaaaakocaabaaaabaaaaaafgiocaiaebaaaaaaaaaaaaaaaeaaaaaaagijcaaa
aaaaaaaaafaaaaaadcaaaaakocaabaaaabaaaaaaagaabaaaabaaaaaafgaobaaa
abaaaaaafgiocaaaaaaaaaaaaeaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaa
abaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaadcaaaaajhcaabaaaabaaaaaa
jgahbaaaabaaaaaaagaabaaaabaaaaaaegacbaaaacaaaaaaaaaaaaahhcaabaaa
abaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaaaaaaaaaiicaabaaaaaaaaaaa
akaabaiaebaaaaaaaaaaaaaaabeaaaaaaaaaiadpefaaaaajpcaabaaaadaaaaaa
egbabaaaabaaaaaaeghobaaaadaaaaaaaagabaaaadaaaaaadiaaaaahicaabaaa
aaaaaaaadkaabaaaaaaaaaaaakaabaaaadaaaaaadiaaaaaiicaabaaaaaaaaaaa
dkaabaaaaaaaaaaaakiacaaaaaaaaaaaacaaaaaaaoaaaaahdcaabaaaacaaaaaa
egbabaaaadaaaaaapgbpbaaaadaaaaaaefaaaaajpcaabaaaadaaaaaaegaabaaa
acaaaaaaeghobaaaaeaaaaaaaagabaaaaeaaaaaadiaaaaahicaabaaaaaaaaaaa
dkaabaaaaaaaaaaadkaabaaaadaaaaaabbaaaaahicaabaaaabaaaaaaegbobaaa
afaaaaaaegbobaaaafaaaaaaelaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaa
dccaaaalicaabaaaabaaaaaadkaabaaaabaaaaaackiacaaaaaaaaaaaajaaaaaa
dkiacaaaaaaaaaaaajaaaaaaefaaaaajpcaabaaaaeaaaaaaegbabaaaaeaaaaaa
eghobaaaagaaaaaaaagabaaaagaaaaaadiaaaaahbcaabaaaacaaaaaadkaabaaa
aeaaaaaaabeaaaaaaaaaaaebdiaaaaahhcaabaaaacaaaaaaegacbaaaaeaaaaaa
agaabaaaacaaaaaaefaaaaajpcaabaaaaeaaaaaaegbabaaaaeaaaaaaeghobaaa
afaaaaaaaagabaaaafaaaaaadiaaaaahicaabaaaadaaaaaadkaabaaaaeaaaaaa
abeaaaaaaaaaaaebdcaaaaakhcaabaaaaeaaaaaapgapbaaaadaaaaaaegacbaaa
aeaaaaaaegacbaiaebaaaaaaacaaaaaadcaaaaajhcaabaaaacaaaaaapgapbaaa
abaaaaaaegacbaaaaeaaaaaaegacbaaaacaaaaaaaaaaaaahhcaabaaaacaaaaaa
egacbaaaacaaaaaaegacbaaaadaaaaaadiaaaaaihcaabaaaadaaaaaaegacbaaa
acaaaaaaegiccaaaaaaaaaaaacaaaaaadiaaaaahhcaabaaaadaaaaaapgapbaaa
aaaaaaaaegacbaaaadaaaaaadcaaaaakiccabaaaaaaaaaaadkaabaaaaaaaaaaa
dkiacaaaaaaaaaaaacaaaaaadkaabaaaacaaaaaadcaaaaajhcaabaaaabaaaaaa
egacbaaaabaaaaaaegacbaaaacaaaaaaegacbaaaadaaaaaaefaaaaajpcaabaaa
acaaaaaaegbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaaabaaaaaadiaaaaai
hcaabaaaacaaaaaaegacbaaaacaaaaaaagiacaaaaaaaaaaaadaaaaaadcaaaaak
hcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaiaebaaaaaaacaaaaaaegacbaaa
acaaaaaaaaaaaaahhccabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaa
doaaaaab"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 79 math, 8 textures
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
Vector 0 [_Time]
Vector 1 [_SpecColor]
Float 2 [_LightAmount]
Float 3 [_AtmosFalloff]
Float 4 [_CloudSpeed]
Float 5 [_CloudHeight]
Float 6 [_Shininess]
Vector 7 [_AtmosNear]
Vector 8 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
SetTexture 6 [unity_Lightmap] 2D 6
SetTexture 7 [unity_LightmapInd] 2D 7
"3.0-!!ARBfp1.0
PARAM c[13] = { program.local[0..8],
		{ 1, 0.5, 0.41999999, 2 },
		{ 0, 1, 0.81649655, 0.57735026 },
		{ -0.40824828, -0.70710677, 0.57735026, 8 },
		{ -0.40824831, 0.70710677, 0.57735026, 128 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
DP3 R0.x, fragment.texcoord[1], fragment.texcoord[1];
RSQ R0.w, R0.x;
MUL R0.xyz, R0.w, fragment.texcoord[1];
TEX R1, fragment.texcoord[3], texture[7], 2D;
MUL R1.xyz, R1.w, R1;
MUL R3.xyz, R1, c[11].w;
MUL R1.xyz, R3.y, c[12];
MAD R4.xyz, R3.x, c[10].zxww, R1;
MAD R4.xyz, R3.z, c[11], R4;
TEX R2.yw, fragment.texcoord[0], texture[2], 2D;
DP3 R1.w, R4, R4;
RSQ R1.w, R1.w;
ADD R0.z, R0, c[9];
RCP R0.z, R0.z;
MUL R1.xy, R0, R0.z;
MOV R0.x, c[9].y;
MAD R0.x, -R0, c[5], c[5];
MOV R0.z, c[4].x;
MAD R2.xy, R2.wyzw, c[9].w, -c[9].x;
MUL R1.xy, R0.x, R1;
MUL R0.xy, R2, R2;
ADD_SAT R0.y, R0.x, R0;
MUL R0.z, R0, c[0].y;
ABS R0.x, R0.z;
ADD R0.y, -R0, c[9].x;
RSQ R0.y, R0.y;
RCP R2.z, R0.y;
FRC R0.x, R0;
CMP R0.x, R0.z, -R0, R0;
MUL R4.xyz, R1.w, R4;
ADD R0.x, fragment.texcoord[0].z, R0;
MOV R0.y, fragment.texcoord[0].w;
ADD R1.xy, R0, R1;
ADD R0.xyz, -R2, c[10].xxyw;
TEX R1.xyz, R1, texture[1], 2D;
MAD R0.xyz, R1, R0, R2;
DP3_SAT R2.z, R0, c[11];
DP3_SAT R2.y, R0, c[12];
DP3_SAT R2.x, R0, c[10].zxww;
DP3 R1.w, R2, R3;
MAD R3.xyz, fragment.texcoord[1], R0.w, R4;
TEX R2, fragment.texcoord[3], texture[6], 2D;
DP3 R0.w, R3, R3;
MUL R2.xyz, R2.w, R2;
MUL R2.xyz, R2, R1.w;
RSQ R0.w, R0.w;
MUL R3.xyz, R0.w, R3;
DP3 R0.x, R0, R3;
MOV R0.w, c[12];
TEX R3.xyz, fragment.texcoord[0], texture[3], 2D;
MUL R0.y, R0.w, c[6].x;
MAX R0.x, R0, c[10];
POW R2.w, R0.x, R0.y;
TXP R0, fragment.texcoord[2], texture[5], 2D;
MUL R2.xyz, R2, c[11].w;
ADD R2, R0, R2;
ADD R0.y, -R1.x, c[9].x;
TEX R0.x, fragment.texcoord[0], texture[4], 2D;
MUL R0.w, R0.x, R0.y;
MUL R1.w, R0, c[1].x;
DP3 R0.w, fragment.texcoord[1], fragment.texcoord[1];
RSQ R0.w, R0.w;
MUL_SAT R0.w, R0, fragment.texcoord[1].z;
MUL R1.w, R2, R1;
MUL R0.xyz, R2, c[1];
MUL R5.xyz, R0, R1.w;
ADD R0.w, -R0, c[9].x;
MOV R0.xyz, c[7];
POW R2.w, R0.w, c[3].x;
ADD R0.xyz, -R0, c[8];
MAD R4.xyz, R2.w, R0, c[7];
TEX R0, fragment.texcoord[0], texture[0], 2D;
MAD R0.xyz, R4, R2.w, R0;
ADD R0.xyz, R0, R1;
MUL R3.xyz, R3, c[2].x;
MAD R1.xyz, R1.x, -R3, R3;
MAD R0.xyz, R0, R2, R5;
ADD result.color.xyz, R0, R1;
MAD result.color.w, R1, c[1], R0;
END
# 79 instructions, 6 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 77 math, 8 textures
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
Vector 0 [_Time]
Vector 1 [_SpecColor]
Float 2 [_LightAmount]
Float 3 [_AtmosFalloff]
Float 4 [_CloudSpeed]
Float 5 [_CloudHeight]
Float 6 [_Shininess]
Vector 7 [_AtmosNear]
Vector 8 [_AtmosFar]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
SetTexture 6 [unity_Lightmap] 2D 6
SetTexture 7 [unity_LightmapInd] 2D 7
"ps_3_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s3
dcl_2d s4
dcl_2d s5
dcl_2d s6
dcl_2d s7
def c9, 1.00000000, -0.50000000, 0.41999999, 0.00000000
def c10, 2.00000000, -1.00000000, 8.00000000, 128.00000000
def c11, -0.40824828, -0.70710677, 0.57735026, 0
def c12, -0.40824831, 0.70710677, 0.57735026, 0
def c13, 0.81649655, 0.00000000, 0.57735026, 0
dcl_texcoord0 v0
dcl_texcoord1 v1.xyz
dcl_texcoord2 v2
dcl_texcoord3 v3.xy
texld r0, v3, s7
mul_pp r0.xyz, r0.w, r0
mul_pp r2.xyz, r0, c10.z
mul r0.xyz, r2.y, c12
mad r0.xyz, r2.x, c13, r0
mad r1.xyz, r2.z, c11, r0
dp3 r0.y, r1, r1
rsq r0.y, r0.y
dp3_pp r0.x, v1, v1
mov r2.w, c0.y
mul r3.xyz, r0.y, r1
rsq_pp r0.x, r0.x
mul_pp r1.xyz, r0.x, v1
mad_pp r0.xyz, v1, r0.x, r3
add r0.w, r1.z, c9.z
texld r3.yw, v0, s2
mad_pp r3.xy, r3.wyzw, c10.x, c10.y
dp3_pp r1.w, r0, r0
rcp r1.z, r0.w
rsq_pp r0.w, r1.w
mul_pp r0.xyz, r0.w, r0
mul r1.zw, r1.xyxy, r1.z
mov_pp r1.x, c9.y
mad_pp r1.x, r1, c5, c5
mul r1.zw, r1.x, r1
mul_pp r1.xy, r3, r3
add_pp_sat r1.y, r1.x, r1
mul r2.w, c4.x, r2
abs r1.x, r2.w
add_pp r1.y, -r1, c9.x
rsq_pp r1.y, r1.y
rcp_pp r3.z, r1.y
frc r1.x, r1
cmp r1.x, r2.w, r1, -r1
mov_pp r0.w, c6.x
add_pp r4.xyz, -r3, c9.wwxw
mul_pp r2.w, c10, r0
add_pp r1.x, v0.z, r1
mov_pp r1.y, v0.w
add_pp r1.xy, r1, r1.zwzw
texld r1.xyz, r1, s1
mad_pp r3.xyz, r1, r4, r3
dp3_pp r0.x, r3, r0
max_pp r1.w, r0.x, c9
pow r0, r1.w, r2.w
dp3_pp_sat r0.z, r3, c11
dp3_pp_sat r0.y, r3, c12
dp3_pp_sat r0.x, r3, c13
dp3_pp r1.w, r0, r2
texld r3, v3, s6
mul_pp r0.xyz, r3.w, r3
mul_pp r0.xyz, r0, r1.w
mul_pp r2.xyz, r0, c10.z
mov r2.w, r0
texldp r0, v2, s5
add_pp r2, r0, r2
dp3 r0.w, v1, v1
rsq r0.w, r0.w
mul_pp r0.xyz, r2, c1
add_pp r1.w, -r1.x, c9.x
texld r3.x, v0, s4
mul r1.w, r3.x, r1
mul r1.w, r1, c1.x
mul_pp r1.w, r2, r1
mul_sat r0.w, r0, v1.z
mov_pp r3.xyz, c8
add r2.w, -r0, c9.x
mul_pp r5.xyz, r0, r1.w
pow_pp r0, r2.w, c3.x
mov_pp r2.w, r0.x
add_pp r3.xyz, -c7, r3
mad_pp r4.xyz, r2.w, r3, c7
texld r0, v0, s0
texld r3.xyz, v0, s3
mad_pp r0.xyz, r4, r2.w, r0
add_pp r0.xyz, r0, r1
mul r3.xyz, r3, c2.x
mad r1.xyz, r1.x, -r3, r3
mad_pp r0.xyz, r0, r2, r5
add_pp oC0.xyz, r0, r1
mad_pp oC0.w, r1, c1, r0
"
}
SubProgram "d3d11 " {
// Stats: 63 math, 8 textures
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 3
SetTexture 2 [_BumpMap] 2D 1
SetTexture 3 [_Emission] 2D 2
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
SetTexture 6 [unity_Lightmap] 2D 6
SetTexture 7 [unity_LightmapInd] 2D 7
ConstBuffer "$Globals" 176
Vector 32 [_SpecColor]
Float 48 [_LightAmount]
Float 52 [_AtmosFalloff]
Float 56 [_CloudSpeed]
Float 60 [_CloudHeight]
Float 64 [_Shininess]
Vector 68 [_AtmosNear] 3
Vector 80 [_AtmosFar] 3
ConstBuffer "UnityPerCamera" 128
Vector 0 [_Time]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
"ps_4_0
eefiecedggkbnngahkdkhcfocjpjoonccklhdedfabaaaaaaiaalaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaapalaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaadadaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefchiakaaaaeaaaaaaajoacaaaafjaaaaaeegiocaaaaaaaaaaaagaaaaaa
fjaaaaaeegiocaaaabaaaaaaabaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaad
aagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaa
fkaaaaadaagabaaaaeaaaaaafkaaaaadaagabaaaafaaaaaafkaaaaadaagabaaa
agaaaaaafkaaaaadaagabaaaahaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaa
fibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaa
fibiaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaa
fibiaaaeaahabaaaafaaaaaaffffaaaafibiaaaeaahabaaaagaaaaaaffffaaaa
fibiaaaeaahabaaaahaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaad
hcbabaaaacaaaaaagcbaaaadlcbabaaaadaaaaaagcbaaaaddcbabaaaaeaaaaaa
gfaaaaadpccabaaaaaaaaaaagiaaaaacagaaaaaaefaaaaajpcaabaaaaaaaaaaa
egbabaaaaeaaaaaaeghobaaaahaaaaaaaagabaaaahaaaaaadiaaaaahicaabaaa
aaaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaaaebdiaaaaahhcaabaaaaaaaaaaa
egacbaaaaaaaaaaapgapbaaaaaaaaaaadiaaaaakhcaabaaaabaaaaaafgafbaaa
aaaaaaaaaceaaaaaomafnblopdaedfdpdkmnbddpaaaaaaaadcaaaaamhcaabaaa
abaaaaaaagaabaaaaaaaaaaaaceaaaaaolaffbdpaaaaaaaadkmnbddpaaaaaaaa
egacbaaaabaaaaaadcaaaaamhcaabaaaabaaaaaakgakbaaaaaaaaaaaaceaaaaa
olafnblopdaedflpdkmnbddpaaaaaaaaegacbaaaabaaaaaabaaaaaahicaabaaa
aaaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaaaaaaaaa
dkaabaaaaaaaaaaabaaaaaahicaabaaaabaaaaaaegbcbaaaacaaaaaaegbcbaaa
acaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahpcaabaaa
acaaaaaapgapbaaaabaaaaaacgbjbaaaacaaaaaadcaaaaajicaabaaaabaaaaaa
ckbabaaaacaaaaaadkaabaaaabaaaaaaabeaaaaadnaknhdoaoaaaaahdcaabaaa
adaaaaaajgafbaaaacaaaaaapgapbaaaabaaaaaadcaaaaajhcaabaaaabaaaaaa
egacbaaaabaaaaaapgapbaaaaaaaaaaajgahbaaaacaaaaaadgcaaaafbcaabaaa
acaaaaaaakaabaaaacaaaaaaaaaaaaaiicaabaaaaaaaaaaaakaabaiaebaaaaaa
acaaaaaaabeaaaaaaaaaiadpcpaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaa
diaaaaaiicaabaaaaaaaaaaadkaabaaaaaaaaaaabkiacaaaaaaaaaaaadaaaaaa
bjaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaabaaaaaahicaabaaaabaaaaaa
egacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaa
abaaaaaadiaaaaahhcaabaaaabaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaa
diaaaaajicaabaaaabaaaaaackiacaaaaaaaaaaaadaaaaaabkiacaaaabaaaaaa
aaaaaaaabnaaaaaibcaabaaaacaaaaaadkaabaaaabaaaaaadkaabaiaebaaaaaa
abaaaaaabkaaaaagicaabaaaabaaaaaadkaabaiaibaaaaaaabaaaaaadhaaaaak
icaabaaaabaaaaaaakaabaaaacaaaaaadkaabaaaabaaaaaadkaabaiaebaaaaaa
abaaaaaaaaaaaaahbcaabaaaacaaaaaadkaabaaaabaaaaaackbabaaaabaaaaaa
diaaaaaiicaabaaaabaaaaaadkiacaaaaaaaaaaaadaaaaaaabeaaaaaaaaaaadp
dgaaaaafccaabaaaacaaaaaadkbabaaaabaaaaaadcaaaaajdcaabaaaacaaaaaa
pgapbaaaabaaaaaaegaabaaaadaaaaaaegaabaaaacaaaaaaefaaaaajpcaabaaa
acaaaaaaegaabaaaacaaaaaaeghobaaaabaaaaaaaagabaaaadaaaaaaefaaaaaj
pcaabaaaadaaaaaaegbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaaabaaaaaa
dcaaaaapdcaabaaaadaaaaaahgapbaaaadaaaaaaaceaaaaaaaaaaaeaaaaaaaea
aaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaaapaaaaah
icaabaaaabaaaaaaegaabaaaadaaaaaaegaabaaaadaaaaaaddaaaaahicaabaaa
abaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaiadpaaaaaaaiicaabaaaabaaaaaa
dkaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaaadaaaaaa
dkaabaaaabaaaaaaaaaaaaalhcaabaaaaeaaaaaaegacbaiaebaaaaaaadaaaaaa
aceaaaaaaaaaaaaaaaaaaaaaaaaaiadpaaaaaaaadcaaaaajhcaabaaaadaaaaaa
egacbaaaacaaaaaaegacbaaaaeaaaaaaegacbaaaadaaaaaabaaaaaahbcaabaaa
abaaaaaaegacbaaaadaaaaaaegacbaaaabaaaaaadeaaaaahbcaabaaaabaaaaaa
akaabaaaabaaaaaaabeaaaaaaaaaaaaacpaaaaafbcaabaaaabaaaaaaakaabaaa
abaaaaaadiaaaaaiccaabaaaabaaaaaaakiacaaaaaaaaaaaaeaaaaaaabeaaaaa
aaaaaaeddiaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaabkaabaaaabaaaaaa
bjaaaaaficaabaaaabaaaaaaakaabaaaabaaaaaaapcaaaakbcaabaaaaeaaaaaa
aceaaaaaolaffbdpdkmnbddpaaaaaaaaaaaaaaaaigaabaaaadaaaaaabacaaaak
ccaabaaaaeaaaaaaaceaaaaaomafnblopdaedfdpdkmnbddpaaaaaaaaegacbaaa
adaaaaaabacaaaakecaabaaaaeaaaaaaaceaaaaaolafnblopdaedflpdkmnbddp
aaaaaaaaegacbaaaadaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaaaeaaaaaa
egacbaaaaaaaaaaaefaaaaajpcaabaaaadaaaaaaegbabaaaaeaaaaaaeghobaaa
agaaaaaaaagabaaaagaaaaaadiaaaaahccaabaaaaaaaaaaadkaabaaaadaaaaaa
abeaaaaaaaaaaaebdiaaaaahhcaabaaaadaaaaaaegacbaaaadaaaaaafgafbaaa
aaaaaaaadiaaaaahhcaabaaaabaaaaaaagaabaaaaaaaaaaaegacbaaaadaaaaaa
aoaaaaahdcaabaaaaaaaaaaaegbabaaaadaaaaaapgbpbaaaadaaaaaaefaaaaaj
pcaabaaaadaaaaaaegaabaaaaaaaaaaaeghobaaaafaaaaaaaagabaaaafaaaaaa
aaaaaaahpcaabaaaabaaaaaaegaobaaaabaaaaaaegaobaaaadaaaaaaaaaaaaai
bcaabaaaaaaaaaaaakaabaiaebaaaaaaacaaaaaaabeaaaaaaaaaiadpefaaaaaj
pcaabaaaadaaaaaaegbabaaaabaaaaaaeghobaaaaeaaaaaaaagabaaaaeaaaaaa
diaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaaaadaaaaaadiaaaaai
bcaabaaaaaaaaaaaakaabaaaaaaaaaaaakiacaaaaaaaaaaaacaaaaaadiaaaaah
bcaabaaaaaaaaaaaakaabaaaaaaaaaaadkaabaaaabaaaaaadiaaaaaihcaabaaa
adaaaaaaegacbaaaabaaaaaaegiccaaaaaaaaaaaacaaaaaadiaaaaahhcaabaaa
adaaaaaaagaabaaaaaaaaaaaegacbaaaadaaaaaaaaaaaaakhcaabaaaaeaaaaaa
jgihcaiaebaaaaaaaaaaaaaaaeaaaaaaegiccaaaaaaaaaaaafaaaaaadcaaaaak
hcaabaaaaeaaaaaapgapbaaaaaaaaaaaegacbaaaaeaaaaaajgihcaaaaaaaaaaa
aeaaaaaaefaaaaajpcaabaaaafaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaa
aagabaaaaaaaaaaadcaaaaajocaabaaaaaaaaaaaagajbaaaaeaaaaaapgapbaaa
aaaaaaaaagajbaaaafaaaaaadcaaaaakiccabaaaaaaaaaaaakaabaaaaaaaaaaa
dkiacaaaaaaaaaaaacaaaaaadkaabaaaafaaaaaaaaaaaaahhcaabaaaaaaaaaaa
egacbaaaacaaaaaajgahbaaaaaaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaaegacbaaaadaaaaaaefaaaaajpcaabaaaabaaaaaa
egbabaaaabaaaaaaeghobaaaadaaaaaaaagabaaaacaaaaaadiaaaaaihcaabaaa
abaaaaaaegacbaaaabaaaaaaagiacaaaaaaaaaaaadaaaaaadcaaaaakhcaabaaa
abaaaaaaegacbaaaacaaaaaaegacbaiaebaaaaaaabaaaaaaegacbaaaabaaaaaa
aaaaaaahhccabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadoaaaaab
"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
"!!GLES3"
}
}
 }
}
SubShader { 
 LOD 200
 Tags { "RenderType"="Opaque" }


 // Stats for Vertex shader:
 //       d3d11 : 33 avg math (7..66)
 //    d3d11_9x : 33 avg math (7..66)
 //        d3d9 : 40 avg math (7..83)
 //      opengl : 39 avg math (7..80)
 // Stats for Fragment shader:
 //       d3d11 : 31 avg math (6..51), 5 avg texture (4..8)
 //    d3d11_9x : 31 avg math (6..51), 5 avg texture (4..8)
 //        d3d9 : 40 avg math (11..61), 5 avg texture (4..8)
 //      opengl : 38 avg math (11..59), 5 avg texture (4..8)
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="ForwardBase" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
Program "vp" {
SubProgram "opengl " {
// Stats: 44 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Vector 13 [_WorldSpaceCameraPos]
Vector 14 [_WorldSpaceLightPos0]
Vector 15 [unity_SHAr]
Vector 16 [unity_SHAg]
Vector 17 [unity_SHAb]
Vector 18 [unity_SHBr]
Vector 19 [unity_SHBg]
Vector 20 [unity_SHBb]
Vector 21 [unity_SHC]
Vector 22 [unity_Scale]
Vector 23 [_MainTex_ST]
Vector 24 [_Clouds_ST]
"!!ARBvp1.0
PARAM c[25] = { { 1 },
		state.matrix.mvp,
		program.local[5..24] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R1.xyz, vertex.normal, c[22].w;
DP3 R2.w, R1, c[6];
DP3 R0.x, R1, c[5];
DP3 R0.z, R1, c[7];
MOV R0.y, R2.w;
MOV R0.w, c[0].x;
MUL R1, R0.xyzz, R0.yzzx;
DP4 R2.z, R0, c[17];
DP4 R2.y, R0, c[16];
DP4 R2.x, R0, c[15];
MUL R0.w, R2, R2;
MAD R0.w, R0.x, R0.x, -R0;
DP4 R0.z, R1, c[20];
DP4 R0.y, R1, c[19];
DP4 R0.x, R1, c[18];
ADD R0.xyz, R2, R0;
MUL R1.xyz, R0.w, c[21];
ADD result.texcoord[2].xyz, R0, R1;
MOV R1.xyz, c[13];
MOV R1.w, c[0].x;
MOV R0.xyz, vertex.attrib[14];
DP4 R2.z, R1, c[11];
DP4 R2.y, R1, c[10];
DP4 R2.x, R1, c[9];
MAD R2.xyz, R2, c[22].w, -vertex.position;
MUL R1.xyz, vertex.normal.zxyw, R0.yzxw;
MAD R1.xyz, vertex.normal.yzxw, R0.zxyw, -R1;
MOV R0, c[14];
MUL R1.xyz, R1, vertex.attrib[14].w;
DP4 R3.z, R0, c[11];
DP4 R3.y, R0, c[10];
DP4 R3.x, R0, c[9];
DP3 result.texcoord[1].y, R3, R1;
DP3 result.texcoord[3].y, R1, R2;
DP3 result.texcoord[1].z, vertex.normal, R3;
DP3 result.texcoord[1].x, R3, vertex.attrib[14];
DP3 result.texcoord[3].z, vertex.normal, R2;
DP3 result.texcoord[3].x, vertex.attrib[14], R2;
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[24].xyxy, c[24];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[23], c[23].zwzw;
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 44 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 47 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 12 [_WorldSpaceCameraPos]
Vector 13 [_WorldSpaceLightPos0]
Vector 14 [unity_SHAr]
Vector 15 [unity_SHAg]
Vector 16 [unity_SHAb]
Vector 17 [unity_SHBr]
Vector 18 [unity_SHBg]
Vector 19 [unity_SHBb]
Vector 20 [unity_SHC]
Vector 21 [unity_Scale]
Vector 22 [_MainTex_ST]
Vector 23 [_Clouds_ST]
"vs_2_0
def c24, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mul r1.xyz, v2, c21.w
dp3 r2.w, r1, c5
dp3 r0.x, r1, c4
dp3 r0.z, r1, c6
mov r0.y, r2.w
mov r0.w, c24.x
mul r1, r0.xyzz, r0.yzzx
dp4 r2.z, r0, c16
dp4 r2.y, r0, c15
dp4 r2.x, r0, c14
mul r0.w, r2, r2
mad r0.w, r0.x, r0.x, -r0
dp4 r0.z, r1, c19
dp4 r0.y, r1, c18
dp4 r0.x, r1, c17
mul r1.xyz, r0.w, c20
add r0.xyz, r2, r0
add oT2.xyz, r0, r1
mov r0.w, c24.x
mov r0.xyz, c12
dp4 r1.z, r0, c10
dp4 r1.y, r0, c9
dp4 r1.x, r0, c8
mad r3.xyz, r1, c21.w, -v0
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r1.xyz, v2.yzxw, r0.zxyw, -r1
mul r2.xyz, r1, v1.w
mov r0, c10
dp4 r4.z, c13, r0
mov r0, c9
mov r1, c8
dp4 r4.y, c13, r0
dp4 r4.x, c13, r1
dp3 oT1.y, r4, r2
dp3 oT3.y, r2, r3
dp3 oT1.z, v2, r4
dp3 oT1.x, r4, v1
dp3 oT3.z, v2, r3
dp3 oT3.x, v1, r3
mad oT0.zw, v3.xyxy, c23.xyxy, c23
mad oT0.xy, v3, c22, c22.zwzw
dp4 oPos.w, v0, c3
dp4 oPos.z, v0, c2
dp4 oPos.y, v0, c1
dp4 oPos.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 39 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 128
Vector 96 [_MainTex_ST]
Vector 112 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0
eefiecedjglmdijeianahpkdmiokcfaicehogonlabaaaaaanaahaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcdeagaaaaeaaaabaa
inabaaaafjaaaaaeegiocaaaaaaaaaaaaiaaaaaafjaaaaaeegiocaaaabaaaaaa
afaaaaaafjaaaaaeegiocaaaacaaaaaacnaaaaaafjaaaaaeegiocaaaadaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaad
hcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaad
hccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaagiaaaaacafaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaa
egbabaaaadaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaa
dcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaahaaaaaa
kgiocaaaaaaaaaaaahaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaa
cgbjbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaa
abaaaaaaegacbaiaebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaa
aaaaaaaapgbpbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaacaaaaaa
aaaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
adaaaaaabaaaaaaaagiacaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaal
hcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabdaaaaaa
pgipcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahcccabaaaacaaaaaa
egacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaa
abaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaa
egacbaaaabaaaaaadiaaaaaihcaabaaaabaaaaaaegbcbaaaacaaaaaapgipcaaa
adaaaaaabeaaaaaadiaaaaaihcaabaaaacaaaaaafgafbaaaabaaaaaaegiccaaa
adaaaaaaanaaaaaadcaaaaaklcaabaaaabaaaaaaegiicaaaadaaaaaaamaaaaaa
agaabaaaabaaaaaaegaibaaaacaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaa
adaaaaaaaoaaaaaakgakbaaaabaaaaaaegadbaaaabaaaaaadgaaaaaficaabaaa
abaaaaaaabeaaaaaaaaaiadpbbaaaaaibcaabaaaacaaaaaaegiocaaaacaaaaaa
cgaaaaaaegaobaaaabaaaaaabbaaaaaiccaabaaaacaaaaaaegiocaaaacaaaaaa
chaaaaaaegaobaaaabaaaaaabbaaaaaiecaabaaaacaaaaaaegiocaaaacaaaaaa
ciaaaaaaegaobaaaabaaaaaadiaaaaahpcaabaaaadaaaaaajgacbaaaabaaaaaa
egakbaaaabaaaaaabbaaaaaibcaabaaaaeaaaaaaegiocaaaacaaaaaacjaaaaaa
egaobaaaadaaaaaabbaaaaaiccaabaaaaeaaaaaaegiocaaaacaaaaaackaaaaaa
egaobaaaadaaaaaabbaaaaaiecaabaaaaeaaaaaaegiocaaaacaaaaaaclaaaaaa
egaobaaaadaaaaaaaaaaaaahhcaabaaaacaaaaaaegacbaaaacaaaaaaegacbaaa
aeaaaaaadiaaaaahicaabaaaaaaaaaaabkaabaaaabaaaaaabkaabaaaabaaaaaa
dcaaaaakicaabaaaaaaaaaaaakaabaaaabaaaaaaakaabaaaabaaaaaadkaabaia
ebaaaaaaaaaaaaaadcaaaaakhccabaaaadaaaaaaegiccaaaacaaaaaacmaaaaaa
pgapbaaaaaaaaaaaegacbaaaacaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaa
abaaaaaaaeaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaa
egiccaaaadaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaa
dcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaabaaaaaa
aeaaaaaaegacbaaaabaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaa
egiccaaaadaaaaaabdaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaa
pgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaa
aeaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaaaeaaaaaa
egbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaaaeaaaaaaegbcbaaa
acaaaaaaegacbaaaabaaaaaadoaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 39 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 128
Vector 96 [_MainTex_ST]
Vector 112 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0_level_9_1
eefiecedfiogmdakllbmdjcepmopnidfcmenfpdbabaaaaaakialaaaaaeaaaaaa
daaaaaaaaeaeaaaaeaakaaaaaialaaaaebgpgodjmmadaaaammadaaaaaaacpopp
faadaaaahmaaaaaaahaaceaaaaaahiaaaaaahiaaaaaaceaaabaahiaaaaaaagaa
acaaabaaaaaaaaaaabaaaeaaabaaadaaaaaaaaaaacaaaaaaabaaaeaaaaaaaaaa
acaacgaaahaaafaaaaaaaaaaadaaaaaaaeaaamaaaaaaaaaaadaaamaaadaabaaa
aaaaaaaaadaabaaaafaabdaaaaaaaaaaaaaaaaaaaaacpoppfbaaaaafbiaaapka
aaaaiadpaaaaaaaaaaaaaaaaaaaaaaaabpaaaaacafaaaaiaaaaaapjabpaaaaac
afaaabiaabaaapjabpaaaaacafaaaciaacaaapjabpaaaaacafaaadiaadaaapja
aeaaaaaeaaaaadoaadaaoejaabaaoekaabaaookaaeaaaaaeaaaaamoaadaaeeja
acaaeekaacaaoekaabaaaaacaaaaapiaaeaaoekaafaaaaadabaaahiaaaaaffia
beaaoekaaeaaaaaeabaaahiabdaaoekaaaaaaaiaabaaoeiaaeaaaaaeaaaaahia
bfaaoekaaaaakkiaabaaoeiaaeaaaaaeaaaaahiabgaaoekaaaaappiaaaaaoeia
aiaaaaadabaaaboaabaaoejaaaaaoeiaabaaaaacabaaahiaacaaoejaafaaaaad
acaaahiaabaanciaabaamjjaaeaaaaaeabaaahiaabaamjiaabaancjaacaaoeib
afaaaaadabaaahiaabaaoeiaabaappjaaiaaaaadabaaacoaabaaoeiaaaaaoeia
aiaaaaadabaaaeoaacaaoejaaaaaoeiaabaaaaacaaaaahiaadaaoekaafaaaaad
acaaahiaaaaaffiabeaaoekaaeaaaaaeaaaaaliabdaakekaaaaaaaiaacaakeia
aeaaaaaeaaaaahiabfaaoekaaaaakkiaaaaapeiaacaaaaadaaaaahiaaaaaoeia
bgaaoekaaeaaaaaeaaaaahiaaaaaoeiabhaappkaaaaaoejbaiaaaaadadaaaboa
abaaoejaaaaaoeiaaiaaaaadadaaacoaabaaoeiaaaaaoeiaaiaaaaadadaaaeoa
acaaoejaaaaaoeiaafaaaaadaaaaahiaacaaoejabhaappkaafaaaaadabaaahia
aaaaffiabbaaoekaaeaaaaaeaaaaaliabaaakekaaaaaaaiaabaakeiaaeaaaaae
aaaaahiabcaaoekaaaaakkiaaaaapeiaabaaaaacaaaaaiiabiaaaakaajaaaaad
abaaabiaafaaoekaaaaaoeiaajaaaaadabaaaciaagaaoekaaaaaoeiaajaaaaad
abaaaeiaahaaoekaaaaaoeiaafaaaaadacaaapiaaaaacjiaaaaakeiaajaaaaad
adaaabiaaiaaoekaacaaoeiaajaaaaadadaaaciaajaaoekaacaaoeiaajaaaaad
adaaaeiaakaaoekaacaaoeiaacaaaaadabaaahiaabaaoeiaadaaoeiaafaaaaad
aaaaaciaaaaaffiaaaaaffiaaeaaaaaeaaaaabiaaaaaaaiaaaaaaaiaaaaaffib
aeaaaaaeacaaahoaalaaoekaaaaaaaiaabaaoeiaafaaaaadaaaaapiaaaaaffja
anaaoekaaeaaaaaeaaaaapiaamaaoekaaaaaaajaaaaaoeiaaeaaaaaeaaaaapia
aoaaoekaaaaakkjaaaaaoeiaaeaaaaaeaaaaapiaapaaoekaaaaappjaaaaaoeia
aeaaaaaeaaaaadmaaaaappiaaaaaoekaaaaaoeiaabaaaaacaaaaammaaaaaoeia
ppppaaaafdeieefcdeagaaaaeaaaabaainabaaaafjaaaaaeegiocaaaaaaaaaaa
aiaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaafjaaaaaeegiocaaaacaaaaaa
cnaaaaaafjaaaaaeegiocaaaadaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaa
fpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaa
adaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaadpccabaaaabaaaaaa
gfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaagfaaaaadhccabaaa
aeaaaaaagiaaaaacafaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaa
egiocaaaadaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaa
aaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaa
egiocaaaadaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaak
pccabaaaaaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaa
agaaaaaaogikcaaaaaaaaaaaagaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaa
adaaaaaaagiecaaaaaaaaaaaahaaaaaakgiocaaaaaaaaaaaahaaaaaadiaaaaah
hcaabaaaaaaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaadcaaaaakhcaabaaa
aaaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaiaebaaaaaaaaaaaaaa
diaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaapgbpbaaaabaaaaaadiaaaaaj
hcaabaaaabaaaaaafgifcaaaacaaaaaaaaaaaaaaegiccaaaadaaaaaabbaaaaaa
dcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaaacaaaaaa
aaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaa
bcaaaaaakgikcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaa
abaaaaaaegiccaaaadaaaaaabdaaaaaapgipcaaaacaaaaaaaaaaaaaaegacbaaa
abaaaaaabaaaaaahcccabaaaacaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaa
baaaaaahbccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaah
eccabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaa
abaaaaaaegbcbaaaacaaaaaapgipcaaaadaaaaaabeaaaaaadiaaaaaihcaabaaa
acaaaaaafgafbaaaabaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaaklcaabaaa
abaaaaaaegiicaaaadaaaaaaamaaaaaaagaabaaaabaaaaaaegaibaaaacaaaaaa
dcaaaaakhcaabaaaabaaaaaaegiccaaaadaaaaaaaoaaaaaakgakbaaaabaaaaaa
egadbaaaabaaaaaadgaaaaaficaabaaaabaaaaaaabeaaaaaaaaaiadpbbaaaaai
bcaabaaaacaaaaaaegiocaaaacaaaaaacgaaaaaaegaobaaaabaaaaaabbaaaaai
ccaabaaaacaaaaaaegiocaaaacaaaaaachaaaaaaegaobaaaabaaaaaabbaaaaai
ecaabaaaacaaaaaaegiocaaaacaaaaaaciaaaaaaegaobaaaabaaaaaadiaaaaah
pcaabaaaadaaaaaajgacbaaaabaaaaaaegakbaaaabaaaaaabbaaaaaibcaabaaa
aeaaaaaaegiocaaaacaaaaaacjaaaaaaegaobaaaadaaaaaabbaaaaaiccaabaaa
aeaaaaaaegiocaaaacaaaaaackaaaaaaegaobaaaadaaaaaabbaaaaaiecaabaaa
aeaaaaaaegiocaaaacaaaaaaclaaaaaaegaobaaaadaaaaaaaaaaaaahhcaabaaa
acaaaaaaegacbaaaacaaaaaaegacbaaaaeaaaaaadiaaaaahicaabaaaaaaaaaaa
bkaabaaaabaaaaaabkaabaaaabaaaaaadcaaaaakicaabaaaaaaaaaaaakaabaaa
abaaaaaaakaabaaaabaaaaaadkaabaiaebaaaaaaaaaaaaaadcaaaaakhccabaaa
adaaaaaaegiccaaaacaaaaaacmaaaaaapgapbaaaaaaaaaaaegacbaaaacaaaaaa
diaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaaadaaaaaa
bbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaa
abaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
adaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaaaaaaaaai
hcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaadaaaaaabdaaaaaadcaaaaal
hcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaia
ebaaaaaaaaaaaaaabaaaaaahcccabaaaaeaaaaaaegacbaaaaaaaaaaaegacbaaa
abaaaaaabaaaaaahbccabaaaaeaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaa
baaaaaaheccabaaaaeaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaadoaaaaab
ejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
aaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapapaaaa
kjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaaahahaaaalaaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaaabaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaa
faepfdejfeejepeoaafeebeoehefeofeaaeoepfcenebemaafeeffiedepepfcee
aaedepemepfcaaklepfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaaaaaaaaaa
abaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
abaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaahaiaaaa
imaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahaiaaaaimaaaaaaadaaaaaa
aaaaaaaaadaaaaaaaeaaaaaaahaiaaaafdfgfpfaepfdejfeejepeoaafeeffied
epepfceeaaklklkl"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_7 * (tmpvar_2 * unity_Scale.w));
  mediump vec3 tmpvar_14;
  mediump vec4 normal_15;
  normal_15 = tmpvar_13;
  highp float vC_16;
  mediump vec3 x3_17;
  mediump vec3 x2_18;
  mediump vec3 x1_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHAr, normal_15);
  x1_19.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAg, normal_15);
  x1_19.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAb, normal_15);
  x1_19.z = tmpvar_22;
  mediump vec4 tmpvar_23;
  tmpvar_23 = (normal_15.xyzz * normal_15.yzzx);
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHBr, tmpvar_23);
  x2_18.x = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBg, tmpvar_23);
  x2_18.y = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBb, tmpvar_23);
  x2_18.z = tmpvar_26;
  mediump float tmpvar_27;
  tmpvar_27 = ((normal_15.x * normal_15.x) - (normal_15.y * normal_15.y));
  vC_16 = tmpvar_27;
  highp vec3 tmpvar_28;
  tmpvar_28 = (unity_SHC.xyz * vC_16);
  x3_17 = tmpvar_28;
  tmpvar_14 = ((x1_19 + x2_18) + x3_17);
  shlight_3 = tmpvar_14;
  tmpvar_6 = shlight_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = (tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz));
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
varying highp vec4 xlv_TEXCOORD0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_2 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (tmpvar_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_3 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = clouds_7;
  lowp vec4 arg0_14;
  arg0_14 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (arg0_14, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_13).xyz;
  tmpvar_4 = tmpvar_15;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_17;
  tmpvar_17 = ((tmpvar_16.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(xlv_TEXCOORD3);
  mediump vec3 viewDir_19;
  viewDir_19 = tmpvar_18;
  lowp vec4 c_20;
  highp float nh_21;
  lowp float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_3, xlv_TEXCOORD1));
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_3, normalize((xlv_TEXCOORD1 + viewDir_19))));
  nh_21 = tmpvar_23;
  mediump float arg1_24;
  arg1_24 = (tmpvar_5 * 128.0);
  highp float tmpvar_25;
  tmpvar_25 = (pow (nh_21, arg1_24) * tmpvar_6);
  highp vec3 tmpvar_26;
  tmpvar_26 = ((((tmpvar_2 * _LightColor0.xyz) * tmpvar_22) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_25)) * 2.0);
  c_20.xyz = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = (tmpvar_8.w + ((_LightColor0.w * _SpecColor.w) * tmpvar_25));
  c_20.w = tmpvar_27;
  c_1.w = c_20.w;
  c_1.xyz = (c_20.xyz + (tmpvar_2 * xlv_TEXCOORD2));
  c_1.xyz = (c_1.xyz + tmpvar_4);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_7 * (tmpvar_2 * unity_Scale.w));
  mediump vec3 tmpvar_14;
  mediump vec4 normal_15;
  normal_15 = tmpvar_13;
  highp float vC_16;
  mediump vec3 x3_17;
  mediump vec3 x2_18;
  mediump vec3 x1_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHAr, normal_15);
  x1_19.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAg, normal_15);
  x1_19.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAb, normal_15);
  x1_19.z = tmpvar_22;
  mediump vec4 tmpvar_23;
  tmpvar_23 = (normal_15.xyzz * normal_15.yzzx);
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHBr, tmpvar_23);
  x2_18.x = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBg, tmpvar_23);
  x2_18.y = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBb, tmpvar_23);
  x2_18.z = tmpvar_26;
  mediump float tmpvar_27;
  tmpvar_27 = ((normal_15.x * normal_15.x) - (normal_15.y * normal_15.y));
  vC_16 = tmpvar_27;
  highp vec3 tmpvar_28;
  tmpvar_28 = (unity_SHC.xyz * vC_16);
  x3_17 = tmpvar_28;
  tmpvar_14 = ((x1_19 + x2_18) + x3_17);
  shlight_3 = tmpvar_14;
  tmpvar_6 = shlight_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = (tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz));
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
varying highp vec4 xlv_TEXCOORD0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_2 = tmpvar_10;
  lowp vec3 normal_11;
  normal_11.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_11.z = sqrt((1.0 - clamp (dot (normal_11.xy, normal_11.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (normal_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_3 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = clouds_7;
  lowp vec4 arg0_14;
  arg0_14 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (arg0_14, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_13).xyz;
  tmpvar_4 = tmpvar_15;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_17;
  tmpvar_17 = ((tmpvar_16.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(xlv_TEXCOORD3);
  mediump vec3 viewDir_19;
  viewDir_19 = tmpvar_18;
  lowp vec4 c_20;
  highp float nh_21;
  lowp float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_3, xlv_TEXCOORD1));
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_3, normalize((xlv_TEXCOORD1 + viewDir_19))));
  nh_21 = tmpvar_23;
  mediump float arg1_24;
  arg1_24 = (tmpvar_5 * 128.0);
  highp float tmpvar_25;
  tmpvar_25 = (pow (nh_21, arg1_24) * tmpvar_6);
  highp vec3 tmpvar_26;
  tmpvar_26 = ((((tmpvar_2 * _LightColor0.xyz) * tmpvar_22) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_25)) * 2.0);
  c_20.xyz = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = (tmpvar_8.w + ((_LightColor0.w * _SpecColor.w) * tmpvar_25));
  c_20.w = tmpvar_27;
  c_1.w = c_20.w;
  c_1.xyz = (c_20.xyz + (tmpvar_2 * xlv_TEXCOORD2));
  c_1.xyz = (c_1.xyz + tmpvar_4);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out lowp vec3 xlv_TEXCOORD1;
out lowp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_7 * (tmpvar_2 * unity_Scale.w));
  mediump vec3 tmpvar_14;
  mediump vec4 normal_15;
  normal_15 = tmpvar_13;
  highp float vC_16;
  mediump vec3 x3_17;
  mediump vec3 x2_18;
  mediump vec3 x1_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHAr, normal_15);
  x1_19.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAg, normal_15);
  x1_19.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAb, normal_15);
  x1_19.z = tmpvar_22;
  mediump vec4 tmpvar_23;
  tmpvar_23 = (normal_15.xyzz * normal_15.yzzx);
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHBr, tmpvar_23);
  x2_18.x = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBg, tmpvar_23);
  x2_18.y = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBb, tmpvar_23);
  x2_18.z = tmpvar_26;
  mediump float tmpvar_27;
  tmpvar_27 = ((normal_15.x * normal_15.x) - (normal_15.y * normal_15.y));
  vC_16 = tmpvar_27;
  highp vec3 tmpvar_28;
  tmpvar_28 = (unity_SHC.xyz * vC_16);
  x3_17 = tmpvar_28;
  tmpvar_14 = ((x1_19 + x2_18) + x3_17);
  shlight_3 = tmpvar_14;
  tmpvar_6 = shlight_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = (tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
in highp vec4 xlv_TEXCOORD0;
in lowp vec3 xlv_TEXCOORD1;
in lowp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_2 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (tmpvar_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_3 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = clouds_7;
  lowp vec4 arg0_14;
  arg0_14 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (arg0_14, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_13).xyz;
  tmpvar_4 = tmpvar_15;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_17;
  tmpvar_17 = ((tmpvar_16.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(xlv_TEXCOORD3);
  mediump vec3 viewDir_19;
  viewDir_19 = tmpvar_18;
  lowp vec4 c_20;
  highp float nh_21;
  lowp float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_3, xlv_TEXCOORD1));
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_3, normalize((xlv_TEXCOORD1 + viewDir_19))));
  nh_21 = tmpvar_23;
  mediump float arg1_24;
  arg1_24 = (tmpvar_5 * 128.0);
  highp float tmpvar_25;
  tmpvar_25 = (pow (nh_21, arg1_24) * tmpvar_6);
  highp vec3 tmpvar_26;
  tmpvar_26 = ((((tmpvar_2 * _LightColor0.xyz) * tmpvar_22) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_25)) * 2.0);
  c_20.xyz = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = (tmpvar_8.w + ((_LightColor0.w * _SpecColor.w) * tmpvar_25));
  c_20.w = tmpvar_27;
  c_1.w = c_20.w;
  c_1.xyz = (c_20.xyz + (tmpvar_2 * xlv_TEXCOORD2));
  c_1.xyz = (c_1.xyz + tmpvar_4);
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 7 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Vector 14 [unity_LightmapST]
Vector 15 [_MainTex_ST]
Vector 16 [_Clouds_ST]
"!!ARBvp1.0
PARAM c[17] = { program.local[0],
		state.matrix.mvp,
		program.local[5..16] };
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[16].xyxy, c[16];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[15], c[15].zwzw;
MAD result.texcoord[1].xy, vertex.texcoord[1], c[14], c[14].zwzw;
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 7 instructions, 0 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 7 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 0 [glstate_matrix_mvp]
Vector 12 [unity_LightmapST]
Vector 13 [_MainTex_ST]
Vector 14 [_Clouds_ST]
"vs_2_0
dcl_position0 v0
dcl_texcoord0 v3
dcl_texcoord1 v4
mad oT0.zw, v3.xyxy, c14.xyxy, c14
mad oT0.xy, v3, c13, c13.zwzw
mad oT1.xy, v4, c12, c12.zwzw
dp4 oPos.w, v0, c3
dp4 oPos.z, v0, c2
dp4 oPos.y, v0, c1
dp4 oPos.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 7 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "color" Color
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 144
Vector 96 [unity_LightmapST]
Vector 112 [_MainTex_ST]
Vector 128 [_Clouds_ST]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
BindCB  "$Globals" 0
BindCB  "UnityPerDraw" 1
"vs_4_0
eefiecedmdhlhlidbjobpcjfbfckcmdhcjhjfifiabaaaaaaaiadaaaaadaaaaaa
cmaaaaaapeaaaaaageabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahaaaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheogiaaaaaaadaaaaaa
aiaaaaaafaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaafmaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaafmaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaadamaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklfdeieefcjmabaaaaeaaaabaaghaaaaaafjaaaaaeegiocaaaaaaaaaaa
ajaaaaaafjaaaaaeegiocaaaabaaaaaaaeaaaaaafpaaaaadpcbabaaaaaaaaaaa
fpaaaaaddcbabaaaadaaaaaafpaaaaaddcbabaaaaeaaaaaaghaaaaaepccabaaa
aaaaaaaaabaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaaddccabaaaacaaaaaa
giaaaaacabaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaa
abaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaabaaaaaaaaaaaaaa
agbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
abaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaa
aaaaaaaaegiocaaaabaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaahaaaaaa
ogikcaaaaaaaaaaaahaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaa
agiecaaaaaaaaaaaaiaaaaaakgiocaaaaaaaaaaaaiaaaaaadcaaaaaldccabaaa
acaaaaaaegbabaaaaeaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaa
agaaaaaadoaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 7 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "color" Color
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 144
Vector 96 [unity_LightmapST]
Vector 112 [_MainTex_ST]
Vector 128 [_Clouds_ST]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
BindCB  "$Globals" 0
BindCB  "UnityPerDraw" 1
"vs_4_0_level_9_1
eefiecednfkjeodjjfahcjbceghfeaaebhgcbaefabaaaaaaciaeaaaaaeaaaaaa
daaaaaaaemabaaaapaacaaaaliadaaaaebgpgodjbeabaaaabeabaaaaaaacpopp
neaaaaaaeaaaaaaaacaaceaaaaaadmaaaaaadmaaaaaaceaaabaadmaaaaaaagaa
adaaabaaaaaaaaaaabaaaaaaaeaaaeaaaaaaaaaaaaaaaaaaaaacpoppbpaaaaac
afaaaaiaaaaaapjabpaaaaacafaaadiaadaaapjabpaaaaacafaaaeiaaeaaapja
aeaaaaaeaaaaadoaadaaoejaacaaoekaacaaookaaeaaaaaeaaaaamoaadaaeeja
adaaeekaadaaoekaaeaaaaaeabaaadoaaeaaoejaabaaoekaabaaookaafaaaaad
aaaaapiaaaaaffjaafaaoekaaeaaaaaeaaaaapiaaeaaoekaaaaaaajaaaaaoeia
aeaaaaaeaaaaapiaagaaoekaaaaakkjaaaaaoeiaaeaaaaaeaaaaapiaahaaoeka
aaaappjaaaaaoeiaaeaaaaaeaaaaadmaaaaappiaaaaaoekaaaaaoeiaabaaaaac
aaaaammaaaaaoeiappppaaaafdeieefcjmabaaaaeaaaabaaghaaaaaafjaaaaae
egiocaaaaaaaaaaaajaaaaaafjaaaaaeegiocaaaabaaaaaaaeaaaaaafpaaaaad
pcbabaaaaaaaaaaafpaaaaaddcbabaaaadaaaaaafpaaaaaddcbabaaaaeaaaaaa
ghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaad
dccabaaaacaaaaaagiaaaaacabaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaabaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
abaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaabaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpccabaaaaaaaaaaaegiocaaaabaaaaaaadaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaa
aaaaaaaaahaaaaaaogikcaaaaaaaaaaaahaaaaaadcaaaaalmccabaaaabaaaaaa
agbebaaaadaaaaaaagiecaaaaaaaaaaaaiaaaaaakgiocaaaaaaaaaaaaiaaaaaa
dcaaaaaldccabaaaacaaaaaaegbabaaaaeaaaaaaegiacaaaaaaaaaaaagaaaaaa
ogikcaaaaaaaaaaaagaaaaaadoaaaaabejfdeheomaaaaaaaagaaaaaaaiaaaaaa
jiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
acaaaaaaahaaaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaa
laaaaaaaabaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofe
aaeoepfcenebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheogiaaaaaa
adaaaaaaaiaaaaaafaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaa
fmaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaafmaaaaaaabaaaaaa
aaaaaaaaadaaaaaaacaaaaaaadamaaaafdfgfpfaepfdejfeejepeoaafeeffied
epepfceeaaklklkl"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

uniform sampler2D _MainTex;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform lowp float _LightAmount;
uniform sampler2D unity_Lightmap;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  mediump vec3 clouds_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_6;
  tmpvar_6 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_4 = tmpvar_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_5.xyz + clouds_4);
  tmpvar_2 = tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_8.w = 0.0;
  tmpvar_8.xyz = clouds_4;
  lowp vec4 arg0_9;
  arg0_9 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_10;
  tmpvar_10 = mix (arg0_9, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_8).xyz;
  tmpvar_3 = tmpvar_10;
  c_1.xyz = (tmpvar_2 * (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz));
  c_1.w = tmpvar_5.w;
  c_1.xyz = (c_1.xyz + tmpvar_3);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform lowp float _LightAmount;
uniform sampler2D unity_Lightmap;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  mediump vec3 clouds_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_6;
  tmpvar_6 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_4 = tmpvar_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_5.xyz + clouds_4);
  tmpvar_2 = tmpvar_7;
  lowp vec3 normal_8;
  normal_8.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_8.z = sqrt((1.0 - clamp (dot (normal_8.xy, normal_8.xy), 0.0, 1.0)));
  mediump vec4 tmpvar_9;
  tmpvar_9.w = 0.0;
  tmpvar_9.xyz = clouds_4;
  lowp vec4 arg0_10;
  arg0_10 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_11;
  tmpvar_11 = mix (arg0_10, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_9).xyz;
  tmpvar_3 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2D (unity_Lightmap, xlv_TEXCOORD1);
  c_1.xyz = (tmpvar_2 * ((8.0 * tmpvar_12.w) * tmpvar_12.xyz));
  c_1.w = tmpvar_5.w;
  c_1.xyz = (c_1.xyz + tmpvar_3);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform sampler2D _MainTex;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform lowp float _LightAmount;
uniform sampler2D unity_Lightmap;
in highp vec4 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  mediump vec3 clouds_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_6;
  tmpvar_6 = texture (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_4 = tmpvar_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_5.xyz + clouds_4);
  tmpvar_2 = tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_8.w = 0.0;
  tmpvar_8.xyz = clouds_4;
  lowp vec4 arg0_9;
  arg0_9 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_10;
  tmpvar_10 = mix (arg0_9, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_8).xyz;
  tmpvar_3 = tmpvar_10;
  c_1.xyz = (tmpvar_2 * (2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz));
  c_1.w = tmpvar_5.w;
  c_1.xyz = (c_1.xyz + tmpvar_3);
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 20 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" ATTR14
Matrix 9 [_World2Object]
Vector 13 [_WorldSpaceCameraPos]
Vector 15 [unity_Scale]
Vector 16 [unity_LightmapST]
Vector 17 [_MainTex_ST]
Vector 18 [_Clouds_ST]
"!!ARBvp1.0
PARAM c[19] = { { 1 },
		state.matrix.mvp,
		program.local[5..18] };
TEMP R0;
TEMP R1;
TEMP R2;
MOV R0.xyz, vertex.attrib[14];
MUL R1.xyz, vertex.normal.zxyw, R0.yzxw;
MAD R0.xyz, vertex.normal.yzxw, R0.zxyw, -R1;
MUL R1.xyz, R0, vertex.attrib[14].w;
MOV R0.xyz, c[13];
MOV R0.w, c[0].x;
DP4 R2.z, R0, c[11];
DP4 R2.x, R0, c[9];
DP4 R2.y, R0, c[10];
MAD R0.xyz, R2, c[15].w, -vertex.position;
DP3 result.texcoord[2].y, R0, R1;
DP3 result.texcoord[2].z, vertex.normal, R0;
DP3 result.texcoord[2].x, R0, vertex.attrib[14];
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[18].xyxy, c[18];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[17], c[17].zwzw;
MAD result.texcoord[1].xy, vertex.texcoord[1], c[16], c[16].zwzw;
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 20 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 21 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 8 [_World2Object]
Vector 12 [_WorldSpaceCameraPos]
Vector 13 [unity_Scale]
Vector 14 [unity_LightmapST]
Vector 15 [_MainTex_ST]
Vector 16 [_Clouds_ST]
"vs_2_0
def c17, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
dcl_texcoord1 v4
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r0.xyz, v2.yzxw, r0.zxyw, -r1
mul r1.xyz, r0, v1.w
mov r0.xyz, c12
mov r0.w, c17.x
dp4 r2.z, r0, c10
dp4 r2.x, r0, c8
dp4 r2.y, r0, c9
mad r0.xyz, r2, c13.w, -v0
dp3 oT2.y, r0, r1
dp3 oT2.z, v2, r0
dp3 oT2.x, r0, v1
mad oT0.zw, v3.xyxy, c16.xyxy, c16
mad oT0.xy, v3, c15, c15.zwzw
mad oT1.xy, v4, c14, c14.zwzw
dp4 oPos.w, v0, c3
dp4 oPos.z, v0, c2
dp4 oPos.y, v0, c1
dp4 oPos.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 18 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 144
Vector 96 [unity_LightmapST]
Vector 112 [_MainTex_ST]
Vector 128 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityPerDraw" 2
"vs_4_0
eefiecednnjdpacimpldccdjkfgncnnofloocpbfabaaaaaanaaeaaaaadaaaaaa
cmaaaaaapeaaaaaahmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheoiaaaaaaaaeaaaaaa
aiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaheaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaadamaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefc
emadaaaaeaaaabaandaaaaaafjaaaaaeegiocaaaaaaaaaaaajaaaaaafjaaaaae
egiocaaaabaaaaaaafaaaaaafjaaaaaeegiocaaaacaaaaaabfaaaaaafpaaaaad
pcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaa
fpaaaaaddcbabaaaadaaaaaafpaaaaaddcbabaaaaeaaaaaaghaaaaaepccabaaa
aaaaaaaaabaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaaddccabaaaacaaaaaa
gfaaaaadhccabaaaadaaaaaagiaaaaacacaaaaaadiaaaaaipcaabaaaaaaaaaaa
fgbfbaaaaaaaaaaaegiocaaaacaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaa
egiocaaaacaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaacaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaacaaaaaaadaaaaaapgbpbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaa
egiacaaaaaaaaaaaahaaaaaaogikcaaaaaaaaaaaahaaaaaadcaaaaalmccabaaa
abaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaaiaaaaaakgiocaaaaaaaaaaa
aiaaaaaadcaaaaaldccabaaaacaaaaaaegbabaaaaeaaaaaaegiacaaaaaaaaaaa
agaaaaaaogikcaaaaaaaaaaaagaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaa
abaaaaaacgbjbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaa
cgbjbaaaabaaaaaaegacbaiaebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaa
egacbaaaaaaaaaaapgbpbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaa
abaaaaaaaeaaaaaaegiccaaaacaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaa
egiccaaaacaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaa
dcaaaaalhcaabaaaabaaaaaaegiccaaaacaaaaaabcaaaaaakgikcaaaabaaaaaa
aeaaaaaaegacbaaaabaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaa
egiccaaaacaaaaaabdaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaa
pgipcaaaacaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaa
adaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaaadaaaaaa
egbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaaadaaaaaaegbcbaaa
acaaaaaaegacbaaaabaaaaaadoaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 18 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 144
Vector 96 [unity_LightmapST]
Vector 112 [_MainTex_ST]
Vector 128 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityPerDraw" 2
"vs_4_0_level_9_1
eefiecedmlgohanpjgdelcnddaagpogkgdfaikdeabaaaaaapiagaaaaaeaaaaaa
daaaaaaafeacaaaakiafaaaahaagaaaaebgpgodjbmacaaaabmacaaaaaaacpopp
meabaaaafiaaaaaaaeaaceaaaaaafeaaaaaafeaaaaaaceaaabaafeaaaaaaagaa
adaaabaaaaaaaaaaabaaaeaaabaaaeaaaaaaaaaaacaaaaaaaeaaafaaaaaaaaaa
acaabaaaafaaajaaaaaaaaaaaaaaaaaaaaacpoppbpaaaaacafaaaaiaaaaaapja
bpaaaaacafaaabiaabaaapjabpaaaaacafaaaciaacaaapjabpaaaaacafaaadia
adaaapjabpaaaaacafaaaeiaaeaaapjaaeaaaaaeaaaaadoaadaaoejaacaaoeka
acaaookaaeaaaaaeaaaaamoaadaaeejaadaaeekaadaaoekaaeaaaaaeabaaadoa
aeaaoejaabaaoekaabaaookaabaaaaacaaaaahiaaeaaoekaafaaaaadabaaahia
aaaaffiaakaaoekaaeaaaaaeaaaaaliaajaakekaaaaaaaiaabaakeiaaeaaaaae
aaaaahiaalaaoekaaaaakkiaaaaapeiaacaaaaadaaaaahiaaaaaoeiaamaaoeka
aeaaaaaeaaaaahiaaaaaoeiaanaappkaaaaaoejbaiaaaaadacaaaboaabaaoeja
aaaaoeiaabaaaaacabaaahiaabaaoejaafaaaaadacaaahiaabaamjiaacaancja
aeaaaaaeabaaahiaacaamjjaabaanciaacaaoeibafaaaaadabaaahiaabaaoeia
abaappjaaiaaaaadacaaacoaabaaoeiaaaaaoeiaaiaaaaadacaaaeoaacaaoeja
aaaaoeiaafaaaaadaaaaapiaaaaaffjaagaaoekaaeaaaaaeaaaaapiaafaaoeka
aaaaaajaaaaaoeiaaeaaaaaeaaaaapiaahaaoekaaaaakkjaaaaaoeiaaeaaaaae
aaaaapiaaiaaoekaaaaappjaaaaaoeiaaeaaaaaeaaaaadmaaaaappiaaaaaoeka
aaaaoeiaabaaaaacaaaaammaaaaaoeiappppaaaafdeieefcemadaaaaeaaaabaa
ndaaaaaafjaaaaaeegiocaaaaaaaaaaaajaaaaaafjaaaaaeegiocaaaabaaaaaa
afaaaaaafjaaaaaeegiocaaaacaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaa
fpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaa
adaaaaaafpaaaaaddcbabaaaaeaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaa
gfaaaaadpccabaaaabaaaaaagfaaaaaddccabaaaacaaaaaagfaaaaadhccabaaa
adaaaaaagiaaaaacacaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaa
egiocaaaacaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaa
aaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaa
egiocaaaacaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaak
pccabaaaaaaaaaaaegiocaaaacaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaa
ahaaaaaaogikcaaaaaaaaaaaahaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaa
adaaaaaaagiecaaaaaaaaaaaaiaaaaaakgiocaaaaaaaaaaaaiaaaaaadcaaaaal
dccabaaaacaaaaaaegbabaaaaeaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaa
aaaaaaaaagaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaacgbjbaaa
acaaaaaadcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaa
egacbaiaebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaa
pgbpbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaaaeaaaaaa
egiccaaaacaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaacaaaaaa
baaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaa
abaaaaaaegiccaaaacaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaa
abaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaacaaaaaa
bdaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaaacaaaaaa
beaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaaadaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaaadaaaaaaegbcbaaaabaaaaaa
egacbaaaabaaaaaabaaaaaaheccabaaaadaaaaaaegbcbaaaacaaaaaaegacbaaa
abaaaaaadoaaaaabejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
abaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaaahahaaaa
laaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaaabaaaaaa
aaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
afaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfcenebemaa
feeffiedepepfceeaaedepemepfcaaklepfdeheoiaaaaaaaaeaaaaaaaiaaaaaa
giaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaabaaaaaaapaaaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaa
acaaaaaaadamaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahaiaaaa
fdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  tmpvar_4 = tmpvar_1.xyz;
  tmpvar_5 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_4.x;
  tmpvar_6[0].y = tmpvar_5.x;
  tmpvar_6[0].z = tmpvar_2.x;
  tmpvar_6[1].x = tmpvar_4.y;
  tmpvar_6[1].y = tmpvar_5.y;
  tmpvar_6[1].z = tmpvar_2.y;
  tmpvar_6[2].x = tmpvar_4.z;
  tmpvar_6[2].y = tmpvar_5.z;
  tmpvar_6[2].z = tmpvar_2.z;
  highp vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (tmpvar_6 * (((_World2Object * tmpvar_7).xyz * unity_Scale.w) - _glesVertex.xyz));
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_2 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (tmpvar_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_3 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = clouds_7;
  lowp vec4 arg0_14;
  arg0_14 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (arg0_14, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_13).xyz;
  tmpvar_4 = tmpvar_15;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_17;
  tmpvar_17 = ((tmpvar_16.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_17;
  c_1.w = 0.0;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(xlv_TEXCOORD2);
  mediump vec4 tmpvar_19;
  mediump vec3 viewDir_20;
  viewDir_20 = tmpvar_18;
  mediump vec3 specColor_21;
  highp float nh_22;
  mat3 tmpvar_23;
  tmpvar_23[0].x = 0.816497;
  tmpvar_23[0].y = -0.408248;
  tmpvar_23[0].z = -0.408248;
  tmpvar_23[1].x = 0.0;
  tmpvar_23[1].y = 0.707107;
  tmpvar_23[1].z = -0.707107;
  tmpvar_23[2].x = 0.57735;
  tmpvar_23[2].y = 0.57735;
  tmpvar_23[2].z = 0.57735;
  mediump vec3 normal_24;
  normal_24 = tmpvar_3;
  mediump vec3 scalePerBasisVector_25;
  mediump vec3 lm_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz);
  lm_26 = tmpvar_27;
  lowp vec3 tmpvar_28;
  tmpvar_28 = (2.0 * texture2D (unity_LightmapInd, xlv_TEXCOORD1).xyz);
  scalePerBasisVector_25 = tmpvar_28;
  lm_26 = (lm_26 * dot (clamp ((tmpvar_23 * normal_24), 0.0, 1.0), scalePerBasisVector_25));
  vec3 v_29;
  v_29.x = tmpvar_23[0].x;
  v_29.y = tmpvar_23[1].x;
  v_29.z = tmpvar_23[2].x;
  vec3 v_30;
  v_30.x = tmpvar_23[0].y;
  v_30.y = tmpvar_23[1].y;
  v_30.z = tmpvar_23[2].y;
  vec3 v_31;
  v_31.x = tmpvar_23[0].z;
  v_31.y = tmpvar_23[1].z;
  v_31.z = tmpvar_23[2].z;
  mediump float tmpvar_32;
  tmpvar_32 = max (0.0, dot (tmpvar_3, normalize((normalize((((scalePerBasisVector_25.x * v_29) + (scalePerBasisVector_25.y * v_30)) + (scalePerBasisVector_25.z * v_31))) + viewDir_20))));
  nh_22 = tmpvar_32;
  highp float tmpvar_33;
  mediump float arg1_34;
  arg1_34 = (tmpvar_5 * 128.0);
  tmpvar_33 = pow (nh_22, arg1_34);
  highp vec3 tmpvar_35;
  tmpvar_35 = (((lm_26 * _SpecColor.xyz) * tmpvar_6) * tmpvar_33);
  specColor_21 = tmpvar_35;
  highp vec4 tmpvar_36;
  tmpvar_36.xyz = lm_26;
  tmpvar_36.w = tmpvar_33;
  tmpvar_19 = tmpvar_36;
  c_1.xyz = specColor_21;
  mediump vec3 tmpvar_37;
  tmpvar_37 = (c_1.xyz + (tmpvar_2 * tmpvar_19.xyz));
  c_1.xyz = tmpvar_37;
  c_1.w = tmpvar_8.w;
  c_1.xyz = (c_1.xyz + tmpvar_4);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  tmpvar_4 = tmpvar_1.xyz;
  tmpvar_5 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_4.x;
  tmpvar_6[0].y = tmpvar_5.x;
  tmpvar_6[0].z = tmpvar_2.x;
  tmpvar_6[1].x = tmpvar_4.y;
  tmpvar_6[1].y = tmpvar_5.y;
  tmpvar_6[1].z = tmpvar_2.y;
  tmpvar_6[2].x = tmpvar_4.z;
  tmpvar_6[2].y = tmpvar_5.z;
  tmpvar_6[2].z = tmpvar_2.z;
  highp vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (tmpvar_6 * (((_World2Object * tmpvar_7).xyz * unity_Scale.w) - _glesVertex.xyz));
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_2 = tmpvar_10;
  lowp vec3 normal_11;
  normal_11.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_11.z = sqrt((1.0 - clamp (dot (normal_11.xy, normal_11.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (normal_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_3 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = clouds_7;
  lowp vec4 arg0_14;
  arg0_14 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (arg0_14, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_13).xyz;
  tmpvar_4 = tmpvar_15;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_17;
  tmpvar_17 = ((tmpvar_16.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_17;
  c_1.w = 0.0;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (unity_Lightmap, xlv_TEXCOORD1);
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (unity_LightmapInd, xlv_TEXCOORD1);
  highp vec3 tmpvar_20;
  tmpvar_20 = normalize(xlv_TEXCOORD2);
  mediump vec4 tmpvar_21;
  mediump vec3 viewDir_22;
  viewDir_22 = tmpvar_20;
  mediump vec3 specColor_23;
  highp float nh_24;
  mat3 tmpvar_25;
  tmpvar_25[0].x = 0.816497;
  tmpvar_25[0].y = -0.408248;
  tmpvar_25[0].z = -0.408248;
  tmpvar_25[1].x = 0.0;
  tmpvar_25[1].y = 0.707107;
  tmpvar_25[1].z = -0.707107;
  tmpvar_25[2].x = 0.57735;
  tmpvar_25[2].y = 0.57735;
  tmpvar_25[2].z = 0.57735;
  mediump vec3 normal_26;
  normal_26 = tmpvar_3;
  mediump vec3 scalePerBasisVector_27;
  mediump vec3 lm_28;
  lowp vec3 tmpvar_29;
  tmpvar_29 = ((8.0 * tmpvar_18.w) * tmpvar_18.xyz);
  lm_28 = tmpvar_29;
  lowp vec3 tmpvar_30;
  tmpvar_30 = ((8.0 * tmpvar_19.w) * tmpvar_19.xyz);
  scalePerBasisVector_27 = tmpvar_30;
  lm_28 = (lm_28 * dot (clamp ((tmpvar_25 * normal_26), 0.0, 1.0), scalePerBasisVector_27));
  vec3 v_31;
  v_31.x = tmpvar_25[0].x;
  v_31.y = tmpvar_25[1].x;
  v_31.z = tmpvar_25[2].x;
  vec3 v_32;
  v_32.x = tmpvar_25[0].y;
  v_32.y = tmpvar_25[1].y;
  v_32.z = tmpvar_25[2].y;
  vec3 v_33;
  v_33.x = tmpvar_25[0].z;
  v_33.y = tmpvar_25[1].z;
  v_33.z = tmpvar_25[2].z;
  mediump float tmpvar_34;
  tmpvar_34 = max (0.0, dot (tmpvar_3, normalize((normalize((((scalePerBasisVector_27.x * v_31) + (scalePerBasisVector_27.y * v_32)) + (scalePerBasisVector_27.z * v_33))) + viewDir_22))));
  nh_24 = tmpvar_34;
  highp float tmpvar_35;
  mediump float arg1_36;
  arg1_36 = (tmpvar_5 * 128.0);
  tmpvar_35 = pow (nh_24, arg1_36);
  highp vec3 tmpvar_37;
  tmpvar_37 = (((lm_28 * _SpecColor.xyz) * tmpvar_6) * tmpvar_35);
  specColor_23 = tmpvar_37;
  highp vec4 tmpvar_38;
  tmpvar_38.xyz = lm_28;
  tmpvar_38.w = tmpvar_35;
  tmpvar_21 = tmpvar_38;
  c_1.xyz = specColor_23;
  mediump vec3 tmpvar_39;
  tmpvar_39 = (c_1.xyz + (tmpvar_2 * tmpvar_21.xyz));
  c_1.xyz = tmpvar_39;
  c_1.w = tmpvar_8.w;
  c_1.xyz = (c_1.xyz + tmpvar_4);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  tmpvar_4 = tmpvar_1.xyz;
  tmpvar_5 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_4.x;
  tmpvar_6[0].y = tmpvar_5.x;
  tmpvar_6[0].z = tmpvar_2.x;
  tmpvar_6[1].x = tmpvar_4.y;
  tmpvar_6[1].y = tmpvar_5.y;
  tmpvar_6[1].z = tmpvar_2.y;
  tmpvar_6[2].x = tmpvar_4.z;
  tmpvar_6[2].y = tmpvar_5.z;
  tmpvar_6[2].z = tmpvar_2.z;
  highp vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (tmpvar_6 * (((_World2Object * tmpvar_7).xyz * unity_Scale.w) - _glesVertex.xyz));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
in highp vec4 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_2 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (tmpvar_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_3 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = clouds_7;
  lowp vec4 arg0_14;
  arg0_14 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (arg0_14, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_13).xyz;
  tmpvar_4 = tmpvar_15;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_17;
  tmpvar_17 = ((tmpvar_16.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_17;
  c_1.w = 0.0;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(xlv_TEXCOORD2);
  mediump vec4 tmpvar_19;
  mediump vec3 viewDir_20;
  viewDir_20 = tmpvar_18;
  mediump vec3 specColor_21;
  highp float nh_22;
  mat3 tmpvar_23;
  tmpvar_23[0].x = 0.816497;
  tmpvar_23[0].y = -0.408248;
  tmpvar_23[0].z = -0.408248;
  tmpvar_23[1].x = 0.0;
  tmpvar_23[1].y = 0.707107;
  tmpvar_23[1].z = -0.707107;
  tmpvar_23[2].x = 0.57735;
  tmpvar_23[2].y = 0.57735;
  tmpvar_23[2].z = 0.57735;
  mediump vec3 normal_24;
  normal_24 = tmpvar_3;
  mediump vec3 scalePerBasisVector_25;
  mediump vec3 lm_26;
  lowp vec3 tmpvar_27;
  tmpvar_27 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz);
  lm_26 = tmpvar_27;
  lowp vec3 tmpvar_28;
  tmpvar_28 = (2.0 * texture (unity_LightmapInd, xlv_TEXCOORD1).xyz);
  scalePerBasisVector_25 = tmpvar_28;
  lm_26 = (lm_26 * dot (clamp ((tmpvar_23 * normal_24), 0.0, 1.0), scalePerBasisVector_25));
  vec3 v_29;
  v_29.x = tmpvar_23[0].x;
  v_29.y = tmpvar_23[1].x;
  v_29.z = tmpvar_23[2].x;
  vec3 v_30;
  v_30.x = tmpvar_23[0].y;
  v_30.y = tmpvar_23[1].y;
  v_30.z = tmpvar_23[2].y;
  vec3 v_31;
  v_31.x = tmpvar_23[0].z;
  v_31.y = tmpvar_23[1].z;
  v_31.z = tmpvar_23[2].z;
  mediump float tmpvar_32;
  tmpvar_32 = max (0.0, dot (tmpvar_3, normalize((normalize((((scalePerBasisVector_25.x * v_29) + (scalePerBasisVector_25.y * v_30)) + (scalePerBasisVector_25.z * v_31))) + viewDir_20))));
  nh_22 = tmpvar_32;
  highp float tmpvar_33;
  mediump float arg1_34;
  arg1_34 = (tmpvar_5 * 128.0);
  tmpvar_33 = pow (nh_22, arg1_34);
  highp vec3 tmpvar_35;
  tmpvar_35 = (((lm_26 * _SpecColor.xyz) * tmpvar_6) * tmpvar_33);
  specColor_21 = tmpvar_35;
  highp vec4 tmpvar_36;
  tmpvar_36.xyz = lm_26;
  tmpvar_36.w = tmpvar_33;
  tmpvar_19 = tmpvar_36;
  c_1.xyz = specColor_21;
  mediump vec3 tmpvar_37;
  tmpvar_37 = (c_1.xyz + (tmpvar_2 * tmpvar_19.xyz));
  c_1.xyz = tmpvar_37;
  c_1.w = tmpvar_8.w;
  c_1.xyz = (c_1.xyz + tmpvar_4);
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 49 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Vector 13 [_WorldSpaceCameraPos]
Vector 14 [_ProjectionParams]
Vector 15 [_WorldSpaceLightPos0]
Vector 16 [unity_SHAr]
Vector 17 [unity_SHAg]
Vector 18 [unity_SHAb]
Vector 19 [unity_SHBr]
Vector 20 [unity_SHBg]
Vector 21 [unity_SHBb]
Vector 22 [unity_SHC]
Vector 23 [unity_Scale]
Vector 24 [_MainTex_ST]
Vector 25 [_Clouds_ST]
"!!ARBvp1.0
PARAM c[26] = { { 1, 0.5 },
		state.matrix.mvp,
		program.local[5..25] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R1.xyz, vertex.normal, c[23].w;
DP3 R2.w, R1, c[6];
DP3 R0.x, R1, c[5];
DP3 R0.z, R1, c[7];
MOV R0.y, R2.w;
MOV R0.w, c[0].x;
MUL R1, R0.xyzz, R0.yzzx;
DP4 R2.z, R0, c[18];
DP4 R2.y, R0, c[17];
DP4 R2.x, R0, c[16];
MUL R0.w, R2, R2;
MAD R0.w, R0.x, R0.x, -R0;
DP4 R0.z, R1, c[21];
DP4 R0.y, R1, c[20];
DP4 R0.x, R1, c[19];
ADD R0.xyz, R2, R0;
MUL R1.xyz, R0.w, c[22];
ADD result.texcoord[2].xyz, R0, R1;
MOV R1.xyz, c[13];
MOV R1.w, c[0].x;
MOV R0.xyz, vertex.attrib[14];
DP4 R2.z, R1, c[11];
DP4 R2.y, R1, c[10];
DP4 R2.x, R1, c[9];
MAD R2.xyz, R2, c[23].w, -vertex.position;
MUL R1.xyz, vertex.normal.zxyw, R0.yzxw;
MAD R1.xyz, vertex.normal.yzxw, R0.zxyw, -R1;
MOV R0, c[15];
MUL R1.xyz, R1, vertex.attrib[14].w;
DP4 R3.z, R0, c[11];
DP4 R3.y, R0, c[10];
DP4 R3.x, R0, c[9];
DP4 R0.w, vertex.position, c[4];
DP4 R0.z, vertex.position, c[3];
DP4 R0.x, vertex.position, c[1];
DP4 R0.y, vertex.position, c[2];
DP3 result.texcoord[1].y, R3, R1;
DP3 result.texcoord[3].y, R1, R2;
MUL R1.xyz, R0.xyww, c[0].y;
MUL R1.y, R1, c[14].x;
DP3 result.texcoord[1].z, vertex.normal, R3;
DP3 result.texcoord[1].x, R3, vertex.attrib[14];
DP3 result.texcoord[3].z, vertex.normal, R2;
DP3 result.texcoord[3].x, vertex.attrib[14], R2;
ADD result.texcoord[4].xy, R1, R1.z;
MOV result.position, R0;
MOV result.texcoord[4].zw, R0;
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[25].xyxy, c[25];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[24], c[24].zwzw;
END
# 49 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 52 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 12 [_WorldSpaceCameraPos]
Vector 13 [_ProjectionParams]
Vector 14 [_ScreenParams]
Vector 15 [_WorldSpaceLightPos0]
Vector 16 [unity_SHAr]
Vector 17 [unity_SHAg]
Vector 18 [unity_SHAb]
Vector 19 [unity_SHBr]
Vector 20 [unity_SHBg]
Vector 21 [unity_SHBb]
Vector 22 [unity_SHC]
Vector 23 [unity_Scale]
Vector 24 [_MainTex_ST]
Vector 25 [_Clouds_ST]
"vs_2_0
def c26, 1.00000000, 0.50000000, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mul r1.xyz, v2, c23.w
dp3 r2.w, r1, c5
dp3 r0.x, r1, c4
dp3 r0.z, r1, c6
mov r0.y, r2.w
mov r0.w, c26.x
mul r1, r0.xyzz, r0.yzzx
dp4 r2.z, r0, c18
dp4 r2.y, r0, c17
dp4 r2.x, r0, c16
mul r0.w, r2, r2
mad r0.w, r0.x, r0.x, -r0
dp4 r0.z, r1, c21
dp4 r0.y, r1, c20
dp4 r0.x, r1, c19
mul r1.xyz, r0.w, c22
add r0.xyz, r2, r0
add oT2.xyz, r0, r1
mov r0.w, c26.x
mov r0.xyz, c12
dp4 r1.z, r0, c10
dp4 r1.y, r0, c9
dp4 r1.x, r0, c8
mad r3.xyz, r1, c23.w, -v0
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r1.xyz, v2.yzxw, r0.zxyw, -r1
mul r2.xyz, r1, v1.w
mov r0, c10
dp4 r4.z, c15, r0
mov r0, c9
dp4 r4.y, c15, r0
mov r1, c8
dp4 r4.x, c15, r1
dp4 r0.w, v0, c3
dp4 r0.z, v0, c2
dp4 r0.x, v0, c0
dp4 r0.y, v0, c1
mul r1.xyz, r0.xyww, c26.y
mul r1.y, r1, c13.x
dp3 oT1.y, r4, r2
dp3 oT3.y, r2, r3
dp3 oT1.z, v2, r4
dp3 oT1.x, r4, v1
dp3 oT3.z, v2, r3
dp3 oT3.x, v1, r3
mad oT4.xy, r1.z, c14.zwzw, r1
mov oPos, r0
mov oT4.zw, r0
mad oT0.zw, v3.xyxy, c25.xyxy, c25
mad oT0.xy, v3, c24, c24.zwzw
"
}
SubProgram "d3d11 " {
// Stats: 42 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 192
Vector 160 [_MainTex_ST]
Vector 176 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0
eefiecedfoeanihkneaeehdmoonlhgdbibileefhabaaaaaaiaaiaaaaadaaaaaa
cmaaaaaapeaaaaaakmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheolaaaaaaaagaaaaaa
aiaaaaaajiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakeaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaakeaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaakeaaaaaa
aeaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklfdeieefcmmagaaaaeaaaabaaldabaaaafjaaaaae
egiocaaaaaaaaaaaamaaaaaafjaaaaaeegiocaaaabaaaaaaagaaaaaafjaaaaae
egiocaaaacaaaaaacnaaaaaafjaaaaaeegiocaaaadaaaaaabfaaaaaafpaaaaad
pcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaa
fpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaad
pccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaa
gfaaaaadhccabaaaaeaaaaaagfaaaaadpccabaaaafaaaaaagiaaaaacagaaaaaa
diaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaa
kgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaa
egiacaaaaaaaaaaaakaaaaaaogikcaaaaaaaaaaaakaaaaaadcaaaaalmccabaaa
abaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaalaaaaaakgiocaaaaaaaaaaa
alaaaaaadiaaaaahhcaabaaaabaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaa
dcaaaaakhcaabaaaabaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaia
ebaaaaaaabaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaapgbpbaaa
abaaaaaadiaaaaajhcaabaaaacaaaaaafgifcaaaacaaaaaaaaaaaaaaegiccaaa
adaaaaaabbaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaaadaaaaaabaaaaaaa
agiacaaaacaaaaaaaaaaaaaaegacbaaaacaaaaaadcaaaaalhcaabaaaacaaaaaa
egiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaaegacbaaaacaaaaaa
dcaaaaalhcaabaaaacaaaaaaegiccaaaadaaaaaabdaaaaaapgipcaaaacaaaaaa
aaaaaaaaegacbaaaacaaaaaabaaaaaahcccabaaaacaaaaaaegacbaaaabaaaaaa
egacbaaaacaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaa
acaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaaacaaaaaa
diaaaaaihcaabaaaacaaaaaaegbcbaaaacaaaaaapgipcaaaadaaaaaabeaaaaaa
diaaaaaihcaabaaaadaaaaaafgafbaaaacaaaaaaegiccaaaadaaaaaaanaaaaaa
dcaaaaaklcaabaaaacaaaaaaegiicaaaadaaaaaaamaaaaaaagaabaaaacaaaaaa
egaibaaaadaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaaadaaaaaaaoaaaaaa
kgakbaaaacaaaaaaegadbaaaacaaaaaadgaaaaaficaabaaaacaaaaaaabeaaaaa
aaaaiadpbbaaaaaibcaabaaaadaaaaaaegiocaaaacaaaaaacgaaaaaaegaobaaa
acaaaaaabbaaaaaiccaabaaaadaaaaaaegiocaaaacaaaaaachaaaaaaegaobaaa
acaaaaaabbaaaaaiecaabaaaadaaaaaaegiocaaaacaaaaaaciaaaaaaegaobaaa
acaaaaaadiaaaaahpcaabaaaaeaaaaaajgacbaaaacaaaaaaegakbaaaacaaaaaa
bbaaaaaibcaabaaaafaaaaaaegiocaaaacaaaaaacjaaaaaaegaobaaaaeaaaaaa
bbaaaaaiccaabaaaafaaaaaaegiocaaaacaaaaaackaaaaaaegaobaaaaeaaaaaa
bbaaaaaiecaabaaaafaaaaaaegiocaaaacaaaaaaclaaaaaaegaobaaaaeaaaaaa
aaaaaaahhcaabaaaadaaaaaaegacbaaaadaaaaaaegacbaaaafaaaaaadiaaaaah
icaabaaaabaaaaaabkaabaaaacaaaaaabkaabaaaacaaaaaadcaaaaakicaabaaa
abaaaaaaakaabaaaacaaaaaaakaabaaaacaaaaaadkaabaiaebaaaaaaabaaaaaa
dcaaaaakhccabaaaadaaaaaaegiccaaaacaaaaaacmaaaaaapgapbaaaabaaaaaa
egacbaaaadaaaaaadiaaaaajhcaabaaaacaaaaaafgifcaaaabaaaaaaaeaaaaaa
egiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaaadaaaaaa
baaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaaacaaaaaadcaaaaalhcaabaaa
acaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaa
acaaaaaaaaaaaaaihcaabaaaacaaaaaaegacbaaaacaaaaaaegiccaaaadaaaaaa
bdaaaaaadcaaaaalhcaabaaaacaaaaaaegacbaaaacaaaaaapgipcaaaadaaaaaa
beaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaaaeaaaaaaegacbaaa
abaaaaaaegacbaaaacaaaaaabaaaaaahbccabaaaaeaaaaaaegbcbaaaabaaaaaa
egacbaaaacaaaaaabaaaaaaheccabaaaaeaaaaaaegbcbaaaacaaaaaaegacbaaa
acaaaaaadiaaaaaiccaabaaaaaaaaaaabkaabaaaaaaaaaaaakiacaaaabaaaaaa
afaaaaaadiaaaaakncaabaaaabaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadp
aaaaaaaaaaaaaadpaaaaaadpdgaaaaafmccabaaaafaaaaaakgaobaaaaaaaaaaa
aaaaaaahdccabaaaafaaaaaakgakbaaaabaaaaaamgaabaaaabaaaaaadoaaaaab
"
}
SubProgram "d3d11_9x " {
// Stats: 42 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 192
Vector 160 [_MainTex_ST]
Vector 176 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0_level_9_1
eefieceddjhgpccjmpnhdgfkanonnndckfkkkdnbabaaaaaakeamaaaaaeaaaaaa
daaaaaaafaaeaaaacealaaaaomalaaaaebgpgodjbiaeaaaabiaeaaaaaaacpopp
jmadaaaahmaaaaaaahaaceaaaaaahiaaaaaahiaaaaaaceaaabaahiaaaaaaakaa
acaaabaaaaaaaaaaabaaaeaaacaaadaaaaaaaaaaacaaaaaaabaaafaaaaaaaaaa
acaacgaaahaaagaaaaaaaaaaadaaaaaaaeaaanaaaaaaaaaaadaaamaaadaabbaa
aaaaaaaaadaabaaaafaabeaaaaaaaaaaaaaaaaaaaaacpoppfbaaaaafbjaaapka
aaaaiadpaaaaaadpaaaaaaaaaaaaaaaabpaaaaacafaaaaiaaaaaapjabpaaaaac
afaaabiaabaaapjabpaaaaacafaaaciaacaaapjabpaaaaacafaaadiaadaaapja
aeaaaaaeaaaaadoaadaaoejaabaaoekaabaaookaaeaaaaaeaaaaamoaadaaeeja
acaaeekaacaaoekaabaaaaacaaaaapiaafaaoekaafaaaaadabaaahiaaaaaffia
bfaaoekaaeaaaaaeabaaahiabeaaoekaaaaaaaiaabaaoeiaaeaaaaaeaaaaahia
bgaaoekaaaaakkiaabaaoeiaaeaaaaaeaaaaahiabhaaoekaaaaappiaaaaaoeia
aiaaaaadabaaaboaabaaoejaaaaaoeiaabaaaaacabaaahiaacaaoejaafaaaaad
acaaahiaabaanciaabaamjjaaeaaaaaeabaaahiaabaamjiaabaancjaacaaoeib
afaaaaadabaaahiaabaaoeiaabaappjaaiaaaaadabaaacoaabaaoeiaaaaaoeia
aiaaaaadabaaaeoaacaaoejaaaaaoeiaabaaaaacaaaaahiaadaaoekaafaaaaad
acaaahiaaaaaffiabfaaoekaaeaaaaaeaaaaaliabeaakekaaaaaaaiaacaakeia
aeaaaaaeaaaaahiabgaaoekaaaaakkiaaaaapeiaacaaaaadaaaaahiaaaaaoeia
bhaaoekaaeaaaaaeaaaaahiaaaaaoeiabiaappkaaaaaoejbaiaaaaadadaaaboa
abaaoejaaaaaoeiaaiaaaaadadaaacoaabaaoeiaaaaaoeiaaiaaaaadadaaaeoa
acaaoejaaaaaoeiaafaaaaadaaaaahiaacaaoejabiaappkaafaaaaadabaaahia
aaaaffiabcaaoekaaeaaaaaeaaaaaliabbaakekaaaaaaaiaabaakeiaaeaaaaae
aaaaahiabdaaoekaaaaakkiaaaaapeiaabaaaaacaaaaaiiabjaaaakaajaaaaad
abaaabiaagaaoekaaaaaoeiaajaaaaadabaaaciaahaaoekaaaaaoeiaajaaaaad
abaaaeiaaiaaoekaaaaaoeiaafaaaaadacaaapiaaaaacjiaaaaakeiaajaaaaad
adaaabiaajaaoekaacaaoeiaajaaaaadadaaaciaakaaoekaacaaoeiaajaaaaad
adaaaeiaalaaoekaacaaoeiaacaaaaadabaaahiaabaaoeiaadaaoeiaafaaaaad
aaaaaciaaaaaffiaaaaaffiaaeaaaaaeaaaaabiaaaaaaaiaaaaaaaiaaaaaffib
aeaaaaaeacaaahoaamaaoekaaaaaaaiaabaaoeiaafaaaaadaaaaapiaaaaaffja
aoaaoekaaeaaaaaeaaaaapiaanaaoekaaaaaaajaaaaaoeiaaeaaaaaeaaaaapia
apaaoekaaaaakkjaaaaaoeiaaeaaaaaeaaaaapiabaaaoekaaaaappjaaaaaoeia
afaaaaadabaaabiaaaaaffiaaeaaaakaafaaaaadabaaaiiaabaaaaiabjaaffka
afaaaaadabaaafiaaaaapeiabjaaffkaacaaaaadaeaaadoaabaakkiaabaaomia
aeaaaaaeaaaaadmaaaaappiaaaaaoekaaaaaoeiaabaaaaacaaaaammaaaaaoeia
abaaaaacaeaaamoaaaaaoeiappppaaaafdeieefcmmagaaaaeaaaabaaldabaaaa
fjaaaaaeegiocaaaaaaaaaaaamaaaaaafjaaaaaeegiocaaaabaaaaaaagaaaaaa
fjaaaaaeegiocaaaacaaaaaacnaaaaaafjaaaaaeegiocaaaadaaaaaabfaaaaaa
fpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaa
acaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaa
gfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaa
adaaaaaagfaaaaadhccabaaaaeaaaaaagfaaaaadpccabaaaafaaaaaagiaaaaac
agaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaa
abaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaa
acaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaa
egiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaaf
pccabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaa
adaaaaaaegiacaaaaaaaaaaaakaaaaaaogikcaaaaaaaaaaaakaaaaaadcaaaaal
mccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaalaaaaaakgiocaaa
aaaaaaaaalaaaaaadiaaaaahhcaabaaaabaaaaaajgbebaaaabaaaaaacgbjbaaa
acaaaaaadcaaaaakhcaabaaaabaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaa
egacbaiaebaaaaaaabaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaa
pgbpbaaaabaaaaaadiaaaaajhcaabaaaacaaaaaafgifcaaaacaaaaaaaaaaaaaa
egiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaaadaaaaaa
baaaaaaaagiacaaaacaaaaaaaaaaaaaaegacbaaaacaaaaaadcaaaaalhcaabaaa
acaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaaegacbaaa
acaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaaadaaaaaabdaaaaaapgipcaaa
acaaaaaaaaaaaaaaegacbaaaacaaaaaabaaaaaahcccabaaaacaaaaaaegacbaaa
abaaaaaaegacbaaaacaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaaabaaaaaa
egacbaaaacaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaa
acaaaaaadiaaaaaihcaabaaaacaaaaaaegbcbaaaacaaaaaapgipcaaaadaaaaaa
beaaaaaadiaaaaaihcaabaaaadaaaaaafgafbaaaacaaaaaaegiccaaaadaaaaaa
anaaaaaadcaaaaaklcaabaaaacaaaaaaegiicaaaadaaaaaaamaaaaaaagaabaaa
acaaaaaaegaibaaaadaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaaadaaaaaa
aoaaaaaakgakbaaaacaaaaaaegadbaaaacaaaaaadgaaaaaficaabaaaacaaaaaa
abeaaaaaaaaaiadpbbaaaaaibcaabaaaadaaaaaaegiocaaaacaaaaaacgaaaaaa
egaobaaaacaaaaaabbaaaaaiccaabaaaadaaaaaaegiocaaaacaaaaaachaaaaaa
egaobaaaacaaaaaabbaaaaaiecaabaaaadaaaaaaegiocaaaacaaaaaaciaaaaaa
egaobaaaacaaaaaadiaaaaahpcaabaaaaeaaaaaajgacbaaaacaaaaaaegakbaaa
acaaaaaabbaaaaaibcaabaaaafaaaaaaegiocaaaacaaaaaacjaaaaaaegaobaaa
aeaaaaaabbaaaaaiccaabaaaafaaaaaaegiocaaaacaaaaaackaaaaaaegaobaaa
aeaaaaaabbaaaaaiecaabaaaafaaaaaaegiocaaaacaaaaaaclaaaaaaegaobaaa
aeaaaaaaaaaaaaahhcaabaaaadaaaaaaegacbaaaadaaaaaaegacbaaaafaaaaaa
diaaaaahicaabaaaabaaaaaabkaabaaaacaaaaaabkaabaaaacaaaaaadcaaaaak
icaabaaaabaaaaaaakaabaaaacaaaaaaakaabaaaacaaaaaadkaabaiaebaaaaaa
abaaaaaadcaaaaakhccabaaaadaaaaaaegiccaaaacaaaaaacmaaaaaapgapbaaa
abaaaaaaegacbaaaadaaaaaadiaaaaajhcaabaaaacaaaaaafgifcaaaabaaaaaa
aeaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaa
adaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaaacaaaaaadcaaaaal
hcaabaaaacaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaa
egacbaaaacaaaaaaaaaaaaaihcaabaaaacaaaaaaegacbaaaacaaaaaaegiccaaa
adaaaaaabdaaaaaadcaaaaalhcaabaaaacaaaaaaegacbaaaacaaaaaapgipcaaa
adaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaaaeaaaaaa
egacbaaaabaaaaaaegacbaaaacaaaaaabaaaaaahbccabaaaaeaaaaaaegbcbaaa
abaaaaaaegacbaaaacaaaaaabaaaaaaheccabaaaaeaaaaaaegbcbaaaacaaaaaa
egacbaaaacaaaaaadiaaaaaiccaabaaaaaaaaaaabkaabaaaaaaaaaaaakiacaaa
abaaaaaaafaaaaaadiaaaaakncaabaaaabaaaaaaagahbaaaaaaaaaaaaceaaaaa
aaaaaadpaaaaaaaaaaaaaadpaaaaaadpdgaaaaafmccabaaaafaaaaaakgaobaaa
aaaaaaaaaaaaaaahdccabaaaafaaaaaakgakbaaaabaaaaaamgaabaaaabaaaaaa
doaaaaabejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaa
apapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaaahahaaaalaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaaabaaaaaaaaaaaaaa
adaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaaadaaaaaaafaaaaaa
apaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfcenebemaafeeffied
epepfceeaaedepemepfcaaklepfdeheolaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakeaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahaiaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahaiaaaakeaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaakeaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklkl"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_7 * (tmpvar_2 * unity_Scale.w));
  mediump vec3 tmpvar_14;
  mediump vec4 normal_15;
  normal_15 = tmpvar_13;
  highp float vC_16;
  mediump vec3 x3_17;
  mediump vec3 x2_18;
  mediump vec3 x1_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHAr, normal_15);
  x1_19.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAg, normal_15);
  x1_19.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAb, normal_15);
  x1_19.z = tmpvar_22;
  mediump vec4 tmpvar_23;
  tmpvar_23 = (normal_15.xyzz * normal_15.yzzx);
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHBr, tmpvar_23);
  x2_18.x = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBg, tmpvar_23);
  x2_18.y = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBb, tmpvar_23);
  x2_18.z = tmpvar_26;
  mediump float tmpvar_27;
  tmpvar_27 = ((normal_15.x * normal_15.x) - (normal_15.y * normal_15.y));
  vC_16 = tmpvar_27;
  highp vec3 tmpvar_28;
  tmpvar_28 = (unity_SHC.xyz * vC_16);
  x3_17 = tmpvar_28;
  tmpvar_14 = ((x1_19 + x2_18) + x3_17);
  shlight_3 = tmpvar_14;
  tmpvar_6 = shlight_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = (tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
varying highp vec4 xlv_TEXCOORD0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_2 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (tmpvar_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_3 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = clouds_7;
  lowp vec4 arg0_14;
  arg0_14 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (arg0_14, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_13).xyz;
  tmpvar_4 = tmpvar_15;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_17;
  tmpvar_17 = ((tmpvar_16.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_17;
  lowp float tmpvar_18;
  mediump float lightShadowDataX_19;
  highp float dist_20;
  lowp float tmpvar_21;
  tmpvar_21 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
  dist_20 = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = _LightShadowData.x;
  lightShadowDataX_19 = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = max (float((dist_20 > (xlv_TEXCOORD4.z / xlv_TEXCOORD4.w))), lightShadowDataX_19);
  tmpvar_18 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = normalize(xlv_TEXCOORD3);
  mediump vec3 viewDir_25;
  viewDir_25 = tmpvar_24;
  lowp vec4 c_26;
  highp float nh_27;
  lowp float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_3, xlv_TEXCOORD1));
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_3, normalize((xlv_TEXCOORD1 + viewDir_25))));
  nh_27 = tmpvar_29;
  mediump float arg1_30;
  arg1_30 = (tmpvar_5 * 128.0);
  highp float tmpvar_31;
  tmpvar_31 = (pow (nh_27, arg1_30) * tmpvar_6);
  highp vec3 tmpvar_32;
  tmpvar_32 = ((((tmpvar_2 * _LightColor0.xyz) * tmpvar_28) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_31)) * (tmpvar_18 * 2.0));
  c_26.xyz = tmpvar_32;
  highp float tmpvar_33;
  tmpvar_33 = (tmpvar_8.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_31) * tmpvar_18));
  c_26.w = tmpvar_33;
  c_1.w = c_26.w;
  c_1.xyz = (c_26.xyz + (tmpvar_2 * xlv_TEXCOORD2));
  c_1.xyz = (c_1.xyz + tmpvar_4);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_8;
  tmpvar_8[0] = _Object2World[0].xyz;
  tmpvar_8[1] = _Object2World[1].xyz;
  tmpvar_8[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_1.xyz;
  tmpvar_10 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_11;
  tmpvar_11[0].x = tmpvar_9.x;
  tmpvar_11[0].y = tmpvar_10.x;
  tmpvar_11[0].z = tmpvar_2.x;
  tmpvar_11[1].x = tmpvar_9.y;
  tmpvar_11[1].y = tmpvar_10.y;
  tmpvar_11[1].z = tmpvar_2.y;
  tmpvar_11[2].x = tmpvar_9.z;
  tmpvar_11[2].y = tmpvar_10.z;
  tmpvar_11[2].z = tmpvar_2.z;
  highp vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = (tmpvar_8 * (tmpvar_2 * unity_Scale.w));
  mediump vec3 tmpvar_15;
  mediump vec4 normal_16;
  normal_16 = tmpvar_14;
  highp float vC_17;
  mediump vec3 x3_18;
  mediump vec3 x2_19;
  mediump vec3 x1_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAr, normal_16);
  x1_20.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAg, normal_16);
  x1_20.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHAb, normal_16);
  x1_20.z = tmpvar_23;
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_16.xyzz * normal_16.yzzx);
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBr, tmpvar_24);
  x2_19.x = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBg, tmpvar_24);
  x2_19.y = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = dot (unity_SHBb, tmpvar_24);
  x2_19.z = tmpvar_27;
  mediump float tmpvar_28;
  tmpvar_28 = ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y));
  vC_17 = tmpvar_28;
  highp vec3 tmpvar_29;
  tmpvar_29 = (unity_SHC.xyz * vC_17);
  x3_18 = tmpvar_29;
  tmpvar_15 = ((x1_20 + x2_19) + x3_18);
  shlight_3 = tmpvar_15;
  tmpvar_6 = shlight_3;
  highp vec4 o_30;
  highp vec4 tmpvar_31;
  tmpvar_31 = (tmpvar_7 * 0.5);
  highp vec2 tmpvar_32;
  tmpvar_32.x = tmpvar_31.x;
  tmpvar_32.y = (tmpvar_31.y * _ProjectionParams.x);
  o_30.xy = (tmpvar_32 + tmpvar_31.w);
  o_30.zw = tmpvar_7.zw;
  gl_Position = tmpvar_7;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = (tmpvar_11 * (((_World2Object * tmpvar_13).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD4 = o_30;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
varying highp vec4 xlv_TEXCOORD0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_2 = tmpvar_10;
  lowp vec3 normal_11;
  normal_11.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_11.z = sqrt((1.0 - clamp (dot (normal_11.xy, normal_11.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (normal_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_3 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = clouds_7;
  lowp vec4 arg0_14;
  arg0_14 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (arg0_14, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_13).xyz;
  tmpvar_4 = tmpvar_15;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_17;
  tmpvar_17 = ((tmpvar_16.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4);
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(xlv_TEXCOORD3);
  mediump vec3 viewDir_20;
  viewDir_20 = tmpvar_19;
  lowp vec4 c_21;
  highp float nh_22;
  lowp float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_3, xlv_TEXCOORD1));
  mediump float tmpvar_24;
  tmpvar_24 = max (0.0, dot (tmpvar_3, normalize((xlv_TEXCOORD1 + viewDir_20))));
  nh_22 = tmpvar_24;
  mediump float arg1_25;
  arg1_25 = (tmpvar_5 * 128.0);
  highp float tmpvar_26;
  tmpvar_26 = (pow (nh_22, arg1_25) * tmpvar_6);
  highp vec3 tmpvar_27;
  tmpvar_27 = ((((tmpvar_2 * _LightColor0.xyz) * tmpvar_23) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_26)) * (tmpvar_18.x * 2.0));
  c_21.xyz = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = (tmpvar_8.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_26) * tmpvar_18.x));
  c_21.w = tmpvar_28;
  c_1.w = c_21.w;
  c_1.xyz = (c_21.xyz + (tmpvar_2 * xlv_TEXCOORD2));
  c_1.xyz = (c_1.xyz + tmpvar_4);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out lowp vec3 xlv_TEXCOORD1;
out lowp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec4 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_7 * (tmpvar_2 * unity_Scale.w));
  mediump vec3 tmpvar_14;
  mediump vec4 normal_15;
  normal_15 = tmpvar_13;
  highp float vC_16;
  mediump vec3 x3_17;
  mediump vec3 x2_18;
  mediump vec3 x1_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHAr, normal_15);
  x1_19.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAg, normal_15);
  x1_19.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAb, normal_15);
  x1_19.z = tmpvar_22;
  mediump vec4 tmpvar_23;
  tmpvar_23 = (normal_15.xyzz * normal_15.yzzx);
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHBr, tmpvar_23);
  x2_18.x = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBg, tmpvar_23);
  x2_18.y = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBb, tmpvar_23);
  x2_18.z = tmpvar_26;
  mediump float tmpvar_27;
  tmpvar_27 = ((normal_15.x * normal_15.x) - (normal_15.y * normal_15.y));
  vC_16 = tmpvar_27;
  highp vec3 tmpvar_28;
  tmpvar_28 = (unity_SHC.xyz * vC_16);
  x3_17 = tmpvar_28;
  tmpvar_14 = ((x1_19 + x2_18) + x3_17);
  shlight_3 = tmpvar_14;
  tmpvar_6 = shlight_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = (tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
in highp vec4 xlv_TEXCOORD0;
in lowp vec3 xlv_TEXCOORD1;
in lowp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_2 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (tmpvar_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_3 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = clouds_7;
  lowp vec4 arg0_14;
  arg0_14 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (arg0_14, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_13).xyz;
  tmpvar_4 = tmpvar_15;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_17;
  tmpvar_17 = ((tmpvar_16.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_17;
  lowp float tmpvar_18;
  mediump float lightShadowDataX_19;
  highp float dist_20;
  lowp float tmpvar_21;
  tmpvar_21 = textureProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
  dist_20 = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = _LightShadowData.x;
  lightShadowDataX_19 = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = max (float((dist_20 > (xlv_TEXCOORD4.z / xlv_TEXCOORD4.w))), lightShadowDataX_19);
  tmpvar_18 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = normalize(xlv_TEXCOORD3);
  mediump vec3 viewDir_25;
  viewDir_25 = tmpvar_24;
  lowp vec4 c_26;
  highp float nh_27;
  lowp float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_3, xlv_TEXCOORD1));
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_3, normalize((xlv_TEXCOORD1 + viewDir_25))));
  nh_27 = tmpvar_29;
  mediump float arg1_30;
  arg1_30 = (tmpvar_5 * 128.0);
  highp float tmpvar_31;
  tmpvar_31 = (pow (nh_27, arg1_30) * tmpvar_6);
  highp vec3 tmpvar_32;
  tmpvar_32 = ((((tmpvar_2 * _LightColor0.xyz) * tmpvar_28) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_31)) * (tmpvar_18 * 2.0));
  c_26.xyz = tmpvar_32;
  highp float tmpvar_33;
  tmpvar_33 = (tmpvar_8.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_31) * tmpvar_18));
  c_26.w = tmpvar_33;
  c_1.w = c_26.w;
  c_1.xyz = (c_26.xyz + (tmpvar_2 * xlv_TEXCOORD2));
  c_1.xyz = (c_1.xyz + tmpvar_4);
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 12 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Vector 13 [_ProjectionParams]
Vector 15 [unity_LightmapST]
Vector 16 [_MainTex_ST]
Vector 17 [_Clouds_ST]
"!!ARBvp1.0
PARAM c[18] = { { 0.5 },
		state.matrix.mvp,
		program.local[5..17] };
TEMP R0;
TEMP R1;
DP4 R0.w, vertex.position, c[4];
DP4 R0.z, vertex.position, c[3];
DP4 R0.x, vertex.position, c[1];
DP4 R0.y, vertex.position, c[2];
MUL R1.xyz, R0.xyww, c[0].x;
MUL R1.y, R1, c[13].x;
ADD result.texcoord[2].xy, R1, R1.z;
MOV result.position, R0;
MOV result.texcoord[2].zw, R0;
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[17].xyxy, c[17];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[16], c[16].zwzw;
MAD result.texcoord[1].xy, vertex.texcoord[1], c[15], c[15].zwzw;
END
# 12 instructions, 2 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 12 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 0 [glstate_matrix_mvp]
Vector 12 [_ProjectionParams]
Vector 13 [_ScreenParams]
Vector 14 [unity_LightmapST]
Vector 15 [_MainTex_ST]
Vector 16 [_Clouds_ST]
"vs_2_0
def c17, 0.50000000, 0, 0, 0
dcl_position0 v0
dcl_texcoord0 v3
dcl_texcoord1 v4
dp4 r0.w, v0, c3
dp4 r0.z, v0, c2
dp4 r0.x, v0, c0
dp4 r0.y, v0, c1
mul r1.xyz, r0.xyww, c17.x
mul r1.y, r1, c12.x
mad oT2.xy, r1.z, c13.zwzw, r1
mov oPos, r0
mov oT2.zw, r0
mad oT0.zw, v3.xyxy, c16.xyxy, c16
mad oT0.xy, v3, c15, c15.zwzw
mad oT1.xy, v4, c14, c14.zwzw
"
}
SubProgram "d3d11 " {
// Stats: 10 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "color" Color
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 208
Vector 160 [unity_LightmapST]
Vector 176 [_MainTex_ST]
Vector 192 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 80 [_ProjectionParams]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityPerDraw" 2
"vs_4_0
eefiecedbdaifmfjdobbcfcecblponieoekeiajcabaaaaaamiadaaaaadaaaaaa
cmaaaaaapeaaaaaahmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahaaaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheoiaaaaaaaaeaaaaaa
aiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaheaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaadamaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
apaaaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefc
eeacaaaaeaaaabaajbaaaaaafjaaaaaeegiocaaaaaaaaaaaanaaaaaafjaaaaae
egiocaaaabaaaaaaagaaaaaafjaaaaaeegiocaaaacaaaaaaaeaaaaaafpaaaaad
pcbabaaaaaaaaaaafpaaaaaddcbabaaaadaaaaaafpaaaaaddcbabaaaaeaaaaaa
ghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaad
dccabaaaacaaaaaagfaaaaadpccabaaaadaaaaaagiaaaaacacaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaacaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaacaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaa
aaaaaaaaalaaaaaaogikcaaaaaaaaaaaalaaaaaadcaaaaalmccabaaaabaaaaaa
agbebaaaadaaaaaaagiecaaaaaaaaaaaamaaaaaakgiocaaaaaaaaaaaamaaaaaa
dcaaaaaldccabaaaacaaaaaaegbabaaaaeaaaaaaegiacaaaaaaaaaaaakaaaaaa
ogikcaaaaaaaaaaaakaaaaaadiaaaaaiccaabaaaaaaaaaaabkaabaaaaaaaaaaa
akiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaaabaaaaaaagahbaaaaaaaaaaa
aceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadpdgaaaaafmccabaaaadaaaaaa
kgaobaaaaaaaaaaaaaaaaaahdccabaaaadaaaaaakgakbaaaabaaaaaamgaabaaa
abaaaaaadoaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 10 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Bind "vertex" Vertex
Bind "color" Color
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 208
Vector 160 [unity_LightmapST]
Vector 176 [_MainTex_ST]
Vector 192 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 80 [_ProjectionParams]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityPerDraw" 2
"vs_4_0_level_9_1
eefiecedkfndinkhjojlgaklnachklmndefelhhlabaaaaaafiafaaaaaeaaaaaa
daaaaaaalmabaaaaaiaeaaaanaaeaaaaebgpgodjieabaaaaieabaaaaaaacpopp
diabaaaaemaaaaaaadaaceaaaaaaeiaaaaaaeiaaaaaaceaaabaaeiaaaaaaakaa
adaaabaaaaaaaaaaabaaafaaabaaaeaaaaaaaaaaacaaaaaaaeaaafaaaaaaaaaa
aaaaaaaaaaacpoppfbaaaaafajaaapkaaaaaaadpaaaaaaaaaaaaaaaaaaaaaaaa
bpaaaaacafaaaaiaaaaaapjabpaaaaacafaaadiaadaaapjabpaaaaacafaaaeia
aeaaapjaaeaaaaaeaaaaadoaadaaoejaacaaoekaacaaookaaeaaaaaeaaaaamoa
adaaeejaadaaeekaadaaoekaaeaaaaaeabaaadoaaeaaoejaabaaoekaabaaooka
afaaaaadaaaaapiaaaaaffjaagaaoekaaeaaaaaeaaaaapiaafaaoekaaaaaaaja
aaaaoeiaaeaaaaaeaaaaapiaahaaoekaaaaakkjaaaaaoeiaaeaaaaaeaaaaapia
aiaaoekaaaaappjaaaaaoeiaafaaaaadabaaabiaaaaaffiaaeaaaakaafaaaaad
abaaaiiaabaaaaiaajaaaakaafaaaaadabaaafiaaaaapeiaajaaaakaacaaaaad
acaaadoaabaakkiaabaaomiaaeaaaaaeaaaaadmaaaaappiaaaaaoekaaaaaoeia
abaaaaacaaaaammaaaaaoeiaabaaaaacacaaamoaaaaaoeiappppaaaafdeieefc
eeacaaaaeaaaabaajbaaaaaafjaaaaaeegiocaaaaaaaaaaaanaaaaaafjaaaaae
egiocaaaabaaaaaaagaaaaaafjaaaaaeegiocaaaacaaaaaaaeaaaaaafpaaaaad
pcbabaaaaaaaaaaafpaaaaaddcbabaaaadaaaaaafpaaaaaddcbabaaaaeaaaaaa
ghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaad
dccabaaaacaaaaaagfaaaaadpccabaaaadaaaaaagiaaaaacacaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaacaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaacaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaa
aaaaaaaaalaaaaaaogikcaaaaaaaaaaaalaaaaaadcaaaaalmccabaaaabaaaaaa
agbebaaaadaaaaaaagiecaaaaaaaaaaaamaaaaaakgiocaaaaaaaaaaaamaaaaaa
dcaaaaaldccabaaaacaaaaaaegbabaaaaeaaaaaaegiacaaaaaaaaaaaakaaaaaa
ogikcaaaaaaaaaaaakaaaaaadiaaaaaiccaabaaaaaaaaaaabkaabaaaaaaaaaaa
akiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaaabaaaaaaagahbaaaaaaaaaaa
aceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadpdgaaaaafmccabaaaadaaaaaa
kgaobaaaaaaaaaaaaaaaaaahdccabaaaadaaaaaakgakbaaaabaaaaaamgaabaaa
abaaaaaadoaaaaabejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
abaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaaahaaaaaa
laaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaaabaaaaaa
aaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
afaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfcenebemaa
feeffiedepepfceeaaedepemepfcaaklepfdeheoiaaaaaaaaeaaaaaaaiaaaaaa
giaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaabaaaaaaapaaaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaa
acaaaaaaadamaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaapaaaaaa
fdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _LightShadowData;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform lowp float _LightAmount;
uniform sampler2D unity_Lightmap;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  mediump vec3 clouds_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_6;
  tmpvar_6 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_4 = tmpvar_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_5.xyz + clouds_4);
  tmpvar_2 = tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_8.w = 0.0;
  tmpvar_8.xyz = clouds_4;
  lowp vec4 arg0_9;
  arg0_9 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_10;
  tmpvar_10 = mix (arg0_9, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_8).xyz;
  tmpvar_3 = tmpvar_10;
  lowp float tmpvar_11;
  mediump float lightShadowDataX_12;
  highp float dist_13;
  lowp float tmpvar_14;
  tmpvar_14 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD2).x;
  dist_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = _LightShadowData.x;
  lightShadowDataX_12 = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = max (float((dist_13 > (xlv_TEXCOORD2.z / xlv_TEXCOORD2.w))), lightShadowDataX_12);
  tmpvar_11 = tmpvar_16;
  c_1.xyz = (tmpvar_2 * min ((2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz), vec3((tmpvar_11 * 2.0))));
  c_1.w = tmpvar_5.w;
  c_1.xyz = (c_1.xyz + tmpvar_3);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  tmpvar_2 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_3;
  highp vec4 tmpvar_4;
  tmpvar_4 = (tmpvar_2 * 0.5);
  highp vec2 tmpvar_5;
  tmpvar_5.x = tmpvar_4.x;
  tmpvar_5.y = (tmpvar_4.y * _ProjectionParams.x);
  o_3.xy = (tmpvar_5 + tmpvar_4.w);
  o_3.zw = tmpvar_2.zw;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = o_3;
}



#endif
#ifdef FRAGMENT

uniform sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform lowp float _LightAmount;
uniform sampler2D unity_Lightmap;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  mediump vec3 clouds_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_6;
  tmpvar_6 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_4 = tmpvar_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_5.xyz + clouds_4);
  tmpvar_2 = tmpvar_7;
  lowp vec3 normal_8;
  normal_8.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_8.z = sqrt((1.0 - clamp (dot (normal_8.xy, normal_8.xy), 0.0, 1.0)));
  mediump vec4 tmpvar_9;
  tmpvar_9.w = 0.0;
  tmpvar_9.xyz = clouds_4;
  lowp vec4 arg0_10;
  arg0_10 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_11;
  tmpvar_11 = mix (arg0_10, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_9).xyz;
  tmpvar_3 = tmpvar_11;
  lowp vec4 tmpvar_12;
  tmpvar_12 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD2);
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (unity_Lightmap, xlv_TEXCOORD1);
  lowp vec3 tmpvar_14;
  tmpvar_14 = ((8.0 * tmpvar_13.w) * tmpvar_13.xyz);
  c_1.xyz = (tmpvar_2 * max (min (tmpvar_14, ((tmpvar_12.x * 2.0) * tmpvar_13.xyz)), (tmpvar_14 * tmpvar_12.x)));
  c_1.w = tmpvar_5.w;
  c_1.xyz = (c_1.xyz + tmpvar_3);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
out highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _LightShadowData;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform lowp float _LightAmount;
uniform sampler2D unity_Lightmap;
in highp vec4 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  mediump vec3 clouds_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_6;
  tmpvar_6 = texture (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_4 = tmpvar_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_5.xyz + clouds_4);
  tmpvar_2 = tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_8.w = 0.0;
  tmpvar_8.xyz = clouds_4;
  lowp vec4 arg0_9;
  arg0_9 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_10;
  tmpvar_10 = mix (arg0_9, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_8).xyz;
  tmpvar_3 = tmpvar_10;
  lowp float tmpvar_11;
  mediump float lightShadowDataX_12;
  highp float dist_13;
  lowp float tmpvar_14;
  tmpvar_14 = textureProj (_ShadowMapTexture, xlv_TEXCOORD2).x;
  dist_13 = tmpvar_14;
  highp float tmpvar_15;
  tmpvar_15 = _LightShadowData.x;
  lightShadowDataX_12 = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = max (float((dist_13 > (xlv_TEXCOORD2.z / xlv_TEXCOORD2.w))), lightShadowDataX_12);
  tmpvar_11 = tmpvar_16;
  c_1.xyz = (tmpvar_2 * min ((2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz), vec3((tmpvar_11 * 2.0))));
  c_1.w = tmpvar_5.w;
  c_1.xyz = (c_1.xyz + tmpvar_3);
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 25 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" ATTR14
Matrix 9 [_World2Object]
Vector 13 [_WorldSpaceCameraPos]
Vector 14 [_ProjectionParams]
Vector 16 [unity_Scale]
Vector 17 [unity_LightmapST]
Vector 18 [_MainTex_ST]
Vector 19 [_Clouds_ST]
"!!ARBvp1.0
PARAM c[20] = { { 1, 0.5 },
		state.matrix.mvp,
		program.local[5..19] };
TEMP R0;
TEMP R1;
TEMP R2;
MOV R0.xyz, vertex.attrib[14];
MUL R1.xyz, vertex.normal.zxyw, R0.yzxw;
MAD R0.xyz, vertex.normal.yzxw, R0.zxyw, -R1;
MUL R0.xyz, R0, vertex.attrib[14].w;
MOV R1.xyz, c[13];
MOV R1.w, c[0].x;
DP4 R0.w, vertex.position, c[4];
DP4 R2.z, R1, c[11];
DP4 R2.x, R1, c[9];
DP4 R2.y, R1, c[10];
MAD R2.xyz, R2, c[16].w, -vertex.position;
DP3 result.texcoord[2].y, R2, R0;
DP4 R0.z, vertex.position, c[3];
DP4 R0.x, vertex.position, c[1];
DP4 R0.y, vertex.position, c[2];
MUL R1.xyz, R0.xyww, c[0].y;
MUL R1.y, R1, c[14].x;
DP3 result.texcoord[2].z, vertex.normal, R2;
DP3 result.texcoord[2].x, R2, vertex.attrib[14];
ADD result.texcoord[3].xy, R1, R1.z;
MOV result.position, R0;
MOV result.texcoord[3].zw, R0;
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[19].xyxy, c[19];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[18], c[18].zwzw;
MAD result.texcoord[1].xy, vertex.texcoord[1], c[17], c[17].zwzw;
END
# 25 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 26 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 8 [_World2Object]
Vector 12 [_WorldSpaceCameraPos]
Vector 13 [_ProjectionParams]
Vector 14 [_ScreenParams]
Vector 15 [unity_Scale]
Vector 16 [unity_LightmapST]
Vector 17 [_MainTex_ST]
Vector 18 [_Clouds_ST]
"vs_2_0
def c19, 1.00000000, 0.50000000, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
dcl_texcoord1 v4
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r0.xyz, v2.yzxw, r0.zxyw, -r1
mul r0.xyz, r0, v1.w
mov r1.xyz, c12
mov r1.w, c19.x
dp4 r0.w, v0, c3
dp4 r2.z, r1, c10
dp4 r2.x, r1, c8
dp4 r2.y, r1, c9
mad r2.xyz, r2, c15.w, -v0
dp3 oT2.y, r2, r0
dp4 r0.z, v0, c2
dp4 r0.x, v0, c0
dp4 r0.y, v0, c1
mul r1.xyz, r0.xyww, c19.y
mul r1.y, r1, c13.x
dp3 oT2.z, v2, r2
dp3 oT2.x, r2, v1
mad oT3.xy, r1.z, c14.zwzw, r1
mov oPos, r0
mov oT3.zw, r0
mad oT0.zw, v3.xyxy, c18.xyxy, c18
mad oT0.xy, v3, c17, c17.zwzw
mad oT1.xy, v4, c16, c16.zwzw
"
}
SubProgram "d3d11 " {
// Stats: 21 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 208
Vector 160 [unity_LightmapST]
Vector 176 [_MainTex_ST]
Vector 192 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityPerDraw" 2
"vs_4_0
eefieceddoknnlddlabbapedojkjnmahjfbpajeeabaaaaaaiaafaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaadamaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcoeadaaaaeaaaabaa
pjaaaaaafjaaaaaeegiocaaaaaaaaaaaanaaaaaafjaaaaaeegiocaaaabaaaaaa
agaaaaaafjaaaaaeegiocaaaacaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaa
fpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaa
adaaaaaafpaaaaaddcbabaaaaeaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaa
gfaaaaadpccabaaaabaaaaaagfaaaaaddccabaaaacaaaaaagfaaaaadhccabaaa
adaaaaaagfaaaaadpccabaaaaeaaaaaagiaaaaacadaaaaaadiaaaaaipcaabaaa
aaaaaaaafgbfbaaaaaaaaaaaegiocaaaacaaaaaaabaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaacaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaacaaaaaakgbkbaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaadaaaaaa
pgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaa
alaaaaaaogikcaaaaaaaaaaaalaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaa
adaaaaaaagiecaaaaaaaaaaaamaaaaaakgiocaaaaaaaaaaaamaaaaaadcaaaaal
dccabaaaacaaaaaaegbabaaaaeaaaaaaegiacaaaaaaaaaaaakaaaaaaogikcaaa
aaaaaaaaakaaaaaadiaaaaahhcaabaaaabaaaaaajgbebaaaabaaaaaacgbjbaaa
acaaaaaadcaaaaakhcaabaaaabaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaa
egacbaiaebaaaaaaabaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaa
pgbpbaaaabaaaaaadiaaaaajhcaabaaaacaaaaaafgifcaaaabaaaaaaaeaaaaaa
egiccaaaacaaaaaabbaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaaacaaaaaa
baaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaaacaaaaaadcaaaaalhcaabaaa
acaaaaaaegiccaaaacaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaa
acaaaaaaaaaaaaaihcaabaaaacaaaaaaegacbaaaacaaaaaaegiccaaaacaaaaaa
bdaaaaaadcaaaaalhcaabaaaacaaaaaaegacbaaaacaaaaaapgipcaaaacaaaaaa
beaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaaadaaaaaaegacbaaa
abaaaaaaegacbaaaacaaaaaabaaaaaahbccabaaaadaaaaaaegbcbaaaabaaaaaa
egacbaaaacaaaaaabaaaaaaheccabaaaadaaaaaaegbcbaaaacaaaaaaegacbaaa
acaaaaaadiaaaaaiccaabaaaaaaaaaaabkaabaaaaaaaaaaaakiacaaaabaaaaaa
afaaaaaadiaaaaakncaabaaaabaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadp
aaaaaaaaaaaaaadpaaaaaadpdgaaaaafmccabaaaaeaaaaaakgaobaaaaaaaaaaa
aaaaaaahdccabaaaaeaaaaaakgakbaaaabaaaaaamgaabaaaabaaaaaadoaaaaab
"
}
SubProgram "d3d11_9x " {
// Stats: 21 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 208
Vector 160 [unity_LightmapST]
Vector 176 [_MainTex_ST]
Vector 192 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityPerDraw" 2
"vs_4_0_level_9_1
eefiecednpellobckgejdobpklfcdhlpompnhmgjabaaaaaaamaiaaaaaeaaaaaa
daaaaaaaliacaaaakeagaaaagmahaaaaebgpgodjiaacaaaaiaacaaaaaaacpopp
ciacaaaafiaaaaaaaeaaceaaaaaafeaaaaaafeaaaaaaceaaabaafeaaaaaaakaa
adaaabaaaaaaaaaaabaaaeaaacaaaeaaaaaaaaaaacaaaaaaaeaaagaaaaaaaaaa
acaabaaaafaaakaaaaaaaaaaaaaaaaaaaaacpoppfbaaaaafapaaapkaaaaaaadp
aaaaaaaaaaaaaaaaaaaaaaaabpaaaaacafaaaaiaaaaaapjabpaaaaacafaaabia
abaaapjabpaaaaacafaaaciaacaaapjabpaaaaacafaaadiaadaaapjabpaaaaac
afaaaeiaaeaaapjaaeaaaaaeaaaaadoaadaaoejaacaaoekaacaaookaaeaaaaae
aaaaamoaadaaeejaadaaeekaadaaoekaaeaaaaaeabaaadoaaeaaoejaabaaoeka
abaaookaabaaaaacaaaaahiaaeaaoekaafaaaaadabaaahiaaaaaffiaalaaoeka
aeaaaaaeaaaaaliaakaakekaaaaaaaiaabaakeiaaeaaaaaeaaaaahiaamaaoeka
aaaakkiaaaaapeiaacaaaaadaaaaahiaaaaaoeiaanaaoekaaeaaaaaeaaaaahia
aaaaoeiaaoaappkaaaaaoejbaiaaaaadacaaaboaabaaoejaaaaaoeiaabaaaaac
abaaahiaabaaoejaafaaaaadacaaahiaabaamjiaacaancjaaeaaaaaeabaaahia
acaamjjaabaanciaacaaoeibafaaaaadabaaahiaabaaoeiaabaappjaaiaaaaad
acaaacoaabaaoeiaaaaaoeiaaiaaaaadacaaaeoaacaaoejaaaaaoeiaafaaaaad
aaaaapiaaaaaffjaahaaoekaaeaaaaaeaaaaapiaagaaoekaaaaaaajaaaaaoeia
aeaaaaaeaaaaapiaaiaaoekaaaaakkjaaaaaoeiaaeaaaaaeaaaaapiaajaaoeka
aaaappjaaaaaoeiaafaaaaadabaaabiaaaaaffiaafaaaakaafaaaaadabaaaiia
abaaaaiaapaaaakaafaaaaadabaaafiaaaaapeiaapaaaakaacaaaaadadaaadoa
abaakkiaabaaomiaaeaaaaaeaaaaadmaaaaappiaaaaaoekaaaaaoeiaabaaaaac
aaaaammaaaaaoeiaabaaaaacadaaamoaaaaaoeiappppaaaafdeieefcoeadaaaa
eaaaabaapjaaaaaafjaaaaaeegiocaaaaaaaaaaaanaaaaaafjaaaaaeegiocaaa
abaaaaaaagaaaaaafjaaaaaeegiocaaaacaaaaaabfaaaaaafpaaaaadpcbabaaa
aaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaad
dcbabaaaadaaaaaafpaaaaaddcbabaaaaeaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaaddccabaaaacaaaaaagfaaaaad
hccabaaaadaaaaaagfaaaaadpccabaaaaeaaaaaagiaaaaacadaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaacaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaacaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaa
aaaaaaaaalaaaaaaogikcaaaaaaaaaaaalaaaaaadcaaaaalmccabaaaabaaaaaa
agbebaaaadaaaaaaagiecaaaaaaaaaaaamaaaaaakgiocaaaaaaaaaaaamaaaaaa
dcaaaaaldccabaaaacaaaaaaegbabaaaaeaaaaaaegiacaaaaaaaaaaaakaaaaaa
ogikcaaaaaaaaaaaakaaaaaadiaaaaahhcaabaaaabaaaaaajgbebaaaabaaaaaa
cgbjbaaaacaaaaaadcaaaaakhcaabaaaabaaaaaajgbebaaaacaaaaaacgbjbaaa
abaaaaaaegacbaiaebaaaaaaabaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaa
abaaaaaapgbpbaaaabaaaaaadiaaaaajhcaabaaaacaaaaaafgifcaaaabaaaaaa
aeaaaaaaegiccaaaacaaaaaabbaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaa
acaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaaacaaaaaadcaaaaal
hcaabaaaacaaaaaaegiccaaaacaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaa
egacbaaaacaaaaaaaaaaaaaihcaabaaaacaaaaaaegacbaaaacaaaaaaegiccaaa
acaaaaaabdaaaaaadcaaaaalhcaabaaaacaaaaaaegacbaaaacaaaaaapgipcaaa
acaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaaadaaaaaa
egacbaaaabaaaaaaegacbaaaacaaaaaabaaaaaahbccabaaaadaaaaaaegbcbaaa
abaaaaaaegacbaaaacaaaaaabaaaaaaheccabaaaadaaaaaaegbcbaaaacaaaaaa
egacbaaaacaaaaaadiaaaaaiccaabaaaaaaaaaaabkaabaaaaaaaaaaaakiacaaa
abaaaaaaafaaaaaadiaaaaakncaabaaaabaaaaaaagahbaaaaaaaaaaaaceaaaaa
aaaaaadpaaaaaaaaaaaaaadpaaaaaadpdgaaaaafmccabaaaaeaaaaaakgaobaaa
aaaaaaaaaaaaaaahdccabaaaaeaaaaaakgakbaaaabaaaaaamgaabaaaabaaaaaa
doaaaaabejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaa
apapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaaahahaaaalaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaaabaaaaaaaaaaaaaa
adaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaaadaaaaaaafaaaaaa
apaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfcenebemaafeeffied
epepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
adamaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahaiaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklkl"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  tmpvar_4 = tmpvar_1.xyz;
  tmpvar_5 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_4.x;
  tmpvar_6[0].y = tmpvar_5.x;
  tmpvar_6[0].z = tmpvar_2.x;
  tmpvar_6[1].x = tmpvar_4.y;
  tmpvar_6[1].y = tmpvar_5.y;
  tmpvar_6[1].z = tmpvar_2.y;
  tmpvar_6[2].x = tmpvar_4.z;
  tmpvar_6[2].y = tmpvar_5.z;
  tmpvar_6[2].z = tmpvar_2.z;
  highp vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (tmpvar_6 * (((_World2Object * tmpvar_7).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _LightShadowData;
uniform lowp vec4 _SpecColor;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_2 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (tmpvar_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_3 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = clouds_7;
  lowp vec4 arg0_14;
  arg0_14 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (arg0_14, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_13).xyz;
  tmpvar_4 = tmpvar_15;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_17;
  tmpvar_17 = ((tmpvar_16.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_17;
  lowp float tmpvar_18;
  mediump float lightShadowDataX_19;
  highp float dist_20;
  lowp float tmpvar_21;
  tmpvar_21 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD3).x;
  dist_20 = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = _LightShadowData.x;
  lightShadowDataX_19 = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = max (float((dist_20 > (xlv_TEXCOORD3.z / xlv_TEXCOORD3.w))), lightShadowDataX_19);
  tmpvar_18 = tmpvar_23;
  c_1.w = 0.0;
  highp vec3 tmpvar_24;
  tmpvar_24 = normalize(xlv_TEXCOORD2);
  mediump vec4 tmpvar_25;
  mediump vec3 viewDir_26;
  viewDir_26 = tmpvar_24;
  mediump vec3 specColor_27;
  highp float nh_28;
  mat3 tmpvar_29;
  tmpvar_29[0].x = 0.816497;
  tmpvar_29[0].y = -0.408248;
  tmpvar_29[0].z = -0.408248;
  tmpvar_29[1].x = 0.0;
  tmpvar_29[1].y = 0.707107;
  tmpvar_29[1].z = -0.707107;
  tmpvar_29[2].x = 0.57735;
  tmpvar_29[2].y = 0.57735;
  tmpvar_29[2].z = 0.57735;
  mediump vec3 normal_30;
  normal_30 = tmpvar_3;
  mediump vec3 scalePerBasisVector_31;
  mediump vec3 lm_32;
  lowp vec3 tmpvar_33;
  tmpvar_33 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz);
  lm_32 = tmpvar_33;
  lowp vec3 tmpvar_34;
  tmpvar_34 = (2.0 * texture2D (unity_LightmapInd, xlv_TEXCOORD1).xyz);
  scalePerBasisVector_31 = tmpvar_34;
  lm_32 = (lm_32 * dot (clamp ((tmpvar_29 * normal_30), 0.0, 1.0), scalePerBasisVector_31));
  vec3 v_35;
  v_35.x = tmpvar_29[0].x;
  v_35.y = tmpvar_29[1].x;
  v_35.z = tmpvar_29[2].x;
  vec3 v_36;
  v_36.x = tmpvar_29[0].y;
  v_36.y = tmpvar_29[1].y;
  v_36.z = tmpvar_29[2].y;
  vec3 v_37;
  v_37.x = tmpvar_29[0].z;
  v_37.y = tmpvar_29[1].z;
  v_37.z = tmpvar_29[2].z;
  mediump float tmpvar_38;
  tmpvar_38 = max (0.0, dot (tmpvar_3, normalize((normalize((((scalePerBasisVector_31.x * v_35) + (scalePerBasisVector_31.y * v_36)) + (scalePerBasisVector_31.z * v_37))) + viewDir_26))));
  nh_28 = tmpvar_38;
  highp float tmpvar_39;
  mediump float arg1_40;
  arg1_40 = (tmpvar_5 * 128.0);
  tmpvar_39 = pow (nh_28, arg1_40);
  highp vec3 tmpvar_41;
  tmpvar_41 = (((lm_32 * _SpecColor.xyz) * tmpvar_6) * tmpvar_39);
  specColor_27 = tmpvar_41;
  highp vec4 tmpvar_42;
  tmpvar_42.xyz = lm_32;
  tmpvar_42.w = tmpvar_39;
  tmpvar_25 = tmpvar_42;
  c_1.xyz = specColor_27;
  lowp vec3 tmpvar_43;
  tmpvar_43 = vec3((tmpvar_18 * 2.0));
  mediump vec3 tmpvar_44;
  tmpvar_44 = (c_1.xyz + (tmpvar_2 * min (tmpvar_25.xyz, tmpvar_43)));
  c_1.xyz = tmpvar_44;
  c_1.w = tmpvar_8.w;
  c_1.xyz = (c_1.xyz + tmpvar_4);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_5;
  highp vec3 tmpvar_6;
  tmpvar_5 = tmpvar_1.xyz;
  tmpvar_6 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_7;
  tmpvar_7[0].x = tmpvar_5.x;
  tmpvar_7[0].y = tmpvar_6.x;
  tmpvar_7[0].z = tmpvar_2.x;
  tmpvar_7[1].x = tmpvar_5.y;
  tmpvar_7[1].y = tmpvar_6.y;
  tmpvar_7[1].z = tmpvar_2.y;
  tmpvar_7[2].x = tmpvar_5.z;
  tmpvar_7[2].y = tmpvar_6.z;
  tmpvar_7[2].z = tmpvar_2.z;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = _WorldSpaceCameraPos;
  highp vec4 o_9;
  highp vec4 tmpvar_10;
  tmpvar_10 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_11;
  tmpvar_11.x = tmpvar_10.x;
  tmpvar_11.y = (tmpvar_10.y * _ProjectionParams.x);
  o_9.xy = (tmpvar_11 + tmpvar_10.w);
  o_9.zw = tmpvar_4.zw;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (tmpvar_7 * (((_World2Object * tmpvar_8).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD3 = o_9;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _SpecColor;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_2 = tmpvar_10;
  lowp vec3 normal_11;
  normal_11.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_11.z = sqrt((1.0 - clamp (dot (normal_11.xy, normal_11.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (normal_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_3 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = clouds_7;
  lowp vec4 arg0_14;
  arg0_14 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (arg0_14, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_13).xyz;
  tmpvar_4 = tmpvar_15;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_17;
  tmpvar_17 = ((tmpvar_16.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD3);
  c_1.w = 0.0;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2D (unity_Lightmap, xlv_TEXCOORD1);
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2D (unity_LightmapInd, xlv_TEXCOORD1);
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize(xlv_TEXCOORD2);
  mediump vec4 tmpvar_22;
  mediump vec3 viewDir_23;
  viewDir_23 = tmpvar_21;
  mediump vec3 specColor_24;
  highp float nh_25;
  mat3 tmpvar_26;
  tmpvar_26[0].x = 0.816497;
  tmpvar_26[0].y = -0.408248;
  tmpvar_26[0].z = -0.408248;
  tmpvar_26[1].x = 0.0;
  tmpvar_26[1].y = 0.707107;
  tmpvar_26[1].z = -0.707107;
  tmpvar_26[2].x = 0.57735;
  tmpvar_26[2].y = 0.57735;
  tmpvar_26[2].z = 0.57735;
  mediump vec3 normal_27;
  normal_27 = tmpvar_3;
  mediump vec3 scalePerBasisVector_28;
  mediump vec3 lm_29;
  lowp vec3 tmpvar_30;
  tmpvar_30 = ((8.0 * tmpvar_19.w) * tmpvar_19.xyz);
  lm_29 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((8.0 * tmpvar_20.w) * tmpvar_20.xyz);
  scalePerBasisVector_28 = tmpvar_31;
  lm_29 = (lm_29 * dot (clamp ((tmpvar_26 * normal_27), 0.0, 1.0), scalePerBasisVector_28));
  vec3 v_32;
  v_32.x = tmpvar_26[0].x;
  v_32.y = tmpvar_26[1].x;
  v_32.z = tmpvar_26[2].x;
  vec3 v_33;
  v_33.x = tmpvar_26[0].y;
  v_33.y = tmpvar_26[1].y;
  v_33.z = tmpvar_26[2].y;
  vec3 v_34;
  v_34.x = tmpvar_26[0].z;
  v_34.y = tmpvar_26[1].z;
  v_34.z = tmpvar_26[2].z;
  mediump float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_3, normalize((normalize((((scalePerBasisVector_28.x * v_32) + (scalePerBasisVector_28.y * v_33)) + (scalePerBasisVector_28.z * v_34))) + viewDir_23))));
  nh_25 = tmpvar_35;
  highp float tmpvar_36;
  mediump float arg1_37;
  arg1_37 = (tmpvar_5 * 128.0);
  tmpvar_36 = pow (nh_25, arg1_37);
  highp vec3 tmpvar_38;
  tmpvar_38 = (((lm_29 * _SpecColor.xyz) * tmpvar_6) * tmpvar_36);
  specColor_24 = tmpvar_38;
  highp vec4 tmpvar_39;
  tmpvar_39.xyz = lm_29;
  tmpvar_39.w = tmpvar_36;
  tmpvar_22 = tmpvar_39;
  c_1.xyz = specColor_24;
  lowp vec3 arg1_40;
  arg1_40 = ((tmpvar_18.x * 2.0) * tmpvar_19.xyz);
  mediump vec3 tmpvar_41;
  tmpvar_41 = (c_1.xyz + (tmpvar_2 * max (min (tmpvar_22.xyz, arg1_40), (tmpvar_22.xyz * tmpvar_18.x))));
  c_1.xyz = tmpvar_41;
  c_1.w = tmpvar_8.w;
  c_1.xyz = (c_1.xyz + tmpvar_4);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec4 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  tmpvar_4 = tmpvar_1.xyz;
  tmpvar_5 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_4.x;
  tmpvar_6[0].y = tmpvar_5.x;
  tmpvar_6[0].z = tmpvar_2.x;
  tmpvar_6[1].x = tmpvar_4.y;
  tmpvar_6[1].y = tmpvar_5.y;
  tmpvar_6[1].z = tmpvar_2.y;
  tmpvar_6[2].x = tmpvar_4.z;
  tmpvar_6[2].y = tmpvar_5.z;
  tmpvar_6[2].z = tmpvar_2.z;
  highp vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (tmpvar_6 * (((_World2Object * tmpvar_7).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _SpecColor;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
in highp vec4 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_2 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (tmpvar_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_3 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = clouds_7;
  lowp vec4 arg0_14;
  arg0_14 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (arg0_14, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_13).xyz;
  tmpvar_4 = tmpvar_15;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_17;
  tmpvar_17 = ((tmpvar_16.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_17;
  lowp float tmpvar_18;
  mediump float lightShadowDataX_19;
  highp float dist_20;
  lowp float tmpvar_21;
  tmpvar_21 = textureProj (_ShadowMapTexture, xlv_TEXCOORD3).x;
  dist_20 = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = _LightShadowData.x;
  lightShadowDataX_19 = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = max (float((dist_20 > (xlv_TEXCOORD3.z / xlv_TEXCOORD3.w))), lightShadowDataX_19);
  tmpvar_18 = tmpvar_23;
  c_1.w = 0.0;
  highp vec3 tmpvar_24;
  tmpvar_24 = normalize(xlv_TEXCOORD2);
  mediump vec4 tmpvar_25;
  mediump vec3 viewDir_26;
  viewDir_26 = tmpvar_24;
  mediump vec3 specColor_27;
  highp float nh_28;
  mat3 tmpvar_29;
  tmpvar_29[0].x = 0.816497;
  tmpvar_29[0].y = -0.408248;
  tmpvar_29[0].z = -0.408248;
  tmpvar_29[1].x = 0.0;
  tmpvar_29[1].y = 0.707107;
  tmpvar_29[1].z = -0.707107;
  tmpvar_29[2].x = 0.57735;
  tmpvar_29[2].y = 0.57735;
  tmpvar_29[2].z = 0.57735;
  mediump vec3 normal_30;
  normal_30 = tmpvar_3;
  mediump vec3 scalePerBasisVector_31;
  mediump vec3 lm_32;
  lowp vec3 tmpvar_33;
  tmpvar_33 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz);
  lm_32 = tmpvar_33;
  lowp vec3 tmpvar_34;
  tmpvar_34 = (2.0 * texture (unity_LightmapInd, xlv_TEXCOORD1).xyz);
  scalePerBasisVector_31 = tmpvar_34;
  lm_32 = (lm_32 * dot (clamp ((tmpvar_29 * normal_30), 0.0, 1.0), scalePerBasisVector_31));
  vec3 v_35;
  v_35.x = tmpvar_29[0].x;
  v_35.y = tmpvar_29[1].x;
  v_35.z = tmpvar_29[2].x;
  vec3 v_36;
  v_36.x = tmpvar_29[0].y;
  v_36.y = tmpvar_29[1].y;
  v_36.z = tmpvar_29[2].y;
  vec3 v_37;
  v_37.x = tmpvar_29[0].z;
  v_37.y = tmpvar_29[1].z;
  v_37.z = tmpvar_29[2].z;
  mediump float tmpvar_38;
  tmpvar_38 = max (0.0, dot (tmpvar_3, normalize((normalize((((scalePerBasisVector_31.x * v_35) + (scalePerBasisVector_31.y * v_36)) + (scalePerBasisVector_31.z * v_37))) + viewDir_26))));
  nh_28 = tmpvar_38;
  highp float tmpvar_39;
  mediump float arg1_40;
  arg1_40 = (tmpvar_5 * 128.0);
  tmpvar_39 = pow (nh_28, arg1_40);
  highp vec3 tmpvar_41;
  tmpvar_41 = (((lm_32 * _SpecColor.xyz) * tmpvar_6) * tmpvar_39);
  specColor_27 = tmpvar_41;
  highp vec4 tmpvar_42;
  tmpvar_42.xyz = lm_32;
  tmpvar_42.w = tmpvar_39;
  tmpvar_25 = tmpvar_42;
  c_1.xyz = specColor_27;
  lowp vec3 tmpvar_43;
  tmpvar_43 = vec3((tmpvar_18 * 2.0));
  mediump vec3 tmpvar_44;
  tmpvar_44 = (c_1.xyz + (tmpvar_2 * min (tmpvar_25.xyz, tmpvar_43)));
  c_1.xyz = tmpvar_44;
  c_1.w = tmpvar_8.w;
  c_1.xyz = (c_1.xyz + tmpvar_4);
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 75 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Vector 13 [_WorldSpaceCameraPos]
Vector 14 [_WorldSpaceLightPos0]
Vector 15 [unity_4LightPosX0]
Vector 16 [unity_4LightPosY0]
Vector 17 [unity_4LightPosZ0]
Vector 18 [unity_4LightAtten0]
Vector 19 [unity_LightColor0]
Vector 20 [unity_LightColor1]
Vector 21 [unity_LightColor2]
Vector 22 [unity_LightColor3]
Vector 23 [unity_SHAr]
Vector 24 [unity_SHAg]
Vector 25 [unity_SHAb]
Vector 26 [unity_SHBr]
Vector 27 [unity_SHBg]
Vector 28 [unity_SHBb]
Vector 29 [unity_SHC]
Vector 30 [unity_Scale]
Vector 31 [_MainTex_ST]
Vector 32 [_Clouds_ST]
"!!ARBvp1.0
PARAM c[33] = { { 1, 0 },
		state.matrix.mvp,
		program.local[5..32] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
MUL R3.xyz, vertex.normal, c[30].w;
DP4 R0.x, vertex.position, c[6];
ADD R1, -R0.x, c[16];
DP3 R3.w, R3, c[6];
DP3 R4.x, R3, c[5];
DP3 R3.x, R3, c[7];
MUL R2, R3.w, R1;
DP4 R0.x, vertex.position, c[5];
ADD R0, -R0.x, c[15];
MUL R1, R1, R1;
MOV R4.z, R3.x;
MAD R2, R4.x, R0, R2;
MOV R4.w, c[0].x;
DP4 R4.y, vertex.position, c[7];
MAD R1, R0, R0, R1;
ADD R0, -R4.y, c[17];
MAD R1, R0, R0, R1;
MAD R0, R3.x, R0, R2;
MUL R2, R1, c[18];
MOV R4.y, R3.w;
RSQ R1.x, R1.x;
RSQ R1.y, R1.y;
RSQ R1.w, R1.w;
RSQ R1.z, R1.z;
MUL R0, R0, R1;
ADD R1, R2, c[0].x;
RCP R1.x, R1.x;
RCP R1.y, R1.y;
RCP R1.w, R1.w;
RCP R1.z, R1.z;
MAX R0, R0, c[0].y;
MUL R0, R0, R1;
MUL R1.xyz, R0.y, c[20];
MAD R1.xyz, R0.x, c[19], R1;
MAD R0.xyz, R0.z, c[21], R1;
MAD R1.xyz, R0.w, c[22], R0;
MUL R0, R4.xyzz, R4.yzzx;
MUL R1.w, R3, R3;
DP4 R3.z, R0, c[28];
DP4 R3.y, R0, c[27];
DP4 R3.x, R0, c[26];
MAD R1.w, R4.x, R4.x, -R1;
MUL R0.xyz, R1.w, c[29];
MOV R1.w, c[0].x;
DP4 R2.z, R4, c[25];
DP4 R2.y, R4, c[24];
DP4 R2.x, R4, c[23];
ADD R2.xyz, R2, R3;
ADD R0.xyz, R2, R0;
ADD result.texcoord[2].xyz, R0, R1;
MOV R1.xyz, c[13];
DP4 R2.z, R1, c[11];
DP4 R2.y, R1, c[10];
DP4 R2.x, R1, c[9];
MAD R2.xyz, R2, c[30].w, -vertex.position;
MOV R0.xyz, vertex.attrib[14];
MUL R1.xyz, vertex.normal.zxyw, R0.yzxw;
MAD R0.xyz, vertex.normal.yzxw, R0.zxyw, -R1;
MOV R1, c[14];
MUL R0.xyz, R0, vertex.attrib[14].w;
DP4 R3.z, R1, c[11];
DP4 R3.y, R1, c[10];
DP4 R3.x, R1, c[9];
DP3 result.texcoord[1].y, R3, R0;
DP3 result.texcoord[3].y, R0, R2;
DP3 result.texcoord[1].z, vertex.normal, R3;
DP3 result.texcoord[1].x, R3, vertex.attrib[14];
DP3 result.texcoord[3].z, vertex.normal, R2;
DP3 result.texcoord[3].x, vertex.attrib[14], R2;
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[32].xyxy, c[32];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[31], c[31].zwzw;
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 75 instructions, 5 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 78 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 12 [_WorldSpaceCameraPos]
Vector 13 [_WorldSpaceLightPos0]
Vector 14 [unity_4LightPosX0]
Vector 15 [unity_4LightPosY0]
Vector 16 [unity_4LightPosZ0]
Vector 17 [unity_4LightAtten0]
Vector 18 [unity_LightColor0]
Vector 19 [unity_LightColor1]
Vector 20 [unity_LightColor2]
Vector 21 [unity_LightColor3]
Vector 22 [unity_SHAr]
Vector 23 [unity_SHAg]
Vector 24 [unity_SHAb]
Vector 25 [unity_SHBr]
Vector 26 [unity_SHBg]
Vector 27 [unity_SHBb]
Vector 28 [unity_SHC]
Vector 29 [unity_Scale]
Vector 30 [_MainTex_ST]
Vector 31 [_Clouds_ST]
"vs_2_0
def c32, 1.00000000, 0.00000000, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mul r3.xyz, v2, c29.w
dp4 r0.x, v0, c5
add r1, -r0.x, c15
dp3 r3.w, r3, c5
dp3 r4.x, r3, c4
dp3 r3.x, r3, c6
mul r2, r3.w, r1
dp4 r0.x, v0, c4
add r0, -r0.x, c14
mul r1, r1, r1
mov r4.z, r3.x
mad r2, r4.x, r0, r2
mov r4.w, c32.x
dp4 r4.y, v0, c6
mad r1, r0, r0, r1
add r0, -r4.y, c16
mad r1, r0, r0, r1
mad r0, r3.x, r0, r2
mul r2, r1, c17
mov r4.y, r3.w
rsq r1.x, r1.x
rsq r1.y, r1.y
rsq r1.w, r1.w
rsq r1.z, r1.z
mul r0, r0, r1
add r1, r2, c32.x
dp4 r2.z, r4, c24
dp4 r2.y, r4, c23
dp4 r2.x, r4, c22
rcp r1.x, r1.x
rcp r1.y, r1.y
rcp r1.w, r1.w
rcp r1.z, r1.z
max r0, r0, c32.y
mul r0, r0, r1
mul r1.xyz, r0.y, c19
mad r1.xyz, r0.x, c18, r1
mad r0.xyz, r0.z, c20, r1
mad r1.xyz, r0.w, c21, r0
mul r0, r4.xyzz, r4.yzzx
mul r1.w, r3, r3
dp4 r3.z, r0, c27
dp4 r3.y, r0, c26
dp4 r3.x, r0, c25
mad r1.w, r4.x, r4.x, -r1
mul r0.xyz, r1.w, c28
add r2.xyz, r2, r3
add r0.xyz, r2, r0
add oT2.xyz, r0, r1
mov r1.w, c32.x
mov r1.xyz, c12
dp4 r0.z, r1, c10
dp4 r0.y, r1, c9
dp4 r0.x, r1, c8
mad r3.xyz, r0, c29.w, -v0
mov r1.xyz, v1
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r1.yzxw
mad r1.xyz, v2.yzxw, r0.zxyw, -r1
mul r2.xyz, r1, v1.w
mov r0, c10
dp4 r4.z, c13, r0
mov r1, c9
mov r0, c8
dp4 r4.y, c13, r1
dp4 r4.x, c13, r0
dp3 oT1.y, r4, r2
dp3 oT3.y, r2, r3
dp3 oT1.z, v2, r4
dp3 oT1.x, r4, v1
dp3 oT3.z, v2, r3
dp3 oT3.x, v1, r3
mad oT0.zw, v3.xyxy, c31.xyxy, c31
mad oT0.xy, v3, c30, c30.zwzw
dp4 oPos.w, v0, c3
dp4 oPos.z, v0, c2
dp4 oPos.y, v0, c1
dp4 oPos.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 63 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 128
Vector 96 [_MainTex_ST]
Vector 112 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0
eefiecedfkpannghkalpbgjegimniaofgahhifelabaaaaaacaalaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcieajaaaaeaaaabaa
gbacaaaafjaaaaaeegiocaaaaaaaaaaaaiaaaaaafjaaaaaeegiocaaaabaaaaaa
afaaaaaafjaaaaaeegiocaaaacaaaaaacnaaaaaafjaaaaaeegiocaaaadaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaad
hcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaad
hccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaagiaaaaacahaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaa
egbabaaaadaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaa
dcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaahaaaaaa
kgiocaaaaaaaaaaaahaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaa
cgbjbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaa
abaaaaaaegacbaiaebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaa
aaaaaaaapgbpbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaacaaaaaa
aaaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
adaaaaaabaaaaaaaagiacaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaal
hcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabdaaaaaa
pgipcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahcccabaaaacaaaaaa
egacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaa
abaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaa
egacbaaaabaaaaaadgaaaaaficaabaaaabaaaaaaabeaaaaaaaaaiadpdiaaaaai
hcaabaaaacaaaaaaegbcbaaaacaaaaaapgipcaaaadaaaaaabeaaaaaadiaaaaai
hcaabaaaadaaaaaafgafbaaaacaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaak
lcaabaaaacaaaaaaegiicaaaadaaaaaaamaaaaaaagaabaaaacaaaaaaegaibaaa
adaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaadaaaaaaaoaaaaaakgakbaaa
acaaaaaaegadbaaaacaaaaaabbaaaaaibcaabaaaacaaaaaaegiocaaaacaaaaaa
cgaaaaaaegaobaaaabaaaaaabbaaaaaiccaabaaaacaaaaaaegiocaaaacaaaaaa
chaaaaaaegaobaaaabaaaaaabbaaaaaiecaabaaaacaaaaaaegiocaaaacaaaaaa
ciaaaaaaegaobaaaabaaaaaadiaaaaahpcaabaaaadaaaaaajgacbaaaabaaaaaa
egakbaaaabaaaaaabbaaaaaibcaabaaaaeaaaaaaegiocaaaacaaaaaacjaaaaaa
egaobaaaadaaaaaabbaaaaaiccaabaaaaeaaaaaaegiocaaaacaaaaaackaaaaaa
egaobaaaadaaaaaabbaaaaaiecaabaaaaeaaaaaaegiocaaaacaaaaaaclaaaaaa
egaobaaaadaaaaaaaaaaaaahhcaabaaaacaaaaaaegacbaaaacaaaaaaegacbaaa
aeaaaaaadiaaaaahicaabaaaaaaaaaaabkaabaaaabaaaaaabkaabaaaabaaaaaa
dcaaaaakicaabaaaaaaaaaaaakaabaaaabaaaaaaakaabaaaabaaaaaadkaabaia
ebaaaaaaaaaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaaacaaaaaacmaaaaaa
pgapbaaaaaaaaaaaegacbaaaacaaaaaadiaaaaaihcaabaaaadaaaaaafgbfbaaa
aaaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaakhcaabaaaadaaaaaaegiccaaa
adaaaaaaamaaaaaaagbabaaaaaaaaaaaegacbaaaadaaaaaadcaaaaakhcaabaaa
adaaaaaaegiccaaaadaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegacbaaaadaaaaaa
dcaaaaakhcaabaaaadaaaaaaegiccaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaa
egacbaaaadaaaaaaaaaaaaajpcaabaaaaeaaaaaafgafbaiaebaaaaaaadaaaaaa
egiocaaaacaaaaaaadaaaaaadiaaaaahpcaabaaaafaaaaaafgafbaaaabaaaaaa
egaobaaaaeaaaaaadiaaaaahpcaabaaaaeaaaaaaegaobaaaaeaaaaaaegaobaaa
aeaaaaaaaaaaaaajpcaabaaaagaaaaaaagaabaiaebaaaaaaadaaaaaaegiocaaa
acaaaaaaacaaaaaaaaaaaaajpcaabaaaadaaaaaakgakbaiaebaaaaaaadaaaaaa
egiocaaaacaaaaaaaeaaaaaadcaaaaajpcaabaaaafaaaaaaegaobaaaagaaaaaa
agaabaaaabaaaaaaegaobaaaafaaaaaadcaaaaajpcaabaaaabaaaaaaegaobaaa
adaaaaaakgakbaaaabaaaaaaegaobaaaafaaaaaadcaaaaajpcaabaaaaeaaaaaa
egaobaaaagaaaaaaegaobaaaagaaaaaaegaobaaaaeaaaaaadcaaaaajpcaabaaa
adaaaaaaegaobaaaadaaaaaaegaobaaaadaaaaaaegaobaaaaeaaaaaaeeaaaaaf
pcaabaaaaeaaaaaaegaobaaaadaaaaaadcaaaaanpcaabaaaadaaaaaaegaobaaa
adaaaaaaegiocaaaacaaaaaaafaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadp
aaaaiadpaoaaaaakpcaabaaaadaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadp
aaaaiadpegaobaaaadaaaaaadiaaaaahpcaabaaaabaaaaaaegaobaaaabaaaaaa
egaobaaaaeaaaaaadeaaaaakpcaabaaaabaaaaaaegaobaaaabaaaaaaaceaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadiaaaaahpcaabaaaabaaaaaaegaobaaa
adaaaaaaegaobaaaabaaaaaadiaaaaaihcaabaaaadaaaaaafgafbaaaabaaaaaa
egiccaaaacaaaaaaahaaaaaadcaaaaakhcaabaaaadaaaaaaegiccaaaacaaaaaa
agaaaaaaagaabaaaabaaaaaaegacbaaaadaaaaaadcaaaaakhcaabaaaabaaaaaa
egiccaaaacaaaaaaaiaaaaaakgakbaaaabaaaaaaegacbaaaadaaaaaadcaaaaak
hcaabaaaabaaaaaaegiccaaaacaaaaaaajaaaaaapgapbaaaabaaaaaaegacbaaa
abaaaaaaaaaaaaahhccabaaaadaaaaaaegacbaaaabaaaaaaegacbaaaacaaaaaa
diaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaaadaaaaaa
bbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaa
abaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
adaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaaaaaaaaai
hcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaadaaaaaabdaaaaaadcaaaaal
hcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaia
ebaaaaaaaaaaaaaabaaaaaahcccabaaaaeaaaaaaegacbaaaaaaaaaaaegacbaaa
abaaaaaabaaaaaahbccabaaaaeaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaa
baaaaaaheccabaaaaeaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaadoaaaaab
"
}
SubProgram "d3d11_9x " {
// Stats: 63 math
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 128
Vector 96 [_MainTex_ST]
Vector 112 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0_level_9_1
eefiecedlghdkhjnmpaegggdbgcijopdeobojbndabaaaaaapabaaaaaaeaaaaaa
daaaaaaapmafaaaaiiapaaaafabaaaaaebgpgodjmeafaaaameafaaaaaaacpopp
eiafaaaahmaaaaaaahaaceaaaaaahiaaaaaahiaaaaaaceaaabaahiaaaaaaagaa
acaaabaaaaaaaaaaabaaaeaaabaaadaaaaaaaaaaacaaaaaaabaaaeaaaaaaaaaa
acaaacaaaiaaafaaaaaaaaaaacaacgaaahaaanaaaaaaaaaaadaaaaaaaeaabeaa
aaaaaaaaadaaamaaajaabiaaaaaaaaaaaaaaaaaaaaacpoppfbaaaaafcbaaapka
aaaaiadpaaaaaaaaaaaaaaaaaaaaaaaabpaaaaacafaaaaiaaaaaapjabpaaaaac
afaaabiaabaaapjabpaaaaacafaaaciaacaaapjabpaaaaacafaaadiaadaaapja
aeaaaaaeaaaaadoaadaaoejaabaaoekaabaaookaaeaaaaaeaaaaamoaadaaeeja
acaaeekaacaaoekaabaaaaacaaaaapiaaeaaoekaafaaaaadabaaahiaaaaaffia
bnaaoekaaeaaaaaeabaaahiabmaaoekaaaaaaaiaabaaoeiaaeaaaaaeaaaaahia
boaaoekaaaaakkiaabaaoeiaaeaaaaaeaaaaahiabpaaoekaaaaappiaaaaaoeia
aiaaaaadabaaaboaabaaoejaaaaaoeiaabaaaaacabaaahiaacaaoejaafaaaaad
acaaahiaabaanciaabaamjjaaeaaaaaeabaaahiaabaamjiaabaancjaacaaoeib
afaaaaadabaaahiaabaaoeiaabaappjaaiaaaaadabaaacoaabaaoeiaaaaaoeia
aiaaaaadabaaaeoaacaaoejaaaaaoeiaabaaaaacaaaaahiaadaaoekaafaaaaad
acaaahiaaaaaffiabnaaoekaaeaaaaaeaaaaaliabmaakekaaaaaaaiaacaakeia
aeaaaaaeaaaaahiaboaaoekaaaaakkiaaaaapeiaacaaaaadaaaaahiaaaaaoeia
bpaaoekaaeaaaaaeaaaaahiaaaaaoeiacaaappkaaaaaoejbaiaaaaadadaaaboa
abaaoejaaaaaoeiaaiaaaaadadaaacoaabaaoeiaaaaaoeiaaiaaaaadadaaaeoa
acaaoejaaaaaoeiaafaaaaadaaaaahiaaaaaffjabjaaoekaaeaaaaaeaaaaahia
biaaoekaaaaaaajaaaaaoeiaaeaaaaaeaaaaahiabkaaoekaaaaakkjaaaaaoeia
aeaaaaaeaaaaahiablaaoekaaaaappjaaaaaoeiaacaaaaadabaaapiaaaaakkib
ahaaoekaacaaaaadacaaapiaaaaaaaibafaaoekaacaaaaadaaaaapiaaaaaffib
agaaoekaafaaaaadadaaahiaacaaoejacaaappkaafaaaaadaeaaahiaadaaffia
bjaaoekaaeaaaaaeadaaaliabiaakekaadaaaaiaaeaakeiaaeaaaaaeadaaahia
bkaaoekaadaakkiaadaapeiaafaaaaadaeaaapiaaaaaoeiaadaaffiaafaaaaad
aaaaapiaaaaaoeiaaaaaoeiaaeaaaaaeaaaaapiaacaaoeiaacaaoeiaaaaaoeia
aeaaaaaeacaaapiaacaaoeiaadaaaaiaaeaaoeiaaeaaaaaeacaaapiaabaaoeia
adaakkiaacaaoeiaaeaaaaaeaaaaapiaabaaoeiaabaaoeiaaaaaoeiaahaaaaac
abaaabiaaaaaaaiaahaaaaacabaaaciaaaaaffiaahaaaaacabaaaeiaaaaakkia
ahaaaaacabaaaiiaaaaappiaabaaaaacaeaaabiacbaaaakaaeaaaaaeaaaaapia
aaaaoeiaaiaaoekaaeaaaaiaafaaaaadabaaapiaabaaoeiaacaaoeiaalaaaaad
abaaapiaabaaoeiacbaaffkaagaaaaacacaaabiaaaaaaaiaagaaaaacacaaacia
aaaaffiaagaaaaacacaaaeiaaaaakkiaagaaaaacacaaaiiaaaaappiaafaaaaad
aaaaapiaabaaoeiaacaaoeiaafaaaaadabaaahiaaaaaffiaakaaoekaaeaaaaae
abaaahiaajaaoekaaaaaaaiaabaaoeiaaeaaaaaeaaaaahiaalaaoekaaaaakkia
abaaoeiaaeaaaaaeaaaaahiaamaaoekaaaaappiaaaaaoeiaabaaaaacadaaaiia
cbaaaakaajaaaaadabaaabiaanaaoekaadaaoeiaajaaaaadabaaaciaaoaaoeka
adaaoeiaajaaaaadabaaaeiaapaaoekaadaaoeiaafaaaaadacaaapiaadaacjia
adaakeiaajaaaaadaeaaabiabaaaoekaacaaoeiaajaaaaadaeaaaciabbaaoeka
acaaoeiaajaaaaadaeaaaeiabcaaoekaacaaoeiaacaaaaadabaaahiaabaaoeia
aeaaoeiaafaaaaadaaaaaiiaadaaffiaadaaffiaaeaaaaaeaaaaaiiaadaaaaia
adaaaaiaaaaappibaeaaaaaeabaaahiabdaaoekaaaaappiaabaaoeiaacaaaaad
acaaahoaaaaaoeiaabaaoeiaafaaaaadaaaaapiaaaaaffjabfaaoekaaeaaaaae
aaaaapiabeaaoekaaaaaaajaaaaaoeiaaeaaaaaeaaaaapiabgaaoekaaaaakkja
aaaaoeiaaeaaaaaeaaaaapiabhaaoekaaaaappjaaaaaoeiaaeaaaaaeaaaaadma
aaaappiaaaaaoekaaaaaoeiaabaaaaacaaaaammaaaaaoeiappppaaaafdeieefc
ieajaaaaeaaaabaagbacaaaafjaaaaaeegiocaaaaaaaaaaaaiaaaaaafjaaaaae
egiocaaaabaaaaaaafaaaaaafjaaaaaeegiocaaaacaaaaaacnaaaaaafjaaaaae
egiocaaaadaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaa
abaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaae
pccabaaaaaaaaaaaabaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaa
acaaaaaagfaaaaadhccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaagiaaaaac
ahaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaa
abaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaa
acaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaa
egiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaal
dccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaa
aaaaaaaaagaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaa
aaaaaaaaahaaaaaakgiocaaaaaaaaaaaahaaaaaadiaaaaahhcaabaaaaaaaaaaa
jgbebaaaabaaaaaacgbjbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaajgbebaaa
acaaaaaacgbjbaaaabaaaaaaegacbaiaebaaaaaaaaaaaaaadiaaaaahhcaabaaa
aaaaaaaaegacbaaaaaaaaaaapgbpbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaa
fgifcaaaacaaaaaaaaaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaa
abaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaaacaaaaaaaaaaaaaaegacbaaa
abaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaa
acaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
adaaaaaabdaaaaaapgipcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaabaaaaaah
cccabaaaacaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaa
acaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaaacaaaaaa
egbcbaaaacaaaaaaegacbaaaabaaaaaadgaaaaaficaabaaaabaaaaaaabeaaaaa
aaaaiadpdiaaaaaihcaabaaaacaaaaaaegbcbaaaacaaaaaapgipcaaaadaaaaaa
beaaaaaadiaaaaaihcaabaaaadaaaaaafgafbaaaacaaaaaaegiccaaaadaaaaaa
anaaaaaadcaaaaaklcaabaaaacaaaaaaegiicaaaadaaaaaaamaaaaaaagaabaaa
acaaaaaaegaibaaaadaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaadaaaaaa
aoaaaaaakgakbaaaacaaaaaaegadbaaaacaaaaaabbaaaaaibcaabaaaacaaaaaa
egiocaaaacaaaaaacgaaaaaaegaobaaaabaaaaaabbaaaaaiccaabaaaacaaaaaa
egiocaaaacaaaaaachaaaaaaegaobaaaabaaaaaabbaaaaaiecaabaaaacaaaaaa
egiocaaaacaaaaaaciaaaaaaegaobaaaabaaaaaadiaaaaahpcaabaaaadaaaaaa
jgacbaaaabaaaaaaegakbaaaabaaaaaabbaaaaaibcaabaaaaeaaaaaaegiocaaa
acaaaaaacjaaaaaaegaobaaaadaaaaaabbaaaaaiccaabaaaaeaaaaaaegiocaaa
acaaaaaackaaaaaaegaobaaaadaaaaaabbaaaaaiecaabaaaaeaaaaaaegiocaaa
acaaaaaaclaaaaaaegaobaaaadaaaaaaaaaaaaahhcaabaaaacaaaaaaegacbaaa
acaaaaaaegacbaaaaeaaaaaadiaaaaahicaabaaaaaaaaaaabkaabaaaabaaaaaa
bkaabaaaabaaaaaadcaaaaakicaabaaaaaaaaaaaakaabaaaabaaaaaaakaabaaa
abaaaaaadkaabaiaebaaaaaaaaaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaa
acaaaaaacmaaaaaapgapbaaaaaaaaaaaegacbaaaacaaaaaadiaaaaaihcaabaaa
adaaaaaafgbfbaaaaaaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaakhcaabaaa
adaaaaaaegiccaaaadaaaaaaamaaaaaaagbabaaaaaaaaaaaegacbaaaadaaaaaa
dcaaaaakhcaabaaaadaaaaaaegiccaaaadaaaaaaaoaaaaaakgbkbaaaaaaaaaaa
egacbaaaadaaaaaadcaaaaakhcaabaaaadaaaaaaegiccaaaadaaaaaaapaaaaaa
pgbpbaaaaaaaaaaaegacbaaaadaaaaaaaaaaaaajpcaabaaaaeaaaaaafgafbaia
ebaaaaaaadaaaaaaegiocaaaacaaaaaaadaaaaaadiaaaaahpcaabaaaafaaaaaa
fgafbaaaabaaaaaaegaobaaaaeaaaaaadiaaaaahpcaabaaaaeaaaaaaegaobaaa
aeaaaaaaegaobaaaaeaaaaaaaaaaaaajpcaabaaaagaaaaaaagaabaiaebaaaaaa
adaaaaaaegiocaaaacaaaaaaacaaaaaaaaaaaaajpcaabaaaadaaaaaakgakbaia
ebaaaaaaadaaaaaaegiocaaaacaaaaaaaeaaaaaadcaaaaajpcaabaaaafaaaaaa
egaobaaaagaaaaaaagaabaaaabaaaaaaegaobaaaafaaaaaadcaaaaajpcaabaaa
abaaaaaaegaobaaaadaaaaaakgakbaaaabaaaaaaegaobaaaafaaaaaadcaaaaaj
pcaabaaaaeaaaaaaegaobaaaagaaaaaaegaobaaaagaaaaaaegaobaaaaeaaaaaa
dcaaaaajpcaabaaaadaaaaaaegaobaaaadaaaaaaegaobaaaadaaaaaaegaobaaa
aeaaaaaaeeaaaaafpcaabaaaaeaaaaaaegaobaaaadaaaaaadcaaaaanpcaabaaa
adaaaaaaegaobaaaadaaaaaaegiocaaaacaaaaaaafaaaaaaaceaaaaaaaaaiadp
aaaaiadpaaaaiadpaaaaiadpaoaaaaakpcaabaaaadaaaaaaaceaaaaaaaaaiadp
aaaaiadpaaaaiadpaaaaiadpegaobaaaadaaaaaadiaaaaahpcaabaaaabaaaaaa
egaobaaaabaaaaaaegaobaaaaeaaaaaadeaaaaakpcaabaaaabaaaaaaegaobaaa
abaaaaaaaceaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaadiaaaaahpcaabaaa
abaaaaaaegaobaaaadaaaaaaegaobaaaabaaaaaadiaaaaaihcaabaaaadaaaaaa
fgafbaaaabaaaaaaegiccaaaacaaaaaaahaaaaaadcaaaaakhcaabaaaadaaaaaa
egiccaaaacaaaaaaagaaaaaaagaabaaaabaaaaaaegacbaaaadaaaaaadcaaaaak
hcaabaaaabaaaaaaegiccaaaacaaaaaaaiaaaaaakgakbaaaabaaaaaaegacbaaa
adaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaacaaaaaaajaaaaaapgapbaaa
abaaaaaaegacbaaaabaaaaaaaaaaaaahhccabaaaadaaaaaaegacbaaaabaaaaaa
egacbaaaacaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaaaeaaaaaa
egiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaa
baaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaa
abaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaa
abaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaadaaaaaa
bdaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaaadaaaaaa
beaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaaaeaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaaaeaaaaaaegbcbaaaabaaaaaa
egacbaaaabaaaaaabaaaaaaheccabaaaaeaaaaaaegbcbaaaacaaaaaaegacbaaa
abaaaaaadoaaaaabejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
abaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaaahahaaaa
laaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaaabaaaaaa
aaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
afaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfcenebemaa
feeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaaaiaaaaaa
iaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaa
acaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahaiaaaa
imaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaafdfgfpfaepfdejfe
ejepeoaafeeffiedepepfceeaaklklkl"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (tmpvar_2 * unity_Scale.w));
  highp vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_1.xyz;
  tmpvar_10 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_11;
  tmpvar_11[0].x = tmpvar_9.x;
  tmpvar_11[0].y = tmpvar_10.x;
  tmpvar_11[0].z = tmpvar_2.x;
  tmpvar_11[1].x = tmpvar_9.y;
  tmpvar_11[1].y = tmpvar_10.y;
  tmpvar_11[1].z = tmpvar_2.y;
  tmpvar_11[2].x = tmpvar_9.z;
  tmpvar_11[2].y = tmpvar_10.z;
  tmpvar_11[2].z = tmpvar_2.z;
  highp vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = tmpvar_8;
  mediump vec3 tmpvar_15;
  mediump vec4 normal_16;
  normal_16 = tmpvar_14;
  highp float vC_17;
  mediump vec3 x3_18;
  mediump vec3 x2_19;
  mediump vec3 x1_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAr, normal_16);
  x1_20.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAg, normal_16);
  x1_20.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHAb, normal_16);
  x1_20.z = tmpvar_23;
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_16.xyzz * normal_16.yzzx);
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBr, tmpvar_24);
  x2_19.x = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBg, tmpvar_24);
  x2_19.y = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = dot (unity_SHBb, tmpvar_24);
  x2_19.z = tmpvar_27;
  mediump float tmpvar_28;
  tmpvar_28 = ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y));
  vC_17 = tmpvar_28;
  highp vec3 tmpvar_29;
  tmpvar_29 = (unity_SHC.xyz * vC_17);
  x3_18 = tmpvar_29;
  tmpvar_15 = ((x1_20 + x2_19) + x3_18);
  shlight_3 = tmpvar_15;
  tmpvar_6 = shlight_3;
  highp vec3 tmpvar_30;
  tmpvar_30 = (_Object2World * _glesVertex).xyz;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosX0 - tmpvar_30.x);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosY0 - tmpvar_30.y);
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosZ0 - tmpvar_30.z);
  highp vec4 tmpvar_34;
  tmpvar_34 = (((tmpvar_31 * tmpvar_31) + (tmpvar_32 * tmpvar_32)) + (tmpvar_33 * tmpvar_33));
  highp vec4 tmpvar_35;
  tmpvar_35 = (max (vec4(0.0, 0.0, 0.0, 0.0), ((((tmpvar_31 * tmpvar_8.x) + (tmpvar_32 * tmpvar_8.y)) + (tmpvar_33 * tmpvar_8.z)) * inversesqrt(tmpvar_34))) * (1.0/((1.0 + (tmpvar_34 * unity_4LightAtten0)))));
  highp vec3 tmpvar_36;
  tmpvar_36 = (tmpvar_6 + ((((unity_LightColor[0].xyz * tmpvar_35.x) + (unity_LightColor[1].xyz * tmpvar_35.y)) + (unity_LightColor[2].xyz * tmpvar_35.z)) + (unity_LightColor[3].xyz * tmpvar_35.w)));
  tmpvar_6 = tmpvar_36;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = (tmpvar_11 * (((_World2Object * tmpvar_13).xyz * unity_Scale.w) - _glesVertex.xyz));
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
varying highp vec4 xlv_TEXCOORD0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_2 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (tmpvar_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_3 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = clouds_7;
  lowp vec4 arg0_14;
  arg0_14 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (arg0_14, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_13).xyz;
  tmpvar_4 = tmpvar_15;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_17;
  tmpvar_17 = ((tmpvar_16.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(xlv_TEXCOORD3);
  mediump vec3 viewDir_19;
  viewDir_19 = tmpvar_18;
  lowp vec4 c_20;
  highp float nh_21;
  lowp float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_3, xlv_TEXCOORD1));
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_3, normalize((xlv_TEXCOORD1 + viewDir_19))));
  nh_21 = tmpvar_23;
  mediump float arg1_24;
  arg1_24 = (tmpvar_5 * 128.0);
  highp float tmpvar_25;
  tmpvar_25 = (pow (nh_21, arg1_24) * tmpvar_6);
  highp vec3 tmpvar_26;
  tmpvar_26 = ((((tmpvar_2 * _LightColor0.xyz) * tmpvar_22) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_25)) * 2.0);
  c_20.xyz = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = (tmpvar_8.w + ((_LightColor0.w * _SpecColor.w) * tmpvar_25));
  c_20.w = tmpvar_27;
  c_1.w = c_20.w;
  c_1.xyz = (c_20.xyz + (tmpvar_2 * xlv_TEXCOORD2));
  c_1.xyz = (c_1.xyz + tmpvar_4);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (tmpvar_2 * unity_Scale.w));
  highp vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_1.xyz;
  tmpvar_10 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_11;
  tmpvar_11[0].x = tmpvar_9.x;
  tmpvar_11[0].y = tmpvar_10.x;
  tmpvar_11[0].z = tmpvar_2.x;
  tmpvar_11[1].x = tmpvar_9.y;
  tmpvar_11[1].y = tmpvar_10.y;
  tmpvar_11[1].z = tmpvar_2.y;
  tmpvar_11[2].x = tmpvar_9.z;
  tmpvar_11[2].y = tmpvar_10.z;
  tmpvar_11[2].z = tmpvar_2.z;
  highp vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = tmpvar_8;
  mediump vec3 tmpvar_15;
  mediump vec4 normal_16;
  normal_16 = tmpvar_14;
  highp float vC_17;
  mediump vec3 x3_18;
  mediump vec3 x2_19;
  mediump vec3 x1_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAr, normal_16);
  x1_20.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAg, normal_16);
  x1_20.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHAb, normal_16);
  x1_20.z = tmpvar_23;
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_16.xyzz * normal_16.yzzx);
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBr, tmpvar_24);
  x2_19.x = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBg, tmpvar_24);
  x2_19.y = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = dot (unity_SHBb, tmpvar_24);
  x2_19.z = tmpvar_27;
  mediump float tmpvar_28;
  tmpvar_28 = ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y));
  vC_17 = tmpvar_28;
  highp vec3 tmpvar_29;
  tmpvar_29 = (unity_SHC.xyz * vC_17);
  x3_18 = tmpvar_29;
  tmpvar_15 = ((x1_20 + x2_19) + x3_18);
  shlight_3 = tmpvar_15;
  tmpvar_6 = shlight_3;
  highp vec3 tmpvar_30;
  tmpvar_30 = (_Object2World * _glesVertex).xyz;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosX0 - tmpvar_30.x);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosY0 - tmpvar_30.y);
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosZ0 - tmpvar_30.z);
  highp vec4 tmpvar_34;
  tmpvar_34 = (((tmpvar_31 * tmpvar_31) + (tmpvar_32 * tmpvar_32)) + (tmpvar_33 * tmpvar_33));
  highp vec4 tmpvar_35;
  tmpvar_35 = (max (vec4(0.0, 0.0, 0.0, 0.0), ((((tmpvar_31 * tmpvar_8.x) + (tmpvar_32 * tmpvar_8.y)) + (tmpvar_33 * tmpvar_8.z)) * inversesqrt(tmpvar_34))) * (1.0/((1.0 + (tmpvar_34 * unity_4LightAtten0)))));
  highp vec3 tmpvar_36;
  tmpvar_36 = (tmpvar_6 + ((((unity_LightColor[0].xyz * tmpvar_35.x) + (unity_LightColor[1].xyz * tmpvar_35.y)) + (unity_LightColor[2].xyz * tmpvar_35.z)) + (unity_LightColor[3].xyz * tmpvar_35.w)));
  tmpvar_6 = tmpvar_36;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = (tmpvar_11 * (((_World2Object * tmpvar_13).xyz * unity_Scale.w) - _glesVertex.xyz));
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
varying highp vec4 xlv_TEXCOORD0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_2 = tmpvar_10;
  lowp vec3 normal_11;
  normal_11.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_11.z = sqrt((1.0 - clamp (dot (normal_11.xy, normal_11.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (normal_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_3 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = clouds_7;
  lowp vec4 arg0_14;
  arg0_14 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (arg0_14, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_13).xyz;
  tmpvar_4 = tmpvar_15;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_17;
  tmpvar_17 = ((tmpvar_16.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(xlv_TEXCOORD3);
  mediump vec3 viewDir_19;
  viewDir_19 = tmpvar_18;
  lowp vec4 c_20;
  highp float nh_21;
  lowp float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_3, xlv_TEXCOORD1));
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_3, normalize((xlv_TEXCOORD1 + viewDir_19))));
  nh_21 = tmpvar_23;
  mediump float arg1_24;
  arg1_24 = (tmpvar_5 * 128.0);
  highp float tmpvar_25;
  tmpvar_25 = (pow (nh_21, arg1_24) * tmpvar_6);
  highp vec3 tmpvar_26;
  tmpvar_26 = ((((tmpvar_2 * _LightColor0.xyz) * tmpvar_22) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_25)) * 2.0);
  c_20.xyz = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = (tmpvar_8.w + ((_LightColor0.w * _SpecColor.w) * tmpvar_25));
  c_20.w = tmpvar_27;
  c_1.w = c_20.w;
  c_1.xyz = (c_20.xyz + (tmpvar_2 * xlv_TEXCOORD2));
  c_1.xyz = (c_1.xyz + tmpvar_4);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out lowp vec3 xlv_TEXCOORD1;
out lowp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (tmpvar_2 * unity_Scale.w));
  highp vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_1.xyz;
  tmpvar_10 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_11;
  tmpvar_11[0].x = tmpvar_9.x;
  tmpvar_11[0].y = tmpvar_10.x;
  tmpvar_11[0].z = tmpvar_2.x;
  tmpvar_11[1].x = tmpvar_9.y;
  tmpvar_11[1].y = tmpvar_10.y;
  tmpvar_11[1].z = tmpvar_2.y;
  tmpvar_11[2].x = tmpvar_9.z;
  tmpvar_11[2].y = tmpvar_10.z;
  tmpvar_11[2].z = tmpvar_2.z;
  highp vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = tmpvar_8;
  mediump vec3 tmpvar_15;
  mediump vec4 normal_16;
  normal_16 = tmpvar_14;
  highp float vC_17;
  mediump vec3 x3_18;
  mediump vec3 x2_19;
  mediump vec3 x1_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAr, normal_16);
  x1_20.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAg, normal_16);
  x1_20.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHAb, normal_16);
  x1_20.z = tmpvar_23;
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_16.xyzz * normal_16.yzzx);
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBr, tmpvar_24);
  x2_19.x = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBg, tmpvar_24);
  x2_19.y = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = dot (unity_SHBb, tmpvar_24);
  x2_19.z = tmpvar_27;
  mediump float tmpvar_28;
  tmpvar_28 = ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y));
  vC_17 = tmpvar_28;
  highp vec3 tmpvar_29;
  tmpvar_29 = (unity_SHC.xyz * vC_17);
  x3_18 = tmpvar_29;
  tmpvar_15 = ((x1_20 + x2_19) + x3_18);
  shlight_3 = tmpvar_15;
  tmpvar_6 = shlight_3;
  highp vec3 tmpvar_30;
  tmpvar_30 = (_Object2World * _glesVertex).xyz;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosX0 - tmpvar_30.x);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosY0 - tmpvar_30.y);
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosZ0 - tmpvar_30.z);
  highp vec4 tmpvar_34;
  tmpvar_34 = (((tmpvar_31 * tmpvar_31) + (tmpvar_32 * tmpvar_32)) + (tmpvar_33 * tmpvar_33));
  highp vec4 tmpvar_35;
  tmpvar_35 = (max (vec4(0.0, 0.0, 0.0, 0.0), ((((tmpvar_31 * tmpvar_8.x) + (tmpvar_32 * tmpvar_8.y)) + (tmpvar_33 * tmpvar_8.z)) * inversesqrt(tmpvar_34))) * (1.0/((1.0 + (tmpvar_34 * unity_4LightAtten0)))));
  highp vec3 tmpvar_36;
  tmpvar_36 = (tmpvar_6 + ((((unity_LightColor[0].xyz * tmpvar_35.x) + (unity_LightColor[1].xyz * tmpvar_35.y)) + (unity_LightColor[2].xyz * tmpvar_35.z)) + (unity_LightColor[3].xyz * tmpvar_35.w)));
  tmpvar_6 = tmpvar_36;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = (tmpvar_11 * (((_World2Object * tmpvar_13).xyz * unity_Scale.w) - _glesVertex.xyz));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
in highp vec4 xlv_TEXCOORD0;
in lowp vec3 xlv_TEXCOORD1;
in lowp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_2 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (tmpvar_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_3 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = clouds_7;
  lowp vec4 arg0_14;
  arg0_14 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (arg0_14, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_13).xyz;
  tmpvar_4 = tmpvar_15;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_17;
  tmpvar_17 = ((tmpvar_16.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_17;
  highp vec3 tmpvar_18;
  tmpvar_18 = normalize(xlv_TEXCOORD3);
  mediump vec3 viewDir_19;
  viewDir_19 = tmpvar_18;
  lowp vec4 c_20;
  highp float nh_21;
  lowp float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_3, xlv_TEXCOORD1));
  mediump float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_3, normalize((xlv_TEXCOORD1 + viewDir_19))));
  nh_21 = tmpvar_23;
  mediump float arg1_24;
  arg1_24 = (tmpvar_5 * 128.0);
  highp float tmpvar_25;
  tmpvar_25 = (pow (nh_21, arg1_24) * tmpvar_6);
  highp vec3 tmpvar_26;
  tmpvar_26 = ((((tmpvar_2 * _LightColor0.xyz) * tmpvar_22) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_25)) * 2.0);
  c_20.xyz = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = (tmpvar_8.w + ((_LightColor0.w * _SpecColor.w) * tmpvar_25));
  c_20.w = tmpvar_27;
  c_1.w = c_20.w;
  c_1.xyz = (c_20.xyz + (tmpvar_2 * xlv_TEXCOORD2));
  c_1.xyz = (c_1.xyz + tmpvar_4);
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 80 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Vector 13 [_WorldSpaceCameraPos]
Vector 14 [_ProjectionParams]
Vector 15 [_WorldSpaceLightPos0]
Vector 16 [unity_4LightPosX0]
Vector 17 [unity_4LightPosY0]
Vector 18 [unity_4LightPosZ0]
Vector 19 [unity_4LightAtten0]
Vector 20 [unity_LightColor0]
Vector 21 [unity_LightColor1]
Vector 22 [unity_LightColor2]
Vector 23 [unity_LightColor3]
Vector 24 [unity_SHAr]
Vector 25 [unity_SHAg]
Vector 26 [unity_SHAb]
Vector 27 [unity_SHBr]
Vector 28 [unity_SHBg]
Vector 29 [unity_SHBb]
Vector 30 [unity_SHC]
Vector 31 [unity_Scale]
Vector 32 [_MainTex_ST]
Vector 33 [_Clouds_ST]
"!!ARBvp1.0
PARAM c[34] = { { 1, 0, 0.5 },
		state.matrix.mvp,
		program.local[5..33] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
MUL R3.xyz, vertex.normal, c[31].w;
DP4 R0.x, vertex.position, c[6];
ADD R1, -R0.x, c[17];
DP3 R3.w, R3, c[6];
DP3 R4.x, R3, c[5];
DP3 R3.x, R3, c[7];
MUL R2, R3.w, R1;
DP4 R0.x, vertex.position, c[5];
ADD R0, -R0.x, c[16];
MUL R1, R1, R1;
MOV R4.z, R3.x;
MAD R2, R4.x, R0, R2;
MOV R4.w, c[0].x;
DP4 R4.y, vertex.position, c[7];
MAD R1, R0, R0, R1;
ADD R0, -R4.y, c[18];
MAD R1, R0, R0, R1;
MAD R0, R3.x, R0, R2;
MUL R2, R1, c[19];
MOV R4.y, R3.w;
RSQ R1.x, R1.x;
RSQ R1.y, R1.y;
RSQ R1.w, R1.w;
RSQ R1.z, R1.z;
MUL R0, R0, R1;
ADD R1, R2, c[0].x;
RCP R1.x, R1.x;
RCP R1.y, R1.y;
RCP R1.w, R1.w;
RCP R1.z, R1.z;
MAX R0, R0, c[0].y;
MUL R0, R0, R1;
MUL R1.xyz, R0.y, c[21];
MAD R1.xyz, R0.x, c[20], R1;
MAD R0.xyz, R0.z, c[22], R1;
MAD R1.xyz, R0.w, c[23], R0;
MUL R0, R4.xyzz, R4.yzzx;
MUL R1.w, R3, R3;
DP4 R3.z, R0, c[29];
DP4 R3.y, R0, c[28];
DP4 R3.x, R0, c[27];
MAD R1.w, R4.x, R4.x, -R1;
MUL R0.xyz, R1.w, c[30];
MOV R1.w, c[0].x;
DP4 R0.w, vertex.position, c[4];
DP4 R2.z, R4, c[26];
DP4 R2.y, R4, c[25];
DP4 R2.x, R4, c[24];
ADD R2.xyz, R2, R3;
ADD R0.xyz, R2, R0;
ADD result.texcoord[2].xyz, R0, R1;
MOV R1.xyz, c[13];
DP4 R2.z, R1, c[11];
DP4 R2.y, R1, c[10];
DP4 R2.x, R1, c[9];
MAD R2.xyz, R2, c[31].w, -vertex.position;
MOV R0.xyz, vertex.attrib[14];
MUL R1.xyz, vertex.normal.zxyw, R0.yzxw;
MAD R0.xyz, vertex.normal.yzxw, R0.zxyw, -R1;
MOV R1, c[15];
MUL R0.xyz, R0, vertex.attrib[14].w;
DP4 R3.z, R1, c[11];
DP4 R3.y, R1, c[10];
DP4 R3.x, R1, c[9];
DP3 result.texcoord[1].y, R3, R0;
DP3 result.texcoord[3].y, R0, R2;
DP4 R0.z, vertex.position, c[3];
DP4 R0.x, vertex.position, c[1];
DP4 R0.y, vertex.position, c[2];
MUL R1.xyz, R0.xyww, c[0].z;
MUL R1.y, R1, c[14].x;
DP3 result.texcoord[1].z, vertex.normal, R3;
DP3 result.texcoord[1].x, R3, vertex.attrib[14];
DP3 result.texcoord[3].z, vertex.normal, R2;
DP3 result.texcoord[3].x, vertex.attrib[14], R2;
ADD result.texcoord[4].xy, R1, R1.z;
MOV result.position, R0;
MOV result.texcoord[4].zw, R0;
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[33].xyxy, c[33];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[32], c[32].zwzw;
END
# 80 instructions, 5 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 83 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Vector 12 [_WorldSpaceCameraPos]
Vector 13 [_ProjectionParams]
Vector 14 [_ScreenParams]
Vector 15 [_WorldSpaceLightPos0]
Vector 16 [unity_4LightPosX0]
Vector 17 [unity_4LightPosY0]
Vector 18 [unity_4LightPosZ0]
Vector 19 [unity_4LightAtten0]
Vector 20 [unity_LightColor0]
Vector 21 [unity_LightColor1]
Vector 22 [unity_LightColor2]
Vector 23 [unity_LightColor3]
Vector 24 [unity_SHAr]
Vector 25 [unity_SHAg]
Vector 26 [unity_SHAb]
Vector 27 [unity_SHBr]
Vector 28 [unity_SHBg]
Vector 29 [unity_SHBb]
Vector 30 [unity_SHC]
Vector 31 [unity_Scale]
Vector 32 [_MainTex_ST]
Vector 33 [_Clouds_ST]
"vs_2_0
def c34, 1.00000000, 0.00000000, 0.50000000, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mul r3.xyz, v2, c31.w
dp4 r0.x, v0, c5
add r1, -r0.x, c17
dp3 r3.w, r3, c5
dp3 r4.x, r3, c4
dp3 r3.x, r3, c6
mul r2, r3.w, r1
dp4 r0.x, v0, c4
add r0, -r0.x, c16
mul r1, r1, r1
mov r4.z, r3.x
mad r2, r4.x, r0, r2
mov r4.w, c34.x
dp4 r4.y, v0, c6
mad r1, r0, r0, r1
add r0, -r4.y, c18
mad r1, r0, r0, r1
mad r0, r3.x, r0, r2
mul r2, r1, c19
mov r4.y, r3.w
rsq r1.x, r1.x
rsq r1.y, r1.y
rsq r1.w, r1.w
rsq r1.z, r1.z
mul r0, r0, r1
add r1, r2, c34.x
dp4 r2.z, r4, c26
dp4 r2.y, r4, c25
dp4 r2.x, r4, c24
rcp r1.x, r1.x
rcp r1.y, r1.y
rcp r1.w, r1.w
rcp r1.z, r1.z
max r0, r0, c34.y
mul r0, r0, r1
mul r1.xyz, r0.y, c21
mad r1.xyz, r0.x, c20, r1
mad r0.xyz, r0.z, c22, r1
mad r1.xyz, r0.w, c23, r0
mul r0, r4.xyzz, r4.yzzx
mul r1.w, r3, r3
dp4 r3.z, r0, c29
dp4 r3.y, r0, c28
dp4 r3.x, r0, c27
mad r1.w, r4.x, r4.x, -r1
mul r0.xyz, r1.w, c30
add r2.xyz, r2, r3
add r0.xyz, r2, r0
add oT2.xyz, r0, r1
mov r1.w, c34.x
mov r1.xyz, c12
dp4 r0.z, r1, c10
dp4 r0.y, r1, c9
dp4 r0.x, r1, c8
mad r3.xyz, r0, c31.w, -v0
mov r1.xyz, v1
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r1.yzxw
mad r1.xyz, v2.yzxw, r0.zxyw, -r1
mul r2.xyz, r1, v1.w
mov r0, c10
dp4 r4.z, c15, r0
mov r0, c8
dp4 r4.x, c15, r0
mov r1, c9
dp4 r4.y, c15, r1
dp4 r0.w, v0, c3
dp4 r0.z, v0, c2
dp4 r0.x, v0, c0
dp4 r0.y, v0, c1
mul r1.xyz, r0.xyww, c34.z
mul r1.y, r1, c13.x
dp3 oT1.y, r4, r2
dp3 oT3.y, r2, r3
dp3 oT1.z, v2, r4
dp3 oT1.x, r4, v1
dp3 oT3.z, v2, r3
dp3 oT3.x, v1, r3
mad oT4.xy, r1.z, c14.zwzw, r1
mov oPos, r0
mov oT4.zw, r0
mad oT0.zw, v3.xyxy, c33.xyxy, c33
mad oT0.xy, v3, c32, c32.zwzw
"
}
SubProgram "d3d11 " {
// Stats: 66 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 192
Vector 160 [_MainTex_ST]
Vector 176 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0
eefieceddlegamchheehlehbchejicjmmbkkdocnabaaaaaanaalaaaaadaaaaaa
cmaaaaaapeaaaaaakmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheolaaaaaaaagaaaaaa
aiaaaaaajiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakeaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaakeaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaakeaaaaaa
aeaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklfdeieefcbmakaaaaeaaaabaaihacaaaafjaaaaae
egiocaaaaaaaaaaaamaaaaaafjaaaaaeegiocaaaabaaaaaaagaaaaaafjaaaaae
egiocaaaacaaaaaacnaaaaaafjaaaaaeegiocaaaadaaaaaabfaaaaaafpaaaaad
pcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaa
fpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaad
pccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaa
gfaaaaadhccabaaaaeaaaaaagfaaaaadpccabaaaafaaaaaagiaaaaacaiaaaaaa
diaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaa
kgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaa
egiacaaaaaaaaaaaakaaaaaaogikcaaaaaaaaaaaakaaaaaadcaaaaalmccabaaa
abaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaalaaaaaakgiocaaaaaaaaaaa
alaaaaaadiaaaaahhcaabaaaabaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaa
dcaaaaakhcaabaaaabaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaia
ebaaaaaaabaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaapgbpbaaa
abaaaaaadiaaaaajhcaabaaaacaaaaaafgifcaaaacaaaaaaaaaaaaaaegiccaaa
adaaaaaabbaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaaadaaaaaabaaaaaaa
agiacaaaacaaaaaaaaaaaaaaegacbaaaacaaaaaadcaaaaalhcaabaaaacaaaaaa
egiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaaegacbaaaacaaaaaa
dcaaaaalhcaabaaaacaaaaaaegiccaaaadaaaaaabdaaaaaapgipcaaaacaaaaaa
aaaaaaaaegacbaaaacaaaaaabaaaaaahcccabaaaacaaaaaaegacbaaaabaaaaaa
egacbaaaacaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaa
acaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaaacaaaaaa
dgaaaaaficaabaaaacaaaaaaabeaaaaaaaaaiadpdiaaaaaihcaabaaaadaaaaaa
egbcbaaaacaaaaaapgipcaaaadaaaaaabeaaaaaadiaaaaaihcaabaaaaeaaaaaa
fgafbaaaadaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaaklcaabaaaadaaaaaa
egiicaaaadaaaaaaamaaaaaaagaabaaaadaaaaaaegaibaaaaeaaaaaadcaaaaak
hcaabaaaacaaaaaaegiccaaaadaaaaaaaoaaaaaakgakbaaaadaaaaaaegadbaaa
adaaaaaabbaaaaaibcaabaaaadaaaaaaegiocaaaacaaaaaacgaaaaaaegaobaaa
acaaaaaabbaaaaaiccaabaaaadaaaaaaegiocaaaacaaaaaachaaaaaaegaobaaa
acaaaaaabbaaaaaiecaabaaaadaaaaaaegiocaaaacaaaaaaciaaaaaaegaobaaa
acaaaaaadiaaaaahpcaabaaaaeaaaaaajgacbaaaacaaaaaaegakbaaaacaaaaaa
bbaaaaaibcaabaaaafaaaaaaegiocaaaacaaaaaacjaaaaaaegaobaaaaeaaaaaa
bbaaaaaiccaabaaaafaaaaaaegiocaaaacaaaaaackaaaaaaegaobaaaaeaaaaaa
bbaaaaaiecaabaaaafaaaaaaegiocaaaacaaaaaaclaaaaaaegaobaaaaeaaaaaa
aaaaaaahhcaabaaaadaaaaaaegacbaaaadaaaaaaegacbaaaafaaaaaadiaaaaah
icaabaaaabaaaaaabkaabaaaacaaaaaabkaabaaaacaaaaaadcaaaaakicaabaaa
abaaaaaaakaabaaaacaaaaaaakaabaaaacaaaaaadkaabaiaebaaaaaaabaaaaaa
dcaaaaakhcaabaaaadaaaaaaegiccaaaacaaaaaacmaaaaaapgapbaaaabaaaaaa
egacbaaaadaaaaaadiaaaaaihcaabaaaaeaaaaaafgbfbaaaaaaaaaaaegiccaaa
adaaaaaaanaaaaaadcaaaaakhcaabaaaaeaaaaaaegiccaaaadaaaaaaamaaaaaa
agbabaaaaaaaaaaaegacbaaaaeaaaaaadcaaaaakhcaabaaaaeaaaaaaegiccaaa
adaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegacbaaaaeaaaaaadcaaaaakhcaabaaa
aeaaaaaaegiccaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaaegacbaaaaeaaaaaa
aaaaaaajpcaabaaaafaaaaaafgafbaiaebaaaaaaaeaaaaaaegiocaaaacaaaaaa
adaaaaaadiaaaaahpcaabaaaagaaaaaafgafbaaaacaaaaaaegaobaaaafaaaaaa
diaaaaahpcaabaaaafaaaaaaegaobaaaafaaaaaaegaobaaaafaaaaaaaaaaaaaj
pcaabaaaahaaaaaaagaabaiaebaaaaaaaeaaaaaaegiocaaaacaaaaaaacaaaaaa
aaaaaaajpcaabaaaaeaaaaaakgakbaiaebaaaaaaaeaaaaaaegiocaaaacaaaaaa
aeaaaaaadcaaaaajpcaabaaaagaaaaaaegaobaaaahaaaaaaagaabaaaacaaaaaa
egaobaaaagaaaaaadcaaaaajpcaabaaaacaaaaaaegaobaaaaeaaaaaakgakbaaa
acaaaaaaegaobaaaagaaaaaadcaaaaajpcaabaaaafaaaaaaegaobaaaahaaaaaa
egaobaaaahaaaaaaegaobaaaafaaaaaadcaaaaajpcaabaaaaeaaaaaaegaobaaa
aeaaaaaaegaobaaaaeaaaaaaegaobaaaafaaaaaaeeaaaaafpcaabaaaafaaaaaa
egaobaaaaeaaaaaadcaaaaanpcaabaaaaeaaaaaaegaobaaaaeaaaaaaegiocaaa
acaaaaaaafaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaiadpaoaaaaak
pcaabaaaaeaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaiadpegaobaaa
aeaaaaaadiaaaaahpcaabaaaacaaaaaaegaobaaaacaaaaaaegaobaaaafaaaaaa
deaaaaakpcaabaaaacaaaaaaegaobaaaacaaaaaaaceaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaadiaaaaahpcaabaaaacaaaaaaegaobaaaaeaaaaaaegaobaaa
acaaaaaadiaaaaaihcaabaaaaeaaaaaafgafbaaaacaaaaaaegiccaaaacaaaaaa
ahaaaaaadcaaaaakhcaabaaaaeaaaaaaegiccaaaacaaaaaaagaaaaaaagaabaaa
acaaaaaaegacbaaaaeaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaaacaaaaaa
aiaaaaaakgakbaaaacaaaaaaegacbaaaaeaaaaaadcaaaaakhcaabaaaacaaaaaa
egiccaaaacaaaaaaajaaaaaapgapbaaaacaaaaaaegacbaaaacaaaaaaaaaaaaah
hccabaaaadaaaaaaegacbaaaacaaaaaaegacbaaaadaaaaaadiaaaaajhcaabaaa
acaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaal
hcaabaaaacaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaa
egacbaaaacaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaaadaaaaaabcaaaaaa
kgikcaaaabaaaaaaaeaaaaaaegacbaaaacaaaaaaaaaaaaaihcaabaaaacaaaaaa
egacbaaaacaaaaaaegiccaaaadaaaaaabdaaaaaadcaaaaalhcaabaaaacaaaaaa
egacbaaaacaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaa
baaaaaahcccabaaaaeaaaaaaegacbaaaabaaaaaaegacbaaaacaaaaaabaaaaaah
bccabaaaaeaaaaaaegbcbaaaabaaaaaaegacbaaaacaaaaaabaaaaaaheccabaaa
aeaaaaaaegbcbaaaacaaaaaaegacbaaaacaaaaaadiaaaaaiccaabaaaaaaaaaaa
bkaabaaaaaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaaabaaaaaa
agahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadpdgaaaaaf
mccabaaaafaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaafaaaaaakgakbaaa
abaaaaaamgaabaaaabaaaaaadoaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 66 math
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 192
Vector 160 [_MainTex_ST]
Vector 176 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
Vector 32 [unity_4LightPosX0]
Vector 48 [unity_4LightPosY0]
Vector 64 [unity_4LightPosZ0]
Vector 80 [unity_4LightAtten0]
Vector 96 [unity_LightColor0]
Vector 112 [unity_LightColor1]
Vector 128 [unity_LightColor2]
Vector 144 [unity_LightColor3]
Vector 160 [unity_LightColor4]
Vector 176 [unity_LightColor5]
Vector 192 [unity_LightColor6]
Vector 208 [unity_LightColor7]
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0_level_9_1
eefiecedooomhilecokihkdmnnjojnefjemlfbimabaaaaaaombbaaaaaeaaaaaa
daaaaaaaeiagaaaagmbaaaaadebbaaaaebgpgodjbaagaaaabaagaaaaaaacpopp
jeafaaaahmaaaaaaahaaceaaaaaahiaaaaaahiaaaaaaceaaabaahiaaaaaaakaa
acaaabaaaaaaaaaaabaaaeaaacaaadaaaaaaaaaaacaaaaaaabaaafaaaaaaaaaa
acaaacaaaiaaagaaaaaaaaaaacaacgaaahaaaoaaaaaaaaaaadaaaaaaaeaabfaa
aaaaaaaaadaaamaaajaabjaaaaaaaaaaaaaaaaaaaaacpoppfbaaaaafccaaapka
aaaaiadpaaaaaaaaaaaaaadpaaaaaaaabpaaaaacafaaaaiaaaaaapjabpaaaaac
afaaabiaabaaapjabpaaaaacafaaaciaacaaapjabpaaaaacafaaadiaadaaapja
aeaaaaaeaaaaadoaadaaoejaabaaoekaabaaookaaeaaaaaeaaaaamoaadaaeeja
acaaeekaacaaoekaabaaaaacaaaaapiaafaaoekaafaaaaadabaaahiaaaaaffia
boaaoekaaeaaaaaeabaaahiabnaaoekaaaaaaaiaabaaoeiaaeaaaaaeaaaaahia
bpaaoekaaaaakkiaabaaoeiaaeaaaaaeaaaaahiacaaaoekaaaaappiaaaaaoeia
aiaaaaadabaaaboaabaaoejaaaaaoeiaabaaaaacabaaahiaacaaoejaafaaaaad
acaaahiaabaanciaabaamjjaaeaaaaaeabaaahiaabaamjiaabaancjaacaaoeib
afaaaaadabaaahiaabaaoeiaabaappjaaiaaaaadabaaacoaabaaoeiaaaaaoeia
aiaaaaadabaaaeoaacaaoejaaaaaoeiaabaaaaacaaaaahiaadaaoekaafaaaaad
acaaahiaaaaaffiaboaaoekaaeaaaaaeaaaaaliabnaakekaaaaaaaiaacaakeia
aeaaaaaeaaaaahiabpaaoekaaaaakkiaaaaapeiaacaaaaadaaaaahiaaaaaoeia
caaaoekaaeaaaaaeaaaaahiaaaaaoeiacbaappkaaaaaoejbaiaaaaadadaaaboa
abaaoejaaaaaoeiaaiaaaaadadaaacoaabaaoeiaaaaaoeiaaiaaaaadadaaaeoa
acaaoejaaaaaoeiaafaaaaadaaaaahiaaaaaffjabkaaoekaaeaaaaaeaaaaahia
bjaaoekaaaaaaajaaaaaoeiaaeaaaaaeaaaaahiablaaoekaaaaakkjaaaaaoeia
aeaaaaaeaaaaahiabmaaoekaaaaappjaaaaaoeiaacaaaaadabaaapiaaaaakkib
aiaaoekaacaaaaadacaaapiaaaaaaaibagaaoekaacaaaaadaaaaapiaaaaaffib
ahaaoekaafaaaaadadaaahiaacaaoejacbaappkaafaaaaadaeaaahiaadaaffia
bkaaoekaaeaaaaaeadaaaliabjaakekaadaaaaiaaeaakeiaaeaaaaaeadaaahia
blaaoekaadaakkiaadaapeiaafaaaaadaeaaapiaaaaaoeiaadaaffiaafaaaaad
aaaaapiaaaaaoeiaaaaaoeiaaeaaaaaeaaaaapiaacaaoeiaacaaoeiaaaaaoeia
aeaaaaaeacaaapiaacaaoeiaadaaaaiaaeaaoeiaaeaaaaaeacaaapiaabaaoeia
adaakkiaacaaoeiaaeaaaaaeaaaaapiaabaaoeiaabaaoeiaaaaaoeiaahaaaaac
abaaabiaaaaaaaiaahaaaaacabaaaciaaaaaffiaahaaaaacabaaaeiaaaaakkia
ahaaaaacabaaaiiaaaaappiaabaaaaacaeaaabiaccaaaakaaeaaaaaeaaaaapia
aaaaoeiaajaaoekaaeaaaaiaafaaaaadabaaapiaabaaoeiaacaaoeiaalaaaaad
abaaapiaabaaoeiaccaaffkaagaaaaacacaaabiaaaaaaaiaagaaaaacacaaacia
aaaaffiaagaaaaacacaaaeiaaaaakkiaagaaaaacacaaaiiaaaaappiaafaaaaad
aaaaapiaabaaoeiaacaaoeiaafaaaaadabaaahiaaaaaffiaalaaoekaaeaaaaae
abaaahiaakaaoekaaaaaaaiaabaaoeiaaeaaaaaeaaaaahiaamaaoekaaaaakkia
abaaoeiaaeaaaaaeaaaaahiaanaaoekaaaaappiaaaaaoeiaabaaaaacadaaaiia
ccaaaakaajaaaaadabaaabiaaoaaoekaadaaoeiaajaaaaadabaaaciaapaaoeka
adaaoeiaajaaaaadabaaaeiabaaaoekaadaaoeiaafaaaaadacaaapiaadaacjia
adaakeiaajaaaaadaeaaabiabbaaoekaacaaoeiaajaaaaadaeaaaciabcaaoeka
acaaoeiaajaaaaadaeaaaeiabdaaoekaacaaoeiaacaaaaadabaaahiaabaaoeia
aeaaoeiaafaaaaadaaaaaiiaadaaffiaadaaffiaaeaaaaaeaaaaaiiaadaaaaia
adaaaaiaaaaappibaeaaaaaeabaaahiabeaaoekaaaaappiaabaaoeiaacaaaaad
acaaahoaaaaaoeiaabaaoeiaafaaaaadaaaaapiaaaaaffjabgaaoekaaeaaaaae
aaaaapiabfaaoekaaaaaaajaaaaaoeiaaeaaaaaeaaaaapiabhaaoekaaaaakkja
aaaaoeiaaeaaaaaeaaaaapiabiaaoekaaaaappjaaaaaoeiaafaaaaadabaaabia
aaaaffiaaeaaaakaafaaaaadabaaaiiaabaaaaiaccaakkkaafaaaaadabaaafia
aaaapeiaccaakkkaacaaaaadaeaaadoaabaakkiaabaaomiaaeaaaaaeaaaaadma
aaaappiaaaaaoekaaaaaoeiaabaaaaacaaaaammaaaaaoeiaabaaaaacaeaaamoa
aaaaoeiappppaaaafdeieefcbmakaaaaeaaaabaaihacaaaafjaaaaaeegiocaaa
aaaaaaaaamaaaaaafjaaaaaeegiocaaaabaaaaaaagaaaaaafjaaaaaeegiocaaa
acaaaaaacnaaaaaafjaaaaaeegiocaaaadaaaaaabfaaaaaafpaaaaadpcbabaaa
aaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaad
dcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaadpccabaaa
abaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaagfaaaaad
hccabaaaaeaaaaaagfaaaaadpccabaaaafaaaaaagiaaaaacaiaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaa
aaaaaaaaakaaaaaaogikcaaaaaaaaaaaakaaaaaadcaaaaalmccabaaaabaaaaaa
agbebaaaadaaaaaaagiecaaaaaaaaaaaalaaaaaakgiocaaaaaaaaaaaalaaaaaa
diaaaaahhcaabaaaabaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaadcaaaaak
hcaabaaaabaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaiaebaaaaaa
abaaaaaadiaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaapgbpbaaaabaaaaaa
diaaaaajhcaabaaaacaaaaaafgifcaaaacaaaaaaaaaaaaaaegiccaaaadaaaaaa
bbaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaa
acaaaaaaaaaaaaaaegacbaaaacaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaa
adaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaaegacbaaaacaaaaaadcaaaaal
hcaabaaaacaaaaaaegiccaaaadaaaaaabdaaaaaapgipcaaaacaaaaaaaaaaaaaa
egacbaaaacaaaaaabaaaaaahcccabaaaacaaaaaaegacbaaaabaaaaaaegacbaaa
acaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaaacaaaaaa
baaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaaacaaaaaadgaaaaaf
icaabaaaacaaaaaaabeaaaaaaaaaiadpdiaaaaaihcaabaaaadaaaaaaegbcbaaa
acaaaaaapgipcaaaadaaaaaabeaaaaaadiaaaaaihcaabaaaaeaaaaaafgafbaaa
adaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaaklcaabaaaadaaaaaaegiicaaa
adaaaaaaamaaaaaaagaabaaaadaaaaaaegaibaaaaeaaaaaadcaaaaakhcaabaaa
acaaaaaaegiccaaaadaaaaaaaoaaaaaakgakbaaaadaaaaaaegadbaaaadaaaaaa
bbaaaaaibcaabaaaadaaaaaaegiocaaaacaaaaaacgaaaaaaegaobaaaacaaaaaa
bbaaaaaiccaabaaaadaaaaaaegiocaaaacaaaaaachaaaaaaegaobaaaacaaaaaa
bbaaaaaiecaabaaaadaaaaaaegiocaaaacaaaaaaciaaaaaaegaobaaaacaaaaaa
diaaaaahpcaabaaaaeaaaaaajgacbaaaacaaaaaaegakbaaaacaaaaaabbaaaaai
bcaabaaaafaaaaaaegiocaaaacaaaaaacjaaaaaaegaobaaaaeaaaaaabbaaaaai
ccaabaaaafaaaaaaegiocaaaacaaaaaackaaaaaaegaobaaaaeaaaaaabbaaaaai
ecaabaaaafaaaaaaegiocaaaacaaaaaaclaaaaaaegaobaaaaeaaaaaaaaaaaaah
hcaabaaaadaaaaaaegacbaaaadaaaaaaegacbaaaafaaaaaadiaaaaahicaabaaa
abaaaaaabkaabaaaacaaaaaabkaabaaaacaaaaaadcaaaaakicaabaaaabaaaaaa
akaabaaaacaaaaaaakaabaaaacaaaaaadkaabaiaebaaaaaaabaaaaaadcaaaaak
hcaabaaaadaaaaaaegiccaaaacaaaaaacmaaaaaapgapbaaaabaaaaaaegacbaaa
adaaaaaadiaaaaaihcaabaaaaeaaaaaafgbfbaaaaaaaaaaaegiccaaaadaaaaaa
anaaaaaadcaaaaakhcaabaaaaeaaaaaaegiccaaaadaaaaaaamaaaaaaagbabaaa
aaaaaaaaegacbaaaaeaaaaaadcaaaaakhcaabaaaaeaaaaaaegiccaaaadaaaaaa
aoaaaaaakgbkbaaaaaaaaaaaegacbaaaaeaaaaaadcaaaaakhcaabaaaaeaaaaaa
egiccaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaaegacbaaaaeaaaaaaaaaaaaaj
pcaabaaaafaaaaaafgafbaiaebaaaaaaaeaaaaaaegiocaaaacaaaaaaadaaaaaa
diaaaaahpcaabaaaagaaaaaafgafbaaaacaaaaaaegaobaaaafaaaaaadiaaaaah
pcaabaaaafaaaaaaegaobaaaafaaaaaaegaobaaaafaaaaaaaaaaaaajpcaabaaa
ahaaaaaaagaabaiaebaaaaaaaeaaaaaaegiocaaaacaaaaaaacaaaaaaaaaaaaaj
pcaabaaaaeaaaaaakgakbaiaebaaaaaaaeaaaaaaegiocaaaacaaaaaaaeaaaaaa
dcaaaaajpcaabaaaagaaaaaaegaobaaaahaaaaaaagaabaaaacaaaaaaegaobaaa
agaaaaaadcaaaaajpcaabaaaacaaaaaaegaobaaaaeaaaaaakgakbaaaacaaaaaa
egaobaaaagaaaaaadcaaaaajpcaabaaaafaaaaaaegaobaaaahaaaaaaegaobaaa
ahaaaaaaegaobaaaafaaaaaadcaaaaajpcaabaaaaeaaaaaaegaobaaaaeaaaaaa
egaobaaaaeaaaaaaegaobaaaafaaaaaaeeaaaaafpcaabaaaafaaaaaaegaobaaa
aeaaaaaadcaaaaanpcaabaaaaeaaaaaaegaobaaaaeaaaaaaegiocaaaacaaaaaa
afaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaiadpaoaaaaakpcaabaaa
aeaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaiadpaaaaiadpegaobaaaaeaaaaaa
diaaaaahpcaabaaaacaaaaaaegaobaaaacaaaaaaegaobaaaafaaaaaadeaaaaak
pcaabaaaacaaaaaaegaobaaaacaaaaaaaceaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaadiaaaaahpcaabaaaacaaaaaaegaobaaaaeaaaaaaegaobaaaacaaaaaa
diaaaaaihcaabaaaaeaaaaaafgafbaaaacaaaaaaegiccaaaacaaaaaaahaaaaaa
dcaaaaakhcaabaaaaeaaaaaaegiccaaaacaaaaaaagaaaaaaagaabaaaacaaaaaa
egacbaaaaeaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaaacaaaaaaaiaaaaaa
kgakbaaaacaaaaaaegacbaaaaeaaaaaadcaaaaakhcaabaaaacaaaaaaegiccaaa
acaaaaaaajaaaaaapgapbaaaacaaaaaaegacbaaaacaaaaaaaaaaaaahhccabaaa
adaaaaaaegacbaaaacaaaaaaegacbaaaadaaaaaadiaaaaajhcaabaaaacaaaaaa
fgifcaaaabaaaaaaaeaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaa
acaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaa
acaaaaaadcaaaaalhcaabaaaacaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaa
abaaaaaaaeaaaaaaegacbaaaacaaaaaaaaaaaaaihcaabaaaacaaaaaaegacbaaa
acaaaaaaegiccaaaadaaaaaabdaaaaaadcaaaaalhcaabaaaacaaaaaaegacbaaa
acaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaah
cccabaaaaeaaaaaaegacbaaaabaaaaaaegacbaaaacaaaaaabaaaaaahbccabaaa
aeaaaaaaegbcbaaaabaaaaaaegacbaaaacaaaaaabaaaaaaheccabaaaaeaaaaaa
egbcbaaaacaaaaaaegacbaaaacaaaaaadiaaaaaiccaabaaaaaaaaaaabkaabaaa
aaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaaabaaaaaaagahbaaa
aaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadpdgaaaaafmccabaaa
afaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaafaaaaaakgakbaaaabaaaaaa
mgaabaaaabaaaaaadoaaaaabejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheolaaaaaaaagaaaaaa
aiaaaaaajiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakeaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaakeaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaakeaaaaaa
aeaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklkl"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (tmpvar_2 * unity_Scale.w));
  highp vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_1.xyz;
  tmpvar_10 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_11;
  tmpvar_11[0].x = tmpvar_9.x;
  tmpvar_11[0].y = tmpvar_10.x;
  tmpvar_11[0].z = tmpvar_2.x;
  tmpvar_11[1].x = tmpvar_9.y;
  tmpvar_11[1].y = tmpvar_10.y;
  tmpvar_11[1].z = tmpvar_2.y;
  tmpvar_11[2].x = tmpvar_9.z;
  tmpvar_11[2].y = tmpvar_10.z;
  tmpvar_11[2].z = tmpvar_2.z;
  highp vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = tmpvar_8;
  mediump vec3 tmpvar_15;
  mediump vec4 normal_16;
  normal_16 = tmpvar_14;
  highp float vC_17;
  mediump vec3 x3_18;
  mediump vec3 x2_19;
  mediump vec3 x1_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAr, normal_16);
  x1_20.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAg, normal_16);
  x1_20.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHAb, normal_16);
  x1_20.z = tmpvar_23;
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_16.xyzz * normal_16.yzzx);
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBr, tmpvar_24);
  x2_19.x = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBg, tmpvar_24);
  x2_19.y = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = dot (unity_SHBb, tmpvar_24);
  x2_19.z = tmpvar_27;
  mediump float tmpvar_28;
  tmpvar_28 = ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y));
  vC_17 = tmpvar_28;
  highp vec3 tmpvar_29;
  tmpvar_29 = (unity_SHC.xyz * vC_17);
  x3_18 = tmpvar_29;
  tmpvar_15 = ((x1_20 + x2_19) + x3_18);
  shlight_3 = tmpvar_15;
  tmpvar_6 = shlight_3;
  highp vec3 tmpvar_30;
  tmpvar_30 = (_Object2World * _glesVertex).xyz;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosX0 - tmpvar_30.x);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosY0 - tmpvar_30.y);
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosZ0 - tmpvar_30.z);
  highp vec4 tmpvar_34;
  tmpvar_34 = (((tmpvar_31 * tmpvar_31) + (tmpvar_32 * tmpvar_32)) + (tmpvar_33 * tmpvar_33));
  highp vec4 tmpvar_35;
  tmpvar_35 = (max (vec4(0.0, 0.0, 0.0, 0.0), ((((tmpvar_31 * tmpvar_8.x) + (tmpvar_32 * tmpvar_8.y)) + (tmpvar_33 * tmpvar_8.z)) * inversesqrt(tmpvar_34))) * (1.0/((1.0 + (tmpvar_34 * unity_4LightAtten0)))));
  highp vec3 tmpvar_36;
  tmpvar_36 = (tmpvar_6 + ((((unity_LightColor[0].xyz * tmpvar_35.x) + (unity_LightColor[1].xyz * tmpvar_35.y)) + (unity_LightColor[2].xyz * tmpvar_35.z)) + (unity_LightColor[3].xyz * tmpvar_35.w)));
  tmpvar_6 = tmpvar_36;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = (tmpvar_11 * (((_World2Object * tmpvar_13).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
varying highp vec4 xlv_TEXCOORD0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_2 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (tmpvar_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_3 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = clouds_7;
  lowp vec4 arg0_14;
  arg0_14 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (arg0_14, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_13).xyz;
  tmpvar_4 = tmpvar_15;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_17;
  tmpvar_17 = ((tmpvar_16.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_17;
  lowp float tmpvar_18;
  mediump float lightShadowDataX_19;
  highp float dist_20;
  lowp float tmpvar_21;
  tmpvar_21 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
  dist_20 = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = _LightShadowData.x;
  lightShadowDataX_19 = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = max (float((dist_20 > (xlv_TEXCOORD4.z / xlv_TEXCOORD4.w))), lightShadowDataX_19);
  tmpvar_18 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = normalize(xlv_TEXCOORD3);
  mediump vec3 viewDir_25;
  viewDir_25 = tmpvar_24;
  lowp vec4 c_26;
  highp float nh_27;
  lowp float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_3, xlv_TEXCOORD1));
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_3, normalize((xlv_TEXCOORD1 + viewDir_25))));
  nh_27 = tmpvar_29;
  mediump float arg1_30;
  arg1_30 = (tmpvar_5 * 128.0);
  highp float tmpvar_31;
  tmpvar_31 = (pow (nh_27, arg1_30) * tmpvar_6);
  highp vec3 tmpvar_32;
  tmpvar_32 = ((((tmpvar_2 * _LightColor0.xyz) * tmpvar_28) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_31)) * (tmpvar_18 * 2.0));
  c_26.xyz = tmpvar_32;
  highp float tmpvar_33;
  tmpvar_33 = (tmpvar_8.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_31) * tmpvar_18));
  c_26.w = tmpvar_33;
  c_1.w = c_26.w;
  c_1.xyz = (c_26.xyz + (tmpvar_2 * xlv_TEXCOORD2));
  c_1.xyz = (c_1.xyz + tmpvar_4);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  highp vec4 tmpvar_7;
  tmpvar_7 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_8;
  tmpvar_8[0] = _Object2World[0].xyz;
  tmpvar_8[1] = _Object2World[1].xyz;
  tmpvar_8[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * (tmpvar_2 * unity_Scale.w));
  highp vec3 tmpvar_10;
  highp vec3 tmpvar_11;
  tmpvar_10 = tmpvar_1.xyz;
  tmpvar_11 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_12;
  tmpvar_12[0].x = tmpvar_10.x;
  tmpvar_12[0].y = tmpvar_11.x;
  tmpvar_12[0].z = tmpvar_2.x;
  tmpvar_12[1].x = tmpvar_10.y;
  tmpvar_12[1].y = tmpvar_11.y;
  tmpvar_12[1].z = tmpvar_2.y;
  tmpvar_12[2].x = tmpvar_10.z;
  tmpvar_12[2].y = tmpvar_11.z;
  tmpvar_12[2].z = tmpvar_2.z;
  highp vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_12 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_13;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_15;
  tmpvar_15.w = 1.0;
  tmpvar_15.xyz = tmpvar_9;
  mediump vec3 tmpvar_16;
  mediump vec4 normal_17;
  normal_17 = tmpvar_15;
  highp float vC_18;
  mediump vec3 x3_19;
  mediump vec3 x2_20;
  mediump vec3 x1_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAr, normal_17);
  x1_21.x = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHAg, normal_17);
  x1_21.y = tmpvar_23;
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHAb, normal_17);
  x1_21.z = tmpvar_24;
  mediump vec4 tmpvar_25;
  tmpvar_25 = (normal_17.xyzz * normal_17.yzzx);
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBr, tmpvar_25);
  x2_20.x = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = dot (unity_SHBg, tmpvar_25);
  x2_20.y = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = dot (unity_SHBb, tmpvar_25);
  x2_20.z = tmpvar_28;
  mediump float tmpvar_29;
  tmpvar_29 = ((normal_17.x * normal_17.x) - (normal_17.y * normal_17.y));
  vC_18 = tmpvar_29;
  highp vec3 tmpvar_30;
  tmpvar_30 = (unity_SHC.xyz * vC_18);
  x3_19 = tmpvar_30;
  tmpvar_16 = ((x1_21 + x2_20) + x3_19);
  shlight_3 = tmpvar_16;
  tmpvar_6 = shlight_3;
  highp vec3 tmpvar_31;
  tmpvar_31 = (_Object2World * _glesVertex).xyz;
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosX0 - tmpvar_31.x);
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosY0 - tmpvar_31.y);
  highp vec4 tmpvar_34;
  tmpvar_34 = (unity_4LightPosZ0 - tmpvar_31.z);
  highp vec4 tmpvar_35;
  tmpvar_35 = (((tmpvar_32 * tmpvar_32) + (tmpvar_33 * tmpvar_33)) + (tmpvar_34 * tmpvar_34));
  highp vec4 tmpvar_36;
  tmpvar_36 = (max (vec4(0.0, 0.0, 0.0, 0.0), ((((tmpvar_32 * tmpvar_9.x) + (tmpvar_33 * tmpvar_9.y)) + (tmpvar_34 * tmpvar_9.z)) * inversesqrt(tmpvar_35))) * (1.0/((1.0 + (tmpvar_35 * unity_4LightAtten0)))));
  highp vec3 tmpvar_37;
  tmpvar_37 = (tmpvar_6 + ((((unity_LightColor[0].xyz * tmpvar_36.x) + (unity_LightColor[1].xyz * tmpvar_36.y)) + (unity_LightColor[2].xyz * tmpvar_36.z)) + (unity_LightColor[3].xyz * tmpvar_36.w)));
  tmpvar_6 = tmpvar_37;
  highp vec4 o_38;
  highp vec4 tmpvar_39;
  tmpvar_39 = (tmpvar_7 * 0.5);
  highp vec2 tmpvar_40;
  tmpvar_40.x = tmpvar_39.x;
  tmpvar_40.y = (tmpvar_39.y * _ProjectionParams.x);
  o_38.xy = (tmpvar_40 + tmpvar_39.w);
  o_38.zw = tmpvar_7.zw;
  gl_Position = tmpvar_7;
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = (tmpvar_12 * (((_World2Object * tmpvar_14).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD4 = o_38;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
varying highp vec4 xlv_TEXCOORD0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_2 = tmpvar_10;
  lowp vec3 normal_11;
  normal_11.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_11.z = sqrt((1.0 - clamp (dot (normal_11.xy, normal_11.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (normal_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_3 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = clouds_7;
  lowp vec4 arg0_14;
  arg0_14 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (arg0_14, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_13).xyz;
  tmpvar_4 = tmpvar_15;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_17;
  tmpvar_17 = ((tmpvar_16.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2DProj (_ShadowMapTexture, xlv_TEXCOORD4);
  highp vec3 tmpvar_19;
  tmpvar_19 = normalize(xlv_TEXCOORD3);
  mediump vec3 viewDir_20;
  viewDir_20 = tmpvar_19;
  lowp vec4 c_21;
  highp float nh_22;
  lowp float tmpvar_23;
  tmpvar_23 = max (0.0, dot (tmpvar_3, xlv_TEXCOORD1));
  mediump float tmpvar_24;
  tmpvar_24 = max (0.0, dot (tmpvar_3, normalize((xlv_TEXCOORD1 + viewDir_20))));
  nh_22 = tmpvar_24;
  mediump float arg1_25;
  arg1_25 = (tmpvar_5 * 128.0);
  highp float tmpvar_26;
  tmpvar_26 = (pow (nh_22, arg1_25) * tmpvar_6);
  highp vec3 tmpvar_27;
  tmpvar_27 = ((((tmpvar_2 * _LightColor0.xyz) * tmpvar_23) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_26)) * (tmpvar_18.x * 2.0));
  c_21.xyz = tmpvar_27;
  highp float tmpvar_28;
  tmpvar_28 = (tmpvar_8.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_26) * tmpvar_18.x));
  c_21.w = tmpvar_28;
  c_1.w = c_21.w;
  c_1.xyz = (c_21.xyz + (tmpvar_2 * xlv_TEXCOORD2));
  c_1.xyz = (c_1.xyz + tmpvar_4);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out lowp vec3 xlv_TEXCOORD1;
out lowp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec4 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (tmpvar_2 * unity_Scale.w));
  highp vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_1.xyz;
  tmpvar_10 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_11;
  tmpvar_11[0].x = tmpvar_9.x;
  tmpvar_11[0].y = tmpvar_10.x;
  tmpvar_11[0].z = tmpvar_2.x;
  tmpvar_11[1].x = tmpvar_9.y;
  tmpvar_11[1].y = tmpvar_10.y;
  tmpvar_11[1].z = tmpvar_2.y;
  tmpvar_11[2].x = tmpvar_9.z;
  tmpvar_11[2].y = tmpvar_10.z;
  tmpvar_11[2].z = tmpvar_2.z;
  highp vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = tmpvar_8;
  mediump vec3 tmpvar_15;
  mediump vec4 normal_16;
  normal_16 = tmpvar_14;
  highp float vC_17;
  mediump vec3 x3_18;
  mediump vec3 x2_19;
  mediump vec3 x1_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAr, normal_16);
  x1_20.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAg, normal_16);
  x1_20.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHAb, normal_16);
  x1_20.z = tmpvar_23;
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_16.xyzz * normal_16.yzzx);
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBr, tmpvar_24);
  x2_19.x = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBg, tmpvar_24);
  x2_19.y = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = dot (unity_SHBb, tmpvar_24);
  x2_19.z = tmpvar_27;
  mediump float tmpvar_28;
  tmpvar_28 = ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y));
  vC_17 = tmpvar_28;
  highp vec3 tmpvar_29;
  tmpvar_29 = (unity_SHC.xyz * vC_17);
  x3_18 = tmpvar_29;
  tmpvar_15 = ((x1_20 + x2_19) + x3_18);
  shlight_3 = tmpvar_15;
  tmpvar_6 = shlight_3;
  highp vec3 tmpvar_30;
  tmpvar_30 = (_Object2World * _glesVertex).xyz;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosX0 - tmpvar_30.x);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosY0 - tmpvar_30.y);
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosZ0 - tmpvar_30.z);
  highp vec4 tmpvar_34;
  tmpvar_34 = (((tmpvar_31 * tmpvar_31) + (tmpvar_32 * tmpvar_32)) + (tmpvar_33 * tmpvar_33));
  highp vec4 tmpvar_35;
  tmpvar_35 = (max (vec4(0.0, 0.0, 0.0, 0.0), ((((tmpvar_31 * tmpvar_8.x) + (tmpvar_32 * tmpvar_8.y)) + (tmpvar_33 * tmpvar_8.z)) * inversesqrt(tmpvar_34))) * (1.0/((1.0 + (tmpvar_34 * unity_4LightAtten0)))));
  highp vec3 tmpvar_36;
  tmpvar_36 = (tmpvar_6 + ((((unity_LightColor[0].xyz * tmpvar_35.x) + (unity_LightColor[1].xyz * tmpvar_35.y)) + (unity_LightColor[2].xyz * tmpvar_35.z)) + (unity_LightColor[3].xyz * tmpvar_35.w)));
  tmpvar_6 = tmpvar_36;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = (tmpvar_11 * (((_World2Object * tmpvar_13).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
in highp vec4 xlv_TEXCOORD0;
in lowp vec3 xlv_TEXCOORD1;
in lowp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_2 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (tmpvar_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_3 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = clouds_7;
  lowp vec4 arg0_14;
  arg0_14 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (arg0_14, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_13).xyz;
  tmpvar_4 = tmpvar_15;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_17;
  tmpvar_17 = ((tmpvar_16.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_17;
  lowp float tmpvar_18;
  mediump float lightShadowDataX_19;
  highp float dist_20;
  lowp float tmpvar_21;
  tmpvar_21 = textureProj (_ShadowMapTexture, xlv_TEXCOORD4).x;
  dist_20 = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = _LightShadowData.x;
  lightShadowDataX_19 = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = max (float((dist_20 > (xlv_TEXCOORD4.z / xlv_TEXCOORD4.w))), lightShadowDataX_19);
  tmpvar_18 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24 = normalize(xlv_TEXCOORD3);
  mediump vec3 viewDir_25;
  viewDir_25 = tmpvar_24;
  lowp vec4 c_26;
  highp float nh_27;
  lowp float tmpvar_28;
  tmpvar_28 = max (0.0, dot (tmpvar_3, xlv_TEXCOORD1));
  mediump float tmpvar_29;
  tmpvar_29 = max (0.0, dot (tmpvar_3, normalize((xlv_TEXCOORD1 + viewDir_25))));
  nh_27 = tmpvar_29;
  mediump float arg1_30;
  arg1_30 = (tmpvar_5 * 128.0);
  highp float tmpvar_31;
  tmpvar_31 = (pow (nh_27, arg1_30) * tmpvar_6);
  highp vec3 tmpvar_32;
  tmpvar_32 = ((((tmpvar_2 * _LightColor0.xyz) * tmpvar_28) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_31)) * (tmpvar_18 * 2.0));
  c_26.xyz = tmpvar_32;
  highp float tmpvar_33;
  tmpvar_33 = (tmpvar_8.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_31) * tmpvar_18));
  c_26.w = tmpvar_33;
  c_1.w = c_26.w;
  c_1.xyz = (c_26.xyz + (tmpvar_2 * xlv_TEXCOORD2));
  c_1.xyz = (c_1.xyz + tmpvar_4);
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_7 * (tmpvar_2 * unity_Scale.w));
  mediump vec3 tmpvar_14;
  mediump vec4 normal_15;
  normal_15 = tmpvar_13;
  highp float vC_16;
  mediump vec3 x3_17;
  mediump vec3 x2_18;
  mediump vec3 x1_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHAr, normal_15);
  x1_19.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAg, normal_15);
  x1_19.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAb, normal_15);
  x1_19.z = tmpvar_22;
  mediump vec4 tmpvar_23;
  tmpvar_23 = (normal_15.xyzz * normal_15.yzzx);
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHBr, tmpvar_23);
  x2_18.x = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBg, tmpvar_23);
  x2_18.y = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBb, tmpvar_23);
  x2_18.z = tmpvar_26;
  mediump float tmpvar_27;
  tmpvar_27 = ((normal_15.x * normal_15.x) - (normal_15.y * normal_15.y));
  vC_16 = tmpvar_27;
  highp vec3 tmpvar_28;
  tmpvar_28 = (unity_SHC.xyz * vC_16);
  x3_17 = tmpvar_28;
  tmpvar_14 = ((x1_19 + x2_18) + x3_17);
  shlight_3 = tmpvar_14;
  tmpvar_6 = shlight_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = (tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
varying highp vec4 xlv_TEXCOORD0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_2 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (tmpvar_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_3 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = clouds_7;
  lowp vec4 arg0_14;
  arg0_14 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (arg0_14, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_13).xyz;
  tmpvar_4 = tmpvar_15;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_17;
  tmpvar_17 = ((tmpvar_16.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_17;
  lowp float shadow_18;
  lowp float tmpvar_19;
  tmpvar_19 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD4.xyz);
  highp float tmpvar_20;
  tmpvar_20 = (_LightShadowData.x + (tmpvar_19 * (1.0 - _LightShadowData.x)));
  shadow_18 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize(xlv_TEXCOORD3);
  mediump vec3 viewDir_22;
  viewDir_22 = tmpvar_21;
  lowp vec4 c_23;
  highp float nh_24;
  lowp float tmpvar_25;
  tmpvar_25 = max (0.0, dot (tmpvar_3, xlv_TEXCOORD1));
  mediump float tmpvar_26;
  tmpvar_26 = max (0.0, dot (tmpvar_3, normalize((xlv_TEXCOORD1 + viewDir_22))));
  nh_24 = tmpvar_26;
  mediump float arg1_27;
  arg1_27 = (tmpvar_5 * 128.0);
  highp float tmpvar_28;
  tmpvar_28 = (pow (nh_24, arg1_27) * tmpvar_6);
  highp vec3 tmpvar_29;
  tmpvar_29 = ((((tmpvar_2 * _LightColor0.xyz) * tmpvar_25) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_28)) * (shadow_18 * 2.0));
  c_23.xyz = tmpvar_29;
  highp float tmpvar_30;
  tmpvar_30 = (tmpvar_8.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_28) * shadow_18));
  c_23.w = tmpvar_30;
  c_1.w = c_23.w;
  c_1.xyz = (c_23.xyz + (tmpvar_2 * xlv_TEXCOORD2));
  c_1.xyz = (c_1.xyz + tmpvar_4);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out lowp vec3 xlv_TEXCOORD1;
out lowp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec4 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_10 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_11;
  highp vec4 tmpvar_12;
  tmpvar_12.w = 1.0;
  tmpvar_12.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = (tmpvar_7 * (tmpvar_2 * unity_Scale.w));
  mediump vec3 tmpvar_14;
  mediump vec4 normal_15;
  normal_15 = tmpvar_13;
  highp float vC_16;
  mediump vec3 x3_17;
  mediump vec3 x2_18;
  mediump vec3 x1_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHAr, normal_15);
  x1_19.x = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAg, normal_15);
  x1_19.y = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAb, normal_15);
  x1_19.z = tmpvar_22;
  mediump vec4 tmpvar_23;
  tmpvar_23 = (normal_15.xyzz * normal_15.yzzx);
  highp float tmpvar_24;
  tmpvar_24 = dot (unity_SHBr, tmpvar_23);
  x2_18.x = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBg, tmpvar_23);
  x2_18.y = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBb, tmpvar_23);
  x2_18.z = tmpvar_26;
  mediump float tmpvar_27;
  tmpvar_27 = ((normal_15.x * normal_15.x) - (normal_15.y * normal_15.y));
  vC_16 = tmpvar_27;
  highp vec3 tmpvar_28;
  tmpvar_28 = (unity_SHC.xyz * vC_16);
  x3_17 = tmpvar_28;
  tmpvar_14 = ((x1_19 + x2_18) + x3_17);
  shlight_3 = tmpvar_14;
  tmpvar_6 = shlight_3;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = (tmpvar_10 * (((_World2Object * tmpvar_12).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
in highp vec4 xlv_TEXCOORD0;
in lowp vec3 xlv_TEXCOORD1;
in lowp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_2 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (tmpvar_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_3 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = clouds_7;
  lowp vec4 arg0_14;
  arg0_14 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (arg0_14, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_13).xyz;
  tmpvar_4 = tmpvar_15;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_17;
  tmpvar_17 = ((tmpvar_16.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_17;
  lowp float shadow_18;
  mediump float tmpvar_19;
  tmpvar_19 = texture (_ShadowMapTexture, xlv_TEXCOORD4.xyz);
  shadow_18 = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = (_LightShadowData.x + (shadow_18 * (1.0 - _LightShadowData.x)));
  shadow_18 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize(xlv_TEXCOORD3);
  mediump vec3 viewDir_22;
  viewDir_22 = tmpvar_21;
  lowp vec4 c_23;
  highp float nh_24;
  lowp float tmpvar_25;
  tmpvar_25 = max (0.0, dot (tmpvar_3, xlv_TEXCOORD1));
  mediump float tmpvar_26;
  tmpvar_26 = max (0.0, dot (tmpvar_3, normalize((xlv_TEXCOORD1 + viewDir_22))));
  nh_24 = tmpvar_26;
  mediump float arg1_27;
  arg1_27 = (tmpvar_5 * 128.0);
  highp float tmpvar_28;
  tmpvar_28 = (pow (nh_24, arg1_27) * tmpvar_6);
  highp vec3 tmpvar_29;
  tmpvar_29 = ((((tmpvar_2 * _LightColor0.xyz) * tmpvar_25) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_28)) * (shadow_18 * 2.0));
  c_23.xyz = tmpvar_29;
  highp float tmpvar_30;
  tmpvar_30 = (tmpvar_8.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_28) * shadow_18));
  c_23.w = tmpvar_30;
  c_1.w = c_23.w;
  c_1.xyz = (c_23.xyz + (tmpvar_2 * xlv_TEXCOORD2));
  c_1.xyz = (c_1.xyz + tmpvar_4);
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform highp vec4 _LightShadowData;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform lowp float _LightAmount;
uniform sampler2D unity_Lightmap;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  mediump vec3 clouds_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_6;
  tmpvar_6 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_4 = tmpvar_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_5.xyz + clouds_4);
  tmpvar_2 = tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_8.w = 0.0;
  tmpvar_8.xyz = clouds_4;
  lowp vec4 arg0_9;
  arg0_9 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_10;
  tmpvar_10 = mix (arg0_9, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_8).xyz;
  tmpvar_3 = tmpvar_10;
  lowp float shadow_11;
  lowp float tmpvar_12;
  tmpvar_12 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD2.xyz);
  highp float tmpvar_13;
  tmpvar_13 = (_LightShadowData.x + (tmpvar_12 * (1.0 - _LightShadowData.x)));
  shadow_11 = tmpvar_13;
  c_1.xyz = (tmpvar_2 * min ((2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz), vec3((shadow_11 * 2.0))));
  c_1.w = tmpvar_5.w;
  c_1.xyz = (c_1.xyz + tmpvar_3);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
out highp vec4 xlv_TEXCOORD2;
void main ()
{
  highp vec4 tmpvar_1;
  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _LightShadowData;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform lowp float _LightAmount;
uniform sampler2D unity_Lightmap;
in highp vec4 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  mediump vec3 clouds_4;
  lowp vec4 tmpvar_5;
  tmpvar_5 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_6;
  tmpvar_6 = texture (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_4 = tmpvar_6;
  mediump vec3 tmpvar_7;
  tmpvar_7 = (tmpvar_5.xyz + clouds_4);
  tmpvar_2 = tmpvar_7;
  mediump vec4 tmpvar_8;
  tmpvar_8.w = 0.0;
  tmpvar_8.xyz = clouds_4;
  lowp vec4 arg0_9;
  arg0_9 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_10;
  tmpvar_10 = mix (arg0_9, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_8).xyz;
  tmpvar_3 = tmpvar_10;
  lowp float shadow_11;
  mediump float tmpvar_12;
  tmpvar_12 = texture (_ShadowMapTexture, xlv_TEXCOORD2.xyz);
  shadow_11 = tmpvar_12;
  highp float tmpvar_13;
  tmpvar_13 = (_LightShadowData.x + (shadow_11 * (1.0 - _LightShadowData.x)));
  shadow_11 = tmpvar_13;
  c_1.xyz = (tmpvar_2 * min ((2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz), vec3((shadow_11 * 2.0))));
  c_1.w = tmpvar_5.w;
  c_1.xyz = (c_1.xyz + tmpvar_3);
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  tmpvar_4 = tmpvar_1.xyz;
  tmpvar_5 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_4.x;
  tmpvar_6[0].y = tmpvar_5.x;
  tmpvar_6[0].z = tmpvar_2.x;
  tmpvar_6[1].x = tmpvar_4.y;
  tmpvar_6[1].y = tmpvar_5.y;
  tmpvar_6[1].z = tmpvar_2.y;
  tmpvar_6[2].x = tmpvar_4.z;
  tmpvar_6[2].y = tmpvar_5.z;
  tmpvar_6[2].z = tmpvar_2.z;
  highp vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (tmpvar_6 * (((_World2Object * tmpvar_7).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _SpecColor;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_2 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (tmpvar_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_3 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = clouds_7;
  lowp vec4 arg0_14;
  arg0_14 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (arg0_14, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_13).xyz;
  tmpvar_4 = tmpvar_15;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_17;
  tmpvar_17 = ((tmpvar_16.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_17;
  lowp float shadow_18;
  lowp float tmpvar_19;
  tmpvar_19 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD3.xyz);
  highp float tmpvar_20;
  tmpvar_20 = (_LightShadowData.x + (tmpvar_19 * (1.0 - _LightShadowData.x)));
  shadow_18 = tmpvar_20;
  c_1.w = 0.0;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize(xlv_TEXCOORD2);
  mediump vec4 tmpvar_22;
  mediump vec3 viewDir_23;
  viewDir_23 = tmpvar_21;
  mediump vec3 specColor_24;
  highp float nh_25;
  mat3 tmpvar_26;
  tmpvar_26[0].x = 0.816497;
  tmpvar_26[0].y = -0.408248;
  tmpvar_26[0].z = -0.408248;
  tmpvar_26[1].x = 0.0;
  tmpvar_26[1].y = 0.707107;
  tmpvar_26[1].z = -0.707107;
  tmpvar_26[2].x = 0.57735;
  tmpvar_26[2].y = 0.57735;
  tmpvar_26[2].z = 0.57735;
  mediump vec3 normal_27;
  normal_27 = tmpvar_3;
  mediump vec3 scalePerBasisVector_28;
  mediump vec3 lm_29;
  lowp vec3 tmpvar_30;
  tmpvar_30 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD1).xyz);
  lm_29 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = (2.0 * texture2D (unity_LightmapInd, xlv_TEXCOORD1).xyz);
  scalePerBasisVector_28 = tmpvar_31;
  lm_29 = (lm_29 * dot (clamp ((tmpvar_26 * normal_27), 0.0, 1.0), scalePerBasisVector_28));
  vec3 v_32;
  v_32.x = tmpvar_26[0].x;
  v_32.y = tmpvar_26[1].x;
  v_32.z = tmpvar_26[2].x;
  vec3 v_33;
  v_33.x = tmpvar_26[0].y;
  v_33.y = tmpvar_26[1].y;
  v_33.z = tmpvar_26[2].y;
  vec3 v_34;
  v_34.x = tmpvar_26[0].z;
  v_34.y = tmpvar_26[1].z;
  v_34.z = tmpvar_26[2].z;
  mediump float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_3, normalize((normalize((((scalePerBasisVector_28.x * v_32) + (scalePerBasisVector_28.y * v_33)) + (scalePerBasisVector_28.z * v_34))) + viewDir_23))));
  nh_25 = tmpvar_35;
  highp float tmpvar_36;
  mediump float arg1_37;
  arg1_37 = (tmpvar_5 * 128.0);
  tmpvar_36 = pow (nh_25, arg1_37);
  highp vec3 tmpvar_38;
  tmpvar_38 = (((lm_29 * _SpecColor.xyz) * tmpvar_6) * tmpvar_36);
  specColor_24 = tmpvar_38;
  highp vec4 tmpvar_39;
  tmpvar_39.xyz = lm_29;
  tmpvar_39.w = tmpvar_36;
  tmpvar_22 = tmpvar_39;
  c_1.xyz = specColor_24;
  lowp vec3 tmpvar_40;
  tmpvar_40 = vec3((shadow_18 * 2.0));
  mediump vec3 tmpvar_41;
  tmpvar_41 = (c_1.xyz + (tmpvar_2 * min (tmpvar_22.xyz, tmpvar_40)));
  c_1.xyz = tmpvar_41;
  c_1.w = tmpvar_8.w;
  c_1.xyz = (c_1.xyz + tmpvar_4);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec4 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  tmpvar_4 = tmpvar_1.xyz;
  tmpvar_5 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_4.x;
  tmpvar_6[0].y = tmpvar_5.x;
  tmpvar_6[0].z = tmpvar_2.x;
  tmpvar_6[1].x = tmpvar_4.y;
  tmpvar_6[1].y = tmpvar_5.y;
  tmpvar_6[1].z = tmpvar_2.y;
  tmpvar_6[2].x = tmpvar_4.z;
  tmpvar_6[2].y = tmpvar_5.z;
  tmpvar_6[2].z = tmpvar_2.z;
  highp vec4 tmpvar_7;
  tmpvar_7.w = 1.0;
  tmpvar_7.xyz = _WorldSpaceCameraPos;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD2 = (tmpvar_6 * (((_World2Object * tmpvar_7).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD3 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _SpecColor;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
in highp vec4 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_2 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (tmpvar_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_3 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = clouds_7;
  lowp vec4 arg0_14;
  arg0_14 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (arg0_14, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_13).xyz;
  tmpvar_4 = tmpvar_15;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_17;
  tmpvar_17 = ((tmpvar_16.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_17;
  lowp float shadow_18;
  mediump float tmpvar_19;
  tmpvar_19 = texture (_ShadowMapTexture, xlv_TEXCOORD3.xyz);
  shadow_18 = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = (_LightShadowData.x + (shadow_18 * (1.0 - _LightShadowData.x)));
  shadow_18 = tmpvar_20;
  c_1.w = 0.0;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize(xlv_TEXCOORD2);
  mediump vec4 tmpvar_22;
  mediump vec3 viewDir_23;
  viewDir_23 = tmpvar_21;
  mediump vec3 specColor_24;
  highp float nh_25;
  mat3 tmpvar_26;
  tmpvar_26[0].x = 0.816497;
  tmpvar_26[0].y = -0.408248;
  tmpvar_26[0].z = -0.408248;
  tmpvar_26[1].x = 0.0;
  tmpvar_26[1].y = 0.707107;
  tmpvar_26[1].z = -0.707107;
  tmpvar_26[2].x = 0.57735;
  tmpvar_26[2].y = 0.57735;
  tmpvar_26[2].z = 0.57735;
  mediump vec3 normal_27;
  normal_27 = tmpvar_3;
  mediump vec3 scalePerBasisVector_28;
  mediump vec3 lm_29;
  lowp vec3 tmpvar_30;
  tmpvar_30 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD1).xyz);
  lm_29 = tmpvar_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = (2.0 * texture (unity_LightmapInd, xlv_TEXCOORD1).xyz);
  scalePerBasisVector_28 = tmpvar_31;
  lm_29 = (lm_29 * dot (clamp ((tmpvar_26 * normal_27), 0.0, 1.0), scalePerBasisVector_28));
  vec3 v_32;
  v_32.x = tmpvar_26[0].x;
  v_32.y = tmpvar_26[1].x;
  v_32.z = tmpvar_26[2].x;
  vec3 v_33;
  v_33.x = tmpvar_26[0].y;
  v_33.y = tmpvar_26[1].y;
  v_33.z = tmpvar_26[2].y;
  vec3 v_34;
  v_34.x = tmpvar_26[0].z;
  v_34.y = tmpvar_26[1].z;
  v_34.z = tmpvar_26[2].z;
  mediump float tmpvar_35;
  tmpvar_35 = max (0.0, dot (tmpvar_3, normalize((normalize((((scalePerBasisVector_28.x * v_32) + (scalePerBasisVector_28.y * v_33)) + (scalePerBasisVector_28.z * v_34))) + viewDir_23))));
  nh_25 = tmpvar_35;
  highp float tmpvar_36;
  mediump float arg1_37;
  arg1_37 = (tmpvar_5 * 128.0);
  tmpvar_36 = pow (nh_25, arg1_37);
  highp vec3 tmpvar_38;
  tmpvar_38 = (((lm_29 * _SpecColor.xyz) * tmpvar_6) * tmpvar_36);
  specColor_24 = tmpvar_38;
  highp vec4 tmpvar_39;
  tmpvar_39.xyz = lm_29;
  tmpvar_39.w = tmpvar_36;
  tmpvar_22 = tmpvar_39;
  c_1.xyz = specColor_24;
  lowp vec3 tmpvar_40;
  tmpvar_40 = vec3((shadow_18 * 2.0));
  mediump vec3 tmpvar_41;
  tmpvar_41 = (c_1.xyz + (tmpvar_2 * min (tmpvar_22.xyz, tmpvar_40)));
  c_1.xyz = tmpvar_41;
  c_1.w = tmpvar_8.w;
  c_1.xyz = (c_1.xyz + tmpvar_4);
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES


#ifdef VERTEX

#extension GL_EXT_shadow_samplers : enable
attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (tmpvar_2 * unity_Scale.w));
  highp vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_1.xyz;
  tmpvar_10 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_11;
  tmpvar_11[0].x = tmpvar_9.x;
  tmpvar_11[0].y = tmpvar_10.x;
  tmpvar_11[0].z = tmpvar_2.x;
  tmpvar_11[1].x = tmpvar_9.y;
  tmpvar_11[1].y = tmpvar_10.y;
  tmpvar_11[1].z = tmpvar_2.y;
  tmpvar_11[2].x = tmpvar_9.z;
  tmpvar_11[2].y = tmpvar_10.z;
  tmpvar_11[2].z = tmpvar_2.z;
  highp vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = tmpvar_8;
  mediump vec3 tmpvar_15;
  mediump vec4 normal_16;
  normal_16 = tmpvar_14;
  highp float vC_17;
  mediump vec3 x3_18;
  mediump vec3 x2_19;
  mediump vec3 x1_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAr, normal_16);
  x1_20.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAg, normal_16);
  x1_20.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHAb, normal_16);
  x1_20.z = tmpvar_23;
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_16.xyzz * normal_16.yzzx);
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBr, tmpvar_24);
  x2_19.x = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBg, tmpvar_24);
  x2_19.y = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = dot (unity_SHBb, tmpvar_24);
  x2_19.z = tmpvar_27;
  mediump float tmpvar_28;
  tmpvar_28 = ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y));
  vC_17 = tmpvar_28;
  highp vec3 tmpvar_29;
  tmpvar_29 = (unity_SHC.xyz * vC_17);
  x3_18 = tmpvar_29;
  tmpvar_15 = ((x1_20 + x2_19) + x3_18);
  shlight_3 = tmpvar_15;
  tmpvar_6 = shlight_3;
  highp vec3 tmpvar_30;
  tmpvar_30 = (_Object2World * _glesVertex).xyz;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosX0 - tmpvar_30.x);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosY0 - tmpvar_30.y);
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosZ0 - tmpvar_30.z);
  highp vec4 tmpvar_34;
  tmpvar_34 = (((tmpvar_31 * tmpvar_31) + (tmpvar_32 * tmpvar_32)) + (tmpvar_33 * tmpvar_33));
  highp vec4 tmpvar_35;
  tmpvar_35 = (max (vec4(0.0, 0.0, 0.0, 0.0), ((((tmpvar_31 * tmpvar_8.x) + (tmpvar_32 * tmpvar_8.y)) + (tmpvar_33 * tmpvar_8.z)) * inversesqrt(tmpvar_34))) * (1.0/((1.0 + (tmpvar_34 * unity_4LightAtten0)))));
  highp vec3 tmpvar_36;
  tmpvar_36 = (tmpvar_6 + ((((unity_LightColor[0].xyz * tmpvar_35.x) + (unity_LightColor[1].xyz * tmpvar_35.y)) + (unity_LightColor[2].xyz * tmpvar_35.z)) + (unity_LightColor[3].xyz * tmpvar_35.w)));
  tmpvar_6 = tmpvar_36;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = (tmpvar_11 * (((_World2Object * tmpvar_13).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

#extension GL_EXT_shadow_samplers : enable
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
varying highp vec4 xlv_TEXCOORD0;
varying lowp vec3 xlv_TEXCOORD1;
varying lowp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
varying highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_2 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (tmpvar_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_3 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = clouds_7;
  lowp vec4 arg0_14;
  arg0_14 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (arg0_14, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_13).xyz;
  tmpvar_4 = tmpvar_15;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_17;
  tmpvar_17 = ((tmpvar_16.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_17;
  lowp float shadow_18;
  lowp float tmpvar_19;
  tmpvar_19 = shadow2DEXT (_ShadowMapTexture, xlv_TEXCOORD4.xyz);
  highp float tmpvar_20;
  tmpvar_20 = (_LightShadowData.x + (tmpvar_19 * (1.0 - _LightShadowData.x)));
  shadow_18 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize(xlv_TEXCOORD3);
  mediump vec3 viewDir_22;
  viewDir_22 = tmpvar_21;
  lowp vec4 c_23;
  highp float nh_24;
  lowp float tmpvar_25;
  tmpvar_25 = max (0.0, dot (tmpvar_3, xlv_TEXCOORD1));
  mediump float tmpvar_26;
  tmpvar_26 = max (0.0, dot (tmpvar_3, normalize((xlv_TEXCOORD1 + viewDir_22))));
  nh_24 = tmpvar_26;
  mediump float arg1_27;
  arg1_27 = (tmpvar_5 * 128.0);
  highp float tmpvar_28;
  tmpvar_28 = (pow (nh_24, arg1_27) * tmpvar_6);
  highp vec3 tmpvar_29;
  tmpvar_29 = ((((tmpvar_2 * _LightColor0.xyz) * tmpvar_25) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_28)) * (shadow_18 * 2.0));
  c_23.xyz = tmpvar_29;
  highp float tmpvar_30;
  tmpvar_30 = (tmpvar_8.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_28) * shadow_18));
  c_23.w = tmpvar_30;
  c_1.w = c_23.w;
  c_1.xyz = (c_23.xyz + (tmpvar_2 * xlv_TEXCOORD2));
  c_1.xyz = (c_1.xyz + tmpvar_4);
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "SHADOWS_NATIVE" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "VERTEXLIGHT_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[8];
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 unity_World2Shadow[4];
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out lowp vec3 xlv_TEXCOORD1;
out lowp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
out highp vec4 xlv_TEXCOORD4;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec3 shlight_3;
  highp vec4 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  tmpvar_4.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_4.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec3 tmpvar_8;
  tmpvar_8 = (tmpvar_7 * (tmpvar_2 * unity_Scale.w));
  highp vec3 tmpvar_9;
  highp vec3 tmpvar_10;
  tmpvar_9 = tmpvar_1.xyz;
  tmpvar_10 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_11;
  tmpvar_11[0].x = tmpvar_9.x;
  tmpvar_11[0].y = tmpvar_10.x;
  tmpvar_11[0].z = tmpvar_2.x;
  tmpvar_11[1].x = tmpvar_9.y;
  tmpvar_11[1].y = tmpvar_10.y;
  tmpvar_11[1].z = tmpvar_2.y;
  tmpvar_11[2].x = tmpvar_9.z;
  tmpvar_11[2].y = tmpvar_10.z;
  tmpvar_11[2].z = tmpvar_2.z;
  highp vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_11 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_5 = tmpvar_12;
  highp vec4 tmpvar_13;
  tmpvar_13.w = 1.0;
  tmpvar_13.xyz = _WorldSpaceCameraPos;
  highp vec4 tmpvar_14;
  tmpvar_14.w = 1.0;
  tmpvar_14.xyz = tmpvar_8;
  mediump vec3 tmpvar_15;
  mediump vec4 normal_16;
  normal_16 = tmpvar_14;
  highp float vC_17;
  mediump vec3 x3_18;
  mediump vec3 x2_19;
  mediump vec3 x1_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHAr, normal_16);
  x1_20.x = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = dot (unity_SHAg, normal_16);
  x1_20.y = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = dot (unity_SHAb, normal_16);
  x1_20.z = tmpvar_23;
  mediump vec4 tmpvar_24;
  tmpvar_24 = (normal_16.xyzz * normal_16.yzzx);
  highp float tmpvar_25;
  tmpvar_25 = dot (unity_SHBr, tmpvar_24);
  x2_19.x = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = dot (unity_SHBg, tmpvar_24);
  x2_19.y = tmpvar_26;
  highp float tmpvar_27;
  tmpvar_27 = dot (unity_SHBb, tmpvar_24);
  x2_19.z = tmpvar_27;
  mediump float tmpvar_28;
  tmpvar_28 = ((normal_16.x * normal_16.x) - (normal_16.y * normal_16.y));
  vC_17 = tmpvar_28;
  highp vec3 tmpvar_29;
  tmpvar_29 = (unity_SHC.xyz * vC_17);
  x3_18 = tmpvar_29;
  tmpvar_15 = ((x1_20 + x2_19) + x3_18);
  shlight_3 = tmpvar_15;
  tmpvar_6 = shlight_3;
  highp vec3 tmpvar_30;
  tmpvar_30 = (_Object2World * _glesVertex).xyz;
  highp vec4 tmpvar_31;
  tmpvar_31 = (unity_4LightPosX0 - tmpvar_30.x);
  highp vec4 tmpvar_32;
  tmpvar_32 = (unity_4LightPosY0 - tmpvar_30.y);
  highp vec4 tmpvar_33;
  tmpvar_33 = (unity_4LightPosZ0 - tmpvar_30.z);
  highp vec4 tmpvar_34;
  tmpvar_34 = (((tmpvar_31 * tmpvar_31) + (tmpvar_32 * tmpvar_32)) + (tmpvar_33 * tmpvar_33));
  highp vec4 tmpvar_35;
  tmpvar_35 = (max (vec4(0.0, 0.0, 0.0, 0.0), ((((tmpvar_31 * tmpvar_8.x) + (tmpvar_32 * tmpvar_8.y)) + (tmpvar_33 * tmpvar_8.z)) * inversesqrt(tmpvar_34))) * (1.0/((1.0 + (tmpvar_34 * unity_4LightAtten0)))));
  highp vec3 tmpvar_36;
  tmpvar_36 = (tmpvar_6 + ((((unity_LightColor[0].xyz * tmpvar_35.x) + (unity_LightColor[1].xyz * tmpvar_35.y)) + (unity_LightColor[2].xyz * tmpvar_35.z)) + (unity_LightColor[3].xyz * tmpvar_35.w)));
  tmpvar_6 = tmpvar_36;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_4;
  xlv_TEXCOORD1 = tmpvar_5;
  xlv_TEXCOORD2 = tmpvar_6;
  xlv_TEXCOORD3 = (tmpvar_11 * (((_World2Object * tmpvar_13).xyz * unity_Scale.w) - _glesVertex.xyz));
  xlv_TEXCOORD4 = (unity_World2Shadow[0] * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform highp vec4 _LightShadowData;
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform lowp sampler2DShadow _ShadowMapTexture;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
in highp vec4 xlv_TEXCOORD0;
in lowp vec3 xlv_TEXCOORD1;
in lowp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
in highp vec4 xlv_TEXCOORD4;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 tmpvar_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_2 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (tmpvar_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_3 = tmpvar_12;
  mediump vec4 tmpvar_13;
  tmpvar_13.w = 0.0;
  tmpvar_13.xyz = clouds_7;
  lowp vec4 arg0_14;
  arg0_14 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_15;
  tmpvar_15 = mix (arg0_14, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_13).xyz;
  tmpvar_4 = tmpvar_15;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_17;
  tmpvar_17 = ((tmpvar_16.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_17;
  lowp float shadow_18;
  mediump float tmpvar_19;
  tmpvar_19 = texture (_ShadowMapTexture, xlv_TEXCOORD4.xyz);
  shadow_18 = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = (_LightShadowData.x + (shadow_18 * (1.0 - _LightShadowData.x)));
  shadow_18 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize(xlv_TEXCOORD3);
  mediump vec3 viewDir_22;
  viewDir_22 = tmpvar_21;
  lowp vec4 c_23;
  highp float nh_24;
  lowp float tmpvar_25;
  tmpvar_25 = max (0.0, dot (tmpvar_3, xlv_TEXCOORD1));
  mediump float tmpvar_26;
  tmpvar_26 = max (0.0, dot (tmpvar_3, normalize((xlv_TEXCOORD1 + viewDir_22))));
  nh_24 = tmpvar_26;
  mediump float arg1_27;
  arg1_27 = (tmpvar_5 * 128.0);
  highp float tmpvar_28;
  tmpvar_28 = (pow (nh_24, arg1_27) * tmpvar_6);
  highp vec3 tmpvar_29;
  tmpvar_29 = ((((tmpvar_2 * _LightColor0.xyz) * tmpvar_25) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_28)) * (shadow_18 * 2.0));
  c_23.xyz = tmpvar_29;
  highp float tmpvar_30;
  tmpvar_30 = (tmpvar_8.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_28) * shadow_18));
  c_23.w = tmpvar_30;
  c_1.w = c_23.w;
  c_1.xyz = (c_23.xyz + (tmpvar_2 * xlv_TEXCOORD2));
  c_1.xyz = (c_1.xyz + tmpvar_4);
  _glesFragData[0] = c_1;
}



#endif"
}
}
Program "fp" {
SubProgram "opengl " {
// Stats: 44 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Vector 0 [_LightColor0]
Vector 1 [_SpecColor]
Float 2 [_LightAmount]
Float 3 [_Shininess]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
"!!ARBfp1.0
PARAM c[5] = { program.local[0..3],
		{ 2, 1, 0, 128 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEX R3.yw, fragment.texcoord[0], texture[2], 2D;
TEX R2.xyz, fragment.texcoord[0], texture[3], 2D;
TEX R1.xyz, fragment.texcoord[0].zwzw, texture[1], 2D;
TEX R0, fragment.texcoord[0], texture[0], 2D;
TEX R3.x, fragment.texcoord[0], texture[4], 2D;
MAD R3.yz, R3.xwyw, c[4].x, -c[4].y;
MUL R5.xy, R3.yzzw, R3.yzzw;
ADD_SAT R1.w, R5.x, R5.y;
DP3 R2.w, fragment.texcoord[3], fragment.texcoord[3];
ADD R1.w, -R1, c[4].y;
RSQ R1.w, R1.w;
RCP R3.w, R1.w;
ADD R5.xyz, -R3.yzww, c[4].zzyw;
MAD R5.xyz, R1, R5, R3.yzww;
ADD R3.y, -R1.x, c[4];
MUL R3.x, R3, R3.y;
RSQ R2.w, R2.w;
MOV R4.xyz, fragment.texcoord[1];
MAD R4.xyz, R2.w, fragment.texcoord[3], R4;
DP3 R2.w, R4, R4;
RSQ R1.w, R2.w;
MUL R4.xyz, R1.w, R4;
DP3 R1.w, R5, R4;
ADD R4.xyz, R0, R1;
MAX R2.w, R1, c[4].z;
MOV R1.w, c[4];
MUL R1.w, R1, c[3].x;
POW R1.w, R2.w, R1.w;
MUL R3.x, R3, c[1];
MUL R1.w, R1, R3.x;
MOV R3, c[1];
DP3 R2.w, R5, fragment.texcoord[1];
MAX R1.y, R2.w, c[4].z;
MUL R0.xyz, R4, c[0];
MUL R0.xyz, R0, R1.y;
MUL R2.xyz, R2, c[2].x;
MAD R1.xyz, R1.x, -R2, R2;
MUL R3.xyz, R3, c[0];
MAD R0.xyz, R3, R1.w, R0;
MUL R0.xyz, R0, c[4].x;
MAD R0.xyz, R4, fragment.texcoord[2], R0;
MUL R2.x, R3.w, c[0].w;
ADD result.color.xyz, R0, R1;
MAD result.color.w, R1, R2.x, R0;
END
# 44 instructions, 6 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 50 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Vector 0 [_LightColor0]
Vector 1 [_SpecColor]
Float 2 [_LightAmount]
Float 3 [_Shininess]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
"ps_2_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s3
dcl_2d s4
def c4, 2.00000000, -1.00000000, 1.00000000, 0.00000000
def c5, 128.00000000, 0, 0, 0
dcl t0
dcl t1.xyz
dcl t2.xyz
dcl t3.xyz
texld r4, t0, s3
texld r2, t0, s0
texld r7, t0, s4
mov_pp r6.xyz, t1
mov r0.y, t0.w
mov r0.x, t0.z
mov r1.xy, r0
mul r4.xyz, r4, c2.x
texld r3, r1, s1
texld r0, t0, s2
mov r0.x, r0.w
mad_pp r5.xy, r0, c4.x, c4.y
mul_pp r0.xy, r5, r5
add_pp_sat r0.x, r0, r0.y
add_pp r0.x, -r0, c4.z
rsq_pp r0.x, r0.x
dp3_pp r1.x, t3, t3
rsq_pp r1.x, r1.x
mad_pp r1.xyz, r1.x, t3, r6
rcp_pp r5.z, r0.x
dp3_pp r0.x, r1, r1
rsq_pp r0.x, r0.x
mul_pp r1.xyz, r0.x, r1
mov_pp r0.x, c3
add_pp r2.xyz, r2, r3
mul_pp r0.x, c5, r0
mov_pp r0.w, c0
mov r6.z, c4
mov r6.xy, c4.w
add_pp r6.xyz, -r5, r6
mad_pp r6.xyz, r3, r6, r5
dp3_pp r1.x, r6, r1
max_pp r1.x, r1, c4.w
pow r5.w, r1.x, r0.x
add_pp r0.x, -r3, c4.z
mov r1.x, r5.w
mul r0.x, r7, r0
mul r0.x, r0, c1
mul r0.x, r1, r0
dp3_pp r1.x, r6, t1
mov_pp r5.xyz, c0
mul_pp r6.xyz, r2, c0
max_pp r1.x, r1, c4.w
mul_pp r1.xyz, r6, r1.x
mul_pp r5.xyz, c1, r5
mad r1.xyz, r5, r0.x, r1
mul r1.xyz, r1, c4.x
mad_pp r2.xyz, r2, t2, r1
mul_pp r1.x, c1.w, r0.w
mad r0.w, r0.x, r1.x, r2
mad r3.xyz, r3.x, -r4, r4
add_pp r0.xyz, r2, r3
mov_pp oC0, r0
"
}
SubProgram "d3d11 " {
// Stats: 35 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 3
SetTexture 2 [_BumpMap] 2D 1
SetTexture 3 [_Emission] 2D 2
SetTexture 4 [_Mask] 2D 4
ConstBuffer "$Globals" 128
Vector 16 [_LightColor0]
Vector 32 [_SpecColor]
Float 48 [_LightAmount]
Float 64 [_Shininess]
BindCB  "$Globals" 0
"ps_4_0
eefiecedokfijanghhpdmcicjligmcgiaebfbkehabaaaaaaoeagaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefcnmafaaaaeaaaaaaahhabaaaafjaaaaaeegiocaaaaaaaaaaaafaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaa
acaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafibiaaae
aahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaae
aahabaaaacaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaafibiaaae
aahabaaaaeaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaadhcbabaaa
acaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadhcbabaaaaeaaaaaagfaaaaad
pccabaaaaaaaaaaagiaaaaacaeaaaaaabaaaaaahbcaabaaaaaaaaaaaegbcbaaa
aeaaaaaaegbcbaaaaeaaaaaaeeaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
dcaaaaajhcaabaaaaaaaaaaaegbcbaaaaeaaaaaaagaabaaaaaaaaaaaegbcbaaa
acaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaa
abaaaaaaeghobaaaacaaaaaaaagabaaaabaaaaaadcaaaaapdcaabaaaabaaaaaa
hgapbaaaabaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaa
aaaaialpaaaaialpaaaaaaaaaaaaaaaaapaaaaahicaabaaaaaaaaaaaegaabaaa
abaaaaaaegaabaaaabaaaaaaddaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaa
abeaaaaaaaaaiadpaaaaaaaiicaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaa
abeaaaaaaaaaiadpelaaaaafecaabaaaabaaaaaadkaabaaaaaaaaaaaaaaaaaal
hcaabaaaacaaaaaaegacbaiaebaaaaaaabaaaaaaaceaaaaaaaaaaaaaaaaaaaaa
aaaaiadpaaaaaaaaefaaaaajpcaabaaaadaaaaaaogbkbaaaabaaaaaaeghobaaa
abaaaaaaaagabaaaadaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaaadaaaaaa
egacbaaaacaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaa
abaaaaaaegacbaaaaaaaaaaabaaaaaahccaabaaaaaaaaaaaegacbaaaabaaaaaa
egbcbaaaacaaaaaadeaaaaakdcaabaaaaaaaaaaaegaabaaaaaaaaaaaaceaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaacpaaaaafbcaabaaaaaaaaaaaakaabaaa
aaaaaaaadiaaaaaiecaabaaaaaaaaaaaakiacaaaaaaaaaaaaeaaaaaaabeaaaaa
aaaaaaeddiaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaackaabaaaaaaaaaaa
bjaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaaefaaaaajpcaabaaaabaaaaaa
egbabaaaabaaaaaaeghobaaaaeaaaaaaaagabaaaaeaaaaaaaaaaaaaiecaabaaa
aaaaaaaaakaabaiaebaaaaaaadaaaaaaabeaaaaaaaaaiadpdiaaaaahecaabaaa
aaaaaaaackaabaaaaaaaaaaaakaabaaaabaaaaaadiaaaaaiecaabaaaaaaaaaaa
ckaabaaaaaaaaaaaakiacaaaaaaaaaaaacaaaaaadiaaaaahbcaabaaaaaaaaaaa
ckaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaajpcaabaaaabaaaaaaegiocaaa
aaaaaaaaabaaaaaaegiocaaaaaaaaaaaacaaaaaadiaaaaahhcaabaaaabaaaaaa
agaabaaaaaaaaaaaegacbaaaabaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaa
abaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaaaaaaaaahhcaabaaaacaaaaaa
egacbaaaadaaaaaaegacbaaaacaaaaaadcaaaaajiccabaaaaaaaaaaadkaabaaa
abaaaaaaakaabaaaaaaaaaaadkaabaaaacaaaaaadiaaaaaincaabaaaaaaaaaaa
agajbaaaacaaaaaaagijcaaaaaaaaaaaabaaaaaadcaaaaajhcaabaaaaaaaaaaa
igadbaaaaaaaaaaafgafbaaaaaaaaaaaegacbaaaabaaaaaaaaaaaaahhcaabaaa
aaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaadcaaaaajhcaabaaaaaaaaaaa
egacbaaaacaaaaaaegbcbaaaadaaaaaaegacbaaaaaaaaaaaefaaaaajpcaabaaa
abaaaaaaegbabaaaabaaaaaaeghobaaaadaaaaaaaagabaaaacaaaaaadiaaaaai
hcaabaaaabaaaaaaegacbaaaabaaaaaaagiacaaaaaaaaaaaadaaaaaadcaaaaak
hcaabaaaabaaaaaaegacbaaaadaaaaaaegacbaiaebaaaaaaabaaaaaaegacbaaa
abaaaaaaaaaaaaahhccabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaa
doaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 35 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 3
SetTexture 2 [_BumpMap] 2D 1
SetTexture 3 [_Emission] 2D 2
SetTexture 4 [_Mask] 2D 4
ConstBuffer "$Globals" 128
Vector 16 [_LightColor0]
Vector 32 [_SpecColor]
Float 48 [_LightAmount]
Float 64 [_Shininess]
BindCB  "$Globals" 0
"ps_4_0_level_9_1
eefiecedejnincldgadnmgiafjecakggabfoccpcabaaaaaajeakaaaaaeaaaaaa
daaaaaaanmadaaaamaajaaaagaakaaaaebgpgodjkeadaaaakeadaaaaaaacpppp
gaadaaaaeeaaaaaaabaadiaaaaaaeeaaaaaaeeaaafaaceaaaaaaeeaaaaaaaaaa
acababaaadacacaaabadadaaaeaeaeaaaaaaabaaaeaaaaaaaaaaaaaaaaacpppp
fbaaaaafaeaaapkaaaaaaaeaaaaaialpaaaaaaaaaaaaiadpfbaaaaafafaaapka
aaaaaaaaaaaaaaaaaaaaiadpaaaaaaedbpaaaaacaaaaaaiaaaaaaplabpaaaaac
aaaaaaiaabaachlabpaaaaacaaaaaaiaacaachlabpaaaaacaaaaaaiaadaachla
bpaaaaacaaaaaajaaaaiapkabpaaaaacaaaaaajaabaiapkabpaaaaacaaaaaaja
acaiapkabpaaaaacaaaaaajaadaiapkabpaaaaacaaaaaajaaeaiapkaabaaaaac
aaaaabiaaaaakklaabaaaaacaaaaaciaaaaapplaecaaaaadabaacpiaaaaaoela
abaioekaecaaaaadaaaacpiaaaaaoeiaadaioekaecaaaaadacaaapiaaaaaoela
aeaioekaecaaaaadadaacpiaaaaaoelaaaaioekaecaaaaadaeaaapiaaaaaoela
acaioekaaiaaaaadaaaaciiaadaaoelaadaaoelaahaaaaacaaaaciiaaaaappia
abaaaaacafaaahiaadaaoelaaeaaaaaeafaachiaafaaoeiaaaaappiaabaaoela
ceaaaaacagaachiaafaaoeiaaeaaaaaeafaacbiaabaappiaaeaaaakaaeaaffka
aeaaaaaeafaacciaabaaffiaaeaaaakaaeaaffkafkaaaaaeaaaadiiaafaaoeia
afaaoeiaaeaakkkaacaaaaadaaaaciiaaaaappibaeaappkaahaaaaacaaaaciia
aaaappiaagaaaaacafaaceiaaaaappiabcaaaaaeabaachiaaaaaoeiaafaaoeka
afaaoeiaaiaaaaadaaaaciiaabaaoeiaagaaoeiaaiaaaaadaeaaciiaabaaoeia
abaaoelaalaaaaadabaacbiaaeaappiaaeaakkkaalaaaaadaeaaaiiaaaaappia
aeaakkkaabaaaaacaaaaaiiaafaappkaafaaaaadaaaaaiiaaaaappiaadaaaaka
caaaaaadabaaaciaaeaappiaaaaappiaacaaaaadaaaaaiiaaaaaaaibaeaappka
afaaaaadaaaaaiiaaaaappiaacaaaaiaafaaaaadaaaaciiaaaaappiaabaaaaka
afaaaaadaaaaaiiaaaaappiaabaaffiaabaaaaacacaaapiaaaaaoekaafaaaaad
abaaaoiaacaabliaabaablkaafaaaaadabaaaoiaaaaappiaabaaoeiaacaaaaad
acaachiaaaaaoeiaadaaoeiaafaaaaadadaachiaacaaoeiaaaaaoekaaeaaaaae
abaaahiaadaaoeiaabaaaaiaabaabliaacaaaaadabaachiaabaaoeiaabaaoeia
aeaaaaaeabaachiaacaaoeiaacaaoelaabaaoeiaafaaaaadacaaahiaaeaaoeia
acaaaakaaeaaaaaeaaaachiaaaaaoeiaacaaoeibacaaoeiaacaaaaadabaachia
aaaaoeiaabaaoeiaafaaaaadaaaaabiaacaappiaabaappkaaeaaaaaeabaaciia
aaaaaaiaaaaappiaadaappiaabaaaaacaaaicpiaabaaoeiappppaaaafdeieefc
nmafaaaaeaaaaaaahhabaaaafjaaaaaeegiocaaaaaaaaaaaafaaaaaafkaaaaad
aagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaa
fkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafibiaaaeaahabaaa
aaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaa
acaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaa
aeaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaa
gcbaaaadhcbabaaaadaaaaaagcbaaaadhcbabaaaaeaaaaaagfaaaaadpccabaaa
aaaaaaaagiaaaaacaeaaaaaabaaaaaahbcaabaaaaaaaaaaaegbcbaaaaeaaaaaa
egbcbaaaaeaaaaaaeeaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaadcaaaaaj
hcaabaaaaaaaaaaaegbcbaaaaeaaaaaaagaabaaaaaaaaaaaegbcbaaaacaaaaaa
baaaaaahicaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaaeeaaaaaf
icaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaapgapbaaa
aaaaaaaaegacbaaaaaaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaa
eghobaaaacaaaaaaaagabaaaabaaaaaadcaaaaapdcaabaaaabaaaaaahgapbaaa
abaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialp
aaaaialpaaaaaaaaaaaaaaaaapaaaaahicaabaaaaaaaaaaaegaabaaaabaaaaaa
egaabaaaabaaaaaaddaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaa
aaaaiadpaaaaaaaiicaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaa
aaaaiadpelaaaaafecaabaaaabaaaaaadkaabaaaaaaaaaaaaaaaaaalhcaabaaa
acaaaaaaegacbaiaebaaaaaaabaaaaaaaceaaaaaaaaaaaaaaaaaaaaaaaaaiadp
aaaaaaaaefaaaaajpcaabaaaadaaaaaaogbkbaaaabaaaaaaeghobaaaabaaaaaa
aagabaaaadaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaaadaaaaaaegacbaaa
acaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaaabaaaaaa
egacbaaaaaaaaaaabaaaaaahccaabaaaaaaaaaaaegacbaaaabaaaaaaegbcbaaa
acaaaaaadeaaaaakdcaabaaaaaaaaaaaegaabaaaaaaaaaaaaceaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaaaaaaaaacpaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
diaaaaaiecaabaaaaaaaaaaaakiacaaaaaaaaaaaaeaaaaaaabeaaaaaaaaaaaed
diaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaackaabaaaaaaaaaaabjaaaaaf
bcaabaaaaaaaaaaaakaabaaaaaaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaa
abaaaaaaeghobaaaaeaaaaaaaagabaaaaeaaaaaaaaaaaaaiecaabaaaaaaaaaaa
akaabaiaebaaaaaaadaaaaaaabeaaaaaaaaaiadpdiaaaaahecaabaaaaaaaaaaa
ckaabaaaaaaaaaaaakaabaaaabaaaaaadiaaaaaiecaabaaaaaaaaaaackaabaaa
aaaaaaaaakiacaaaaaaaaaaaacaaaaaadiaaaaahbcaabaaaaaaaaaaackaabaaa
aaaaaaaaakaabaaaaaaaaaaadiaaaaajpcaabaaaabaaaaaaegiocaaaaaaaaaaa
abaaaaaaegiocaaaaaaaaaaaacaaaaaadiaaaaahhcaabaaaabaaaaaaagaabaaa
aaaaaaaaegacbaaaabaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaa
eghobaaaaaaaaaaaaagabaaaaaaaaaaaaaaaaaahhcaabaaaacaaaaaaegacbaaa
adaaaaaaegacbaaaacaaaaaadcaaaaajiccabaaaaaaaaaaadkaabaaaabaaaaaa
akaabaaaaaaaaaaadkaabaaaacaaaaaadiaaaaaincaabaaaaaaaaaaaagajbaaa
acaaaaaaagijcaaaaaaaaaaaabaaaaaadcaaaaajhcaabaaaaaaaaaaaigadbaaa
aaaaaaaafgafbaaaaaaaaaaaegacbaaaabaaaaaaaaaaaaahhcaabaaaaaaaaaaa
egacbaaaaaaaaaaaegacbaaaaaaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaa
acaaaaaaegbcbaaaadaaaaaaegacbaaaaaaaaaaaefaaaaajpcaabaaaabaaaaaa
egbabaaaabaaaaaaeghobaaaadaaaaaaaagabaaaacaaaaaadiaaaaaihcaabaaa
abaaaaaaegacbaaaabaaaaaaagiacaaaaaaaaaaaadaaaaaadcaaaaakhcaabaaa
abaaaaaaegacbaaaadaaaaaaegacbaiaebaaaaaaabaaaaaaegacbaaaabaaaaaa
aaaaaaahhccabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadoaaaaab
ejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapapaaaa
imaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaahahaaaaimaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaahahaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl
epfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
aaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 11 math, 4 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Float 0 [_LightAmount]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [unity_Lightmap] 2D 4
"!!ARBfp1.0
PARAM c[2] = { program.local[0],
		{ 8 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEX R0, fragment.texcoord[0], texture[0], 2D;
TEX R2.xyz, fragment.texcoord[0].zwzw, texture[1], 2D;
TEX R1, fragment.texcoord[1], texture[4], 2D;
TEX R3.xyz, fragment.texcoord[0], texture[3], 2D;
ADD R0.xyz, R0, R2;
MUL R3.xyz, R3, c[0].x;
MUL R1.xyz, R1.w, R1;
MAD R2.xyz, R2.x, -R3, R3;
MUL R0.xyz, R1, R0;
MAD result.color.xyz, R0, c[1].x, R2;
MOV result.color.w, R0;
END
# 11 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 11 math, 4 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Float 0 [_LightAmount]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [unity_Lightmap] 2D 4
"ps_2_0
dcl_2d s0
dcl_2d s1
dcl_2d s3
dcl_2d s4
def c1, 8.00000000, 0, 0, 0
dcl t0
dcl t1.xy
texld r1, t0, s3
texld r3, t0, s0
mov r0.y, t0.w
mov r0.x, t0.z
mov r2.xy, r0
mul r1.xyz, r1, c0.x
texld r0, t1, s4
texld r2, r2, s1
mul_pp r0.xyz, r0.w, r0
add_pp r3.xyz, r3, r2
mul_pp r0.xyz, r0, r3
mad r1.xyz, r2.x, -r1, r1
mov_pp r0.w, r3
mad_pp r0.xyz, r0, c1.x, r1
mov_pp oC0, r0
"
}
SubProgram "d3d11 " {
// Stats: 6 math, 4 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 2
SetTexture 2 [_Emission] 2D 1
SetTexture 3 [unity_Lightmap] 2D 3
ConstBuffer "$Globals" 144
Float 48 [_LightAmount]
BindCB  "$Globals" 0
"ps_4_0
eefiecedfbdongoifmdadkolaobndgaanamhdcjkabaaaaaapeacaaaaadaaaaaa
cmaaaaaajmaaaaaanaaaaaaaejfdeheogiaaaaaaadaaaaaaaiaaaaaafaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaafmaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaafmaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
adadaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheo
cmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaa
apaaaaaafdfgfpfegbhcghgfheaaklklfdeieefcbmacaaaaeaaaaaaaihaaaaaa
fjaaaaaeegiocaaaaaaaaaaaaeaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaad
aagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaa
fibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaa
fibiaaaeaahabaaaacaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaa
gcbaaaadpcbabaaaabaaaaaagcbaaaaddcbabaaaacaaaaaagfaaaaadpccabaaa
aaaaaaaagiaaaaacaeaaaaaaefaaaaajpcaabaaaaaaaaaaaegbabaaaacaaaaaa
eghobaaaadaaaaaaaagabaaaadaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaa
aaaaaaaaabeaaaaaaaaaaaebdiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaa
pgapbaaaaaaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaaeghobaaa
acaaaaaaaagabaaaabaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaa
agiacaaaaaaaaaaaadaaaaaaefaaaaajpcaabaaaacaaaaaaogbkbaaaabaaaaaa
eghobaaaabaaaaaaaagabaaaacaaaaaadcaaaaakhcaabaaaabaaaaaaegacbaaa
acaaaaaaegacbaiaebaaaaaaabaaaaaaegacbaaaabaaaaaaefaaaaajpcaabaaa
adaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaaaaaaaaah
hcaabaaaacaaaaaaegacbaaaacaaaaaaegacbaaaadaaaaaadgaaaaaficcabaaa
aaaaaaaadkaabaaaadaaaaaadcaaaaajhccabaaaaaaaaaaaegacbaaaacaaaaaa
egacbaaaaaaaaaaaegacbaaaabaaaaaadoaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 6 math, 4 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 2
SetTexture 2 [_Emission] 2D 1
SetTexture 3 [unity_Lightmap] 2D 3
ConstBuffer "$Globals" 144
Float 48 [_LightAmount]
BindCB  "$Globals" 0
"ps_4_0_level_9_1
eefiecedgbhkgbhmdcponneofeghijiedbapibmjabaaaaaaheaeaaaaaeaaaaaa
daaaaaaakmabaaaanaadaaaaeaaeaaaaebgpgodjheabaaaaheabaaaaaaacpppp
deabaaaaeaaaaaaaabaadeaaaaaaeaaaaaaaeaaaaeaaceaaaaaaeaaaaaaaaaaa
acababaaabacacaaadadadaaaaaaadaaabaaaaaaaaaaaaaaaaacppppfbaaaaaf
abaaapkaaaaaaaebaaaaaaaaaaaaaaaaaaaaaaaabpaaaaacaaaaaaiaaaaaapla
bpaaaaacaaaaaaiaabaaadlabpaaaaacaaaaaajaaaaiapkabpaaaaacaaaaaaja
abaiapkabpaaaaacaaaaaajaacaiapkabpaaaaacaaaaaajaadaiapkaabaaaaac
aaaaabiaaaaakklaabaaaaacaaaaaciaaaaapplaecaaaaadabaacpiaabaaoela
adaioekaecaaaaadacaaapiaaaaaoelaabaioekaecaaaaadaaaacpiaaaaaoeia
acaioekaecaaaaadadaacpiaaaaaoelaaaaioekaafaaaaadaaaaciiaabaappia
abaaaakaafaaaaadabaachiaabaaoeiaaaaappiaafaaaaadacaaahiaacaaoeia
aaaaaakaaeaaaaaeacaachiaaaaaoeiaacaaoeibacaaoeiaacaaaaadaaaachia
aaaaoeiaadaaoeiaaeaaaaaeadaachiaaaaaoeiaabaaoeiaacaaoeiaabaaaaac
aaaicpiaadaaoeiappppaaaafdeieefcbmacaaaaeaaaaaaaihaaaaaafjaaaaae
egiocaaaaaaaaaaaaeaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaa
abaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaafibiaaae
aahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaae
aahabaaaacaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaagcbaaaad
pcbabaaaabaaaaaagcbaaaaddcbabaaaacaaaaaagfaaaaadpccabaaaaaaaaaaa
giaaaaacaeaaaaaaefaaaaajpcaabaaaaaaaaaaaegbabaaaacaaaaaaeghobaaa
adaaaaaaaagabaaaadaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaa
abeaaaaaaaaaaaebdiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaapgapbaaa
aaaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaaeghobaaaacaaaaaa
aagabaaaabaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaagiacaaa
aaaaaaaaadaaaaaaefaaaaajpcaabaaaacaaaaaaogbkbaaaabaaaaaaeghobaaa
abaaaaaaaagabaaaacaaaaaadcaaaaakhcaabaaaabaaaaaaegacbaaaacaaaaaa
egacbaiaebaaaaaaabaaaaaaegacbaaaabaaaaaaefaaaaajpcaabaaaadaaaaaa
egbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaaaaaaaaahhcaabaaa
acaaaaaaegacbaaaacaaaaaaegacbaaaadaaaaaadgaaaaaficcabaaaaaaaaaaa
dkaabaaaadaaaaaadcaaaaajhccabaaaaaaaaaaaegacbaaaacaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaadoaaaaabejfdeheogiaaaaaaadaaaaaaaiaaaaaa
faaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaafmaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaabaaaaaaapapaaaafmaaaaaaabaaaaaaaaaaaaaaadaaaaaa
acaaaaaaadadaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl
epfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
aaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 53 math, 7 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Vector 0 [_SpecColor]
Float 1 [_LightAmount]
Float 2 [_Shininess]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [unity_Lightmap] 2D 5
SetTexture 6 [unity_LightmapInd] 2D 6
"!!ARBfp1.0
PARAM c[7] = { program.local[0..2],
		{ 2, 1, 0, 8 },
		{ -0.40824828, -0.70710677, 0.57735026, 128 },
		{ -0.40824831, 0.70710677, 0.57735026 },
		{ 0.81649655, 0, 0.57735026 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
TEMP R7;
TEX R0, fragment.texcoord[0], texture[0], 2D;
TEX R1.xyz, fragment.texcoord[0].zwzw, texture[1], 2D;
TEX R2, fragment.texcoord[1], texture[5], 2D;
TEX R5.yw, fragment.texcoord[0], texture[2], 2D;
TEX R4, fragment.texcoord[1], texture[6], 2D;
TEX R3.xyz, fragment.texcoord[0], texture[3], 2D;
TEX R7.x, fragment.texcoord[0], texture[4], 2D;
MAD R5.xy, R5.wyzw, c[3].x, -c[3].y;
MUL R5.zw, R5.xyxy, R5.xyxy;
MUL R2.xyz, R2.w, R2;
ADD R2.w, -R1.x, c[3].y;
MUL R4.xyz, R4.w, R4;
MUL R4.xyz, R4, c[3].w;
MUL R6.xyz, R4.y, c[5];
MAD R6.xyz, R4.x, c[6], R6;
MAD R6.xyz, R4.z, c[4], R6;
DP3 R1.w, R6, R6;
RSQ R1.w, R1.w;
MUL R2.w, R7.x, R2;
ADD_SAT R3.w, R5.z, R5;
MUL R6.xyz, R1.w, R6;
ADD R1.w, -R3, c[3].y;
RSQ R1.w, R1.w;
RCP R5.z, R1.w;
DP3 R3.w, fragment.texcoord[2], fragment.texcoord[2];
RSQ R3.w, R3.w;
MAD R6.xyz, R3.w, fragment.texcoord[2], R6;
DP3 R1.w, R6, R6;
RSQ R1.w, R1.w;
MUL R6.xyz, R1.w, R6;
ADD R7.yzw, -R5.xxyz, c[3].xzzy;
MAD R5.xyz, R1, R7.yzww, R5;
DP3 R3.w, R5, R6;
MOV R1.w, c[4];
ADD R0.xyz, R0, R1;
MUL R3.xyz, R3, c[1].x;
MAX R3.w, R3, c[3].z;
MUL R1.w, R1, c[2].x;
POW R1.w, R3.w, R1.w;
DP3_SAT R6.z, R5, c[4];
DP3_SAT R6.x, R5, c[6];
DP3_SAT R6.y, R5, c[5];
DP3 R3.w, R6, R4;
MUL R2.xyz, R2, R3.w;
MUL R2.xyz, R2, c[3].w;
MUL R2.w, R2, c[0].x;
MUL R4.xyz, R2, c[0];
MUL R4.xyz, R4, R2.w;
MUL R4.xyz, R4, R1.w;
MAD R1.xyz, R1.x, -R3, R3;
MAD R0.xyz, R0, R2, R4;
ADD result.color.xyz, R0, R1;
MOV result.color.w, R0;
END
# 53 instructions, 8 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 55 math, 7 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Vector 0 [_SpecColor]
Float 1 [_LightAmount]
Float 2 [_Shininess]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [unity_Lightmap] 2D 5
SetTexture 6 [unity_LightmapInd] 2D 6
"ps_2_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s3
dcl_2d s4
dcl_2d s5
dcl_2d s6
def c3, 2.00000000, -1.00000000, 1.00000000, 0.00000000
def c4, -0.40824828, -0.70710677, 0.57735026, 8.00000000
def c5, -0.40824831, 0.70710677, 0.57735026, 128.00000000
def c6, 0.81649655, 0.00000000, 0.57735026, 0
dcl t0
dcl t1.xy
dcl t2.xyz
texld r4, t0, s2
texld r1, t0, s3
texld r6, t0, s4
texld r3, t1, s5
texld r5, t1, s6
mov r4.x, r4.w
mad_pp r4.xy, r4, c3.x, c3.y
mul_pp r7.xy, r4, r4
add_pp_sat r7.x, r7, r7.y
add_pp r7.x, -r7, c3.z
rsq_pp r7.x, r7.x
rcp_pp r4.z, r7.x
mul_pp r5.xyz, r5.w, r5
mul_pp r5.xyz, r5, c4.w
mov r0.y, t0.w
mov r0.x, t0.z
mov r2.xy, r0
mov r7.z, c3
mov r7.xy, c3.w
add_pp r8.xyz, -r4, r7
mul r7.xyz, r5.y, c5
mad r7.xyz, r5.x, c6, r7
mad r9.xyz, r5.z, c4, r7
dp3 r7.x, r9, r9
rsq r7.x, r7.x
mul_pp r3.xyz, r3.w, r3
texld r0, t0, s0
texld r2, r2, s1
mad_pp r4.xyz, r2, r8, r4
dp3_pp_sat r8.z, r4, c4
dp3_pp_sat r8.y, r4, c5
dp3_pp_sat r8.x, r4, c6
dp3_pp r5.x, r8, r5
mul r8.xyz, r7.x, r9
mul_pp r3.xyz, r3, r5.x
dp3_pp r7.x, t2, t2
rsq_pp r7.x, r7.x
mad_pp r7.xyz, r7.x, t2, r8
dp3_pp r5.x, r7, r7
rsq_pp r8.x, r5.x
mul_pp r8.xyz, r8.x, r7
mul_pp r3.xyz, r3, c4.w
dp3_pp r8.x, r4, r8
mov_pp r7.x, c2
mul_pp r4.x, c5.w, r7
max_pp r7.x, r8, c3.w
pow r8.x, r7.x, r4.x
add_pp r4.x, -r2, c3.z
mul r4.x, r6, r4
mul r6.x, r4, c0
mul_pp r5.xyz, r3, c0
mul_pp r5.xyz, r5, r6.x
mov r4.x, r8.x
mul r4.xyz, r5, r4.x
add_pp r5.xyz, r0, r2
mul r0.xyz, r1, c1.x
mad_pp r1.xyz, r5, r3, r4
mad r0.xyz, r2.x, -r0, r0
add_pp r0.xyz, r1, r0
mov_pp oC0, r0
"
}
SubProgram "d3d11 " {
// Stats: 45 math, 7 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 3
SetTexture 2 [_BumpMap] 2D 1
SetTexture 3 [_Emission] 2D 2
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [unity_Lightmap] 2D 5
SetTexture 6 [unity_LightmapInd] 2D 6
ConstBuffer "$Globals" 144
Vector 32 [_SpecColor]
Float 48 [_LightAmount]
Float 64 [_Shininess]
BindCB  "$Globals" 0
"ps_4_0
eefiecedhgpechnfmndbknglidchdoadlkmjlbdlabaaaaaajiaiaaaaadaaaaaa
cmaaaaaaleaaaaaaoiaaaaaaejfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
adadaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklklfdeieefckiahaaaaeaaaaaaaokabaaaafjaaaaaeegiocaaa
aaaaaaaaafaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaa
fkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaa
aeaaaaaafkaaaaadaagabaaaafaaaaaafkaaaaadaagabaaaagaaaaaafibiaaae
aahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaae
aahabaaaacaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaafibiaaae
aahabaaaaeaaaaaaffffaaaafibiaaaeaahabaaaafaaaaaaffffaaaafibiaaae
aahabaaaagaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaaddcbabaaa
acaaaaaagcbaaaadhcbabaaaadaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaac
afaaaaaabaaaaaahbcaabaaaaaaaaaaaegbcbaaaadaaaaaaegbcbaaaadaaaaaa
eeaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaa
agaabaaaaaaaaaaaegbcbaaaadaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaa
acaaaaaaeghobaaaagaaaaaaaagabaaaagaaaaaadiaaaaahicaabaaaaaaaaaaa
dkaabaaaabaaaaaaabeaaaaaaaaaaaebdiaaaaahhcaabaaaabaaaaaaegacbaaa
abaaaaaapgapbaaaaaaaaaaadiaaaaakhcaabaaaacaaaaaafgafbaaaabaaaaaa
aceaaaaaomafnblopdaedfdpdkmnbddpaaaaaaaadcaaaaamhcaabaaaacaaaaaa
agaabaaaabaaaaaaaceaaaaaolaffbdpaaaaaaaadkmnbddpaaaaaaaaegacbaaa
acaaaaaadcaaaaamhcaabaaaacaaaaaakgakbaaaabaaaaaaaceaaaaaolafnblo
pdaedflpdkmnbddpaaaaaaaaegacbaaaacaaaaaabaaaaaahicaabaaaaaaaaaaa
egacbaaaacaaaaaaegacbaaaacaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaa
aaaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaaacaaaaaapgapbaaaaaaaaaaa
egacbaaaaaaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaa
aaaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaa
aaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaaefaaaaajpcaabaaaacaaaaaa
egbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaaabaaaaaadcaaaaapdcaabaaa
acaaaaaahgapbaaaacaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaa
aceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaaapaaaaahicaabaaaaaaaaaaa
egaabaaaacaaaaaaegaabaaaacaaaaaaddaaaaahicaabaaaaaaaaaaadkaabaaa
aaaaaaaaabeaaaaaaaaaiadpaaaaaaaiicaabaaaaaaaaaaadkaabaiaebaaaaaa
aaaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaaacaaaaaadkaabaaaaaaaaaaa
aaaaaaalhcaabaaaadaaaaaaegacbaiaebaaaaaaacaaaaaaaceaaaaaaaaaaaaa
aaaaaaaaaaaaiadpaaaaaaaaefaaaaajpcaabaaaaeaaaaaaogbkbaaaabaaaaaa
eghobaaaabaaaaaaaagabaaaadaaaaaadcaaaaajhcaabaaaacaaaaaaegacbaaa
aeaaaaaaegacbaaaadaaaaaaegacbaaaacaaaaaabaaaaaahbcaabaaaaaaaaaaa
egacbaaaacaaaaaaegacbaaaaaaaaaaadeaaaaahbcaabaaaaaaaaaaaakaabaaa
aaaaaaaaabeaaaaaaaaaaaaacpaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
diaaaaaiccaabaaaaaaaaaaaakiacaaaaaaaaaaaaeaaaaaaabeaaaaaaaaaaaed
diaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaabkaabaaaaaaaaaaabjaaaaaf
bcaabaaaaaaaaaaaakaabaaaaaaaaaaaapcaaaakbcaabaaaadaaaaaaaceaaaaa
olaffbdpdkmnbddpaaaaaaaaaaaaaaaaigaabaaaacaaaaaabacaaaakccaabaaa
adaaaaaaaceaaaaaomafnblopdaedfdpdkmnbddpaaaaaaaaegacbaaaacaaaaaa
bacaaaakecaabaaaadaaaaaaaceaaaaaolafnblopdaedflpdkmnbddpaaaaaaaa
egacbaaaacaaaaaabaaaaaahccaabaaaaaaaaaaaegacbaaaadaaaaaaegacbaaa
abaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaacaaaaaaeghobaaaafaaaaaa
aagabaaaafaaaaaadiaaaaahecaabaaaaaaaaaaadkaabaaaabaaaaaaabeaaaaa
aaaaaaebdiaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaakgakbaaaaaaaaaaa
diaaaaahocaabaaaaaaaaaaafgafbaaaaaaaaaaaagajbaaaabaaaaaadiaaaaai
hcaabaaaabaaaaaajgahbaaaaaaaaaaaegiccaaaaaaaaaaaacaaaaaaefaaaaaj
pcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaaaeaaaaaaaagabaaaaeaaaaaa
aaaaaaaiicaabaaaabaaaaaaakaabaiaebaaaaaaaeaaaaaaabeaaaaaaaaaiadp
diaaaaahicaabaaaabaaaaaadkaabaaaabaaaaaaakaabaaaacaaaaaadiaaaaai
icaabaaaabaaaaaadkaabaaaabaaaaaaakiacaaaaaaaaaaaacaaaaaadiaaaaah
hcaabaaaabaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaaefaaaaajpcaabaaa
acaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaaaaaaaaah
hcaabaaaacaaaaaaegacbaaaaeaaaaaaegacbaaaacaaaaaadgaaaaaficcabaaa
aaaaaaaadkaabaaaacaaaaaadiaaaaahocaabaaaaaaaaaaafgaobaaaaaaaaaaa
agajbaaaacaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaaabaaaaaaagaabaaa
aaaaaaaajgahbaaaaaaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaa
eghobaaaadaaaaaaaagabaaaacaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaa
abaaaaaaagiacaaaaaaaaaaaadaaaaaadcaaaaakhcaabaaaabaaaaaaegacbaaa
aeaaaaaaegacbaiaebaaaaaaabaaaaaaegacbaaaabaaaaaaaaaaaaahhccabaaa
aaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadoaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 45 math, 7 textures
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 3
SetTexture 2 [_BumpMap] 2D 1
SetTexture 3 [_Emission] 2D 2
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [unity_Lightmap] 2D 5
SetTexture 6 [unity_LightmapInd] 2D 6
ConstBuffer "$Globals" 144
Vector 32 [_SpecColor]
Float 48 [_LightAmount]
Float 64 [_Shininess]
BindCB  "$Globals" 0
"ps_4_0_level_9_1
eefiecedcpocbigainbclgjdcidndibfbbippioeabaaaaaaaianaaaaaeaaaaaa
daaaaaaajmaeaaaaemamaaaaneamaaaaebgpgodjgeaeaaaageaeaaaaaaacpppp
biaeaaaaemaaaaaaabaaeaaaaaaaemaaaaaaemaaahaaceaaaaaaemaaaaaaaaaa
acababaaadacacaaabadadaaaeaeaeaaafafafaaagagagaaaaaaacaaadaaaaaa
aaaaaaaaaaacppppfbaaaaafadaaapkaaaaaaaeaaaaaialpaaaaaaaaaaaaiadp
fbaaaaafaeaaapkaomafnblopdaedfdpdkmnbddpaaaaaaaafbaaaaafafaaapka
olafnblopdaedflpdkmnbddpaaaaaaaafbaaaaafagaaapkaolaffbdpaaaaaaaa
dkmnbddpaaaaaaedfbaaaaafahaaapkaaaaaaaaaaaaaaaaaaaaaiadpaaaaaaeb
bpaaaaacaaaaaaiaaaaaaplabpaaaaacaaaaaaiaabaaadlabpaaaaacaaaaaaia
acaachlabpaaaaacaaaaaajaaaaiapkabpaaaaacaaaaaajaabaiapkabpaaaaac
aaaaaajaacaiapkabpaaaaacaaaaaajaadaiapkabpaaaaacaaaaaajaaeaiapka
bpaaaaacaaaaaajaafaiapkabpaaaaacaaaaaajaagaiapkaabaaaaacaaaaabia
aaaakklaabaaaaacaaaaaciaaaaapplaecaaaaadabaacpiaabaaoelaafaioeka
ecaaaaadacaacpiaaaaaoelaabaioekaecaaaaadaaaacpiaaaaaoeiaadaioeka
ecaaaaadadaacpiaabaaoelaagaioekaecaaaaadaeaaapiaaaaaoelaaeaioeka
ecaaaaadafaacpiaaaaaoelaaaaioekaecaaaaadagaaapiaaaaaoelaacaioeka
afaaaaadaaaaciiaabaappiaahaappkaafaaaaadabaachiaabaaoeiaaaaappia
aeaaaaaeahaacbiaacaappiaadaaaakaadaaffkaaeaaaaaeahaacciaacaaffia
adaaaakaadaaffkafkaaaaaeaaaadiiaahaaoeiaahaaoeiaadaakkkaacaaaaad
aaaaciiaaaaappibadaappkaahaaaaacaaaaciiaaaaappiaagaaaaacahaaceia
aaaappiabcaaaaaeacaachiaaaaaoeiaahaaoekaahaaoeiaaiaaaaadahaadbia
agaaoekaacaaoeiaaiaaaaadahaadciaaeaaoekaacaaoeiaaiaaaaadahaadeia
afaaoekaacaaoeiaafaaaaadaaaaciiaadaappiaahaappkaafaaaaadadaachia
adaaoeiaaaaappiaaiaaaaadaaaaciiaahaaoeiaadaaoeiaafaaaaadabaachia
aaaappiaabaaoeiaafaaaaadaeaacoiaabaabliaaaaablkaacaaaaadaaaaaiia
aaaaaaibadaappkaafaaaaadaaaaaiiaaaaappiaaeaaaaiaafaaaaadaaaaciia
aaaappiaaaaaaakaafaaaaadaeaaahiaaaaappiaaeaabliaafaaaaadahaaahia
adaaffiaaeaaoekaaeaaaaaeahaaahiaadaaaaiaagaaoekaahaaoeiaaeaaaaae
adaaahiaadaakkiaafaaoekaahaaoeiaaiaaaaadaaaaaiiaadaaoeiaadaaoeia
ahaaaaacaaaaaiiaaaaappiaceaaaaacahaachiaacaaoelaaeaaaaaeadaachia
adaaoeiaaaaappiaahaaoeiaceaaaaacahaachiaadaaoeiaaiaaaaadaaaaciia
acaaoeiaahaaoeiaalaaaaadabaaaiiaaaaappiaadaakkkaabaaaaacaaaaaiia
agaappkaafaaaaadaaaaaiiaaaaappiaacaaaakacaaaaaadaeaaciiaabaappia
aaaappiaacaaaaadacaachiaaaaaoeiaafaaoeiaafaaaaadabaachiaabaaoeia
acaaoeiaaeaaaaaeabaachiaaeaaoeiaaeaappiaabaaoeiaafaaaaadacaaahia
agaaoeiaabaaaakaaeaaaaaeaaaachiaaaaaoeiaacaaoeibacaaoeiaacaaaaad
afaachiaaaaaoeiaabaaoeiaabaaaaacaaaicpiaafaaoeiappppaaaafdeieefc
kiahaaaaeaaaaaaaokabaaaafjaaaaaeegiocaaaaaaaaaaaafaaaaaafkaaaaad
aagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaa
fkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafkaaaaadaagabaaa
afaaaaaafkaaaaadaagabaaaagaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaa
fibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaa
fibiaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaa
fibiaaaeaahabaaaafaaaaaaffffaaaafibiaaaeaahabaaaagaaaaaaffffaaaa
gcbaaaadpcbabaaaabaaaaaagcbaaaaddcbabaaaacaaaaaagcbaaaadhcbabaaa
adaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacafaaaaaabaaaaaahbcaabaaa
aaaaaaaaegbcbaaaadaaaaaaegbcbaaaadaaaaaaeeaaaaafbcaabaaaaaaaaaaa
akaabaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaagaabaaaaaaaaaaaegbcbaaa
adaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaacaaaaaaeghobaaaagaaaaaa
aagabaaaagaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaaabaaaaaaabeaaaaa
aaaaaaebdiaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaapgapbaaaaaaaaaaa
diaaaaakhcaabaaaacaaaaaafgafbaaaabaaaaaaaceaaaaaomafnblopdaedfdp
dkmnbddpaaaaaaaadcaaaaamhcaabaaaacaaaaaaagaabaaaabaaaaaaaceaaaaa
olaffbdpaaaaaaaadkmnbddpaaaaaaaaegacbaaaacaaaaaadcaaaaamhcaabaaa
acaaaaaakgakbaaaabaaaaaaaceaaaaaolafnblopdaedflpdkmnbddpaaaaaaaa
egacbaaaacaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaacaaaaaaegacbaaa
acaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadcaaaaajhcaabaaa
aaaaaaaaegacbaaaacaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaabaaaaaah
icaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaaeeaaaaaficaabaaa
aaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaapgapbaaaaaaaaaaa
egacbaaaaaaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaa
acaaaaaaaagabaaaabaaaaaadcaaaaapdcaabaaaacaaaaaahgapbaaaacaaaaaa
aceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialp
aaaaaaaaaaaaaaaaapaaaaahicaabaaaaaaaaaaaegaabaaaacaaaaaaegaabaaa
acaaaaaaddaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaiadp
aaaaaaaiicaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaaaaaaiadp
elaaaaafecaabaaaacaaaaaadkaabaaaaaaaaaaaaaaaaaalhcaabaaaadaaaaaa
egacbaiaebaaaaaaacaaaaaaaceaaaaaaaaaaaaaaaaaaaaaaaaaiadpaaaaaaaa
efaaaaajpcaabaaaaeaaaaaaogbkbaaaabaaaaaaeghobaaaabaaaaaaaagabaaa
adaaaaaadcaaaaajhcaabaaaacaaaaaaegacbaaaaeaaaaaaegacbaaaadaaaaaa
egacbaaaacaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaaacaaaaaaegacbaaa
aaaaaaaadeaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaa
cpaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaaiccaabaaaaaaaaaaa
akiacaaaaaaaaaaaaeaaaaaaabeaaaaaaaaaaaeddiaaaaahbcaabaaaaaaaaaaa
akaabaaaaaaaaaaabkaabaaaaaaaaaaabjaaaaafbcaabaaaaaaaaaaaakaabaaa
aaaaaaaaapcaaaakbcaabaaaadaaaaaaaceaaaaaolaffbdpdkmnbddpaaaaaaaa
aaaaaaaaigaabaaaacaaaaaabacaaaakccaabaaaadaaaaaaaceaaaaaomafnblo
pdaedfdpdkmnbddpaaaaaaaaegacbaaaacaaaaaabacaaaakecaabaaaadaaaaaa
aceaaaaaolafnblopdaedflpdkmnbddpaaaaaaaaegacbaaaacaaaaaabaaaaaah
ccaabaaaaaaaaaaaegacbaaaadaaaaaaegacbaaaabaaaaaaefaaaaajpcaabaaa
abaaaaaaegbabaaaacaaaaaaeghobaaaafaaaaaaaagabaaaafaaaaaadiaaaaah
ecaabaaaaaaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaaaebdiaaaaahhcaabaaa
abaaaaaaegacbaaaabaaaaaakgakbaaaaaaaaaaadiaaaaahocaabaaaaaaaaaaa
fgafbaaaaaaaaaaaagajbaaaabaaaaaadiaaaaaihcaabaaaabaaaaaajgahbaaa
aaaaaaaaegiccaaaaaaaaaaaacaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaa
abaaaaaaeghobaaaaeaaaaaaaagabaaaaeaaaaaaaaaaaaaiicaabaaaabaaaaaa
akaabaiaebaaaaaaaeaaaaaaabeaaaaaaaaaiadpdiaaaaahicaabaaaabaaaaaa
dkaabaaaabaaaaaaakaabaaaacaaaaaadiaaaaaiicaabaaaabaaaaaadkaabaaa
abaaaaaaakiacaaaaaaaaaaaacaaaaaadiaaaaahhcaabaaaabaaaaaapgapbaaa
abaaaaaaegacbaaaabaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaa
eghobaaaaaaaaaaaaagabaaaaaaaaaaaaaaaaaahhcaabaaaacaaaaaaegacbaaa
aeaaaaaaegacbaaaacaaaaaadgaaaaaficcabaaaaaaaaaaadkaabaaaacaaaaaa
diaaaaahocaabaaaaaaaaaaafgaobaaaaaaaaaaaagajbaaaacaaaaaadcaaaaaj
hcaabaaaaaaaaaaaegacbaaaabaaaaaaagaabaaaaaaaaaaajgahbaaaaaaaaaaa
efaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaaeghobaaaadaaaaaaaagabaaa
acaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaagiacaaaaaaaaaaa
adaaaaaadcaaaaakhcaabaaaabaaaaaaegacbaaaaeaaaaaaegacbaiaebaaaaaa
abaaaaaaegacbaaaabaaaaaaaaaaaaahhccabaaaaaaaaaaaegacbaaaaaaaaaaa
egacbaaaabaaaaaadoaaaaabejfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
adadaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklkl"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_OFF" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 47 math, 6 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Vector 0 [_LightColor0]
Vector 1 [_SpecColor]
Float 2 [_LightAmount]
Float 3 [_Shininess]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_ShadowMapTexture] 2D 5
"!!ARBfp1.0
PARAM c[5] = { program.local[0..3],
		{ 2, 1, 0, 128 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEX R0.yw, fragment.texcoord[0], texture[2], 2D;
TEX R3.xyz, fragment.texcoord[0].zwzw, texture[1], 2D;
TEX R2, fragment.texcoord[0], texture[0], 2D;
TXP R0.x, fragment.texcoord[4], texture[5], 2D;
TEX R1.x, fragment.texcoord[0], texture[4], 2D;
TEX R4.xyz, fragment.texcoord[0], texture[3], 2D;
MAD R5.xy, R0.wyzw, c[4].x, -c[4].y;
MUL R1.zw, R5.xyxy, R5.xyxy;
ADD_SAT R1.y, R1.z, R1.w;
MOV R0.yzw, fragment.texcoord[1].xxyz;
ADD R3.w, -R1.y, c[4].y;
DP3 R1.z, fragment.texcoord[3], fragment.texcoord[3];
RSQ R1.y, R1.z;
MAD R1.yzw, R1.y, fragment.texcoord[3].xxyz, R0;
RSQ R0.y, R3.w;
DP3 R0.z, R1.yzww, R1.yzww;
RSQ R3.w, R0.z;
RCP R5.z, R0.y;
ADD R0.yzw, -R5.xxyz, c[4].xzzy;
MAD R5.xyz, R3, R0.yzww, R5;
MUL R1.yzw, R3.w, R1;
DP3 R0.y, R5, R1.yzww;
MAX R0.z, R0.y, c[4];
ADD R0.w, -R3.x, c[4].y;
MUL R0.w, R1.x, R0;
MOV R1, c[1];
MOV R0.y, c[4].w;
MUL R0.y, R0, c[3].x;
POW R0.y, R0.z, R0.y;
DP3 R0.z, R5, fragment.texcoord[1];
ADD R2.xyz, R2, R3;
MUL R0.w, R0, c[1].x;
MUL R0.y, R0, R0.w;
MAX R0.z, R0, c[4];
MUL R5.xyz, R2, c[0];
MUL R5.xyz, R5, R0.z;
MUL R1.xyz, R1, c[0];
MAD R1.xyz, R1, R0.y, R5;
MUL R0.z, R0.x, c[4].x;
MUL R1.xyz, R1, R0.z;
MAD R1.xyz, R2, fragment.texcoord[2], R1;
MUL R2.xyz, R4, c[2].x;
MUL R0.z, R1.w, c[0].w;
MAD R2.xyz, R3.x, -R2, R2;
MUL R0.y, R0, R0.z;
ADD result.color.xyz, R1, R2;
MAD result.color.w, R0.x, R0.y, R2;
END
# 47 instructions, 6 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 52 math, 6 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
Vector 0 [_LightColor0]
Vector 1 [_SpecColor]
Float 2 [_LightAmount]
Float 3 [_Shininess]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_ShadowMapTexture] 2D 5
"ps_2_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s3
dcl_2d s4
dcl_2d s5
def c4, 2.00000000, -1.00000000, 1.00000000, 0.00000000
def c5, 128.00000000, 0, 0, 0
dcl t0
dcl t1.xyz
dcl t2.xyz
dcl t3.xyz
dcl t4
texld r4, t0, s3
texldp r8, t4, s5
texld r2, t0, s0
texld r7, t0, s4
mov_pp r6.xyz, t1
mov r0.y, t0.w
mov r0.x, t0.z
mov r1.xy, r0
mul r4.xyz, r4, c2.x
texld r3, r1, s1
texld r0, t0, s2
mov r0.x, r0.w
mad_pp r5.xy, r0, c4.x, c4.y
mul_pp r0.xy, r5, r5
add_pp_sat r0.x, r0, r0.y
add_pp r0.x, -r0, c4.z
rsq_pp r0.x, r0.x
dp3_pp r1.x, t3, t3
rsq_pp r1.x, r1.x
mad_pp r1.xyz, r1.x, t3, r6
rcp_pp r5.z, r0.x
dp3_pp r0.x, r1, r1
rsq_pp r0.x, r0.x
mul_pp r1.xyz, r0.x, r1
mov_pp r0.x, c3
mul_pp r0.x, c5, r0
add_pp r2.xyz, r2, r3
mov_pp r0.w, c0
mov r6.z, c4
mov r6.xy, c4.w
add_pp r6.xyz, -r5, r6
mad_pp r6.xyz, r3, r6, r5
dp3_pp r1.x, r6, r1
max_pp r1.x, r1, c4.w
pow r5.w, r1.x, r0.x
mov r1.x, r5.w
add_pp r0.x, -r3, c4.z
mul r0.x, r7, r0
mul r0.x, r0, c1
mul r0.x, r1, r0
dp3_pp r1.x, r6, t1
mul_pp r5.xyz, r2, c0
max_pp r1.x, r1, c4.w
mul_pp r6.xyz, r5, r1.x
mov_pp r5.xyz, c0
mul_pp r5.xyz, c1, r5
mad r5.xyz, r5, r0.x, r6
mul_pp r1.x, r8, c4
mul r1.xyz, r5, r1.x
mad_pp r2.xyz, r2, t2, r1
mul_pp r1.x, c1.w, r0.w
mul r0.x, r0, r1
mad r0.w, r8.x, r0.x, r2
mad r1.xyz, r3.x, -r4, r4
add_pp r0.xyz, r2, r1
mov_pp oC0, r0
"
}
SubProgram "d3d11 " {
// Stats: 37 math, 6 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_Clouds] 2D 4
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 5
SetTexture 5 [_ShadowMapTexture] 2D 0
ConstBuffer "$Globals" 192
Vector 16 [_LightColor0]
Vector 32 [_SpecColor]
Float 112 [_LightAmount]
Float 128 [_Shininess]
BindCB  "$Globals" 0
"ps_4_0
eefiecedogkceogjajbffjcplfcimfjhjccilcefabaaaaaaiaahaaaaadaaaaaa
cmaaaaaaoeaaaaaabiabaaaaejfdeheolaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaakeaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakeaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaakeaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaakeaaaaaaaeaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapalaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklklfdeieefcgaagaaaa
eaaaaaaajiabaaaafjaaaaaeegiocaaaaaaaaaaaajaaaaaafkaaaaadaagabaaa
aaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaad
aagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafkaaaaadaagabaaaafaaaaaa
fibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaa
fibiaaaeaahabaaaacaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaa
fibiaaaeaahabaaaaeaaaaaaffffaaaafibiaaaeaahabaaaafaaaaaaffffaaaa
gcbaaaadpcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaa
adaaaaaagcbaaaadhcbabaaaaeaaaaaagcbaaaadlcbabaaaafaaaaaagfaaaaad
pccabaaaaaaaaaaagiaaaaacafaaaaaabaaaaaahbcaabaaaaaaaaaaaegbcbaaa
aeaaaaaaegbcbaaaaeaaaaaaeeaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
dcaaaaajhcaabaaaaaaaaaaaegbcbaaaaeaaaaaaagaabaaaaaaaaaaaegbcbaaa
acaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaa
abaaaaaaeghobaaaacaaaaaaaagabaaaacaaaaaadcaaaaapdcaabaaaabaaaaaa
hgapbaaaabaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaa
aaaaialpaaaaialpaaaaaaaaaaaaaaaaapaaaaahicaabaaaaaaaaaaaegaabaaa
abaaaaaaegaabaaaabaaaaaaddaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaa
abeaaaaaaaaaiadpaaaaaaaiicaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaa
abeaaaaaaaaaiadpelaaaaafecaabaaaabaaaaaadkaabaaaaaaaaaaaaaaaaaal
hcaabaaaacaaaaaaegacbaiaebaaaaaaabaaaaaaaceaaaaaaaaaaaaaaaaaaaaa
aaaaiadpaaaaaaaaefaaaaajpcaabaaaadaaaaaaogbkbaaaabaaaaaaeghobaaa
abaaaaaaaagabaaaaeaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaaadaaaaaa
egacbaaaacaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaa
abaaaaaaegacbaaaaaaaaaaabaaaaaahccaabaaaaaaaaaaaegacbaaaabaaaaaa
egbcbaaaacaaaaaadeaaaaakdcaabaaaaaaaaaaaegaabaaaaaaaaaaaaceaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaacpaaaaafbcaabaaaaaaaaaaaakaabaaa
aaaaaaaadiaaaaaiecaabaaaaaaaaaaaakiacaaaaaaaaaaaaiaaaaaaabeaaaaa
aaaaaaeddiaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaackaabaaaaaaaaaaa
bjaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaaefaaaaajpcaabaaaabaaaaaa
egbabaaaabaaaaaaeghobaaaaeaaaaaaaagabaaaafaaaaaaaaaaaaaiecaabaaa
aaaaaaaaakaabaiaebaaaaaaadaaaaaaabeaaaaaaaaaiadpdiaaaaahecaabaaa
aaaaaaaackaabaaaaaaaaaaaakaabaaaabaaaaaadiaaaaaiecaabaaaaaaaaaaa
ckaabaaaaaaaaaaaakiacaaaaaaaaaaaacaaaaaadiaaaaahbcaabaaaaaaaaaaa
ckaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaajpcaabaaaabaaaaaaegiocaaa
aaaaaaaaabaaaaaaegiocaaaaaaaaaaaacaaaaaadiaaaaahpcaabaaaabaaaaaa
agaabaaaaaaaaaaaegaobaaaabaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaa
abaaaaaaeghobaaaaaaaaaaaaagabaaaabaaaaaaaaaaaaahncaabaaaaaaaaaaa
agajbaaaadaaaaaaagajbaaaacaaaaaadiaaaaaihcaabaaaacaaaaaaigadbaaa
aaaaaaaaegiccaaaaaaaaaaaabaaaaaadiaaaaahncaabaaaaaaaaaaaagaobaaa
aaaaaaaaagbjbaaaadaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaaacaaaaaa
fgafbaaaaaaaaaaaegacbaaaabaaaaaaaoaaaaahdcaabaaaacaaaaaaegbabaaa
afaaaaaapgbpbaaaafaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaaacaaaaaa
eghobaaaafaaaaaaaagabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaaakaabaaa
aeaaaaaaakaabaaaaeaaaaaadcaaaaajiccabaaaaaaaaaaadkaabaaaabaaaaaa
akaabaaaaeaaaaaadkaabaaaacaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaa
abaaaaaafgafbaaaaaaaaaaaigadbaaaaaaaaaaaefaaaaajpcaabaaaabaaaaaa
egbabaaaabaaaaaaeghobaaaadaaaaaaaagabaaaadaaaaaadiaaaaaihcaabaaa
abaaaaaaegacbaaaabaaaaaaagiacaaaaaaaaaaaahaaaaaadcaaaaakhcaabaaa
abaaaaaaegacbaaaadaaaaaaegacbaiaebaaaaaaabaaaaaaegacbaaaabaaaaaa
aaaaaaahhccabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadoaaaaab
"
}
SubProgram "d3d11_9x " {
// Stats: 37 math, 6 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_Clouds] 2D 4
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 5
SetTexture 5 [_ShadowMapTexture] 2D 0
ConstBuffer "$Globals" 192
Vector 16 [_LightColor0]
Vector 32 [_SpecColor]
Float 112 [_LightAmount]
Float 128 [_Shininess]
BindCB  "$Globals" 0
"ps_4_0_level_9_1
eefiecedkalmojkpmkkmamonlafpbpfenhgkdofiabaaaaaakealaaaaaeaaaaaa
daaaaaaafaaeaaaaliakaaaahaalaaaaebgpgodjbiaeaaaabiaeaaaaaaacpppp
meadaaaafeaaaaaaacaadmaaaaaafeaaaaaafeaaagaaceaaaaaafeaaafaaaaaa
aaababaaacacacaaadadadaaabaeaeaaaeafafaaaaaaabaaacaaaaaaaaaaaaaa
aaaaahaaacaaacaaaaaaaaaaaaacppppfbaaaaafaeaaapkaaaaaaaeaaaaaialp
aaaaaaaaaaaaiadpfbaaaaafafaaapkaaaaaaaaaaaaaaaaaaaaaiadpaaaaaaed
bpaaaaacaaaaaaiaaaaaaplabpaaaaacaaaaaaiaabaachlabpaaaaacaaaaaaia
acaachlabpaaaaacaaaaaaiaadaachlabpaaaaacaaaaaaiaaeaaaplabpaaaaac
aaaaaajaaaaiapkabpaaaaacaaaaaajaabaiapkabpaaaaacaaaaaajaacaiapka
bpaaaaacaaaaaajaadaiapkabpaaaaacaaaaaajaaeaiapkabpaaaaacaaaaaaja
afaiapkaabaaaaacaaaaabiaaaaakklaabaaaaacaaaaaciaaaaapplaagaaaaac
aaaaaeiaaeaapplaafaaaaadabaaadiaaaaakkiaaeaaoelaecaaaaadacaacpia
aaaaoelaacaioekaecaaaaadaaaacpiaaaaaoeiaaeaioekaecaaaaadadaaapia
aaaaoelaafaioekaecaaaaadaeaacpiaaaaaoelaabaioekaecaaaaadabaacpia
abaaoeiaaaaioekaecaaaaadafaaapiaaaaaoelaadaioekaaiaaaaadaaaaciia
adaaoelaadaaoelaahaaaaacaaaaciiaaaaappiaabaaaaacagaaahiaadaaoela
aeaaaaaeagaachiaagaaoeiaaaaappiaabaaoelaceaaaaacahaachiaagaaoeia
aeaaaaaeagaacbiaacaappiaaeaaaakaaeaaffkaaeaaaaaeagaacciaacaaffia
aeaaaakaaeaaffkafkaaaaaeaaaadiiaagaaoeiaagaaoeiaaeaakkkaacaaaaad
aaaaciiaaaaappibaeaappkaahaaaaacaaaaciiaaaaappiaagaaaaacagaaceia
aaaappiabcaaaaaeacaachiaaaaaoeiaafaaoekaagaaoeiaaiaaaaadaaaaciia
acaaoeiaahaaoeiaaiaaaaadafaaciiaacaaoeiaabaaoelaalaaaaadabaaccia
afaappiaaeaakkkaalaaaaadafaaaiiaaaaappiaaeaakkkaabaaaaacaaaaaiia
afaappkaafaaaaadaaaaaiiaaaaappiaadaaaakacaaaaaadabaaaeiaafaappia
aaaappiaacaaaaadaaaaaiiaaaaaaaibaeaappkaafaaaaadaaaaaiiaaaaappia
adaaaaiaafaaaaadaaaaciiaaaaappiaabaaaakaafaaaaadaaaaaiiaaaaappia
abaakkiaabaaaaacacaaapiaaaaaoekaafaaaaadacaaahiaacaaoeiaabaaoeka
afaaaaadacaaahiaaaaappiaacaaoeiaacaaaaadadaachiaaaaaoeiaaeaaoeia
afaaaaadaeaachiaadaaoeiaaaaaoekaafaaaaadadaachiaadaaoeiaacaaoela
aeaaaaaeabaaaoiaaeaabliaabaaffiaacaabliaacaaaaadadaaaiiaabaaaaia
abaaaaiaaeaaaaaeabaacoiaabaaoeiaadaappiaadaabliaafaaaaadacaaahia
afaaoeiaacaaaakaaeaaaaaeaaaachiaaaaaoeiaacaaoeibacaaoeiaacaaaaad
adaachiaaaaaoeiaabaabliaafaaaaadaaaaabiaacaappiaabaappkaafaaaaad
aaaaabiaaaaappiaaaaaaaiaaeaaaaaeadaaciiaaaaaaaiaabaaaaiaaeaappia
abaaaaacaaaicpiaadaaoeiappppaaaafdeieefcgaagaaaaeaaaaaaajiabaaaa
fjaaaaaeegiocaaaaaaaaaaaajaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaad
aagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaa
fkaaaaadaagabaaaaeaaaaaafkaaaaadaagabaaaafaaaaaafibiaaaeaahabaaa
aaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaa
acaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaa
aeaaaaaaffffaaaafibiaaaeaahabaaaafaaaaaaffffaaaagcbaaaadpcbabaaa
abaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaad
hcbabaaaaeaaaaaagcbaaaadlcbabaaaafaaaaaagfaaaaadpccabaaaaaaaaaaa
giaaaaacafaaaaaabaaaaaahbcaabaaaaaaaaaaaegbcbaaaaeaaaaaaegbcbaaa
aeaaaaaaeeaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaadcaaaaajhcaabaaa
aaaaaaaaegbcbaaaaeaaaaaaagaabaaaaaaaaaaaegbcbaaaacaaaaaabaaaaaah
icaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaaeeaaaaaficaabaaa
aaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaapgapbaaaaaaaaaaa
egacbaaaaaaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaaeghobaaa
acaaaaaaaagabaaaacaaaaaadcaaaaapdcaabaaaabaaaaaahgapbaaaabaaaaaa
aceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialp
aaaaaaaaaaaaaaaaapaaaaahicaabaaaaaaaaaaaegaabaaaabaaaaaaegaabaaa
abaaaaaaddaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaiadp
aaaaaaaiicaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaaaaaaiadp
elaaaaafecaabaaaabaaaaaadkaabaaaaaaaaaaaaaaaaaalhcaabaaaacaaaaaa
egacbaiaebaaaaaaabaaaaaaaceaaaaaaaaaaaaaaaaaaaaaaaaaiadpaaaaaaaa
efaaaaajpcaabaaaadaaaaaaogbkbaaaabaaaaaaeghobaaaabaaaaaaaagabaaa
aeaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaaadaaaaaaegacbaaaacaaaaaa
egacbaaaabaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaaabaaaaaaegacbaaa
aaaaaaaabaaaaaahccaabaaaaaaaaaaaegacbaaaabaaaaaaegbcbaaaacaaaaaa
deaaaaakdcaabaaaaaaaaaaaegaabaaaaaaaaaaaaceaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaacpaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaai
ecaabaaaaaaaaaaaakiacaaaaaaaaaaaaiaaaaaaabeaaaaaaaaaaaeddiaaaaah
bcaabaaaaaaaaaaaakaabaaaaaaaaaaackaabaaaaaaaaaaabjaaaaafbcaabaaa
aaaaaaaaakaabaaaaaaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaa
eghobaaaaeaaaaaaaagabaaaafaaaaaaaaaaaaaiecaabaaaaaaaaaaaakaabaia
ebaaaaaaadaaaaaaabeaaaaaaaaaiadpdiaaaaahecaabaaaaaaaaaaackaabaaa
aaaaaaaaakaabaaaabaaaaaadiaaaaaiecaabaaaaaaaaaaackaabaaaaaaaaaaa
akiacaaaaaaaaaaaacaaaaaadiaaaaahbcaabaaaaaaaaaaackaabaaaaaaaaaaa
akaabaaaaaaaaaaadiaaaaajpcaabaaaabaaaaaaegiocaaaaaaaaaaaabaaaaaa
egiocaaaaaaaaaaaacaaaaaadiaaaaahpcaabaaaabaaaaaaagaabaaaaaaaaaaa
egaobaaaabaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaa
aaaaaaaaaagabaaaabaaaaaaaaaaaaahncaabaaaaaaaaaaaagajbaaaadaaaaaa
agajbaaaacaaaaaadiaaaaaihcaabaaaacaaaaaaigadbaaaaaaaaaaaegiccaaa
aaaaaaaaabaaaaaadiaaaaahncaabaaaaaaaaaaaagaobaaaaaaaaaaaagbjbaaa
adaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaaacaaaaaafgafbaaaaaaaaaaa
egacbaaaabaaaaaaaoaaaaahdcaabaaaacaaaaaaegbabaaaafaaaaaapgbpbaaa
afaaaaaaefaaaaajpcaabaaaaeaaaaaaegaabaaaacaaaaaaeghobaaaafaaaaaa
aagabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaaakaabaaaaeaaaaaaakaabaaa
aeaaaaaadcaaaaajiccabaaaaaaaaaaadkaabaaaabaaaaaaakaabaaaaeaaaaaa
dkaabaaaacaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaaabaaaaaafgafbaaa
aaaaaaaaigadbaaaaaaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaa
eghobaaaadaaaaaaaagabaaaadaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaa
abaaaaaaagiacaaaaaaaaaaaahaaaaaadcaaaaakhcaabaaaabaaaaaaegacbaaa
adaaaaaaegacbaiaebaaaaaaabaaaaaaegacbaaaabaaaaaaaaaaaaahhccabaaa
aaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadoaaaaabejfdeheolaaaaaaa
agaaaaaaaiaaaaaajiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaa
keaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapapaaaakeaaaaaaabaaaaaa
aaaaaaaaadaaaaaaacaaaaaaahahaaaakeaaaaaaacaaaaaaaaaaaaaaadaaaaaa
adaaaaaaahahaaaakeaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaa
keaaaaaaaeaaaaaaaaaaaaaaadaaaaaaafaaaaaaapalaaaafdfgfpfaepfdejfe
ejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaa
caaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgf
heaaklkl"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 17 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Float 0 [_LightAmount]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_ShadowMapTexture] 2D 4
SetTexture 5 [unity_Lightmap] 2D 5
"!!ARBfp1.0
PARAM c[2] = { program.local[0],
		{ 8, 2 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEX R1, fragment.texcoord[0], texture[0], 2D;
TEX R3.xyz, fragment.texcoord[0].zwzw, texture[1], 2D;
TEX R2.xyz, fragment.texcoord[0], texture[3], 2D;
TEX R0, fragment.texcoord[1], texture[5], 2D;
TXP R4.x, fragment.texcoord[2], texture[4], 2D;
MUL R4.yzw, R0.xxyz, R4.x;
MUL R0.xyz, R0.w, R0;
MUL R2.xyz, R2, c[0].x;
MUL R0.xyz, R0, c[1].x;
MUL R4.yzw, R4, c[1].y;
MIN R4.yzw, R0.xxyz, R4;
MUL R0.xyz, R0, R4.x;
MAX R0.xyz, R4.yzww, R0;
MAD R2.xyz, R3.x, -R2, R2;
ADD R1.xyz, R1, R3;
MAD result.color.xyz, R1, R0, R2;
MOV result.color.w, R1;
END
# 17 instructions, 5 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 15 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
Float 0 [_LightAmount]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_ShadowMapTexture] 2D 4
SetTexture 5 [unity_Lightmap] 2D 5
"ps_2_0
dcl_2d s0
dcl_2d s1
dcl_2d s3
dcl_2d s4
dcl_2d s5
def c1, 8.00000000, 2.00000000, 0, 0
dcl t0
dcl t1.xy
dcl t2
texld r1, t0, s0
texld r2, t0, s3
texldp r4, t2, s4
mov r0.y, t0.w
mov r0.x, t0.z
mul r2.xyz, r2, c0.x
texld r3, r0, s1
texld r0, t1, s5
mul_pp r5.xyz, r0, r4.x
mul_pp r0.xyz, r0.w, r0
mul_pp r0.xyz, r0, c1.x
mul_pp r5.xyz, r5, c1.y
min_pp r5.xyz, r0, r5
mul_pp r0.xyz, r0, r4.x
max_pp r0.xyz, r5, r0
add_pp r1.xyz, r1, r3
mad r2.xyz, r3.x, -r2, r2
mov_pp r0.w, r1
mad_pp r0.xyz, r1, r0, r2
mov_pp oC0, r0
"
}
SubProgram "d3d11 " {
// Stats: 12 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_Clouds] 2D 3
SetTexture 2 [_Emission] 2D 2
SetTexture 3 [_ShadowMapTexture] 2D 0
SetTexture 4 [unity_Lightmap] 2D 4
ConstBuffer "$Globals" 208
Float 112 [_LightAmount]
BindCB  "$Globals" 0
"ps_4_0
eefiecedoloohfmebepliifohjefmhcpjbbcfmkiabaaaaaaaaaeaaaaadaaaaaa
cmaaaaaaleaaaaaaoiaaaaaaejfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
adadaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaapalaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklklfdeieefcbaadaaaaeaaaaaaameaaaaaafjaaaaaeegiocaaa
aaaaaaaaaiaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaa
fkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaa
aeaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaa
ffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaa
ffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaa
gcbaaaaddcbabaaaacaaaaaagcbaaaadlcbabaaaadaaaaaagfaaaaadpccabaaa
aaaaaaaagiaaaaacaeaaaaaaaoaaaaahdcaabaaaaaaaaaaaegbabaaaadaaaaaa
pgbpbaaaadaaaaaaefaaaaajpcaabaaaaaaaaaaaegaabaaaaaaaaaaaeghobaaa
adaaaaaaaagabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaaakaabaaaaaaaaaaa
akaabaaaaaaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaacaaaaaaeghobaaa
aeaaaaaaaagabaaaaeaaaaaadiaaaaahocaabaaaaaaaaaaafgafbaaaaaaaaaaa
agajbaaaabaaaaaadiaaaaahicaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaa
aaaaaaebdiaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaapgapbaaaabaaaaaa
ddaaaaahocaabaaaaaaaaaaafgaobaaaaaaaaaaaagajbaaaabaaaaaadiaaaaah
hcaabaaaabaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadeaaaaahhcaabaaa
aaaaaaaajgahbaaaaaaaaaaaegacbaaaabaaaaaaefaaaaajpcaabaaaabaaaaaa
egbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaaacaaaaaadiaaaaaihcaabaaa
abaaaaaaegacbaaaabaaaaaaagiacaaaaaaaaaaaahaaaaaaefaaaaajpcaabaaa
acaaaaaaogbkbaaaabaaaaaaeghobaaaabaaaaaaaagabaaaadaaaaaadcaaaaak
hcaabaaaabaaaaaaegacbaaaacaaaaaaegacbaiaebaaaaaaabaaaaaaegacbaaa
abaaaaaaefaaaaajpcaabaaaadaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaa
aagabaaaabaaaaaaaaaaaaahhcaabaaaacaaaaaaegacbaaaacaaaaaaegacbaaa
adaaaaaadgaaaaaficcabaaaaaaaaaaadkaabaaaadaaaaaadcaaaaajhccabaaa
aaaaaaaaegacbaaaacaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadoaaaaab
"
}
SubProgram "d3d11_9x " {
// Stats: 12 math, 5 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_Clouds] 2D 3
SetTexture 2 [_Emission] 2D 2
SetTexture 3 [_ShadowMapTexture] 2D 0
SetTexture 4 [unity_Lightmap] 2D 4
ConstBuffer "$Globals" 208
Float 112 [_LightAmount]
BindCB  "$Globals" 0
"ps_4_0_level_9_1
eefiecedpkifgjacbjelnckckkginbhibcnbpepoabaaaaaabiagaaaaaeaaaaaa
daaaaaaaeeacaaaafmafaaaaoeafaaaaebgpgodjamacaaaaamacaaaaaaacpppp
miabaaaaeeaaaaaaabaadiaaaaaaeeaaaaaaeeaaafaaceaaaaaaeeaaadaaaaaa
aaababaaacacacaaabadadaaaeaeaeaaaaaaahaaabaaaaaaaaaaaaaaaaacpppp
fbaaaaafabaaapkaaaaaaaebaaaaaaaaaaaaaaaaaaaaaaaabpaaaaacaaaaaaia
aaaaaplabpaaaaacaaaaaaiaabaaadlabpaaaaacaaaaaaiaacaaaplabpaaaaac
aaaaaajaaaaiapkabpaaaaacaaaaaajaabaiapkabpaaaaacaaaaaajaacaiapka
bpaaaaacaaaaaajaadaiapkabpaaaaacaaaaaajaaeaiapkaagaaaaacaaaaaiia
acaapplaafaaaaadaaaaadiaaaaappiaacaaoelaabaaaaacabaaabiaaaaakkla
abaaaaacabaaaciaaaaapplaecaaaaadaaaacpiaaaaaoeiaaaaioekaecaaaaad
acaacpiaabaaoelaaeaioekaecaaaaadadaaapiaaaaaoelaacaioekaecaaaaad
abaacpiaabaaoeiaadaioekaecaaaaadaeaacpiaaaaaoelaabaioekaacaaaaad
abaaciiaaaaaaaiaaaaaaaiaafaaaaadaaaacoiaacaabliaabaappiaafaaaaad
abaaciiaacaappiaabaaaakaafaaaaadacaachiaacaaoeiaabaappiaakaaaaad
afaachiaaaaabliaacaaoeiaafaaaaadaaaachiaaaaaaaiaacaaoeiaalaaaaad
acaachiaafaaoeiaaaaaoeiaafaaaaadaaaaahiaadaaoeiaaaaaaakaaeaaaaae
aaaachiaabaaoeiaaaaaoeibaaaaoeiaacaaaaadabaachiaabaaoeiaaeaaoeia
aeaaaaaeaeaachiaabaaoeiaacaaoeiaaaaaoeiaabaaaaacaaaicpiaaeaaoeia
ppppaaaafdeieefcbaadaaaaeaaaaaaameaaaaaafjaaaaaeegiocaaaaaaaaaaa
aiaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaad
aagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaa
fibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaa
fibiaaaeaahabaaaacaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaa
fibiaaaeaahabaaaaeaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaad
dcbabaaaacaaaaaagcbaaaadlcbabaaaadaaaaaagfaaaaadpccabaaaaaaaaaaa
giaaaaacaeaaaaaaaoaaaaahdcaabaaaaaaaaaaaegbabaaaadaaaaaapgbpbaaa
adaaaaaaefaaaaajpcaabaaaaaaaaaaaegaabaaaaaaaaaaaeghobaaaadaaaaaa
aagabaaaaaaaaaaaaaaaaaahccaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaaa
aaaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaacaaaaaaeghobaaaaeaaaaaa
aagabaaaaeaaaaaadiaaaaahocaabaaaaaaaaaaafgafbaaaaaaaaaaaagajbaaa
abaaaaaadiaaaaahicaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaaaeb
diaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaapgapbaaaabaaaaaaddaaaaah
ocaabaaaaaaaaaaafgaobaaaaaaaaaaaagajbaaaabaaaaaadiaaaaahhcaabaaa
abaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadeaaaaahhcaabaaaaaaaaaaa
jgahbaaaaaaaaaaaegacbaaaabaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaa
abaaaaaaeghobaaaacaaaaaaaagabaaaacaaaaaadiaaaaaihcaabaaaabaaaaaa
egacbaaaabaaaaaaagiacaaaaaaaaaaaahaaaaaaefaaaaajpcaabaaaacaaaaaa
ogbkbaaaabaaaaaaeghobaaaabaaaaaaaagabaaaadaaaaaadcaaaaakhcaabaaa
abaaaaaaegacbaaaacaaaaaaegacbaiaebaaaaaaabaaaaaaegacbaaaabaaaaaa
efaaaaajpcaabaaaadaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaa
abaaaaaaaaaaaaahhcaabaaaacaaaaaaegacbaaaacaaaaaaegacbaaaadaaaaaa
dgaaaaaficcabaaaaaaaaaaadkaabaaaadaaaaaadcaaaaajhccabaaaaaaaaaaa
egacbaaaacaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadoaaaaabejfdeheo
iaaaaaaaaeaaaaaaaiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaa
apaaaaaaheaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapapaaaaheaaaaaa
abaaaaaaaaaaaaaaadaaaaaaacaaaaaaadadaaaaheaaaaaaacaaaaaaaaaaaaaa
adaaaaaaadaaaaaaapalaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 59 math, 8 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Vector 0 [_SpecColor]
Float 1 [_LightAmount]
Float 2 [_Shininess]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_ShadowMapTexture] 2D 5
SetTexture 6 [unity_Lightmap] 2D 6
SetTexture 7 [unity_LightmapInd] 2D 7
"!!ARBfp1.0
PARAM c[7] = { program.local[0..2],
		{ 2, 1, 0, 8 },
		{ -0.40824828, -0.70710677, 0.57735026, 128 },
		{ -0.40824831, 0.70710677, 0.57735026 },
		{ 0.81649655, 0, 0.57735026 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
TEMP R7;
TEX R2, fragment.texcoord[0], texture[0], 2D;
TEX R4.xyz, fragment.texcoord[0].zwzw, texture[1], 2D;
TEX R6, fragment.texcoord[1], texture[7], 2D;
TEX R1.yw, fragment.texcoord[0], texture[2], 2D;
TEX R3, fragment.texcoord[1], texture[6], 2D;
TXP R1.x, fragment.texcoord[3], texture[5], 2D;
TEX R5.xyz, fragment.texcoord[0], texture[3], 2D;
TEX R0.x, fragment.texcoord[0], texture[4], 2D;
MUL R6.xyz, R6.w, R6;
MUL R0.yzw, R6.xxyz, c[3].w;
MUL R6.xyz, R0.z, c[5];
MAD R6.xyz, R0.y, c[6], R6;
MAD R7.xyz, R0.w, c[4], R6;
MAD R6.xy, R1.wyzw, c[3].x, -c[3].y;
DP3 R1.z, R7, R7;
RSQ R1.y, R1.z;
MUL R1.zw, R6.xyxy, R6.xyxy;
MUL R7.xyz, R1.y, R7;
ADD_SAT R1.y, R1.z, R1.w;
ADD R4.w, -R1.y, c[3].y;
DP3 R1.z, fragment.texcoord[2], fragment.texcoord[2];
RSQ R4.w, R4.w;
RSQ R1.y, R1.z;
MAD R1.yzw, R1.y, fragment.texcoord[2].xxyz, R7.xxyz;
RCP R6.z, R4.w;
ADD R7.xyz, -R6, c[3].zzyw;
MAD R6.xyz, R4, R7, R6;
DP3 R5.w, R1.yzww, R1.yzww;
RSQ R4.w, R5.w;
MUL R1.yzw, R4.w, R1;
DP3 R1.w, R6, R1.yzww;
DP3_SAT R7.z, R6, c[4];
DP3_SAT R7.x, R6, c[6];
DP3_SAT R7.y, R6, c[5];
DP3 R0.y, R7, R0.yzww;
MUL R6.xyz, R3.w, R3;
MUL R6.xyz, R6, R0.y;
MUL R3.xyz, R3, R1.x;
MUL R6.xyz, R6, c[3].w;
ADD R0.z, -R4.x, c[3].y;
MUL R3.xyz, R3, c[3].x;
MOV R0.y, c[4].w;
MAX R0.w, R1, c[3].z;
MUL R0.y, R0, c[2].x;
POW R1.w, R0.w, R0.y;
MUL R0.x, R0, R0.z;
MUL R0.w, R0.x, c[0].x;
MUL R0.xyz, R6, c[0];
MUL R0.xyz, R0, R0.w;
MIN R3.xyz, R6, R3;
MUL R1.xyz, R6, R1.x;
MAX R1.xyz, R3, R1;
MUL R3.xyz, R5, c[1].x;
MUL R0.xyz, R0, R1.w;
ADD R2.xyz, R2, R4;
MAD R3.xyz, R4.x, -R3, R3;
MAD R0.xyz, R2, R1, R0;
ADD result.color.xyz, R0, R3;
MOV result.color.w, R2;
END
# 59 instructions, 8 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 61 math, 8 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
Vector 0 [_SpecColor]
Float 1 [_LightAmount]
Float 2 [_Shininess]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_ShadowMapTexture] 2D 5
SetTexture 6 [unity_Lightmap] 2D 6
SetTexture 7 [unity_LightmapInd] 2D 7
"ps_2_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s3
dcl_2d s4
dcl_2d s5
dcl_2d s6
dcl_2d s7
def c3, 2.00000000, -1.00000000, 1.00000000, 0.00000000
def c4, -0.40824828, -0.70710677, 0.57735026, 8.00000000
def c5, -0.40824831, 0.70710677, 0.57735026, 128.00000000
def c6, 0.81649655, 0.00000000, 0.57735026, 0
dcl t0
dcl t1.xy
dcl t2.xyz
dcl t3
texldp r8, t3, s5
texld r4, t0, s3
texld r2, t0, s0
texld r9, t0, s4
texld r1, t1, s6
texld r5, t1, s7
mul_pp r5.xyz, r5.w, r5
mul_pp r7.xyz, r5, c4.w
mul_pp r5.xyz, r1.w, r1
mov r0.y, t0.w
mov r0.x, t0.z
mov r3.xy, r0
texld r0, t0, s2
texld r3, r3, s1
mov r0.x, r0.w
mad_pp r6.xy, r0, c3.x, c3.y
mul_pp r0.xy, r6, r6
add_pp_sat r0.x, r0, r0.y
add_pp r0.x, -r0, c3.z
rsq_pp r0.x, r0.x
rcp_pp r6.z, r0.x
mov r0.z, c3
mov r0.xy, c3.w
add_pp r0.xyz, -r6, r0
mad_pp r6.xyz, r3, r0, r6
dp3_pp_sat r0.z, r6, c4
dp3_pp_sat r0.y, r6, c5
dp3_pp_sat r0.x, r6, c6
dp3_pp r0.x, r0, r7
mul_pp r0.xyz, r5, r0.x
mul_pp r5.xyz, r0, c4.w
mul r0.xyz, r7.y, c5
mad r10.xyz, r7.x, c6, r0
mul_pp r0.xyz, r1, r8.x
mul_pp r1.xyz, r0, c3.x
mad r10.xyz, r7.z, c4, r10
min_pp r7.xyz, r5, r1
mul_pp r8.xyz, r5, r8.x
dp3 r0.x, r10, r10
rsq r1.x, r0.x
max_pp r7.xyz, r7, r8
dp3_pp r0.x, t2, t2
rsq_pp r0.x, r0.x
mul r1.xyz, r1.x, r10
mad_pp r1.xyz, r0.x, t2, r1
dp3_pp r0.x, r1, r1
rsq_pp r0.x, r0.x
mul_pp r1.xyz, r0.x, r1
dp3_pp r1.x, r6, r1
mov_pp r0.x, c2
mul_pp r8.xyz, r5, c0
mul_pp r0.x, c5.w, r0
max_pp r1.x, r1, c3.w
pow r5.x, r1.x, r0.x
add_pp r0.x, -r3, c3.z
mul r0.x, r9, r0
mul r1.x, r0, c0
mul_pp r1.xyz, r8, r1.x
mov r0.x, r5.x
mul r0.xyz, r1, r0.x
add_pp r1.xyz, r2, r3
mad_pp r0.xyz, r1, r7, r0
mul r2.xyz, r4, c1.x
mad r1.xyz, r3.x, -r2, r2
mov_pp r0.w, r2
add_pp r0.xyz, r0, r1
mov_pp oC0, r0
"
}
SubProgram "d3d11 " {
// Stats: 51 math, 8 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_Clouds] 2D 4
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 5
SetTexture 5 [_ShadowMapTexture] 2D 0
SetTexture 6 [unity_Lightmap] 2D 6
SetTexture 7 [unity_LightmapInd] 2D 7
ConstBuffer "$Globals" 208
Vector 32 [_SpecColor]
Float 112 [_LightAmount]
Float 128 [_Shininess]
BindCB  "$Globals" 0
"ps_4_0
eefiecedhjnjngdlgblpclndalheodogmefpbnolabaaaaaakeajaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
adadaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapalaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefcjmaiaaaaeaaaaaaachacaaaafjaaaaaeegiocaaaaaaaaaaaajaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaa
acaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafkaaaaad
aagabaaaafaaaaaafkaaaaadaagabaaaagaaaaaafkaaaaadaagabaaaahaaaaaa
fibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaa
fibiaaaeaahabaaaacaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaa
fibiaaaeaahabaaaaeaaaaaaffffaaaafibiaaaeaahabaaaafaaaaaaffffaaaa
fibiaaaeaahabaaaagaaaaaaffffaaaafibiaaaeaahabaaaahaaaaaaffffaaaa
gcbaaaadpcbabaaaabaaaaaagcbaaaaddcbabaaaacaaaaaagcbaaaadhcbabaaa
adaaaaaagcbaaaadlcbabaaaaeaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaac
afaaaaaabaaaaaahbcaabaaaaaaaaaaaegbcbaaaadaaaaaaegbcbaaaadaaaaaa
eeaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaa
agaabaaaaaaaaaaaegbcbaaaadaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaa
acaaaaaaeghobaaaahaaaaaaaagabaaaahaaaaaadiaaaaahicaabaaaaaaaaaaa
dkaabaaaabaaaaaaabeaaaaaaaaaaaebdiaaaaahhcaabaaaabaaaaaaegacbaaa
abaaaaaapgapbaaaaaaaaaaadiaaaaakhcaabaaaacaaaaaafgafbaaaabaaaaaa
aceaaaaaomafnblopdaedfdpdkmnbddpaaaaaaaadcaaaaamhcaabaaaacaaaaaa
agaabaaaabaaaaaaaceaaaaaolaffbdpaaaaaaaadkmnbddpaaaaaaaaegacbaaa
acaaaaaadcaaaaamhcaabaaaacaaaaaakgakbaaaabaaaaaaaceaaaaaolafnblo
pdaedflpdkmnbddpaaaaaaaaegacbaaaacaaaaaabaaaaaahicaabaaaaaaaaaaa
egacbaaaacaaaaaaegacbaaaacaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaa
aaaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaaacaaaaaapgapbaaaaaaaaaaa
egacbaaaaaaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaa
aaaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaa
aaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaaefaaaaajpcaabaaaacaaaaaa
egbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaaacaaaaaadcaaaaapdcaabaaa
acaaaaaahgapbaaaacaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaa
aceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaaapaaaaahicaabaaaaaaaaaaa
egaabaaaacaaaaaaegaabaaaacaaaaaaddaaaaahicaabaaaaaaaaaaadkaabaaa
aaaaaaaaabeaaaaaaaaaiadpaaaaaaaiicaabaaaaaaaaaaadkaabaiaebaaaaaa
aaaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaaacaaaaaadkaabaaaaaaaaaaa
aaaaaaalhcaabaaaadaaaaaaegacbaiaebaaaaaaacaaaaaaaceaaaaaaaaaaaaa
aaaaaaaaaaaaiadpaaaaaaaaefaaaaajpcaabaaaaeaaaaaaogbkbaaaabaaaaaa
eghobaaaabaaaaaaaagabaaaaeaaaaaadcaaaaajhcaabaaaacaaaaaaegacbaaa
aeaaaaaaegacbaaaadaaaaaaegacbaaaacaaaaaabaaaaaahbcaabaaaaaaaaaaa
egacbaaaacaaaaaaegacbaaaaaaaaaaadeaaaaahbcaabaaaaaaaaaaaakaabaaa
aaaaaaaaabeaaaaaaaaaaaaacpaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
diaaaaaiccaabaaaaaaaaaaaakiacaaaaaaaaaaaaiaaaaaaabeaaaaaaaaaaaed
diaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaabkaabaaaaaaaaaaabjaaaaaf
bcaabaaaaaaaaaaaakaabaaaaaaaaaaaapcaaaakbcaabaaaadaaaaaaaceaaaaa
olaffbdpdkmnbddpaaaaaaaaaaaaaaaaigaabaaaacaaaaaabacaaaakccaabaaa
adaaaaaaaceaaaaaomafnblopdaedfdpdkmnbddpaaaaaaaaegacbaaaacaaaaaa
bacaaaakecaabaaaadaaaaaaaceaaaaaolafnblopdaedflpdkmnbddpaaaaaaaa
egacbaaaacaaaaaabaaaaaahccaabaaaaaaaaaaaegacbaaaadaaaaaaegacbaaa
abaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaacaaaaaaeghobaaaagaaaaaa
aagabaaaagaaaaaadiaaaaahecaabaaaaaaaaaaadkaabaaaabaaaaaaabeaaaaa
aaaaaaebdiaaaaahhcaabaaaacaaaaaaegacbaaaabaaaaaakgakbaaaaaaaaaaa
diaaaaahocaabaaaaaaaaaaafgafbaaaaaaaaaaaagajbaaaacaaaaaaaoaaaaah
dcaabaaaacaaaaaaegbabaaaaeaaaaaapgbpbaaaaeaaaaaaefaaaaajpcaabaaa
acaaaaaaegaabaaaacaaaaaaeghobaaaafaaaaaaaagabaaaaaaaaaaaaaaaaaah
icaabaaaabaaaaaaakaabaaaacaaaaaaakaabaaaacaaaaaadiaaaaahhcaabaaa
acaaaaaajgahbaaaaaaaaaaaagaabaaaacaaaaaadiaaaaahhcaabaaaabaaaaaa
egacbaaaabaaaaaapgapbaaaabaaaaaaddaaaaahhcaabaaaabaaaaaajgahbaaa
aaaaaaaaegacbaaaabaaaaaadiaaaaaiocaabaaaaaaaaaaafgaobaaaaaaaaaaa
agijcaaaaaaaaaaaacaaaaaadeaaaaahhcaabaaaabaaaaaaegacbaaaacaaaaaa
egacbaaaabaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaa
aaaaaaaaaagabaaaabaaaaaaaaaaaaahhcaabaaaacaaaaaaegacbaaaaeaaaaaa
egacbaaaacaaaaaadgaaaaaficcabaaaaaaaaaaadkaabaaaacaaaaaadiaaaaah
hcaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaacaaaaaaaaaaaaaiicaabaaa
abaaaaaaakaabaiaebaaaaaaaeaaaaaaabeaaaaaaaaaiadpefaaaaajpcaabaaa
acaaaaaaegbabaaaabaaaaaaeghobaaaaeaaaaaaaagabaaaafaaaaaadiaaaaah
icaabaaaabaaaaaadkaabaaaabaaaaaaakaabaaaacaaaaaadiaaaaaiicaabaaa
abaaaaaadkaabaaaabaaaaaaakiacaaaaaaaaaaaacaaaaaadiaaaaahocaabaaa
aaaaaaaafgaobaaaaaaaaaaapgapbaaaabaaaaaadcaaaaajhcaabaaaaaaaaaaa
jgahbaaaaaaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaaefaaaaajpcaabaaa
abaaaaaaegbabaaaabaaaaaaeghobaaaadaaaaaaaagabaaaadaaaaaadiaaaaai
hcaabaaaabaaaaaaegacbaaaabaaaaaaagiacaaaaaaaaaaaahaaaaaadcaaaaak
hcaabaaaabaaaaaaegacbaaaaeaaaaaaegacbaiaebaaaaaaabaaaaaaegacbaaa
abaaaaaaaaaaaaahhccabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaa
doaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 51 math, 8 textures
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_Clouds] 2D 4
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 5
SetTexture 5 [_ShadowMapTexture] 2D 0
SetTexture 6 [unity_Lightmap] 2D 6
SetTexture 7 [unity_LightmapInd] 2D 7
ConstBuffer "$Globals" 208
Vector 32 [_SpecColor]
Float 112 [_LightAmount]
Float 128 [_Shininess]
BindCB  "$Globals" 0
"ps_4_0_level_9_1
eefiecedaafgafbknkpklnfcadhaolipagifbfadabaaaaaaliaoaaaaaeaaaaaa
daaaaaaaeaafaaaaoeanaaaaieaoaaaaebgpgodjaiafaaaaaiafaaaaaaacpppp
kmaeaaaafmaaaaaaacaaeeaaaaaafmaaaaaafmaaaiaaceaaaaaafmaaafaaaaaa
aaababaaacacacaaadadadaaabaeaeaaaeafafaaagagagaaahahahaaaaaaacaa
abaaaaaaaaaaaaaaaaaaahaaacaaabaaaaaaaaaaaaacppppfbaaaaafadaaapka
aaaaaaeaaaaaialpaaaaaaaaaaaaiadpfbaaaaafaeaaapkaolaffbdpaaaaaaaa
dkmnbddpaaaaaaedfbaaaaafafaaapkaomafnblopdaedfdpdkmnbddpaaaaaaaa
fbaaaaafagaaapkaolafnblopdaedflpdkmnbddpaaaaaaaafbaaaaafahaaapka
aaaaaaaaaaaaaaaaaaaaiadpaaaaaaebbpaaaaacaaaaaaiaaaaaaplabpaaaaac
aaaaaaiaabaaadlabpaaaaacaaaaaaiaacaachlabpaaaaacaaaaaaiaadaaapla
bpaaaaacaaaaaajaaaaiapkabpaaaaacaaaaaajaabaiapkabpaaaaacaaaaaaja
acaiapkabpaaaaacaaaaaajaadaiapkabpaaaaacaaaaaajaaeaiapkabpaaaaac
aaaaaajaafaiapkabpaaaaacaaaaaajaagaiapkabpaaaaacaaaaaajaahaiapka
abaaaaacaaaaabiaaaaakklaabaaaaacaaaaaciaaaaapplaagaaaaacaaaaaeia
adaapplaafaaaaadabaaadiaaaaakkiaadaaoelaecaaaaadacaacpiaaaaaoela
acaioekaecaaaaadaaaacpiaaaaaoeiaaeaioekaecaaaaadadaacpiaabaaoela
ahaioekaecaaaaadaeaacpiaabaaoelaagaioekaecaaaaadabaacpiaabaaoeia
aaaioekaecaaaaadafaacpiaaaaaoelaabaioekaecaaaaadagaaapiaaaaaoela
afaioekaecaaaaadahaaapiaaaaaoelaadaioekaaeaaaaaeaiaacbiaacaappia
adaaaakaadaaffkaaeaaaaaeaiaacciaacaaffiaadaaaakaadaaffkafkaaaaae
aaaadiiaaiaaoeiaaiaaoeiaadaakkkaacaaaaadaaaaciiaaaaappibadaappka
ahaaaaacaaaaciiaaaaappiaagaaaaacaiaaceiaaaaappiabcaaaaaeacaachia
aaaaoeiaahaaoekaaiaaoeiaaiaaaaadaiaadbiaaeaaoekaacaaoeiaaiaaaaad
aiaadciaafaaoekaacaaoeiaaiaaaaadaiaadeiaagaaoekaacaaoeiaafaaaaad
aaaaciiaadaappiaahaappkaafaaaaadadaachiaadaaoeiaaaaappiaaiaaaaad
aaaaciiaaiaaoeiaadaaoeiaafaaaaadacaaciiaaeaappiaahaappkaafaaaaad
abaacoiaaeaabliaacaappiaafaaaaadabaacoiaaaaappiaabaaoeiaacaaaaad
aaaaciiaabaaaaiaabaaaaiaafaaaaadagaacoiaabaaaaiaabaaoeiaafaaaaad
aeaachiaaeaaoeiaaaaappiaakaaaaadaiaachiaaeaaoeiaabaabliaafaaaaad
abaachiaabaabliaaaaaoekaalaaaaadaeaachiaaiaaoeiaagaabliaacaaaaad
agaacoiaaaaabliaafaabliaafaaaaadaeaachiaaeaaoeiaagaabliaafaaaaad
agaaaoiaadaaffiaafaablkaaeaaaaaeagaaaoiaadaaaaiaaeaablkaagaaoeia
aeaaaaaeadaaahiaadaakkiaagaaoekaagaabliaaiaaaaadaaaaaiiaadaaoeia
adaaoeiaahaaaaacaaaaaiiaaaaappiaceaaaaacaiaachiaacaaoelaaeaaaaae
adaachiaadaaoeiaaaaappiaaiaaoeiaceaaaaacaiaachiaadaaoeiaaiaaaaad
aaaaciiaacaaoeiaaiaaoeiaalaaaaadabaaaiiaaaaappiaadaakkkaabaaaaac
aaaaaiiaaeaappkaafaaaaadaaaaaiiaaaaappiaacaaaakacaaaaaadaeaaciia
abaappiaaaaappiaacaaaaadaaaaaiiaaaaaaaibadaappkaafaaaaadaaaaaiia
aaaappiaagaaaaiaafaaaaadaaaaciiaaaaappiaaaaaaakaafaaaaadabaaahia
aaaappiaabaaoeiaaeaaaaaeabaachiaabaaoeiaaeaappiaaeaaoeiaafaaaaad
acaaahiaahaaoeiaabaaaakaaeaaaaaeaaaachiaaaaaoeiaacaaoeibacaaoeia
acaaaaadafaachiaaaaaoeiaabaaoeiaabaaaaacaaaicpiaafaaoeiappppaaaa
fdeieefcjmaiaaaaeaaaaaaachacaaaafjaaaaaeegiocaaaaaaaaaaaajaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaa
acaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafkaaaaad
aagabaaaafaaaaaafkaaaaadaagabaaaagaaaaaafkaaaaadaagabaaaahaaaaaa
fibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaa
fibiaaaeaahabaaaacaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaa
fibiaaaeaahabaaaaeaaaaaaffffaaaafibiaaaeaahabaaaafaaaaaaffffaaaa
fibiaaaeaahabaaaagaaaaaaffffaaaafibiaaaeaahabaaaahaaaaaaffffaaaa
gcbaaaadpcbabaaaabaaaaaagcbaaaaddcbabaaaacaaaaaagcbaaaadhcbabaaa
adaaaaaagcbaaaadlcbabaaaaeaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaac
afaaaaaabaaaaaahbcaabaaaaaaaaaaaegbcbaaaadaaaaaaegbcbaaaadaaaaaa
eeaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaa
agaabaaaaaaaaaaaegbcbaaaadaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaa
acaaaaaaeghobaaaahaaaaaaaagabaaaahaaaaaadiaaaaahicaabaaaaaaaaaaa
dkaabaaaabaaaaaaabeaaaaaaaaaaaebdiaaaaahhcaabaaaabaaaaaaegacbaaa
abaaaaaapgapbaaaaaaaaaaadiaaaaakhcaabaaaacaaaaaafgafbaaaabaaaaaa
aceaaaaaomafnblopdaedfdpdkmnbddpaaaaaaaadcaaaaamhcaabaaaacaaaaaa
agaabaaaabaaaaaaaceaaaaaolaffbdpaaaaaaaadkmnbddpaaaaaaaaegacbaaa
acaaaaaadcaaaaamhcaabaaaacaaaaaakgakbaaaabaaaaaaaceaaaaaolafnblo
pdaedflpdkmnbddpaaaaaaaaegacbaaaacaaaaaabaaaaaahicaabaaaaaaaaaaa
egacbaaaacaaaaaaegacbaaaacaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaa
aaaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaaacaaaaaapgapbaaaaaaaaaaa
egacbaaaaaaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaa
aaaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaa
aaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaaefaaaaajpcaabaaaacaaaaaa
egbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaaacaaaaaadcaaaaapdcaabaaa
acaaaaaahgapbaaaacaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaa
aceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaaapaaaaahicaabaaaaaaaaaaa
egaabaaaacaaaaaaegaabaaaacaaaaaaddaaaaahicaabaaaaaaaaaaadkaabaaa
aaaaaaaaabeaaaaaaaaaiadpaaaaaaaiicaabaaaaaaaaaaadkaabaiaebaaaaaa
aaaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaaacaaaaaadkaabaaaaaaaaaaa
aaaaaaalhcaabaaaadaaaaaaegacbaiaebaaaaaaacaaaaaaaceaaaaaaaaaaaaa
aaaaaaaaaaaaiadpaaaaaaaaefaaaaajpcaabaaaaeaaaaaaogbkbaaaabaaaaaa
eghobaaaabaaaaaaaagabaaaaeaaaaaadcaaaaajhcaabaaaacaaaaaaegacbaaa
aeaaaaaaegacbaaaadaaaaaaegacbaaaacaaaaaabaaaaaahbcaabaaaaaaaaaaa
egacbaaaacaaaaaaegacbaaaaaaaaaaadeaaaaahbcaabaaaaaaaaaaaakaabaaa
aaaaaaaaabeaaaaaaaaaaaaacpaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
diaaaaaiccaabaaaaaaaaaaaakiacaaaaaaaaaaaaiaaaaaaabeaaaaaaaaaaaed
diaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaabkaabaaaaaaaaaaabjaaaaaf
bcaabaaaaaaaaaaaakaabaaaaaaaaaaaapcaaaakbcaabaaaadaaaaaaaceaaaaa
olaffbdpdkmnbddpaaaaaaaaaaaaaaaaigaabaaaacaaaaaabacaaaakccaabaaa
adaaaaaaaceaaaaaomafnblopdaedfdpdkmnbddpaaaaaaaaegacbaaaacaaaaaa
bacaaaakecaabaaaadaaaaaaaceaaaaaolafnblopdaedflpdkmnbddpaaaaaaaa
egacbaaaacaaaaaabaaaaaahccaabaaaaaaaaaaaegacbaaaadaaaaaaegacbaaa
abaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaacaaaaaaeghobaaaagaaaaaa
aagabaaaagaaaaaadiaaaaahecaabaaaaaaaaaaadkaabaaaabaaaaaaabeaaaaa
aaaaaaebdiaaaaahhcaabaaaacaaaaaaegacbaaaabaaaaaakgakbaaaaaaaaaaa
diaaaaahocaabaaaaaaaaaaafgafbaaaaaaaaaaaagajbaaaacaaaaaaaoaaaaah
dcaabaaaacaaaaaaegbabaaaaeaaaaaapgbpbaaaaeaaaaaaefaaaaajpcaabaaa
acaaaaaaegaabaaaacaaaaaaeghobaaaafaaaaaaaagabaaaaaaaaaaaaaaaaaah
icaabaaaabaaaaaaakaabaaaacaaaaaaakaabaaaacaaaaaadiaaaaahhcaabaaa
acaaaaaajgahbaaaaaaaaaaaagaabaaaacaaaaaadiaaaaahhcaabaaaabaaaaaa
egacbaaaabaaaaaapgapbaaaabaaaaaaddaaaaahhcaabaaaabaaaaaajgahbaaa
aaaaaaaaegacbaaaabaaaaaadiaaaaaiocaabaaaaaaaaaaafgaobaaaaaaaaaaa
agijcaaaaaaaaaaaacaaaaaadeaaaaahhcaabaaaabaaaaaaegacbaaaacaaaaaa
egacbaaaabaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaa
aaaaaaaaaagabaaaabaaaaaaaaaaaaahhcaabaaaacaaaaaaegacbaaaaeaaaaaa
egacbaaaacaaaaaadgaaaaaficcabaaaaaaaaaaadkaabaaaacaaaaaadiaaaaah
hcaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaacaaaaaaaaaaaaaiicaabaaa
abaaaaaaakaabaiaebaaaaaaaeaaaaaaabeaaaaaaaaaiadpefaaaaajpcaabaaa
acaaaaaaegbabaaaabaaaaaaeghobaaaaeaaaaaaaagabaaaafaaaaaadiaaaaah
icaabaaaabaaaaaadkaabaaaabaaaaaaakaabaaaacaaaaaadiaaaaaiicaabaaa
abaaaaaadkaabaaaabaaaaaaakiacaaaaaaaaaaaacaaaaaadiaaaaahocaabaaa
aaaaaaaafgaobaaaaaaaaaaapgapbaaaabaaaaaadcaaaaajhcaabaaaaaaaaaaa
jgahbaaaaaaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaaefaaaaajpcaabaaa
abaaaaaaegbabaaaabaaaaaaeghobaaaadaaaaaaaagabaaaadaaaaaadiaaaaai
hcaabaaaabaaaaaaegacbaaaabaaaaaaagiacaaaaaaaaaaaahaaaaaadcaaaaak
hcaabaaaabaaaaaaegacbaaaaeaaaaaaegacbaiaebaaaaaaabaaaaaaegacbaaa
abaaaaaaaaaaaaahhccabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaa
doaaaaabejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaaaaaaaaaaabaaaaaa
adaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaa
apapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaadadaaaaimaaaaaa
acaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaimaaaaaaadaaaaaaaaaaaaaa
adaaaaaaaeaaaaaaapalaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "LIGHTMAP_ON" "DIRLIGHTMAP_ON" }
"!!GLES3"
}
}
 }


 // Stats for Vertex shader:
 //       d3d11 : 31 avg math (24..33)
 //    d3d11_9x : 31 avg math (24..33)
 //        d3d9 : 35 avg math (29..38)
 //      opengl : 32 avg math (26..35)
 // Stats for Fragment shader:
 //       d3d11 : 34 avg math (30..40), 5 avg texture (4..6)
 //    d3d11_9x : 34 avg math (30..40), 5 avg texture (4..6)
 //        d3d9 : 48 avg math (44..55), 5 avg texture (4..6)
 //      opengl : 43 avg math (38..49), 5 avg texture (4..6)
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="ForwardAdd" "RenderType"="Opaque" }
  ZWrite Off
  Fog {
   Color (0,0,0,0)
  }
  Blend One One
Program "vp" {
SubProgram "opengl " {
// Stats: 34 math
Keywords { "POINT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Matrix 13 [_LightMatrix0]
Vector 17 [_WorldSpaceCameraPos]
Vector 18 [_WorldSpaceLightPos0]
Vector 19 [unity_Scale]
Vector 20 [_MainTex_ST]
Vector 21 [_Clouds_ST]
"!!ARBvp1.0
PARAM c[22] = { { 1 },
		state.matrix.mvp,
		program.local[5..21] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MOV R1.xyz, c[17];
MOV R1.w, c[0].x;
MOV R0.xyz, vertex.attrib[14];
DP4 R2.z, R1, c[11];
DP4 R2.y, R1, c[10];
DP4 R2.x, R1, c[9];
MAD R2.xyz, R2, c[19].w, -vertex.position;
MUL R1.xyz, vertex.normal.zxyw, R0.yzxw;
MAD R1.xyz, vertex.normal.yzxw, R0.zxyw, -R1;
MOV R0, c[18];
MUL R1.xyz, R1, vertex.attrib[14].w;
DP4 R3.z, R0, c[11];
DP4 R3.x, R0, c[9];
DP4 R3.y, R0, c[10];
MAD R0.xyz, R3, c[19].w, -vertex.position;
DP3 result.texcoord[1].y, R0, R1;
DP3 result.texcoord[1].z, vertex.normal, R0;
DP3 result.texcoord[1].x, R0, vertex.attrib[14];
DP4 R0.w, vertex.position, c[8];
DP4 R0.z, vertex.position, c[7];
DP4 R0.x, vertex.position, c[5];
DP4 R0.y, vertex.position, c[6];
DP3 result.texcoord[2].y, R1, R2;
DP3 result.texcoord[2].z, vertex.normal, R2;
DP3 result.texcoord[2].x, vertex.attrib[14], R2;
DP4 result.texcoord[3].z, R0, c[15];
DP4 result.texcoord[3].y, R0, c[14];
DP4 result.texcoord[3].x, R0, c[13];
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[21].xyxy, c[21];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[20], c[20].zwzw;
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 34 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 37 math
Keywords { "POINT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Matrix 12 [_LightMatrix0]
Vector 16 [_WorldSpaceCameraPos]
Vector 17 [_WorldSpaceLightPos0]
Vector 18 [unity_Scale]
Vector 19 [_MainTex_ST]
Vector 20 [_Clouds_ST]
"vs_2_0
def c21, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mov r0.w, c21.x
mov r0.xyz, c16
dp4 r1.z, r0, c10
dp4 r1.y, r0, c9
dp4 r1.x, r0, c8
mad r3.xyz, r1, c18.w, -v0
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r1.xyz, v2.yzxw, r0.zxyw, -r1
mul r2.xyz, r1, v1.w
mov r0, c10
dp4 r4.z, c17, r0
mov r0, c9
dp4 r4.y, c17, r0
mov r1, c8
dp4 r4.x, c17, r1
mad r0.xyz, r4, c18.w, -v0
dp3 oT1.y, r0, r2
dp3 oT1.z, v2, r0
dp3 oT1.x, r0, v1
dp4 r0.w, v0, c7
dp4 r0.z, v0, c6
dp4 r0.x, v0, c4
dp4 r0.y, v0, c5
dp3 oT2.y, r2, r3
dp3 oT2.z, v2, r3
dp3 oT2.x, v1, r3
dp4 oT3.z, r0, c14
dp4 oT3.y, r0, c13
dp4 oT3.x, r0, c12
mad oT0.zw, v3.xyxy, c20.xyxy, c20
mad oT0.xy, v3, c19, c19.zwzw
dp4 oPos.w, v0, c3
dp4 oPos.z, v0, c2
dp4 oPos.y, v0, c1
dp4 oPos.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 33 math
Keywords { "POINT" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 192
Matrix 48 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0
eefiecedgomfbnegpddfhmcimimafalhinaolgnhabaaaaaaceahaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefciiafaaaaeaaaabaa
gcabaaaafjaaaaaeegiocaaaaaaaaaaaamaaaaaafjaaaaaeegiocaaaabaaaaaa
afaaaaaafjaaaaaeegiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaad
hcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaad
hccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaagiaaaaacacaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaa
egbabaaaadaaaaaaegiacaaaaaaaaaaaakaaaaaaogikcaaaaaaaaaaaakaaaaaa
dcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaalaaaaaa
kgiocaaaaaaaaaaaalaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaa
cgbjbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaa
abaaaaaaegacbaiaebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaa
aaaaaaaapgbpbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaacaaaaaa
aaaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
adaaaaaabaaaaaaaagiacaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaal
hcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabdaaaaaa
pgipcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaa
egacbaaaabaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaa
baaaaaahcccabaaaacaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaah
bccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaa
acaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaa
fgifcaaaabaaaaaaaeaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaa
abaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaa
abaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaa
abaaaaaaaeaaaaaaegacbaaaabaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaa
abaaaaaaegiccaaaadaaaaaabdaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaa
abaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaah
cccabaaaadaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaa
adaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaaadaaaaaa
egbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaadaaaaaaanaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaadaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaaegiccaaa
aaaaaaaaaeaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaaaaaaaaaadaaaaaa
agaabaaaaaaaaaaaegacbaaaabaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaa
aaaaaaaaafaaaaaakgakbaaaaaaaaaaaegacbaaaabaaaaaadcaaaaakhccabaaa
aeaaaaaaegiccaaaaaaaaaaaagaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaa
doaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 33 math
Keywords { "POINT" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 192
Matrix 48 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0_level_9_1
eefiecedoooijienlngbiijahoolihhilkbgbnilabaaaaaahiakaaaaaeaaaaaa
daaaaaaaiaadaaaabaajaaaaniajaaaaebgpgodjeiadaaaaeiadaaaaaaacpopp
niacaaaahaaaaaaaagaaceaaaaaagmaaaaaagmaaaaaaceaaabaagmaaaaaaadaa
aeaaabaaaaaaaaaaaaaaakaaacaaafaaaaaaaaaaabaaaeaaabaaahaaaaaaaaaa
acaaaaaaabaaaiaaaaaaaaaaadaaaaaaaeaaajaaaaaaaaaaadaaamaaajaaanaa
aaaaaaaaaaaaaaaaaaacpoppbpaaaaacafaaaaiaaaaaapjabpaaaaacafaaabia
abaaapjabpaaaaacafaaaciaacaaapjabpaaaaacafaaadiaadaaapjaaeaaaaae
aaaaadoaadaaoejaafaaoekaafaaookaaeaaaaaeaaaaamoaadaaeejaagaaeeka
agaaoekaabaaaaacaaaaapiaaiaaoekaafaaaaadabaaahiaaaaaffiabcaaoeka
aeaaaaaeabaaahiabbaaoekaaaaaaaiaabaaoeiaaeaaaaaeaaaaahiabdaaoeka
aaaakkiaabaaoeiaaeaaaaaeaaaaahiabeaaoekaaaaappiaaaaaoeiaaeaaaaae
aaaaahiaaaaaoeiabfaappkaaaaaoejbaiaaaaadabaaaboaabaaoejaaaaaoeia
abaaaaacabaaahiaabaaoejaafaaaaadacaaahiaabaamjiaacaancjaaeaaaaae
abaaahiaacaamjjaabaanciaacaaoeibafaaaaadabaaahiaabaaoeiaabaappja
aiaaaaadabaaacoaabaaoeiaaaaaoeiaaiaaaaadabaaaeoaacaaoejaaaaaoeia
abaaaaacaaaaahiaahaaoekaafaaaaadacaaahiaaaaaffiabcaaoekaaeaaaaae
aaaaaliabbaakekaaaaaaaiaacaakeiaaeaaaaaeaaaaahiabdaaoekaaaaakkia
aaaapeiaacaaaaadaaaaahiaaaaaoeiabeaaoekaaeaaaaaeaaaaahiaaaaaoeia
bfaappkaaaaaoejbaiaaaaadacaaaboaabaaoejaaaaaoeiaaiaaaaadacaaacoa
abaaoeiaaaaaoeiaaiaaaaadacaaaeoaacaaoejaaaaaoeiaafaaaaadaaaaapia
aaaaffjaaoaaoekaaeaaaaaeaaaaapiaanaaoekaaaaaaajaaaaaoeiaaeaaaaae
aaaaapiaapaaoekaaaaakkjaaaaaoeiaaeaaaaaeaaaaapiabaaaoekaaaaappja
aaaaoeiaafaaaaadabaaahiaaaaaffiaacaaoekaaeaaaaaeabaaahiaabaaoeka
aaaaaaiaabaaoeiaaeaaaaaeaaaaahiaadaaoekaaaaakkiaabaaoeiaaeaaaaae
adaaahoaaeaaoekaaaaappiaaaaaoeiaafaaaaadaaaaapiaaaaaffjaakaaoeka
aeaaaaaeaaaaapiaajaaoekaaaaaaajaaaaaoeiaaeaaaaaeaaaaapiaalaaoeka
aaaakkjaaaaaoeiaaeaaaaaeaaaaapiaamaaoekaaaaappjaaaaaoeiaaeaaaaae
aaaaadmaaaaappiaaaaaoekaaaaaoeiaabaaaaacaaaaammaaaaaoeiappppaaaa
fdeieefciiafaaaaeaaaabaagcabaaaafjaaaaaeegiocaaaaaaaaaaaamaaaaaa
fjaaaaaeegiocaaaabaaaaaaafaaaaaafjaaaaaeegiocaaaacaaaaaaabaaaaaa
fjaaaaaeegiocaaaadaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaad
pcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaa
ghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaad
hccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaa
giaaaaacacaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaa
adaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaa
agbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaa
aaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaakaaaaaa
ogikcaaaaaaaaaaaakaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaa
agiecaaaaaaaaaaaalaaaaaakgiocaaaaaaaaaaaalaaaaaadiaaaaahhcaabaaa
aaaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaa
jgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaiaebaaaaaaaaaaaaaadiaaaaah
hcaabaaaaaaaaaaaegacbaaaaaaaaaaapgbpbaaaabaaaaaadiaaaaajhcaabaaa
abaaaaaafgifcaaaacaaaaaaaaaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaal
hcaabaaaabaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaaacaaaaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaa
kgikcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaa
egiccaaaadaaaaaabdaaaaaapgipcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaa
dcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaaadaaaaaabeaaaaaa
egbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaaacaaaaaaegacbaaaaaaaaaaa
egacbaaaabaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaa
abaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaa
diaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaaadaaaaaa
bbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaa
abaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
adaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaaaaaaaaai
hcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaadaaaaaabdaaaaaadcaaaaal
hcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaia
ebaaaaaaaaaaaaaabaaaaaahcccabaaaadaaaaaaegacbaaaaaaaaaaaegacbaaa
abaaaaaabaaaaaahbccabaaaadaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaa
baaaaaaheccabaaaadaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaanaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaoaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaa
apaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadiaaaaaihcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiccaaaaaaaaaaaaeaaaaaadcaaaaakhcaabaaaabaaaaaa
egiccaaaaaaaaaaaadaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadcaaaaak
hcaabaaaaaaaaaaaegiccaaaaaaaaaaaafaaaaaakgakbaaaaaaaaaaaegacbaaa
abaaaaaadcaaaaakhccabaaaaeaaaaaaegiccaaaaaaaaaaaagaaaaaapgapbaaa
aaaaaaaaegacbaaaaaaaaaaadoaaaaabejfdeheomaaaaaaaagaaaaaaaiaaaaaa
jiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
acaaaaaaahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaa
laaaaaaaabaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofe
aaeoepfcenebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaa
afaaaaaaaiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaa
imaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaa
aaaaaaaaadaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaa
adaaaaaaahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaa
fdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl"
}
SubProgram "gles " {
Keywords { "POINT" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_6 = tmpvar_1.xyz;
  tmpvar_7 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_8;
  tmpvar_8[0].x = tmpvar_6.x;
  tmpvar_8[0].y = tmpvar_7.x;
  tmpvar_8[0].z = tmpvar_2.x;
  tmpvar_8[1].x = tmpvar_6.y;
  tmpvar_8[1].y = tmpvar_7.y;
  tmpvar_8[1].z = tmpvar_2.y;
  tmpvar_8[2].x = tmpvar_6.z;
  tmpvar_8[2].y = tmpvar_7.z;
  tmpvar_8[2].z = tmpvar_2.z;
  highp vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_8 * (((_World2Object * tmpvar_10).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_5 = tmpvar_11;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _LightTexture0;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _Shininess;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_3 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (tmpvar_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_4 = tmpvar_12;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_14;
  tmpvar_14 = ((tmpvar_13.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_14;
  mediump vec3 tmpvar_15;
  tmpvar_15 = normalize(xlv_TEXCOORD1);
  lightDir_2 = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  lowp float atten_17;
  atten_17 = texture2D (_LightTexture0, vec2(tmpvar_16)).w;
  lowp vec4 c_18;
  highp float nh_19;
  lowp float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_4, lightDir_2));
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_4, normalize((lightDir_2 + normalize(xlv_TEXCOORD2)))));
  nh_19 = tmpvar_21;
  mediump float arg1_22;
  arg1_22 = (tmpvar_5 * 128.0);
  highp float tmpvar_23;
  tmpvar_23 = (pow (nh_19, arg1_22) * tmpvar_6);
  highp vec3 tmpvar_24;
  tmpvar_24 = ((((tmpvar_3 * _LightColor0.xyz) * tmpvar_20) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_23)) * (atten_17 * 2.0));
  c_18.xyz = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = (tmpvar_8.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_23) * atten_17));
  c_18.w = tmpvar_25;
  c_1.xyz = c_18.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "POINT" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_6 = tmpvar_1.xyz;
  tmpvar_7 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_8;
  tmpvar_8[0].x = tmpvar_6.x;
  tmpvar_8[0].y = tmpvar_7.x;
  tmpvar_8[0].z = tmpvar_2.x;
  tmpvar_8[1].x = tmpvar_6.y;
  tmpvar_8[1].y = tmpvar_7.y;
  tmpvar_8[1].z = tmpvar_2.y;
  tmpvar_8[2].x = tmpvar_6.z;
  tmpvar_8[2].y = tmpvar_7.z;
  tmpvar_8[2].z = tmpvar_2.z;
  highp vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_8 * (((_World2Object * tmpvar_10).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_5 = tmpvar_11;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _LightTexture0;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _Shininess;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_3 = tmpvar_10;
  lowp vec3 normal_11;
  normal_11.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_11.z = sqrt((1.0 - clamp (dot (normal_11.xy, normal_11.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (normal_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_4 = tmpvar_12;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_14;
  tmpvar_14 = ((tmpvar_13.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_14;
  mediump vec3 tmpvar_15;
  tmpvar_15 = normalize(xlv_TEXCOORD1);
  lightDir_2 = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  lowp float atten_17;
  atten_17 = texture2D (_LightTexture0, vec2(tmpvar_16)).w;
  lowp vec4 c_18;
  highp float nh_19;
  lowp float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_4, lightDir_2));
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_4, normalize((lightDir_2 + normalize(xlv_TEXCOORD2)))));
  nh_19 = tmpvar_21;
  mediump float arg1_22;
  arg1_22 = (tmpvar_5 * 128.0);
  highp float tmpvar_23;
  tmpvar_23 = (pow (nh_19, arg1_22) * tmpvar_6);
  highp vec3 tmpvar_24;
  tmpvar_24 = ((((tmpvar_3 * _LightColor0.xyz) * tmpvar_20) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_23)) * (atten_17 * 2.0));
  c_18.xyz = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = (tmpvar_8.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_23) * atten_17));
  c_18.w = tmpvar_25;
  c_1.xyz = c_18.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "POINT" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_6 = tmpvar_1.xyz;
  tmpvar_7 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_8;
  tmpvar_8[0].x = tmpvar_6.x;
  tmpvar_8[0].y = tmpvar_7.x;
  tmpvar_8[0].z = tmpvar_2.x;
  tmpvar_8[1].x = tmpvar_6.y;
  tmpvar_8[1].y = tmpvar_7.y;
  tmpvar_8[1].z = tmpvar_2.y;
  tmpvar_8[2].x = tmpvar_6.z;
  tmpvar_8[2].y = tmpvar_7.z;
  tmpvar_8[2].z = tmpvar_2.z;
  highp vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_8 * (((_World2Object * tmpvar_10).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_5 = tmpvar_11;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _LightTexture0;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _Shininess;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_3 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (tmpvar_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_4 = tmpvar_12;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_14;
  tmpvar_14 = ((tmpvar_13.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_14;
  mediump vec3 tmpvar_15;
  tmpvar_15 = normalize(xlv_TEXCOORD1);
  lightDir_2 = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  lowp float atten_17;
  atten_17 = texture (_LightTexture0, vec2(tmpvar_16)).w;
  lowp vec4 c_18;
  highp float nh_19;
  lowp float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_4, lightDir_2));
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_4, normalize((lightDir_2 + normalize(xlv_TEXCOORD2)))));
  nh_19 = tmpvar_21;
  mediump float arg1_22;
  arg1_22 = (tmpvar_5 * 128.0);
  highp float tmpvar_23;
  tmpvar_23 = (pow (nh_19, arg1_22) * tmpvar_6);
  highp vec3 tmpvar_24;
  tmpvar_24 = ((((tmpvar_3 * _LightColor0.xyz) * tmpvar_20) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_23)) * (atten_17 * 2.0));
  c_18.xyz = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = (tmpvar_8.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_23) * atten_17));
  c_18.w = tmpvar_25;
  c_1.xyz = c_18.xyz;
  c_1.w = 0.0;
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 26 math
Keywords { "DIRECTIONAL" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_World2Object]
Vector 9 [_WorldSpaceCameraPos]
Vector 10 [_WorldSpaceLightPos0]
Vector 11 [unity_Scale]
Vector 12 [_MainTex_ST]
Vector 13 [_Clouds_ST]
"!!ARBvp1.0
PARAM c[14] = { { 1 },
		state.matrix.mvp,
		program.local[5..13] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MOV R1.xyz, c[9];
MOV R1.w, c[0].x;
MOV R0.xyz, vertex.attrib[14];
DP4 R2.z, R1, c[7];
DP4 R2.y, R1, c[6];
DP4 R2.x, R1, c[5];
MAD R2.xyz, R2, c[11].w, -vertex.position;
MUL R1.xyz, vertex.normal.zxyw, R0.yzxw;
MAD R1.xyz, vertex.normal.yzxw, R0.zxyw, -R1;
MOV R0, c[10];
MUL R1.xyz, R1, vertex.attrib[14].w;
DP4 R3.z, R0, c[7];
DP4 R3.y, R0, c[6];
DP4 R3.x, R0, c[5];
DP3 result.texcoord[1].y, R3, R1;
DP3 result.texcoord[2].y, R1, R2;
DP3 result.texcoord[1].z, vertex.normal, R3;
DP3 result.texcoord[1].x, R3, vertex.attrib[14];
DP3 result.texcoord[2].z, vertex.normal, R2;
DP3 result.texcoord[2].x, vertex.attrib[14], R2;
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[13].xyxy, c[13];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[12], c[12].zwzw;
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 26 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 29 math
Keywords { "DIRECTIONAL" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_World2Object]
Vector 8 [_WorldSpaceCameraPos]
Vector 9 [_WorldSpaceLightPos0]
Vector 10 [unity_Scale]
Vector 11 [_MainTex_ST]
Vector 12 [_Clouds_ST]
"vs_2_0
def c13, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mov r0.w, c13.x
mov r0.xyz, c8
dp4 r1.z, r0, c6
dp4 r1.y, r0, c5
dp4 r1.x, r0, c4
mad r3.xyz, r1, c10.w, -v0
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r1.xyz, v2.yzxw, r0.zxyw, -r1
mul r2.xyz, r1, v1.w
mov r0, c6
dp4 r4.z, c9, r0
mov r0, c5
mov r1, c4
dp4 r4.y, c9, r0
dp4 r4.x, c9, r1
dp3 oT1.y, r4, r2
dp3 oT2.y, r2, r3
dp3 oT1.z, v2, r4
dp3 oT1.x, r4, v1
dp3 oT2.z, v2, r3
dp3 oT2.x, v1, r3
mad oT0.zw, v3.xyxy, c12.xyxy, c12
mad oT0.xy, v3, c11, c11.zwzw
dp4 oPos.w, v0, c3
dp4 oPos.z, v0, c2
dp4 oPos.y, v0, c1
dp4 oPos.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 24 math
Keywords { "DIRECTIONAL" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 128
Vector 96 [_MainTex_ST]
Vector 112 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0
eefiecededgefjbkkifamildajilkfiealcbefhoabaaaaaakeafaaaaadaaaaaa
cmaaaaaapeaaaaaahmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheoiaaaaaaaaeaaaaaa
aiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaheaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefc
caaeaaaaeaaaabaaaiabaaaafjaaaaaeegiocaaaaaaaaaaaaiaaaaaafjaaaaae
egiocaaaabaaaaaaafaaaaaafjaaaaaeegiocaaaacaaaaaaabaaaaaafjaaaaae
egiocaaaadaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaa
abaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaae
pccabaaaaaaaaaaaabaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaa
acaaaaaagfaaaaadhccabaaaadaaaaaagiaaaaacacaaaaaadiaaaaaipcaabaaa
aaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaaadaaaaaa
pgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaa
adaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaadcaaaaal
mccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaahaaaaaakgiocaaa
aaaaaaaaahaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaacgbjbaaa
acaaaaaadcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaa
egacbaiaebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaa
pgbpbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaacaaaaaaaaaaaaaa
egiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaa
baaaaaaaagiacaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaa
abaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaaegacbaaa
abaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabdaaaaaapgipcaaa
acaaaaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahcccabaaaacaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaaabaaaaaa
egacbaaaabaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaa
abaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaa
adaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabaaaaaaa
agiacaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaa
egiccaaaadaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaa
aaaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaadaaaaaabdaaaaaa
dcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaaadaaaaaabeaaaaaa
egbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaaadaaaaaaegacbaaaaaaaaaaa
egacbaaaabaaaaaabaaaaaahbccabaaaadaaaaaaegbcbaaaabaaaaaaegacbaaa
abaaaaaabaaaaaaheccabaaaadaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaa
doaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 24 math
Keywords { "DIRECTIONAL" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 128
Vector 96 [_MainTex_ST]
Vector 112 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0_level_9_1
eefiecedhidelnhidhhlcckofdohhjdbinciopfkabaaaaaaeaaiaaaaaeaaaaaa
daaaaaaamiacaaaapaagaaaaliahaaaaebgpgodjjaacaaaajaacaaaaaaacpopp
cmacaaaageaaaaaaafaaceaaaaaagaaaaaaagaaaaaaaceaaabaagaaaaaaaagaa
acaaabaaaaaaaaaaabaaaeaaabaaadaaaaaaaaaaacaaaaaaabaaaeaaaaaaaaaa
adaaaaaaaeaaafaaaaaaaaaaadaabaaaafaaajaaaaaaaaaaaaaaaaaaaaacpopp
bpaaaaacafaaaaiaaaaaapjabpaaaaacafaaabiaabaaapjabpaaaaacafaaacia
acaaapjabpaaaaacafaaadiaadaaapjaaeaaaaaeaaaaadoaadaaoejaabaaoeka
abaaookaaeaaaaaeaaaaamoaadaaeejaacaaeekaacaaoekaabaaaaacaaaaapia
aeaaoekaafaaaaadabaaahiaaaaaffiaakaaoekaaeaaaaaeabaaahiaajaaoeka
aaaaaaiaabaaoeiaaeaaaaaeaaaaahiaalaaoekaaaaakkiaabaaoeiaaeaaaaae
aaaaahiaamaaoekaaaaappiaaaaaoeiaaiaaaaadabaaaboaabaaoejaaaaaoeia
abaaaaacabaaahiaabaaoejaafaaaaadacaaahiaabaamjiaacaancjaaeaaaaae
abaaahiaacaamjjaabaanciaacaaoeibafaaaaadabaaahiaabaaoeiaabaappja
aiaaaaadabaaacoaabaaoeiaaaaaoeiaaiaaaaadabaaaeoaacaaoejaaaaaoeia
abaaaaacaaaaahiaadaaoekaafaaaaadacaaahiaaaaaffiaakaaoekaaeaaaaae
aaaaaliaajaakekaaaaaaaiaacaakeiaaeaaaaaeaaaaahiaalaaoekaaaaakkia
aaaapeiaacaaaaadaaaaahiaaaaaoeiaamaaoekaaeaaaaaeaaaaahiaaaaaoeia
anaappkaaaaaoejbaiaaaaadacaaaboaabaaoejaaaaaoeiaaiaaaaadacaaacoa
abaaoeiaaaaaoeiaaiaaaaadacaaaeoaacaaoejaaaaaoeiaafaaaaadaaaaapia
aaaaffjaagaaoekaaeaaaaaeaaaaapiaafaaoekaaaaaaajaaaaaoeiaaeaaaaae
aaaaapiaahaaoekaaaaakkjaaaaaoeiaaeaaaaaeaaaaapiaaiaaoekaaaaappja
aaaaoeiaaeaaaaaeaaaaadmaaaaappiaaaaaoekaaaaaoeiaabaaaaacaaaaamma
aaaaoeiappppaaaafdeieefccaaeaaaaeaaaabaaaiabaaaafjaaaaaeegiocaaa
aaaaaaaaaiaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaafjaaaaaeegiocaaa
acaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaabfaaaaaafpaaaaadpcbabaaa
aaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaad
dcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaadpccabaaa
abaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaagiaaaaac
acaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaa
abaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaa
acaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaa
egiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaal
dccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaa
aaaaaaaaagaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaa
aaaaaaaaahaaaaaakgiocaaaaaaaaaaaahaaaaaadiaaaaahhcaabaaaaaaaaaaa
jgbebaaaabaaaaaacgbjbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaajgbebaaa
acaaaaaacgbjbaaaabaaaaaaegacbaiaebaaaaaaaaaaaaaadiaaaaahhcaabaaa
aaaaaaaaegacbaaaaaaaaaaapgbpbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaa
fgifcaaaacaaaaaaaaaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaa
abaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaaacaaaaaaaaaaaaaaegacbaaa
abaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaa
acaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
adaaaaaabdaaaaaapgipcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaabaaaaaah
cccabaaaacaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaa
acaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaaacaaaaaa
egbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaa
abaaaaaaaeaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaa
egiccaaaadaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaa
dcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaabaaaaaa
aeaaaaaaegacbaaaabaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaa
egiccaaaadaaaaaabdaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaa
pgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaa
adaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaaadaaaaaa
egbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaaadaaaaaaegbcbaaa
acaaaaaaegacbaaaabaaaaaadoaaaaabejfdeheomaaaaaaaagaaaaaaaiaaaaaa
jiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
acaaaaaaahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaa
laaaaaaaabaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofe
aaeoepfcenebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheoiaaaaaaa
aeaaaaaaaiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaa
heaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaheaaaaaaabaaaaaa
aaaaaaaaadaaaaaaacaaaaaaahaiaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaa
adaaaaaaahaiaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl
"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_6 = tmpvar_1.xyz;
  tmpvar_7 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_8;
  tmpvar_8[0].x = tmpvar_6.x;
  tmpvar_8[0].y = tmpvar_7.x;
  tmpvar_8[0].z = tmpvar_2.x;
  tmpvar_8[1].x = tmpvar_6.y;
  tmpvar_8[1].y = tmpvar_7.y;
  tmpvar_8[1].z = tmpvar_2.y;
  tmpvar_8[2].x = tmpvar_6.z;
  tmpvar_8[2].y = tmpvar_7.z;
  tmpvar_8[2].z = tmpvar_2.z;
  highp vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_4 = tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_8 * (((_World2Object * tmpvar_10).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_5 = tmpvar_11;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _Shininess;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_3 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (tmpvar_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_4 = tmpvar_12;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_14;
  tmpvar_14 = ((tmpvar_13.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_14;
  lightDir_2 = xlv_TEXCOORD1;
  lowp vec4 c_15;
  highp float nh_16;
  lowp float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_4, lightDir_2));
  mediump float tmpvar_18;
  tmpvar_18 = max (0.0, dot (tmpvar_4, normalize((lightDir_2 + normalize(xlv_TEXCOORD2)))));
  nh_16 = tmpvar_18;
  mediump float arg1_19;
  arg1_19 = (tmpvar_5 * 128.0);
  highp float tmpvar_20;
  tmpvar_20 = (pow (nh_16, arg1_19) * tmpvar_6);
  highp vec3 tmpvar_21;
  tmpvar_21 = ((((tmpvar_3 * _LightColor0.xyz) * tmpvar_17) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_20)) * 2.0);
  c_15.xyz = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = (tmpvar_8.w + ((_LightColor0.w * _SpecColor.w) * tmpvar_20));
  c_15.w = tmpvar_22;
  c_1.xyz = c_15.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_6 = tmpvar_1.xyz;
  tmpvar_7 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_8;
  tmpvar_8[0].x = tmpvar_6.x;
  tmpvar_8[0].y = tmpvar_7.x;
  tmpvar_8[0].z = tmpvar_2.x;
  tmpvar_8[1].x = tmpvar_6.y;
  tmpvar_8[1].y = tmpvar_7.y;
  tmpvar_8[1].z = tmpvar_2.y;
  tmpvar_8[2].x = tmpvar_6.z;
  tmpvar_8[2].y = tmpvar_7.z;
  tmpvar_8[2].z = tmpvar_2.z;
  highp vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_4 = tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_8 * (((_World2Object * tmpvar_10).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_5 = tmpvar_11;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _Shininess;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_3 = tmpvar_10;
  lowp vec3 normal_11;
  normal_11.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_11.z = sqrt((1.0 - clamp (dot (normal_11.xy, normal_11.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (normal_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_4 = tmpvar_12;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_14;
  tmpvar_14 = ((tmpvar_13.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_14;
  lightDir_2 = xlv_TEXCOORD1;
  lowp vec4 c_15;
  highp float nh_16;
  lowp float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_4, lightDir_2));
  mediump float tmpvar_18;
  tmpvar_18 = max (0.0, dot (tmpvar_4, normalize((lightDir_2 + normalize(xlv_TEXCOORD2)))));
  nh_16 = tmpvar_18;
  mediump float arg1_19;
  arg1_19 = (tmpvar_5 * 128.0);
  highp float tmpvar_20;
  tmpvar_20 = (pow (nh_16, arg1_19) * tmpvar_6);
  highp vec3 tmpvar_21;
  tmpvar_21 = ((((tmpvar_3 * _LightColor0.xyz) * tmpvar_17) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_20)) * 2.0);
  c_15.xyz = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = (tmpvar_8.w + ((_LightColor0.w * _SpecColor.w) * tmpvar_20));
  c_15.w = tmpvar_22;
  c_1.xyz = c_15.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec3 xlv_TEXCOORD2;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_6 = tmpvar_1.xyz;
  tmpvar_7 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_8;
  tmpvar_8[0].x = tmpvar_6.x;
  tmpvar_8[0].y = tmpvar_7.x;
  tmpvar_8[0].z = tmpvar_2.x;
  tmpvar_8[1].x = tmpvar_6.y;
  tmpvar_8[1].y = tmpvar_7.y;
  tmpvar_8[1].z = tmpvar_2.y;
  tmpvar_8[2].x = tmpvar_6.z;
  tmpvar_8[2].y = tmpvar_7.z;
  tmpvar_8[2].z = tmpvar_2.z;
  highp vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_4 = tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_8 * (((_World2Object * tmpvar_10).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_5 = tmpvar_11;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _Shininess;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec3 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_3 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (tmpvar_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_4 = tmpvar_12;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_14;
  tmpvar_14 = ((tmpvar_13.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_14;
  lightDir_2 = xlv_TEXCOORD1;
  lowp vec4 c_15;
  highp float nh_16;
  lowp float tmpvar_17;
  tmpvar_17 = max (0.0, dot (tmpvar_4, lightDir_2));
  mediump float tmpvar_18;
  tmpvar_18 = max (0.0, dot (tmpvar_4, normalize((lightDir_2 + normalize(xlv_TEXCOORD2)))));
  nh_16 = tmpvar_18;
  mediump float arg1_19;
  arg1_19 = (tmpvar_5 * 128.0);
  highp float tmpvar_20;
  tmpvar_20 = (pow (nh_16, arg1_19) * tmpvar_6);
  highp vec3 tmpvar_21;
  tmpvar_21 = ((((tmpvar_3 * _LightColor0.xyz) * tmpvar_17) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_20)) * 2.0);
  c_15.xyz = tmpvar_21;
  highp float tmpvar_22;
  tmpvar_22 = (tmpvar_8.w + ((_LightColor0.w * _SpecColor.w) * tmpvar_20));
  c_15.w = tmpvar_22;
  c_1.xyz = c_15.xyz;
  c_1.w = 0.0;
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 35 math
Keywords { "SPOT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Matrix 13 [_LightMatrix0]
Vector 17 [_WorldSpaceCameraPos]
Vector 18 [_WorldSpaceLightPos0]
Vector 19 [unity_Scale]
Vector 20 [_MainTex_ST]
Vector 21 [_Clouds_ST]
"!!ARBvp1.0
PARAM c[22] = { { 1 },
		state.matrix.mvp,
		program.local[5..21] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MOV R1.xyz, c[17];
MOV R1.w, c[0].x;
MOV R0.xyz, vertex.attrib[14];
DP4 R2.z, R1, c[11];
DP4 R2.y, R1, c[10];
DP4 R2.x, R1, c[9];
MAD R2.xyz, R2, c[19].w, -vertex.position;
MUL R1.xyz, vertex.normal.zxyw, R0.yzxw;
MAD R1.xyz, vertex.normal.yzxw, R0.zxyw, -R1;
MOV R0, c[18];
MUL R1.xyz, R1, vertex.attrib[14].w;
DP4 R3.z, R0, c[11];
DP4 R3.x, R0, c[9];
DP4 R3.y, R0, c[10];
MAD R0.xyz, R3, c[19].w, -vertex.position;
DP4 R0.w, vertex.position, c[8];
DP3 result.texcoord[1].y, R0, R1;
DP3 result.texcoord[1].z, vertex.normal, R0;
DP3 result.texcoord[1].x, R0, vertex.attrib[14];
DP4 R0.z, vertex.position, c[7];
DP4 R0.x, vertex.position, c[5];
DP4 R0.y, vertex.position, c[6];
DP3 result.texcoord[2].y, R1, R2;
DP3 result.texcoord[2].z, vertex.normal, R2;
DP3 result.texcoord[2].x, vertex.attrib[14], R2;
DP4 result.texcoord[3].w, R0, c[16];
DP4 result.texcoord[3].z, R0, c[15];
DP4 result.texcoord[3].y, R0, c[14];
DP4 result.texcoord[3].x, R0, c[13];
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[21].xyxy, c[21];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[20], c[20].zwzw;
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 35 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 38 math
Keywords { "SPOT" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Matrix 12 [_LightMatrix0]
Vector 16 [_WorldSpaceCameraPos]
Vector 17 [_WorldSpaceLightPos0]
Vector 18 [unity_Scale]
Vector 19 [_MainTex_ST]
Vector 20 [_Clouds_ST]
"vs_2_0
def c21, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mov r0.w, c21.x
mov r0.xyz, c16
dp4 r1.z, r0, c10
dp4 r1.y, r0, c9
dp4 r1.x, r0, c8
mad r3.xyz, r1, c18.w, -v0
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r1.xyz, v2.yzxw, r0.zxyw, -r1
mul r2.xyz, r1, v1.w
mov r0, c10
dp4 r4.z, c17, r0
mov r0, c9
dp4 r4.y, c17, r0
mov r1, c8
dp4 r4.x, c17, r1
mad r0.xyz, r4, c18.w, -v0
dp4 r0.w, v0, c7
dp3 oT1.y, r0, r2
dp3 oT1.z, v2, r0
dp3 oT1.x, r0, v1
dp4 r0.z, v0, c6
dp4 r0.x, v0, c4
dp4 r0.y, v0, c5
dp3 oT2.y, r2, r3
dp3 oT2.z, v2, r3
dp3 oT2.x, v1, r3
dp4 oT3.w, r0, c15
dp4 oT3.z, r0, c14
dp4 oT3.y, r0, c13
dp4 oT3.x, r0, c12
mad oT0.zw, v3.xyxy, c20.xyxy, c20
mad oT0.xy, v3, c19, c19.zwzw
dp4 oPos.w, v0, c3
dp4 oPos.z, v0, c2
dp4 oPos.y, v0, c1
dp4 oPos.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 33 math
Keywords { "SPOT" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 192
Matrix 48 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0
eefiecedeepalmgddjbhgnfdapphknkckbdllhgdabaaaaaaceahaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefciiafaaaaeaaaabaa
gcabaaaafjaaaaaeegiocaaaaaaaaaaaamaaaaaafjaaaaaeegiocaaaabaaaaaa
afaaaaaafjaaaaaeegiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaad
hcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaad
hccabaaaadaaaaaagfaaaaadpccabaaaaeaaaaaagiaaaaacacaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaa
egbabaaaadaaaaaaegiacaaaaaaaaaaaakaaaaaaogikcaaaaaaaaaaaakaaaaaa
dcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaalaaaaaa
kgiocaaaaaaaaaaaalaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaa
cgbjbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaa
abaaaaaaegacbaiaebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaa
aaaaaaaapgbpbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaacaaaaaa
aaaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
adaaaaaabaaaaaaaagiacaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaal
hcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabdaaaaaa
pgipcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaa
egacbaaaabaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaa
baaaaaahcccabaaaacaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaah
bccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaa
acaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaa
fgifcaaaabaaaaaaaeaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaa
abaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaa
abaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaa
abaaaaaaaeaaaaaaegacbaaaabaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaa
abaaaaaaegiccaaaadaaaaaabdaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaa
abaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaah
cccabaaaadaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaa
adaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaaadaaaaaa
egbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaadaaaaaaanaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaadaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaafgafbaaaaaaaaaaaegiocaaa
aaaaaaaaaeaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaaaaaaaaaaadaaaaaa
agaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpcaabaaaabaaaaaaegiocaaa
aaaaaaaaafaaaaaakgakbaaaaaaaaaaaegaobaaaabaaaaaadcaaaaakpccabaaa
aeaaaaaaegiocaaaaaaaaaaaagaaaaaapgapbaaaaaaaaaaaegaobaaaabaaaaaa
doaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 33 math
Keywords { "SPOT" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 192
Matrix 48 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0_level_9_1
eefiecedgnhiabcolncfnabbjpdimnfmjdlpppdhabaaaaaahiakaaaaaeaaaaaa
daaaaaaaiaadaaaabaajaaaaniajaaaaebgpgodjeiadaaaaeiadaaaaaaacpopp
niacaaaahaaaaaaaagaaceaaaaaagmaaaaaagmaaaaaaceaaabaagmaaaaaaadaa
aeaaabaaaaaaaaaaaaaaakaaacaaafaaaaaaaaaaabaaaeaaabaaahaaaaaaaaaa
acaaaaaaabaaaiaaaaaaaaaaadaaaaaaaeaaajaaaaaaaaaaadaaamaaajaaanaa
aaaaaaaaaaaaaaaaaaacpoppbpaaaaacafaaaaiaaaaaapjabpaaaaacafaaabia
abaaapjabpaaaaacafaaaciaacaaapjabpaaaaacafaaadiaadaaapjaaeaaaaae
aaaaadoaadaaoejaafaaoekaafaaookaaeaaaaaeaaaaamoaadaaeejaagaaeeka
agaaoekaabaaaaacaaaaapiaaiaaoekaafaaaaadabaaahiaaaaaffiabcaaoeka
aeaaaaaeabaaahiabbaaoekaaaaaaaiaabaaoeiaaeaaaaaeaaaaahiabdaaoeka
aaaakkiaabaaoeiaaeaaaaaeaaaaahiabeaaoekaaaaappiaaaaaoeiaaeaaaaae
aaaaahiaaaaaoeiabfaappkaaaaaoejbaiaaaaadabaaaboaabaaoejaaaaaoeia
abaaaaacabaaahiaabaaoejaafaaaaadacaaahiaabaamjiaacaancjaaeaaaaae
abaaahiaacaamjjaabaanciaacaaoeibafaaaaadabaaahiaabaaoeiaabaappja
aiaaaaadabaaacoaabaaoeiaaaaaoeiaaiaaaaadabaaaeoaacaaoejaaaaaoeia
abaaaaacaaaaahiaahaaoekaafaaaaadacaaahiaaaaaffiabcaaoekaaeaaaaae
aaaaaliabbaakekaaaaaaaiaacaakeiaaeaaaaaeaaaaahiabdaaoekaaaaakkia
aaaapeiaacaaaaadaaaaahiaaaaaoeiabeaaoekaaeaaaaaeaaaaahiaaaaaoeia
bfaappkaaaaaoejbaiaaaaadacaaaboaabaaoejaaaaaoeiaaiaaaaadacaaacoa
abaaoeiaaaaaoeiaaiaaaaadacaaaeoaacaaoejaaaaaoeiaafaaaaadaaaaapia
aaaaffjaaoaaoekaaeaaaaaeaaaaapiaanaaoekaaaaaaajaaaaaoeiaaeaaaaae
aaaaapiaapaaoekaaaaakkjaaaaaoeiaaeaaaaaeaaaaapiabaaaoekaaaaappja
aaaaoeiaafaaaaadabaaapiaaaaaffiaacaaoekaaeaaaaaeabaaapiaabaaoeka
aaaaaaiaabaaoeiaaeaaaaaeabaaapiaadaaoekaaaaakkiaabaaoeiaaeaaaaae
adaaapoaaeaaoekaaaaappiaabaaoeiaafaaaaadaaaaapiaaaaaffjaakaaoeka
aeaaaaaeaaaaapiaajaaoekaaaaaaajaaaaaoeiaaeaaaaaeaaaaapiaalaaoeka
aaaakkjaaaaaoeiaaeaaaaaeaaaaapiaamaaoekaaaaappjaaaaaoeiaaeaaaaae
aaaaadmaaaaappiaaaaaoekaaaaaoeiaabaaaaacaaaaammaaaaaoeiappppaaaa
fdeieefciiafaaaaeaaaabaagcabaaaafjaaaaaeegiocaaaaaaaaaaaamaaaaaa
fjaaaaaeegiocaaaabaaaaaaafaaaaaafjaaaaaeegiocaaaacaaaaaaabaaaaaa
fjaaaaaeegiocaaaadaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaad
pcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaa
ghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaad
hccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaagfaaaaadpccabaaaaeaaaaaa
giaaaaacacaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaa
adaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaa
agbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaa
aaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaakaaaaaa
ogikcaaaaaaaaaaaakaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaa
agiecaaaaaaaaaaaalaaaaaakgiocaaaaaaaaaaaalaaaaaadiaaaaahhcaabaaa
aaaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaa
jgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaiaebaaaaaaaaaaaaaadiaaaaah
hcaabaaaaaaaaaaaegacbaaaaaaaaaaapgbpbaaaabaaaaaadiaaaaajhcaabaaa
abaaaaaafgifcaaaacaaaaaaaaaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaal
hcaabaaaabaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaaacaaaaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaa
kgikcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaa
egiccaaaadaaaaaabdaaaaaapgipcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaa
dcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaaadaaaaaabeaaaaaa
egbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaaacaaaaaaegacbaaaaaaaaaaa
egacbaaaabaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaa
abaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaa
diaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaaadaaaaaa
bbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaa
abaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
adaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaaaaaaaaai
hcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaadaaaaaabdaaaaaadcaaaaal
hcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaia
ebaaaaaaaaaaaaaabaaaaaahcccabaaaadaaaaaaegacbaaaaaaaaaaaegacbaaa
abaaaaaabaaaaaahbccabaaaadaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaa
baaaaaaheccabaaaadaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaanaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaoaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaa
apaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadiaaaaaipcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiocaaaaaaaaaaaaeaaaaaadcaaaaakpcaabaaaabaaaaaa
egiocaaaaaaaaaaaadaaaaaaagaabaaaaaaaaaaaegaobaaaabaaaaaadcaaaaak
pcaabaaaabaaaaaaegiocaaaaaaaaaaaafaaaaaakgakbaaaaaaaaaaaegaobaaa
abaaaaaadcaaaaakpccabaaaaeaaaaaaegiocaaaaaaaaaaaagaaaaaapgapbaaa
aaaaaaaaegaobaaaabaaaaaadoaaaaabejfdeheomaaaaaaaagaaaaaaaiaaaaaa
jiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
acaaaaaaahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaa
laaaaaaaabaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofe
aaeoepfcenebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaa
afaaaaaaaiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaa
imaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaa
aaaaaaaaadaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaa
adaaaaaaahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaa
fdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl"
}
SubProgram "gles " {
Keywords { "SPOT" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_6 = tmpvar_1.xyz;
  tmpvar_7 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_8;
  tmpvar_8[0].x = tmpvar_6.x;
  tmpvar_8[0].y = tmpvar_7.x;
  tmpvar_8[0].z = tmpvar_2.x;
  tmpvar_8[1].x = tmpvar_6.y;
  tmpvar_8[1].y = tmpvar_7.y;
  tmpvar_8[1].z = tmpvar_2.y;
  tmpvar_8[2].x = tmpvar_6.z;
  tmpvar_8[2].y = tmpvar_7.z;
  tmpvar_8[2].z = tmpvar_2.z;
  highp vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_8 * (((_World2Object * tmpvar_10).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_5 = tmpvar_11;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _Shininess;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_3 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (tmpvar_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_4 = tmpvar_12;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_14;
  tmpvar_14 = ((tmpvar_13.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_14;
  mediump vec3 tmpvar_15;
  tmpvar_15 = normalize(xlv_TEXCOORD1);
  lightDir_2 = tmpvar_15;
  highp vec2 P_16;
  P_16 = ((xlv_TEXCOORD3.xy / xlv_TEXCOORD3.w) + 0.5);
  highp float tmpvar_17;
  tmpvar_17 = dot (xlv_TEXCOORD3.xyz, xlv_TEXCOORD3.xyz);
  lowp float atten_18;
  atten_18 = ((float((xlv_TEXCOORD3.z > 0.0)) * texture2D (_LightTexture0, P_16).w) * texture2D (_LightTextureB0, vec2(tmpvar_17)).w);
  lowp vec4 c_19;
  highp float nh_20;
  lowp float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_4, lightDir_2));
  mediump float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_4, normalize((lightDir_2 + normalize(xlv_TEXCOORD2)))));
  nh_20 = tmpvar_22;
  mediump float arg1_23;
  arg1_23 = (tmpvar_5 * 128.0);
  highp float tmpvar_24;
  tmpvar_24 = (pow (nh_20, arg1_23) * tmpvar_6);
  highp vec3 tmpvar_25;
  tmpvar_25 = ((((tmpvar_3 * _LightColor0.xyz) * tmpvar_21) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_24)) * (atten_18 * 2.0));
  c_19.xyz = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = (tmpvar_8.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_24) * atten_18));
  c_19.w = tmpvar_26;
  c_1.xyz = c_19.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "SPOT" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_6 = tmpvar_1.xyz;
  tmpvar_7 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_8;
  tmpvar_8[0].x = tmpvar_6.x;
  tmpvar_8[0].y = tmpvar_7.x;
  tmpvar_8[0].z = tmpvar_2.x;
  tmpvar_8[1].x = tmpvar_6.y;
  tmpvar_8[1].y = tmpvar_7.y;
  tmpvar_8[1].z = tmpvar_2.y;
  tmpvar_8[2].x = tmpvar_6.z;
  tmpvar_8[2].y = tmpvar_7.z;
  tmpvar_8[2].z = tmpvar_2.z;
  highp vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_8 * (((_World2Object * tmpvar_10).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_5 = tmpvar_11;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _Shininess;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_3 = tmpvar_10;
  lowp vec3 normal_11;
  normal_11.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_11.z = sqrt((1.0 - clamp (dot (normal_11.xy, normal_11.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (normal_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_4 = tmpvar_12;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_14;
  tmpvar_14 = ((tmpvar_13.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_14;
  mediump vec3 tmpvar_15;
  tmpvar_15 = normalize(xlv_TEXCOORD1);
  lightDir_2 = tmpvar_15;
  highp vec2 P_16;
  P_16 = ((xlv_TEXCOORD3.xy / xlv_TEXCOORD3.w) + 0.5);
  highp float tmpvar_17;
  tmpvar_17 = dot (xlv_TEXCOORD3.xyz, xlv_TEXCOORD3.xyz);
  lowp float atten_18;
  atten_18 = ((float((xlv_TEXCOORD3.z > 0.0)) * texture2D (_LightTexture0, P_16).w) * texture2D (_LightTextureB0, vec2(tmpvar_17)).w);
  lowp vec4 c_19;
  highp float nh_20;
  lowp float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_4, lightDir_2));
  mediump float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_4, normalize((lightDir_2 + normalize(xlv_TEXCOORD2)))));
  nh_20 = tmpvar_22;
  mediump float arg1_23;
  arg1_23 = (tmpvar_5 * 128.0);
  highp float tmpvar_24;
  tmpvar_24 = (pow (nh_20, arg1_23) * tmpvar_6);
  highp vec3 tmpvar_25;
  tmpvar_25 = ((((tmpvar_3 * _LightColor0.xyz) * tmpvar_21) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_24)) * (atten_18 * 2.0));
  c_19.xyz = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = (tmpvar_8.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_24) * atten_18));
  c_19.w = tmpvar_26;
  c_1.xyz = c_19.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "SPOT" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec3 xlv_TEXCOORD2;
out highp vec4 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_6 = tmpvar_1.xyz;
  tmpvar_7 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_8;
  tmpvar_8[0].x = tmpvar_6.x;
  tmpvar_8[0].y = tmpvar_7.x;
  tmpvar_8[0].z = tmpvar_2.x;
  tmpvar_8[1].x = tmpvar_6.y;
  tmpvar_8[1].y = tmpvar_7.y;
  tmpvar_8[1].z = tmpvar_2.y;
  tmpvar_8[2].x = tmpvar_6.z;
  tmpvar_8[2].y = tmpvar_7.z;
  tmpvar_8[2].z = tmpvar_2.z;
  highp vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_8 * (((_World2Object * tmpvar_10).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_5 = tmpvar_11;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _Shininess;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec3 xlv_TEXCOORD2;
in highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_3 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (tmpvar_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_4 = tmpvar_12;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_14;
  tmpvar_14 = ((tmpvar_13.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_14;
  mediump vec3 tmpvar_15;
  tmpvar_15 = normalize(xlv_TEXCOORD1);
  lightDir_2 = tmpvar_15;
  highp vec2 P_16;
  P_16 = ((xlv_TEXCOORD3.xy / xlv_TEXCOORD3.w) + 0.5);
  highp float tmpvar_17;
  tmpvar_17 = dot (xlv_TEXCOORD3.xyz, xlv_TEXCOORD3.xyz);
  lowp float atten_18;
  atten_18 = ((float((xlv_TEXCOORD3.z > 0.0)) * texture (_LightTexture0, P_16).w) * texture (_LightTextureB0, vec2(tmpvar_17)).w);
  lowp vec4 c_19;
  highp float nh_20;
  lowp float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_4, lightDir_2));
  mediump float tmpvar_22;
  tmpvar_22 = max (0.0, dot (tmpvar_4, normalize((lightDir_2 + normalize(xlv_TEXCOORD2)))));
  nh_20 = tmpvar_22;
  mediump float arg1_23;
  arg1_23 = (tmpvar_5 * 128.0);
  highp float tmpvar_24;
  tmpvar_24 = (pow (nh_20, arg1_23) * tmpvar_6);
  highp vec3 tmpvar_25;
  tmpvar_25 = ((((tmpvar_3 * _LightColor0.xyz) * tmpvar_21) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_24)) * (atten_18 * 2.0));
  c_19.xyz = tmpvar_25;
  highp float tmpvar_26;
  tmpvar_26 = (tmpvar_8.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_24) * atten_18));
  c_19.w = tmpvar_26;
  c_1.xyz = c_19.xyz;
  c_1.w = 0.0;
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 34 math
Keywords { "POINT_COOKIE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Matrix 13 [_LightMatrix0]
Vector 17 [_WorldSpaceCameraPos]
Vector 18 [_WorldSpaceLightPos0]
Vector 19 [unity_Scale]
Vector 20 [_MainTex_ST]
Vector 21 [_Clouds_ST]
"!!ARBvp1.0
PARAM c[22] = { { 1 },
		state.matrix.mvp,
		program.local[5..21] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MOV R1.xyz, c[17];
MOV R1.w, c[0].x;
MOV R0.xyz, vertex.attrib[14];
DP4 R2.z, R1, c[11];
DP4 R2.y, R1, c[10];
DP4 R2.x, R1, c[9];
MAD R2.xyz, R2, c[19].w, -vertex.position;
MUL R1.xyz, vertex.normal.zxyw, R0.yzxw;
MAD R1.xyz, vertex.normal.yzxw, R0.zxyw, -R1;
MOV R0, c[18];
MUL R1.xyz, R1, vertex.attrib[14].w;
DP4 R3.z, R0, c[11];
DP4 R3.x, R0, c[9];
DP4 R3.y, R0, c[10];
MAD R0.xyz, R3, c[19].w, -vertex.position;
DP3 result.texcoord[1].y, R0, R1;
DP3 result.texcoord[1].z, vertex.normal, R0;
DP3 result.texcoord[1].x, R0, vertex.attrib[14];
DP4 R0.w, vertex.position, c[8];
DP4 R0.z, vertex.position, c[7];
DP4 R0.x, vertex.position, c[5];
DP4 R0.y, vertex.position, c[6];
DP3 result.texcoord[2].y, R1, R2;
DP3 result.texcoord[2].z, vertex.normal, R2;
DP3 result.texcoord[2].x, vertex.attrib[14], R2;
DP4 result.texcoord[3].z, R0, c[15];
DP4 result.texcoord[3].y, R0, c[14];
DP4 result.texcoord[3].x, R0, c[13];
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[21].xyxy, c[21];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[20], c[20].zwzw;
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 34 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 37 math
Keywords { "POINT_COOKIE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Matrix 12 [_LightMatrix0]
Vector 16 [_WorldSpaceCameraPos]
Vector 17 [_WorldSpaceLightPos0]
Vector 18 [unity_Scale]
Vector 19 [_MainTex_ST]
Vector 20 [_Clouds_ST]
"vs_2_0
def c21, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mov r0.w, c21.x
mov r0.xyz, c16
dp4 r1.z, r0, c10
dp4 r1.y, r0, c9
dp4 r1.x, r0, c8
mad r3.xyz, r1, c18.w, -v0
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r1.xyz, v2.yzxw, r0.zxyw, -r1
mul r2.xyz, r1, v1.w
mov r0, c10
dp4 r4.z, c17, r0
mov r0, c9
dp4 r4.y, c17, r0
mov r1, c8
dp4 r4.x, c17, r1
mad r0.xyz, r4, c18.w, -v0
dp3 oT1.y, r0, r2
dp3 oT1.z, v2, r0
dp3 oT1.x, r0, v1
dp4 r0.w, v0, c7
dp4 r0.z, v0, c6
dp4 r0.x, v0, c4
dp4 r0.y, v0, c5
dp3 oT2.y, r2, r3
dp3 oT2.z, v2, r3
dp3 oT2.x, v1, r3
dp4 oT3.z, r0, c14
dp4 oT3.y, r0, c13
dp4 oT3.x, r0, c12
mad oT0.zw, v3.xyxy, c20.xyxy, c20
mad oT0.xy, v3, c19, c19.zwzw
dp4 oPos.w, v0, c3
dp4 oPos.z, v0, c2
dp4 oPos.y, v0, c1
dp4 oPos.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 33 math
Keywords { "POINT_COOKIE" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 192
Matrix 48 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0
eefiecedgomfbnegpddfhmcimimafalhinaolgnhabaaaaaaceahaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefciiafaaaaeaaaabaa
gcabaaaafjaaaaaeegiocaaaaaaaaaaaamaaaaaafjaaaaaeegiocaaaabaaaaaa
afaaaaaafjaaaaaeegiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaad
hcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaad
hccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaagiaaaaacacaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaa
egbabaaaadaaaaaaegiacaaaaaaaaaaaakaaaaaaogikcaaaaaaaaaaaakaaaaaa
dcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaalaaaaaa
kgiocaaaaaaaaaaaalaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaa
cgbjbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaa
abaaaaaaegacbaiaebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaa
aaaaaaaapgbpbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaacaaaaaa
aaaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
adaaaaaabaaaaaaaagiacaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaal
hcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabdaaaaaa
pgipcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaa
egacbaaaabaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaa
baaaaaahcccabaaaacaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaah
bccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaa
acaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaa
fgifcaaaabaaaaaaaeaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaa
abaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaa
abaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaa
abaaaaaaaeaaaaaaegacbaaaabaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaa
abaaaaaaegiccaaaadaaaaaabdaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaa
abaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaah
cccabaaaadaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaa
adaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaaadaaaaaa
egbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaadaaaaaaanaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaadaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaaegiccaaa
aaaaaaaaaeaaaaaadcaaaaakhcaabaaaabaaaaaaegiccaaaaaaaaaaaadaaaaaa
agaabaaaaaaaaaaaegacbaaaabaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaa
aaaaaaaaafaaaaaakgakbaaaaaaaaaaaegacbaaaabaaaaaadcaaaaakhccabaaa
aeaaaaaaegiccaaaaaaaaaaaagaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaa
doaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 33 math
Keywords { "POINT_COOKIE" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 192
Matrix 48 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0_level_9_1
eefiecedoooijienlngbiijahoolihhilkbgbnilabaaaaaahiakaaaaaeaaaaaa
daaaaaaaiaadaaaabaajaaaaniajaaaaebgpgodjeiadaaaaeiadaaaaaaacpopp
niacaaaahaaaaaaaagaaceaaaaaagmaaaaaagmaaaaaaceaaabaagmaaaaaaadaa
aeaaabaaaaaaaaaaaaaaakaaacaaafaaaaaaaaaaabaaaeaaabaaahaaaaaaaaaa
acaaaaaaabaaaiaaaaaaaaaaadaaaaaaaeaaajaaaaaaaaaaadaaamaaajaaanaa
aaaaaaaaaaaaaaaaaaacpoppbpaaaaacafaaaaiaaaaaapjabpaaaaacafaaabia
abaaapjabpaaaaacafaaaciaacaaapjabpaaaaacafaaadiaadaaapjaaeaaaaae
aaaaadoaadaaoejaafaaoekaafaaookaaeaaaaaeaaaaamoaadaaeejaagaaeeka
agaaoekaabaaaaacaaaaapiaaiaaoekaafaaaaadabaaahiaaaaaffiabcaaoeka
aeaaaaaeabaaahiabbaaoekaaaaaaaiaabaaoeiaaeaaaaaeaaaaahiabdaaoeka
aaaakkiaabaaoeiaaeaaaaaeaaaaahiabeaaoekaaaaappiaaaaaoeiaaeaaaaae
aaaaahiaaaaaoeiabfaappkaaaaaoejbaiaaaaadabaaaboaabaaoejaaaaaoeia
abaaaaacabaaahiaabaaoejaafaaaaadacaaahiaabaamjiaacaancjaaeaaaaae
abaaahiaacaamjjaabaanciaacaaoeibafaaaaadabaaahiaabaaoeiaabaappja
aiaaaaadabaaacoaabaaoeiaaaaaoeiaaiaaaaadabaaaeoaacaaoejaaaaaoeia
abaaaaacaaaaahiaahaaoekaafaaaaadacaaahiaaaaaffiabcaaoekaaeaaaaae
aaaaaliabbaakekaaaaaaaiaacaakeiaaeaaaaaeaaaaahiabdaaoekaaaaakkia
aaaapeiaacaaaaadaaaaahiaaaaaoeiabeaaoekaaeaaaaaeaaaaahiaaaaaoeia
bfaappkaaaaaoejbaiaaaaadacaaaboaabaaoejaaaaaoeiaaiaaaaadacaaacoa
abaaoeiaaaaaoeiaaiaaaaadacaaaeoaacaaoejaaaaaoeiaafaaaaadaaaaapia
aaaaffjaaoaaoekaaeaaaaaeaaaaapiaanaaoekaaaaaaajaaaaaoeiaaeaaaaae
aaaaapiaapaaoekaaaaakkjaaaaaoeiaaeaaaaaeaaaaapiabaaaoekaaaaappja
aaaaoeiaafaaaaadabaaahiaaaaaffiaacaaoekaaeaaaaaeabaaahiaabaaoeka
aaaaaaiaabaaoeiaaeaaaaaeaaaaahiaadaaoekaaaaakkiaabaaoeiaaeaaaaae
adaaahoaaeaaoekaaaaappiaaaaaoeiaafaaaaadaaaaapiaaaaaffjaakaaoeka
aeaaaaaeaaaaapiaajaaoekaaaaaaajaaaaaoeiaaeaaaaaeaaaaapiaalaaoeka
aaaakkjaaaaaoeiaaeaaaaaeaaaaapiaamaaoekaaaaappjaaaaaoeiaaeaaaaae
aaaaadmaaaaappiaaaaaoekaaaaaoeiaabaaaaacaaaaammaaaaaoeiappppaaaa
fdeieefciiafaaaaeaaaabaagcabaaaafjaaaaaeegiocaaaaaaaaaaaamaaaaaa
fjaaaaaeegiocaaaabaaaaaaafaaaaaafjaaaaaeegiocaaaacaaaaaaabaaaaaa
fjaaaaaeegiocaaaadaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaad
pcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaa
ghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaad
hccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaa
giaaaaacacaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaa
adaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaa
agbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaa
aaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaakaaaaaa
ogikcaaaaaaaaaaaakaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaa
agiecaaaaaaaaaaaalaaaaaakgiocaaaaaaaaaaaalaaaaaadiaaaaahhcaabaaa
aaaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaa
jgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaiaebaaaaaaaaaaaaaadiaaaaah
hcaabaaaaaaaaaaaegacbaaaaaaaaaaapgbpbaaaabaaaaaadiaaaaajhcaabaaa
abaaaaaafgifcaaaacaaaaaaaaaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaal
hcaabaaaabaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaaacaaaaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaa
kgikcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaa
egiccaaaadaaaaaabdaaaaaapgipcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaa
dcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaaadaaaaaabeaaaaaa
egbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaaacaaaaaaegacbaaaaaaaaaaa
egacbaaaabaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaa
abaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaa
diaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaaadaaaaaa
bbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaa
abaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
adaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaaaaaaaaai
hcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaadaaaaaabdaaaaaadcaaaaal
hcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaia
ebaaaaaaaaaaaaaabaaaaaahcccabaaaadaaaaaaegacbaaaaaaaaaaaegacbaaa
abaaaaaabaaaaaahbccabaaaadaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaa
baaaaaaheccabaaaadaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaanaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaoaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaa
apaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadiaaaaaihcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiccaaaaaaaaaaaaeaaaaaadcaaaaakhcaabaaaabaaaaaa
egiccaaaaaaaaaaaadaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaadcaaaaak
hcaabaaaaaaaaaaaegiccaaaaaaaaaaaafaaaaaakgakbaaaaaaaaaaaegacbaaa
abaaaaaadcaaaaakhccabaaaaeaaaaaaegiccaaaaaaaaaaaagaaaaaapgapbaaa
aaaaaaaaegacbaaaaaaaaaaadoaaaaabejfdeheomaaaaaaaagaaaaaaaiaaaaaa
jiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
acaaaaaaahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaa
laaaaaaaabaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofe
aaeoepfcenebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaa
afaaaaaaaiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaa
imaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaa
aaaaaaaaadaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaa
adaaaaaaahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaa
fdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_6 = tmpvar_1.xyz;
  tmpvar_7 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_8;
  tmpvar_8[0].x = tmpvar_6.x;
  tmpvar_8[0].y = tmpvar_7.x;
  tmpvar_8[0].z = tmpvar_2.x;
  tmpvar_8[1].x = tmpvar_6.y;
  tmpvar_8[1].y = tmpvar_7.y;
  tmpvar_8[1].z = tmpvar_2.y;
  tmpvar_8[2].x = tmpvar_6.z;
  tmpvar_8[2].y = tmpvar_7.z;
  tmpvar_8[2].z = tmpvar_2.z;
  highp vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_8 * (((_World2Object * tmpvar_10).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_5 = tmpvar_11;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform lowp samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _Shininess;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_3 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (tmpvar_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_4 = tmpvar_12;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_14;
  tmpvar_14 = ((tmpvar_13.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_14;
  mediump vec3 tmpvar_15;
  tmpvar_15 = normalize(xlv_TEXCOORD1);
  lightDir_2 = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  lowp float atten_17;
  atten_17 = (texture2D (_LightTextureB0, vec2(tmpvar_16)).w * textureCube (_LightTexture0, xlv_TEXCOORD3).w);
  lowp vec4 c_18;
  highp float nh_19;
  lowp float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_4, lightDir_2));
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_4, normalize((lightDir_2 + normalize(xlv_TEXCOORD2)))));
  nh_19 = tmpvar_21;
  mediump float arg1_22;
  arg1_22 = (tmpvar_5 * 128.0);
  highp float tmpvar_23;
  tmpvar_23 = (pow (nh_19, arg1_22) * tmpvar_6);
  highp vec3 tmpvar_24;
  tmpvar_24 = ((((tmpvar_3 * _LightColor0.xyz) * tmpvar_20) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_23)) * (atten_17 * 2.0));
  c_18.xyz = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = (tmpvar_8.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_23) * atten_17));
  c_18.w = tmpvar_25;
  c_1.xyz = c_18.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "POINT_COOKIE" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_6 = tmpvar_1.xyz;
  tmpvar_7 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_8;
  tmpvar_8[0].x = tmpvar_6.x;
  tmpvar_8[0].y = tmpvar_7.x;
  tmpvar_8[0].z = tmpvar_2.x;
  tmpvar_8[1].x = tmpvar_6.y;
  tmpvar_8[1].y = tmpvar_7.y;
  tmpvar_8[1].z = tmpvar_2.y;
  tmpvar_8[2].x = tmpvar_6.z;
  tmpvar_8[2].y = tmpvar_7.z;
  tmpvar_8[2].z = tmpvar_2.z;
  highp vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_8 * (((_World2Object * tmpvar_10).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_5 = tmpvar_11;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform lowp samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _Shininess;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_3 = tmpvar_10;
  lowp vec3 normal_11;
  normal_11.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_11.z = sqrt((1.0 - clamp (dot (normal_11.xy, normal_11.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (normal_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_4 = tmpvar_12;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_14;
  tmpvar_14 = ((tmpvar_13.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_14;
  mediump vec3 tmpvar_15;
  tmpvar_15 = normalize(xlv_TEXCOORD1);
  lightDir_2 = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  lowp float atten_17;
  atten_17 = (texture2D (_LightTextureB0, vec2(tmpvar_16)).w * textureCube (_LightTexture0, xlv_TEXCOORD3).w);
  lowp vec4 c_18;
  highp float nh_19;
  lowp float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_4, lightDir_2));
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_4, normalize((lightDir_2 + normalize(xlv_TEXCOORD2)))));
  nh_19 = tmpvar_21;
  mediump float arg1_22;
  arg1_22 = (tmpvar_5 * 128.0);
  highp float tmpvar_23;
  tmpvar_23 = (pow (nh_19, arg1_22) * tmpvar_6);
  highp vec3 tmpvar_24;
  tmpvar_24 = ((((tmpvar_3 * _LightColor0.xyz) * tmpvar_20) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_23)) * (atten_17 * 2.0));
  c_18.xyz = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = (tmpvar_8.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_23) * atten_17));
  c_18.w = tmpvar_25;
  c_1.xyz = c_18.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_6 = tmpvar_1.xyz;
  tmpvar_7 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_8;
  tmpvar_8[0].x = tmpvar_6.x;
  tmpvar_8[0].y = tmpvar_7.x;
  tmpvar_8[0].z = tmpvar_2.x;
  tmpvar_8[1].x = tmpvar_6.y;
  tmpvar_8[1].y = tmpvar_7.y;
  tmpvar_8[1].z = tmpvar_2.y;
  tmpvar_8[2].x = tmpvar_6.z;
  tmpvar_8[2].y = tmpvar_7.z;
  tmpvar_8[2].z = tmpvar_2.z;
  highp vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * (((_World2Object * _WorldSpaceLightPos0).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_4 = tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_8 * (((_World2Object * tmpvar_10).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_5 = tmpvar_11;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xyz;
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform lowp samplerCube _LightTexture0;
uniform sampler2D _LightTextureB0;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _Shininess;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_3 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (tmpvar_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_4 = tmpvar_12;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_14;
  tmpvar_14 = ((tmpvar_13.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_14;
  mediump vec3 tmpvar_15;
  tmpvar_15 = normalize(xlv_TEXCOORD1);
  lightDir_2 = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (xlv_TEXCOORD3, xlv_TEXCOORD3);
  lowp float atten_17;
  atten_17 = (texture (_LightTextureB0, vec2(tmpvar_16)).w * texture (_LightTexture0, xlv_TEXCOORD3).w);
  lowp vec4 c_18;
  highp float nh_19;
  lowp float tmpvar_20;
  tmpvar_20 = max (0.0, dot (tmpvar_4, lightDir_2));
  mediump float tmpvar_21;
  tmpvar_21 = max (0.0, dot (tmpvar_4, normalize((lightDir_2 + normalize(xlv_TEXCOORD2)))));
  nh_19 = tmpvar_21;
  mediump float arg1_22;
  arg1_22 = (tmpvar_5 * 128.0);
  highp float tmpvar_23;
  tmpvar_23 = (pow (nh_19, arg1_22) * tmpvar_6);
  highp vec3 tmpvar_24;
  tmpvar_24 = ((((tmpvar_3 * _LightColor0.xyz) * tmpvar_20) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_23)) * (atten_17 * 2.0));
  c_18.xyz = tmpvar_24;
  highp float tmpvar_25;
  tmpvar_25 = (tmpvar_8.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_23) * atten_17));
  c_18.w = tmpvar_25;
  c_1.xyz = c_18.xyz;
  c_1.w = 0.0;
  _glesFragData[0] = c_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 32 math
Keywords { "DIRECTIONAL_COOKIE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Matrix 9 [_World2Object]
Matrix 13 [_LightMatrix0]
Vector 17 [_WorldSpaceCameraPos]
Vector 18 [_WorldSpaceLightPos0]
Vector 19 [unity_Scale]
Vector 20 [_MainTex_ST]
Vector 21 [_Clouds_ST]
"!!ARBvp1.0
PARAM c[22] = { { 1 },
		state.matrix.mvp,
		program.local[5..21] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MOV R1.xyz, c[17];
MOV R1.w, c[0].x;
MOV R0.xyz, vertex.attrib[14];
DP4 R2.z, R1, c[11];
DP4 R2.y, R1, c[10];
DP4 R2.x, R1, c[9];
MAD R2.xyz, R2, c[19].w, -vertex.position;
MUL R1.xyz, vertex.normal.zxyw, R0.yzxw;
MAD R1.xyz, vertex.normal.yzxw, R0.zxyw, -R1;
MOV R0, c[18];
MUL R1.xyz, R1, vertex.attrib[14].w;
DP4 R3.z, R0, c[11];
DP4 R3.y, R0, c[10];
DP4 R3.x, R0, c[9];
DP4 R0.w, vertex.position, c[8];
DP4 R0.z, vertex.position, c[7];
DP4 R0.x, vertex.position, c[5];
DP4 R0.y, vertex.position, c[6];
DP3 result.texcoord[1].y, R3, R1;
DP3 result.texcoord[2].y, R1, R2;
DP3 result.texcoord[1].z, vertex.normal, R3;
DP3 result.texcoord[1].x, R3, vertex.attrib[14];
DP3 result.texcoord[2].z, vertex.normal, R2;
DP3 result.texcoord[2].x, vertex.attrib[14], R2;
DP4 result.texcoord[3].y, R0, c[14];
DP4 result.texcoord[3].x, R0, c[13];
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[21].xyxy, c[21];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[20], c[20].zwzw;
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 32 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 35 math
Keywords { "DIRECTIONAL_COOKIE" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Matrix 8 [_World2Object]
Matrix 12 [_LightMatrix0]
Vector 16 [_WorldSpaceCameraPos]
Vector 17 [_WorldSpaceLightPos0]
Vector 18 [unity_Scale]
Vector 19 [_MainTex_ST]
Vector 20 [_Clouds_ST]
"vs_2_0
def c21, 1.00000000, 0, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mov r0.w, c21.x
mov r0.xyz, c16
dp4 r1.z, r0, c10
dp4 r1.y, r0, c9
dp4 r1.x, r0, c8
mad r3.xyz, r1, c18.w, -v0
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r1.xyz, v2.yzxw, r0.zxyw, -r1
mul r2.xyz, r1, v1.w
mov r0, c10
dp4 r4.z, c17, r0
mov r0, c9
dp4 r4.y, c17, r0
mov r1, c8
dp4 r4.x, c17, r1
dp4 r0.w, v0, c7
dp4 r0.z, v0, c6
dp4 r0.x, v0, c4
dp4 r0.y, v0, c5
dp3 oT1.y, r4, r2
dp3 oT2.y, r2, r3
dp3 oT1.z, v2, r4
dp3 oT1.x, r4, v1
dp3 oT2.z, v2, r3
dp3 oT2.x, v1, r3
dp4 oT3.y, r0, c13
dp4 oT3.x, r0, c12
mad oT0.zw, v3.xyxy, c20.xyxy, c20
mad oT0.xy, v3, c19, c19.zwzw
dp4 oPos.w, v0, c3
dp4 oPos.z, v0, c2
dp4 oPos.y, v0, c1
dp4 oPos.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 32 math
Keywords { "DIRECTIONAL_COOKIE" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 192
Matrix 48 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0
eefiecedcgdenkaijkmggdkhopkegkmojjjnjeppabaaaaaapiagaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaadamaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcfmafaaaaeaaaabaa
fhabaaaafjaaaaaeegiocaaaaaaaaaaaamaaaaaafjaaaaaeegiocaaaabaaaaaa
afaaaaaafjaaaaaeegiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaad
hcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaad
hccabaaaadaaaaaagfaaaaaddccabaaaaeaaaaaagiaaaaacacaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaa
egbabaaaadaaaaaaegiacaaaaaaaaaaaakaaaaaaogikcaaaaaaaaaaaakaaaaaa
dcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaalaaaaaa
kgiocaaaaaaaaaaaalaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaa
cgbjbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaa
abaaaaaaegacbaiaebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaa
aaaaaaaapgbpbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaacaaaaaa
aaaaaaaaegiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
adaaaaaabaaaaaaaagiacaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaal
hcaabaaaabaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaa
egacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabdaaaaaa
pgipcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahcccabaaaacaaaaaa
egacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaa
abaaaaaaegacbaaaabaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaa
egacbaaaabaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaaaeaaaaaa
egiccaaaadaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaa
baaaaaaaagiacaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaa
abaaaaaaegiccaaaadaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaa
abaaaaaaaaaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaadaaaaaa
bdaaaaaadcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaaadaaaaaa
beaaaaaaegbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaaadaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaabaaaaaahbccabaaaadaaaaaaegbcbaaaabaaaaaa
egacbaaaabaaaaaabaaaaaaheccabaaaadaaaaaaegbcbaaaacaaaaaaegacbaaa
abaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaa
anaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaamaaaaaaagbabaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaa
aoaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaa
egiocaaaadaaaaaaapaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadiaaaaai
dcaabaaaabaaaaaafgafbaaaaaaaaaaaegiacaaaaaaaaaaaaeaaaaaadcaaaaak
dcaabaaaaaaaaaaaegiacaaaaaaaaaaaadaaaaaaagaabaaaaaaaaaaaegaabaaa
abaaaaaadcaaaaakdcaabaaaaaaaaaaaegiacaaaaaaaaaaaafaaaaaakgakbaaa
aaaaaaaaegaabaaaaaaaaaaadcaaaaakdccabaaaaeaaaaaaegiacaaaaaaaaaaa
agaaaaaapgapbaaaaaaaaaaaegaabaaaaaaaaaaadoaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 32 math
Keywords { "DIRECTIONAL_COOKIE" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 192
Matrix 48 [_LightMatrix0]
Vector 160 [_MainTex_ST]
Vector 176 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
ConstBuffer "UnityLighting" 720
Vector 0 [_WorldSpaceLightPos0]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0_level_9_1
eefiecedodkjhpiampnoldjfpdimbdofngogmaglabaaaaaadiakaaaaaeaaaaaa
daaaaaaagmadaaaanaaiaaaajiajaaaaebgpgodjdeadaaaadeadaaaaaaacpopp
meacaaaahaaaaaaaagaaceaaaaaagmaaaaaagmaaaaaaceaaabaagmaaaaaaadaa
aeaaabaaaaaaaaaaaaaaakaaacaaafaaaaaaaaaaabaaaeaaabaaahaaaaaaaaaa
acaaaaaaabaaaiaaaaaaaaaaadaaaaaaaeaaajaaaaaaaaaaadaaamaaajaaanaa
aaaaaaaaaaaaaaaaaaacpoppbpaaaaacafaaaaiaaaaaapjabpaaaaacafaaabia
abaaapjabpaaaaacafaaaciaacaaapjabpaaaaacafaaadiaadaaapjaaeaaaaae
aaaaadoaadaaoejaafaaoekaafaaookaaeaaaaaeaaaaamoaadaaeejaagaaeeka
agaaoekaabaaaaacaaaaapiaaiaaoekaafaaaaadabaaahiaaaaaffiabcaaoeka
aeaaaaaeabaaahiabbaaoekaaaaaaaiaabaaoeiaaeaaaaaeaaaaahiabdaaoeka
aaaakkiaabaaoeiaaeaaaaaeaaaaahiabeaaoekaaaaappiaaaaaoeiaaiaaaaad
abaaaboaabaaoejaaaaaoeiaabaaaaacabaaahiaabaaoejaafaaaaadacaaahia
abaamjiaacaancjaaeaaaaaeabaaahiaacaamjjaabaanciaacaaoeibafaaaaad
abaaahiaabaaoeiaabaappjaaiaaaaadabaaacoaabaaoeiaaaaaoeiaaiaaaaad
abaaaeoaacaaoejaaaaaoeiaabaaaaacaaaaahiaahaaoekaafaaaaadacaaahia
aaaaffiabcaaoekaaeaaaaaeaaaaaliabbaakekaaaaaaaiaacaakeiaaeaaaaae
aaaaahiabdaaoekaaaaakkiaaaaapeiaacaaaaadaaaaahiaaaaaoeiabeaaoeka
aeaaaaaeaaaaahiaaaaaoeiabfaappkaaaaaoejbaiaaaaadacaaaboaabaaoeja
aaaaoeiaaiaaaaadacaaacoaabaaoeiaaaaaoeiaaiaaaaadacaaaeoaacaaoeja
aaaaoeiaafaaaaadaaaaapiaaaaaffjaaoaaoekaaeaaaaaeaaaaapiaanaaoeka
aaaaaajaaaaaoeiaaeaaaaaeaaaaapiaapaaoekaaaaakkjaaaaaoeiaaeaaaaae
aaaaapiabaaaoekaaaaappjaaaaaoeiaafaaaaadabaaadiaaaaaffiaacaaoeka
aeaaaaaeaaaaadiaabaaoekaaaaaaaiaabaaoeiaaeaaaaaeaaaaadiaadaaoeka
aaaakkiaaaaaoeiaaeaaaaaeadaaadoaaeaaoekaaaaappiaaaaaoeiaafaaaaad
aaaaapiaaaaaffjaakaaoekaaeaaaaaeaaaaapiaajaaoekaaaaaaajaaaaaoeia
aeaaaaaeaaaaapiaalaaoekaaaaakkjaaaaaoeiaaeaaaaaeaaaaapiaamaaoeka
aaaappjaaaaaoeiaaeaaaaaeaaaaadmaaaaappiaaaaaoekaaaaaoeiaabaaaaac
aaaaammaaaaaoeiappppaaaafdeieefcfmafaaaaeaaaabaafhabaaaafjaaaaae
egiocaaaaaaaaaaaamaaaaaafjaaaaaeegiocaaaabaaaaaaafaaaaaafjaaaaae
egiocaaaacaaaaaaabaaaaaafjaaaaaeegiocaaaadaaaaaabfaaaaaafpaaaaad
pcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaa
fpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaad
pccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaa
gfaaaaaddccabaaaaeaaaaaagiaaaaacacaaaaaadiaaaaaipcaabaaaaaaaaaaa
fgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaa
egiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaa
egiacaaaaaaaaaaaakaaaaaaogikcaaaaaaaaaaaakaaaaaadcaaaaalmccabaaa
abaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaalaaaaaakgiocaaaaaaaaaaa
alaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaa
dcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaia
ebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaapgbpbaaa
abaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaacaaaaaaaaaaaaaaegiccaaa
adaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabaaaaaaa
agiacaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaa
egiccaaaadaaaaaabcaaaaaakgikcaaaacaaaaaaaaaaaaaaegacbaaaabaaaaaa
dcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabdaaaaaapgipcaaaacaaaaaa
aaaaaaaaegacbaaaabaaaaaabaaaaaahcccabaaaacaaaaaaegacbaaaaaaaaaaa
egacbaaaabaaaaaabaaaaaahbccabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaa
abaaaaaabaaaaaaheccabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaa
diaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaaadaaaaaa
bbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaadaaaaaabaaaaaaaagiacaaa
abaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
adaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaaaaaaaaai
hcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaadaaaaaabdaaaaaadcaaaaal
hcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaaadaaaaaabeaaaaaaegbcbaia
ebaaaaaaaaaaaaaabaaaaaahcccabaaaadaaaaaaegacbaaaaaaaaaaaegacbaaa
abaaaaaabaaaaaahbccabaaaadaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaa
baaaaaaheccabaaaadaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaadaaaaaaanaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaoaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaa
apaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadiaaaaaidcaabaaaabaaaaaa
fgafbaaaaaaaaaaaegiacaaaaaaaaaaaaeaaaaaadcaaaaakdcaabaaaaaaaaaaa
egiacaaaaaaaaaaaadaaaaaaagaabaaaaaaaaaaaegaabaaaabaaaaaadcaaaaak
dcaabaaaaaaaaaaaegiacaaaaaaaaaaaafaaaaaakgakbaaaaaaaaaaaegaabaaa
aaaaaaaadcaaaaakdccabaaaaeaaaaaaegiacaaaaaaaaaaaagaaaaaapgapbaaa
aaaaaaaaegaabaaaaaaaaaaadoaaaaabejfdeheomaaaaaaaagaaaaaaaiaaaaaa
jiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
acaaaaaaahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaa
laaaaaaaabaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofe
aaeoepfcenebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaa
afaaaaaaaiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaa
imaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaa
aaaaaaaaadaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaa
adaaaaaaahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaadamaaaa
fdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_6 = tmpvar_1.xyz;
  tmpvar_7 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_8;
  tmpvar_8[0].x = tmpvar_6.x;
  tmpvar_8[0].y = tmpvar_7.x;
  tmpvar_8[0].z = tmpvar_2.x;
  tmpvar_8[1].x = tmpvar_6.y;
  tmpvar_8[1].y = tmpvar_7.y;
  tmpvar_8[1].z = tmpvar_2.y;
  tmpvar_8[2].x = tmpvar_6.z;
  tmpvar_8[2].y = tmpvar_7.z;
  tmpvar_8[2].z = tmpvar_2.z;
  highp vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_4 = tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_8 * (((_World2Object * tmpvar_10).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_5 = tmpvar_11;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xy;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _LightTexture0;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _Shininess;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_3 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (tmpvar_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_4 = tmpvar_12;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_14;
  tmpvar_14 = ((tmpvar_13.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_14;
  lightDir_2 = xlv_TEXCOORD1;
  lowp float atten_15;
  atten_15 = texture2D (_LightTexture0, xlv_TEXCOORD3).w;
  lowp vec4 c_16;
  highp float nh_17;
  lowp float tmpvar_18;
  tmpvar_18 = max (0.0, dot (tmpvar_4, lightDir_2));
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_4, normalize((lightDir_2 + normalize(xlv_TEXCOORD2)))));
  nh_17 = tmpvar_19;
  mediump float arg1_20;
  arg1_20 = (tmpvar_5 * 128.0);
  highp float tmpvar_21;
  tmpvar_21 = (pow (nh_17, arg1_20) * tmpvar_6);
  highp vec3 tmpvar_22;
  tmpvar_22 = ((((tmpvar_3 * _LightColor0.xyz) * tmpvar_18) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_21)) * (atten_15 * 2.0));
  c_16.xyz = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = (tmpvar_8.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_21) * atten_15));
  c_16.w = tmpvar_23;
  c_1.xyz = c_16.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL_COOKIE" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_6 = tmpvar_1.xyz;
  tmpvar_7 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_8;
  tmpvar_8[0].x = tmpvar_6.x;
  tmpvar_8[0].y = tmpvar_7.x;
  tmpvar_8[0].z = tmpvar_2.x;
  tmpvar_8[1].x = tmpvar_6.y;
  tmpvar_8[1].y = tmpvar_7.y;
  tmpvar_8[1].z = tmpvar_2.y;
  tmpvar_8[2].x = tmpvar_6.z;
  tmpvar_8[2].y = tmpvar_7.z;
  tmpvar_8[2].z = tmpvar_2.z;
  highp vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_4 = tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_8 * (((_World2Object * tmpvar_10).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_5 = tmpvar_11;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xy;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _LightTexture0;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _Shininess;
varying highp vec4 xlv_TEXCOORD0;
varying mediump vec3 xlv_TEXCOORD1;
varying mediump vec3 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_3 = tmpvar_10;
  lowp vec3 normal_11;
  normal_11.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_11.z = sqrt((1.0 - clamp (dot (normal_11.xy, normal_11.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (normal_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_4 = tmpvar_12;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_14;
  tmpvar_14 = ((tmpvar_13.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_14;
  lightDir_2 = xlv_TEXCOORD1;
  lowp float atten_15;
  atten_15 = texture2D (_LightTexture0, xlv_TEXCOORD3).w;
  lowp vec4 c_16;
  highp float nh_17;
  lowp float tmpvar_18;
  tmpvar_18 = max (0.0, dot (tmpvar_4, lightDir_2));
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_4, normalize((lightDir_2 + normalize(xlv_TEXCOORD2)))));
  nh_17 = tmpvar_19;
  mediump float arg1_20;
  arg1_20 = (tmpvar_5 * 128.0);
  highp float tmpvar_21;
  tmpvar_21 = (pow (nh_17, arg1_20) * tmpvar_6);
  highp vec3 tmpvar_22;
  tmpvar_22 = ((((tmpvar_3 * _LightColor0.xyz) * tmpvar_18) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_21)) * (atten_15 * 2.0));
  c_16.xyz = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = (tmpvar_8.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_21) * atten_15));
  c_16.w = tmpvar_23;
  c_1.xyz = c_16.xyz;
  c_1.w = 0.0;
  gl_FragData[0] = c_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform lowp vec4 _WorldSpaceLightPos0;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 _LightMatrix0;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out mediump vec3 xlv_TEXCOORD1;
out mediump vec3 xlv_TEXCOORD2;
out highp vec2 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  mediump vec3 tmpvar_4;
  mediump vec3 tmpvar_5;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_6;
  highp vec3 tmpvar_7;
  tmpvar_6 = tmpvar_1.xyz;
  tmpvar_7 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_8;
  tmpvar_8[0].x = tmpvar_6.x;
  tmpvar_8[0].y = tmpvar_7.x;
  tmpvar_8[0].z = tmpvar_2.x;
  tmpvar_8[1].x = tmpvar_6.y;
  tmpvar_8[1].y = tmpvar_7.y;
  tmpvar_8[1].z = tmpvar_2.y;
  tmpvar_8[2].x = tmpvar_6.z;
  tmpvar_8[2].y = tmpvar_7.z;
  tmpvar_8[2].z = tmpvar_2.z;
  highp vec3 tmpvar_9;
  tmpvar_9 = (tmpvar_8 * (_World2Object * _WorldSpaceLightPos0).xyz);
  tmpvar_4 = tmpvar_9;
  highp vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = _WorldSpaceCameraPos;
  highp vec3 tmpvar_11;
  tmpvar_11 = (tmpvar_8 * (((_World2Object * tmpvar_10).xyz * unity_Scale.w) - _glesVertex.xyz));
  tmpvar_5 = tmpvar_11;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = tmpvar_4;
  xlv_TEXCOORD2 = tmpvar_5;
  xlv_TEXCOORD3 = (_LightMatrix0 * (_Object2World * _glesVertex)).xy;
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform lowp vec4 _LightColor0;
uniform lowp vec4 _SpecColor;
uniform sampler2D _LightTexture0;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _Shininess;
in highp vec4 xlv_TEXCOORD0;
in mediump vec3 xlv_TEXCOORD1;
in mediump vec3 xlv_TEXCOORD2;
in highp vec2 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 c_1;
  lowp vec3 lightDir_2;
  lowp vec3 tmpvar_3;
  lowp vec3 tmpvar_4;
  mediump float tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_3 = tmpvar_10;
  lowp vec3 tmpvar_11;
  tmpvar_11 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_12;
  tmpvar_12 = mix (tmpvar_11, vec3(0.0, 0.0, 1.0), clouds_7);
  tmpvar_4 = tmpvar_12;
  tmpvar_5 = _Shininess;
  lowp vec4 tmpvar_13;
  tmpvar_13 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_14;
  tmpvar_14 = ((tmpvar_13.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_14;
  lightDir_2 = xlv_TEXCOORD1;
  lowp float atten_15;
  atten_15 = texture (_LightTexture0, xlv_TEXCOORD3).w;
  lowp vec4 c_16;
  highp float nh_17;
  lowp float tmpvar_18;
  tmpvar_18 = max (0.0, dot (tmpvar_4, lightDir_2));
  mediump float tmpvar_19;
  tmpvar_19 = max (0.0, dot (tmpvar_4, normalize((lightDir_2 + normalize(xlv_TEXCOORD2)))));
  nh_17 = tmpvar_19;
  mediump float arg1_20;
  arg1_20 = (tmpvar_5 * 128.0);
  highp float tmpvar_21;
  tmpvar_21 = (pow (nh_17, arg1_20) * tmpvar_6);
  highp vec3 tmpvar_22;
  tmpvar_22 = ((((tmpvar_3 * _LightColor0.xyz) * tmpvar_18) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_21)) * (atten_15 * 2.0));
  c_16.xyz = tmpvar_22;
  highp float tmpvar_23;
  tmpvar_23 = (tmpvar_8.w + (((_LightColor0.w * _SpecColor.w) * tmpvar_21) * atten_15));
  c_16.w = tmpvar_23;
  c_1.xyz = c_16.xyz;
  c_1.w = 0.0;
  _glesFragData[0] = c_1;
}



#endif"
}
}
Program "fp" {
SubProgram "opengl " {
// Stats: 43 math, 5 textures
Keywords { "POINT" }
Vector 0 [_LightColor0]
Vector 1 [_SpecColor]
Float 2 [_Shininess]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightTexture0] 2D 5
"!!ARBfp1.0
PARAM c[4] = { program.local[0..2],
		{ 0, 2, 1, 128 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEX R2.yw, fragment.texcoord[0], texture[2], 2D;
TEX R1.xyz, fragment.texcoord[0].zwzw, texture[1], 2D;
TEX R0.xyz, fragment.texcoord[0], texture[0], 2D;
TEX R2.x, fragment.texcoord[0], texture[4], 2D;
MAD R5.xy, R2.wyzw, c[3].y, -c[3].z;
MUL R2.zw, R5.xyxy, R5.xyxy;
ADD_SAT R2.y, R2.z, R2.w;
DP3 R0.w, fragment.texcoord[3], fragment.texcoord[3];
DP3 R1.w, fragment.texcoord[1], fragment.texcoord[1];
RSQ R1.w, R1.w;
MUL R3.xyz, R1.w, fragment.texcoord[1];
DP3 R1.w, fragment.texcoord[2], fragment.texcoord[2];
RSQ R1.w, R1.w;
MAD R4.xyz, R1.w, fragment.texcoord[2], R3;
DP3 R1.w, R4, R4;
RSQ R1.w, R1.w;
ADD R2.y, -R2, c[3].z;
RSQ R2.y, R2.y;
RCP R5.z, R2.y;
ADD R2.yzw, -R5.xxyz, c[3].xxxz;
MAD R5.xyz, R1, R2.yzww, R5;
MUL R4.xyz, R1.w, R4;
DP3 R1.w, R5, R4;
MAX R2.y, R1.w, c[3].x;
ADD R1.w, -R1.x, c[3].z;
MUL R1.w, R2.x, R1;
MOV R2.z, c[3].w;
MUL R2.x, R2.z, c[2];
ADD R0.xyz, R1, R0;
POW R2.x, R2.y, R2.x;
MUL R1.w, R1, c[1].x;
MUL R1.w, R2.x, R1;
DP3 R2.x, R5, R3;
MAX R1.x, R2, c[3];
MUL R2.xyz, R0, c[0];
MOV R0.xyz, c[1];
MUL R1.xyz, R2, R1.x;
MUL R2.xyz, R0, c[0];
MAD R1.xyz, R2, R1.w, R1;
MOV result.color.w, c[3].x;
TEX R0.w, R0.w, texture[5], 2D;
MUL R0.x, R0.w, c[3].y;
MUL result.color.xyz, R1, R0.x;
END
# 43 instructions, 6 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 48 math, 5 textures
Keywords { "POINT" }
Vector 0 [_LightColor0]
Vector 1 [_SpecColor]
Float 2 [_Shininess]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightTexture0] 2D 5
"ps_2_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s4
dcl_2d s5
def c3, 2.00000000, -1.00000000, 1.00000000, 0.00000000
def c4, 128.00000000, 0, 0, 0
dcl t0
dcl t1.xyz
dcl t2.xyz
dcl t3.xyz
texld r2, t0, s0
texld r7, t0, s4
dp3 r0.x, t3, t3
mov r0.xy, r0.x
mov r1.y, t0.w
mov r1.x, t0.z
mov r6.z, c3
mov r6.xy, c3.w
texld r3, r1, s1
texld r8, r0, s5
texld r0, t0, s2
mov r0.x, r0.w
mad_pp r5.xy, r0, c3.x, c3.y
mul_pp r0.xy, r5, r5
add_pp_sat r0.x, r0, r0.y
dp3_pp r1.x, t1, t1
rsq_pp r4.x, r1.x
add_pp r2.xyz, r3, r2
add_pp r0.x, -r0, c3.z
rsq_pp r0.x, r0.x
rcp_pp r5.z, r0.x
add_pp r6.xyz, -r5, r6
dp3_pp r1.x, t2, t2
mad_pp r6.xyz, r3, r6, r5
mul_pp r4.xyz, r4.x, t1
rsq_pp r1.x, r1.x
mad_pp r1.xyz, r1.x, t2, r4
dp3_pp r0.x, r1, r1
rsq_pp r0.x, r0.x
mul_pp r1.xyz, r0.x, r1
mov_pp r0.x, c2
dp3_pp r1.x, r6, r1
mul_pp r0.x, c4, r0
max_pp r1.x, r1, c3.w
pow r5.x, r1.x, r0.x
add_pp r0.x, -r3, c3.z
mul r0.x, r7, r0
mov r1.x, r5.x
mul r0.x, r0, c1
mul r0.x, r1, r0
dp3_pp r1.x, r6, r4
max_pp r1.x, r1, c3.w
mul_pp r2.xyz, r2, c0
mul_pp r3.xyz, r2, r1.x
mov_pp r2.xyz, c0
mul_pp r2.xyz, c1, r2
mul_pp r1.x, r8, c3
mad r0.xyz, r2, r0.x, r3
mul r0.xyz, r0, r1.x
mov_pp r0.w, c3
mov_pp oC0, r0
"
}
SubProgram "d3d11 " {
// Stats: 35 math, 5 textures
Keywords { "POINT" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_Clouds] 2D 3
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Mask] 2D 4
SetTexture 4 [_LightTexture0] 2D 0
ConstBuffer "$Globals" 192
Vector 16 [_LightColor0]
Vector 32 [_SpecColor]
Float 128 [_Shininess]
BindCB  "$Globals" 0
"ps_4_0
eefiecedolappoceokdcojbcnjakhfgdfgchnjakabaaaaaanaagaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefcmiafaaaaeaaaaaaahcabaaaafjaaaaaeegiocaaaaaaaaaaaajaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaa
acaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafibiaaae
aahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaae
aahabaaaacaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaafibiaaae
aahabaaaaeaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaadhcbabaaa
acaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadhcbabaaaaeaaaaaagfaaaaad
pccabaaaaaaaaaaagiaaaaacafaaaaaabaaaaaahbcaabaaaaaaaaaaaegbcbaaa
adaaaaaaegbcbaaaadaaaaaaeeaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
baaaaaahccaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaaeeaaaaaf
ccaabaaaaaaaaaaabkaabaaaaaaaaaaadiaaaaahocaabaaaaaaaaaaafgafbaaa
aaaaaaaaagbjbaaaacaaaaaadcaaaaajhcaabaaaabaaaaaaegbcbaaaadaaaaaa
agaabaaaaaaaaaaajgahbaaaaaaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaa
abaaaaaaegacbaaaabaaaaaaeeaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
diaaaaahhcaabaaaabaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaaefaaaaaj
pcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaaacaaaaaa
dcaaaaapdcaabaaaacaaaaaahgapbaaaacaaaaaaaceaaaaaaaaaaaeaaaaaaaea
aaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaaapaaaaah
bcaabaaaaaaaaaaaegaabaaaacaaaaaaegaabaaaacaaaaaaddaaaaahbcaabaaa
aaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaiadpaaaaaaaibcaabaaaaaaaaaaa
akaabaiaebaaaaaaaaaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaaacaaaaaa
akaabaaaaaaaaaaaaaaaaaalhcaabaaaadaaaaaaegacbaiaebaaaaaaacaaaaaa
aceaaaaaaaaaaaaaaaaaaaaaaaaaiadpaaaaaaaaefaaaaajpcaabaaaaeaaaaaa
ogbkbaaaabaaaaaaeghobaaaabaaaaaaaagabaaaadaaaaaadcaaaaajhcaabaaa
acaaaaaaegacbaaaaeaaaaaaegacbaaaadaaaaaaegacbaaaacaaaaaabaaaaaah
bcaabaaaaaaaaaaaegacbaaaacaaaaaaegacbaaaabaaaaaabaaaaaahccaabaaa
aaaaaaaaegacbaaaacaaaaaajgahbaaaaaaaaaaadeaaaaakdcaabaaaaaaaaaaa
egaabaaaaaaaaaaaaceaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaacpaaaaaf
bcaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaaiecaabaaaaaaaaaaaakiacaaa
aaaaaaaaaiaaaaaaabeaaaaaaaaaaaeddiaaaaahbcaabaaaaaaaaaaaakaabaaa
aaaaaaaackaabaaaaaaaaaaabjaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
aaaaaaaiecaabaaaaaaaaaaaakaabaiaebaaaaaaaeaaaaaaabeaaaaaaaaaiadp
efaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaaeghobaaaadaaaaaaaagabaaa
aeaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaaabaaaaaa
diaaaaaiecaabaaaaaaaaaaackaabaaaaaaaaaaaakiacaaaaaaaaaaaacaaaaaa
diaaaaahbcaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaaj
hcaabaaaabaaaaaaegiccaaaaaaaaaaaabaaaaaaegiccaaaaaaaaaaaacaaaaaa
diaaaaahncaabaaaaaaaaaaaagaabaaaaaaaaaaaagajbaaaabaaaaaaefaaaaaj
pcaabaaaabaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaabaaaaaa
aaaaaaahhcaabaaaabaaaaaaegacbaaaaeaaaaaaegacbaaaabaaaaaadiaaaaai
hcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaaaaaaaaaabaaaaaadcaaaaaj
hcaabaaaaaaaaaaaegacbaaaabaaaaaafgafbaaaaaaaaaaaigadbaaaaaaaaaaa
baaaaaahicaabaaaaaaaaaaaegbcbaaaaeaaaaaaegbcbaaaaeaaaaaaefaaaaaj
pcaabaaaabaaaaaapgapbaaaaaaaaaaaeghobaaaaeaaaaaaaagabaaaaaaaaaaa
aaaaaaahicaabaaaaaaaaaaaakaabaaaabaaaaaaakaabaaaabaaaaaadiaaaaah
hccabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaadgaaaaaficcabaaa
aaaaaaaaabeaaaaaaaaaaaaadoaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 35 math, 5 textures
Keywords { "POINT" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_Clouds] 2D 3
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Mask] 2D 4
SetTexture 4 [_LightTexture0] 2D 0
ConstBuffer "$Globals" 192
Vector 16 [_LightColor0]
Vector 32 [_SpecColor]
Float 128 [_Shininess]
BindCB  "$Globals" 0
"ps_4_0_level_9_1
eefiecedopdaefcckimbnmlkklfmacolfjbfadpbabaaaaaafiakaaaaaeaaaaaa
daaaaaaaleadaaaaieajaaaaceakaaaaebgpgodjhmadaaaahmadaaaaaaacpppp
cmadaaaafaaaaaaaacaadiaaaaaafaaaaaaafaaaafaaceaaaaaafaaaaeaaaaaa
aaababaaacacacaaabadadaaadaeaeaaaaaaabaaacaaaaaaaaaaaaaaaaaaaiaa
abaaacaaaaaaaaaaaaacppppfbaaaaafadaaapkaaaaaaaeaaaaaialpaaaaaaaa
aaaaiadpfbaaaaafaeaaapkaaaaaaaaaaaaaaaaaaaaaiadpaaaaaaedbpaaaaac
aaaaaaiaaaaaaplabpaaaaacaaaaaaiaabaachlabpaaaaacaaaaaaiaacaachla
bpaaaaacaaaaaaiaadaaahlabpaaaaacaaaaaajaaaaiapkabpaaaaacaaaaaaja
abaiapkabpaaaaacaaaaaajaacaiapkabpaaaaacaaaaaajaadaiapkabpaaaaac
aaaaaajaaeaiapkaabaaaaacaaaaabiaaaaakklaabaaaaacaaaaaciaaaaappla
aiaaaaadabaaaiiaadaaoelaadaaoelaabaaaaacabaaadiaabaappiaecaaaaad
acaacpiaaaaaoelaacaioekaecaaaaadaaaacpiaaaaaoeiaadaioekaecaaaaad
adaaapiaaaaaoelaaeaioekaecaaaaadaeaacpiaaaaaoelaabaioekaecaaaaad
abaacpiaabaaoeiaaaaioekaaiaaaaadaaaaciiaacaaoelaacaaoelaahaaaaac
aaaaciiaaaaappiaceaaaaacafaachiaabaaoelaaeaaaaaeagaachiaacaaoela
aaaappiaafaaoeiaceaaaaacahaachiaagaaoeiaaeaaaaaeagaacbiaacaappia
adaaaakaadaaffkaaeaaaaaeagaacciaacaaffiaadaaaakaadaaffkafkaaaaae
aaaadiiaagaaoeiaagaaoeiaadaakkkaacaaaaadaaaaciiaaaaappibadaappka
ahaaaaacaaaaciiaaaaappiaagaaaaacagaaceiaaaaappiabcaaaaaeacaachia
aaaaoeiaaeaaoekaagaaoeiaaiaaaaadaaaaciiaacaaoeiaahaaoeiaaiaaaaad
aeaaciiaacaaoeiaafaaoeiaalaaaaadabaacciaaeaappiaadaakkkaalaaaaad
aeaaaiiaaaaappiaadaakkkaabaaaaacaaaaaiiaaeaappkaafaaaaadaaaaaiia
aaaappiaacaaaakacaaaaaadabaaaeiaaeaappiaaaaappiaacaaaaadaaaaaiia
aaaaaaibadaappkaafaaaaadaaaaaiiaaaaappiaadaaaaiaafaaaaadaaaaciia
aaaappiaabaaaakaafaaaaadaaaaaiiaaaaappiaabaakkiaabaaaaacacaaahia
aaaaoekaafaaaaadacaaahiaacaaoeiaabaaoekaafaaaaadacaaahiaaaaappia
acaaoeiaacaaaaadaaaachiaaaaaoeiaaeaaoeiaafaaaaadaaaachiaaaaaoeia
aaaaoekaaeaaaaaeaaaaahiaaaaaoeiaabaaffiaacaaoeiaacaaaaadaaaaaiia
abaaaaiaabaaaaiaafaaaaadaaaachiaaaaappiaaaaaoeiaabaaaaacaaaaaiia
adaakkkaabaaaaacaaaicpiaaaaaoeiappppaaaafdeieefcmiafaaaaeaaaaaaa
hcabaaaafjaaaaaeegiocaaaaaaaaaaaajaaaaaafkaaaaadaagabaaaaaaaaaaa
fkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaa
adaaaaaafkaaaaadaagabaaaaeaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaa
fibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaa
fibiaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaa
gcbaaaadpcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaa
adaaaaaagcbaaaadhcbabaaaaeaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaac
afaaaaaabaaaaaahbcaabaaaaaaaaaaaegbcbaaaadaaaaaaegbcbaaaadaaaaaa
eeaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaabaaaaaahccaabaaaaaaaaaaa
egbcbaaaacaaaaaaegbcbaaaacaaaaaaeeaaaaafccaabaaaaaaaaaaabkaabaaa
aaaaaaaadiaaaaahocaabaaaaaaaaaaafgafbaaaaaaaaaaaagbjbaaaacaaaaaa
dcaaaaajhcaabaaaabaaaaaaegbcbaaaadaaaaaaagaabaaaaaaaaaaajgahbaaa
aaaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaa
eeaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaahhcaabaaaabaaaaaa
agaabaaaaaaaaaaaegacbaaaabaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaa
abaaaaaaeghobaaaacaaaaaaaagabaaaacaaaaaadcaaaaapdcaabaaaacaaaaaa
hgapbaaaacaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaa
aaaaialpaaaaialpaaaaaaaaaaaaaaaaapaaaaahbcaabaaaaaaaaaaaegaabaaa
acaaaaaaegaabaaaacaaaaaaddaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
abeaaaaaaaaaiadpaaaaaaaibcaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaa
abeaaaaaaaaaiadpelaaaaafecaabaaaacaaaaaaakaabaaaaaaaaaaaaaaaaaal
hcaabaaaadaaaaaaegacbaiaebaaaaaaacaaaaaaaceaaaaaaaaaaaaaaaaaaaaa
aaaaiadpaaaaaaaaefaaaaajpcaabaaaaeaaaaaaogbkbaaaabaaaaaaeghobaaa
abaaaaaaaagabaaaadaaaaaadcaaaaajhcaabaaaacaaaaaaegacbaaaaeaaaaaa
egacbaaaadaaaaaaegacbaaaacaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaa
acaaaaaaegacbaaaabaaaaaabaaaaaahccaabaaaaaaaaaaaegacbaaaacaaaaaa
jgahbaaaaaaaaaaadeaaaaakdcaabaaaaaaaaaaaegaabaaaaaaaaaaaaceaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaacpaaaaafbcaabaaaaaaaaaaaakaabaaa
aaaaaaaadiaaaaaiecaabaaaaaaaaaaaakiacaaaaaaaaaaaaiaaaaaaabeaaaaa
aaaaaaeddiaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaackaabaaaaaaaaaaa
bjaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaaiecaabaaaaaaaaaaa
akaabaiaebaaaaaaaeaaaaaaabeaaaaaaaaaiadpefaaaaajpcaabaaaabaaaaaa
egbabaaaabaaaaaaeghobaaaadaaaaaaaagabaaaaeaaaaaadiaaaaahecaabaaa
aaaaaaaackaabaaaaaaaaaaaakaabaaaabaaaaaadiaaaaaiecaabaaaaaaaaaaa
ckaabaaaaaaaaaaaakiacaaaaaaaaaaaacaaaaaadiaaaaahbcaabaaaaaaaaaaa
ckaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaajhcaabaaaabaaaaaaegiccaaa
aaaaaaaaabaaaaaaegiccaaaaaaaaaaaacaaaaaadiaaaaahncaabaaaaaaaaaaa
agaabaaaaaaaaaaaagajbaaaabaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaa
abaaaaaaeghobaaaaaaaaaaaaagabaaaabaaaaaaaaaaaaahhcaabaaaabaaaaaa
egacbaaaaeaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaa
abaaaaaaegiccaaaaaaaaaaaabaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaa
abaaaaaafgafbaaaaaaaaaaaigadbaaaaaaaaaaabaaaaaahicaabaaaaaaaaaaa
egbcbaaaaeaaaaaaegbcbaaaaeaaaaaaefaaaaajpcaabaaaabaaaaaapgapbaaa
aaaaaaaaeghobaaaaeaaaaaaaagabaaaaaaaaaaaaaaaaaahicaabaaaaaaaaaaa
akaabaaaabaaaaaaakaabaaaabaaaaaadiaaaaahhccabaaaaaaaaaaapgapbaaa
aaaaaaaaegacbaaaaaaaaaaadgaaaaaficcabaaaaaaaaaaaabeaaaaaaaaaaaaa
doaaaaabejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaaaaaaaaaaabaaaaaa
adaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaa
apapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaahahaaaaimaaaaaa
acaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaimaaaaaaadaaaaaaaaaaaaaa
adaaaaaaaeaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl"
}
SubProgram "gles " {
Keywords { "POINT" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "POINT" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "POINT" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 38 math, 4 textures
Keywords { "DIRECTIONAL" }
Vector 0 [_LightColor0]
Vector 1 [_SpecColor]
Float 2 [_Shininess]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 4 [_Mask] 2D 4
"!!ARBfp1.0
PARAM c[4] = { program.local[0..2],
		{ 0, 2, 1, 128 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEX R2.yw, fragment.texcoord[0], texture[2], 2D;
TEX R0.xyz, fragment.texcoord[0].zwzw, texture[1], 2D;
TEX R1.xyz, fragment.texcoord[0], texture[0], 2D;
TEX R2.x, fragment.texcoord[0], texture[4], 2D;
MAD R2.yz, R2.xwyw, c[3].y, -c[3].z;
MUL R4.xy, R2.yzzw, R2.yzzw;
ADD_SAT R0.w, R4.x, R4.y;
DP3 R1.w, fragment.texcoord[2], fragment.texcoord[2];
ADD R0.w, -R0, c[3].z;
RSQ R0.w, R0.w;
RCP R2.w, R0.w;
ADD R4.xyz, -R2.yzww, c[3].xxzw;
MAD R4.xyz, R0, R4, R2.yzww;
ADD R2.y, -R0.x, c[3].z;
ADD R0.xyz, R0, R1;
MUL R2.x, R2, R2.y;
MOV R1.xyz, c[1];
RSQ R1.w, R1.w;
MOV R3.xyz, fragment.texcoord[1];
MAD R3.xyz, R1.w, fragment.texcoord[2], R3;
DP3 R1.w, R3, R3;
RSQ R0.w, R1.w;
MUL R3.xyz, R0.w, R3;
DP3 R0.w, R4, R3;
MAX R1.w, R0, c[3].x;
MOV R0.w, c[3];
MUL R0.w, R0, c[2].x;
POW R0.w, R1.w, R0.w;
MUL R2.x, R2, c[1];
DP3 R1.w, R4, fragment.texcoord[1];
MUL R0.w, R0, R2.x;
MAX R1.w, R1, c[3].x;
MUL R0.xyz, R0, c[0];
MUL R0.xyz, R0, R1.w;
MUL R1.xyz, R1, c[0];
MAD R0.xyz, R1, R0.w, R0;
MUL result.color.xyz, R0, c[3].y;
MOV result.color.w, c[3].x;
END
# 38 instructions, 5 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 44 math, 4 textures
Keywords { "DIRECTIONAL" }
Vector 0 [_LightColor0]
Vector 1 [_SpecColor]
Float 2 [_Shininess]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 4 [_Mask] 2D 4
"ps_2_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s4
def c3, 2.00000000, -1.00000000, 1.00000000, 0.00000000
def c4, 128.00000000, 0, 0, 0
dcl t0
dcl t1.xyz
dcl t2.xyz
texld r2, t0, s0
texld r6, t0, s4
mov_pp r5.xyz, t1
mov r0.y, t0.w
mov r0.x, t0.z
mov r1.xy, r0
texld r3, r1, s1
texld r0, t0, s2
mov r0.x, r0.w
mad_pp r4.xy, r0, c3.x, c3.y
mul_pp r0.xy, r4, r4
add_pp_sat r0.x, r0, r0.y
add_pp r0.x, -r0, c3.z
rsq_pp r0.x, r0.x
dp3_pp r1.x, t2, t2
rsq_pp r1.x, r1.x
mad_pp r1.xyz, r1.x, t2, r5
rcp_pp r4.z, r0.x
dp3_pp r0.x, r1, r1
rsq_pp r0.x, r0.x
mul_pp r1.xyz, r0.x, r1
mov_pp r0.x, c2
add_pp r2.xyz, r3, r2
mul_pp r0.x, c4, r0
mov r5.z, c3
mov r5.xy, c3.w
add_pp r5.xyz, -r4, r5
mad_pp r5.xyz, r3, r5, r4
dp3_pp r1.x, r5, r1
max_pp r1.x, r1, c3.w
pow r4.x, r1.x, r0.x
add_pp r0.x, -r3, c3.z
mul_pp r3.xyz, r2, c0
mul r0.x, r6, r0
mov_pp r2.xyz, c0
mov r1.x, r4.x
mul r0.x, r0, c1
mul r0.x, r1, r0
dp3_pp r1.x, r5, t1
max_pp r1.x, r1, c3.w
mul_pp r1.xyz, r3, r1.x
mul_pp r2.xyz, c1, r2
mad r0.xyz, r2, r0.x, r1
mul r0.xyz, r0, c3.x
mov_pp r0.w, c3
mov_pp oC0, r0
"
}
SubProgram "d3d11 " {
// Stats: 30 math, 4 textures
Keywords { "DIRECTIONAL" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 2
SetTexture 2 [_BumpMap] 2D 1
SetTexture 3 [_Mask] 2D 3
ConstBuffer "$Globals" 128
Vector 16 [_LightColor0]
Vector 32 [_SpecColor]
Float 64 [_Shininess]
BindCB  "$Globals" 0
"ps_4_0
eefiecedhnmggccioiajknjcnigfdmhiifgphilnabaaaaaaoiafaaaaadaaaaaa
cmaaaaaaleaaaaaaoiaaaaaaejfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklklfdeieefcpiaeaaaaeaaaaaaadoabaaaafjaaaaaeegiocaaa
aaaaaaaaafaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaa
fkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaafibiaaaeaahabaaa
aaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaa
acaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaagcbaaaadpcbabaaa
abaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagfaaaaad
pccabaaaaaaaaaaagiaaaaacaeaaaaaabaaaaaahbcaabaaaaaaaaaaaegbcbaaa
adaaaaaaegbcbaaaadaaaaaaeeaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
dcaaaaajhcaabaaaaaaaaaaaegbcbaaaadaaaaaaagaabaaaaaaaaaaaegbcbaaa
acaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaa
abaaaaaaeghobaaaacaaaaaaaagabaaaabaaaaaadcaaaaapdcaabaaaabaaaaaa
hgapbaaaabaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaa
aaaaialpaaaaialpaaaaaaaaaaaaaaaaapaaaaahicaabaaaaaaaaaaaegaabaaa
abaaaaaaegaabaaaabaaaaaaddaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaa
abeaaaaaaaaaiadpaaaaaaaiicaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaa
abeaaaaaaaaaiadpelaaaaafecaabaaaabaaaaaadkaabaaaaaaaaaaaaaaaaaal
hcaabaaaacaaaaaaegacbaiaebaaaaaaabaaaaaaaceaaaaaaaaaaaaaaaaaaaaa
aaaaiadpaaaaaaaaefaaaaajpcaabaaaadaaaaaaogbkbaaaabaaaaaaeghobaaa
abaaaaaaaagabaaaacaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaaadaaaaaa
egacbaaaacaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaa
abaaaaaaegacbaaaaaaaaaaabaaaaaahccaabaaaaaaaaaaaegacbaaaabaaaaaa
egbcbaaaacaaaaaadeaaaaakdcaabaaaaaaaaaaaegaabaaaaaaaaaaaaceaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaacpaaaaafbcaabaaaaaaaaaaaakaabaaa
aaaaaaaadiaaaaaiecaabaaaaaaaaaaaakiacaaaaaaaaaaaaeaaaaaaabeaaaaa
aaaaaaeddiaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaackaabaaaaaaaaaaa
bjaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaaiecaabaaaaaaaaaaa
akaabaiaebaaaaaaadaaaaaaabeaaaaaaaaaiadpefaaaaajpcaabaaaabaaaaaa
egbabaaaabaaaaaaeghobaaaadaaaaaaaagabaaaadaaaaaadiaaaaahecaabaaa
aaaaaaaackaabaaaaaaaaaaaakaabaaaabaaaaaadiaaaaaiecaabaaaaaaaaaaa
ckaabaaaaaaaaaaaakiacaaaaaaaaaaaacaaaaaadiaaaaahbcaabaaaaaaaaaaa
ckaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaajhcaabaaaabaaaaaaegiccaaa
aaaaaaaaabaaaaaaegiccaaaaaaaaaaaacaaaaaadiaaaaahncaabaaaaaaaaaaa
agaabaaaaaaaaaaaagajbaaaabaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaa
abaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaaaaaaaaahhcaabaaaabaaaaaa
egacbaaaadaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaa
abaaaaaaegiccaaaaaaaaaaaabaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaa
abaaaaaafgafbaaaaaaaaaaaigadbaaaaaaaaaaaaaaaaaahhccabaaaaaaaaaaa
egacbaaaaaaaaaaaegacbaaaaaaaaaaadgaaaaaficcabaaaaaaaaaaaabeaaaaa
aaaaaaaadoaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 30 math, 4 textures
Keywords { "DIRECTIONAL" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 2
SetTexture 2 [_BumpMap] 2D 1
SetTexture 3 [_Mask] 2D 3
ConstBuffer "$Globals" 128
Vector 16 [_LightColor0]
Vector 32 [_SpecColor]
Float 64 [_Shininess]
BindCB  "$Globals" 0
"ps_4_0_level_9_1
eefiecedlihhhffeblilepmihkmgdlgnenagenkaabaaaaaabiajaaaaaeaaaaaa
daaaaaaafmadaaaafmaiaaaaoeaiaaaaebgpgodjceadaaaaceadaaaaaaacpppp
niacaaaaemaaaaaaacaadeaaaaaaemaaaaaaemaaaeaaceaaaaaaemaaaaaaaaaa
acababaaabacacaaadadadaaaaaaabaaacaaaaaaaaaaaaaaaaaaaeaaabaaacaa
aaaaaaaaaaacppppfbaaaaafadaaapkaaaaaaaeaaaaaialpaaaaaaaaaaaaiadp
fbaaaaafaeaaapkaaaaaaaaaaaaaaaaaaaaaiadpaaaaaaedbpaaaaacaaaaaaia
aaaaaplabpaaaaacaaaaaaiaabaachlabpaaaaacaaaaaaiaacaachlabpaaaaac
aaaaaajaaaaiapkabpaaaaacaaaaaajaabaiapkabpaaaaacaaaaaajaacaiapka
bpaaaaacaaaaaajaadaiapkaabaaaaacaaaaabiaaaaakklaabaaaaacaaaaacia
aaaapplaecaaaaadabaacpiaaaaaoelaabaioekaecaaaaadaaaacpiaaaaaoeia
acaioekaecaaaaadacaaapiaaaaaoelaadaioekaecaaaaadadaacpiaaaaaoela
aaaioekaaiaaaaadaaaaciiaacaaoelaacaaoelaahaaaaacaaaaciiaaaaappia
abaaaaacaeaaahiaacaaoelaaeaaaaaeaeaachiaaeaaoeiaaaaappiaabaaoela
ceaaaaacafaachiaaeaaoeiaaeaaaaaeaeaacbiaabaappiaadaaaakaadaaffka
aeaaaaaeaeaacciaabaaffiaadaaaakaadaaffkafkaaaaaeaaaadiiaaeaaoeia
aeaaoeiaadaakkkaacaaaaadaaaaciiaaaaappibadaappkaahaaaaacaaaaciia
aaaappiaagaaaaacaeaaceiaaaaappiabcaaaaaeabaachiaaaaaoeiaaeaaoeka
aeaaoeiaaiaaaaadaaaaciiaabaaoeiaafaaoeiaaiaaaaadadaaciiaabaaoeia
abaaoelaalaaaaadabaacbiaadaappiaadaakkkaalaaaaadadaaaiiaaaaappia
adaakkkaabaaaaacaaaaaiiaaeaappkaafaaaaadaaaaaiiaaaaappiaacaaaaka
caaaaaadabaaaciaadaappiaaaaappiaacaaaaadaaaaaiiaaaaaaaibadaappka
afaaaaadaaaaaiiaaaaappiaacaaaaiaafaaaaadaaaaciiaaaaappiaabaaaaka
afaaaaadaaaaaiiaaaaappiaabaaffiaabaaaaacacaaahiaaaaaoekaafaaaaad
abaaaoiaacaabliaabaablkaafaaaaadabaaaoiaaaaappiaabaaoeiaacaaaaad
aaaachiaaaaaoeiaadaaoeiaafaaaaadaaaachiaaaaaoeiaaaaaoekaaeaaaaae
aaaaahiaaaaaoeiaabaaaaiaabaabliaacaaaaadaaaachiaaaaaoeiaaaaaoeia
abaaaaacaaaaaiiaadaakkkaabaaaaacaaaicpiaaaaaoeiappppaaaafdeieefc
piaeaaaaeaaaaaaadoabaaaafjaaaaaeegiocaaaaaaaaaaaafaaaaaafkaaaaad
aagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaa
fkaaaaadaagabaaaadaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaae
aahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaafibiaaae
aahabaaaadaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaadhcbabaaa
acaaaaaagcbaaaadhcbabaaaadaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaac
aeaaaaaabaaaaaahbcaabaaaaaaaaaaaegbcbaaaadaaaaaaegbcbaaaadaaaaaa
eeaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaadcaaaaajhcaabaaaaaaaaaaa
egbcbaaaadaaaaaaagaabaaaaaaaaaaaegbcbaaaacaaaaaabaaaaaahicaabaaa
aaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaaeeaaaaaficaabaaaaaaaaaaa
dkaabaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaa
aaaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaaeghobaaaacaaaaaa
aagabaaaabaaaaaadcaaaaapdcaabaaaabaaaaaahgapbaaaabaaaaaaaceaaaaa
aaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaa
aaaaaaaaapaaaaahicaabaaaaaaaaaaaegaabaaaabaaaaaaegaabaaaabaaaaaa
ddaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaiadpaaaaaaai
icaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaaaaaaiadpelaaaaaf
ecaabaaaabaaaaaadkaabaaaaaaaaaaaaaaaaaalhcaabaaaacaaaaaaegacbaia
ebaaaaaaabaaaaaaaceaaaaaaaaaaaaaaaaaaaaaaaaaiadpaaaaaaaaefaaaaaj
pcaabaaaadaaaaaaogbkbaaaabaaaaaaeghobaaaabaaaaaaaagabaaaacaaaaaa
dcaaaaajhcaabaaaabaaaaaaegacbaaaadaaaaaaegacbaaaacaaaaaaegacbaaa
abaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaaabaaaaaaegacbaaaaaaaaaaa
baaaaaahccaabaaaaaaaaaaaegacbaaaabaaaaaaegbcbaaaacaaaaaadeaaaaak
dcaabaaaaaaaaaaaegaabaaaaaaaaaaaaceaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
aaaaaaaacpaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaaiecaabaaa
aaaaaaaaakiacaaaaaaaaaaaaeaaaaaaabeaaaaaaaaaaaeddiaaaaahbcaabaaa
aaaaaaaaakaabaaaaaaaaaaackaabaaaaaaaaaaabjaaaaafbcaabaaaaaaaaaaa
akaabaaaaaaaaaaaaaaaaaaiecaabaaaaaaaaaaaakaabaiaebaaaaaaadaaaaaa
abeaaaaaaaaaiadpefaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaaeghobaaa
adaaaaaaaagabaaaadaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaa
akaabaaaabaaaaaadiaaaaaiecaabaaaaaaaaaaackaabaaaaaaaaaaaakiacaaa
aaaaaaaaacaaaaaadiaaaaahbcaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaa
aaaaaaaadiaaaaajhcaabaaaabaaaaaaegiccaaaaaaaaaaaabaaaaaaegiccaaa
aaaaaaaaacaaaaaadiaaaaahncaabaaaaaaaaaaaagaabaaaaaaaaaaaagajbaaa
abaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaa
aagabaaaaaaaaaaaaaaaaaahhcaabaaaabaaaaaaegacbaaaadaaaaaaegacbaaa
abaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaaaaaaaaa
abaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaaabaaaaaafgafbaaaaaaaaaaa
igadbaaaaaaaaaaaaaaaaaahhccabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaa
aaaaaaaadgaaaaaficcabaaaaaaaaaaaabeaaaaaaaaaaaaadoaaaaabejfdeheo
iaaaaaaaaeaaaaaaaiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaa
apaaaaaaheaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapapaaaaheaaaaaa
abaaaaaaaaaaaaaaadaaaaaaacaaaaaaahahaaaaheaaaaaaacaaaaaaaaaaaaaa
adaaaaaaadaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 49 math, 6 textures
Keywords { "SPOT" }
Vector 0 [_LightColor0]
Vector 1 [_SpecColor]
Float 2 [_Shininess]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightTexture0] 2D 5
SetTexture 6 [_LightTextureB0] 2D 6
"!!ARBfp1.0
PARAM c[5] = { program.local[0..2],
		{ 0, 2, 1, 128 },
		{ 0.5 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEX R1.xyz, fragment.texcoord[0].zwzw, texture[1], 2D;
RCP R0.x, fragment.texcoord[3].w;
MAD R2.xy, fragment.texcoord[3], R0.x, c[4].x;
DP3 R1.w, fragment.texcoord[3], fragment.texcoord[3];
DP3 R2.z, fragment.texcoord[1], fragment.texcoord[1];
MOV result.color.w, c[3].x;
TEX R0.w, R2, texture[5], 2D;
TEX R2.yw, fragment.texcoord[0], texture[2], 2D;
TEX R0.xyz, fragment.texcoord[0], texture[0], 2D;
TEX R1.w, R1.w, texture[6], 2D;
TEX R2.x, fragment.texcoord[0], texture[4], 2D;
MAD R5.xy, R2.wyzw, c[3].y, -c[3].z;
RSQ R2.y, R2.z;
MUL R2.zw, R5.xyxy, R5.xyxy;
MUL R3.xyz, R2.y, fragment.texcoord[1];
ADD_SAT R2.z, R2, R2.w;
DP3 R2.y, fragment.texcoord[2], fragment.texcoord[2];
RSQ R2.y, R2.y;
MAD R4.xyz, R2.y, fragment.texcoord[2], R3;
DP3 R2.y, R4, R4;
RSQ R3.w, R2.y;
ADD R2.z, -R2, c[3];
RSQ R2.z, R2.z;
RCP R5.z, R2.z;
ADD R2.yzw, -R5.xxyz, c[3].xxxz;
MAD R5.xyz, R1, R2.yzww, R5;
MUL R4.xyz, R3.w, R4;
DP3 R2.y, R5, R4;
MAX R2.z, R2.y, c[3].x;
ADD R2.y, -R1.x, c[3].z;
ADD R1.xyz, R1, R0;
MUL R2.x, R2, R2.y;
MOV R2.w, c[3];
MUL R2.y, R2.w, c[2].x;
POW R2.y, R2.z, R2.y;
MUL R2.x, R2, c[1];
MUL R2.x, R2.y, R2;
DP3 R2.y, R5, R3;
MAX R0.x, R2.y, c[3];
MUL R1.xyz, R1, c[0];
MUL R0.xyz, R1, R0.x;
MOV R1.xyz, c[1];
SLT R2.y, c[3].x, fragment.texcoord[3].z;
MUL R0.w, R2.y, R0;
MUL R0.w, R0, R1;
MUL R1.xyz, R1, c[0];
MUL R0.w, R0, c[3].y;
MAD R0.xyz, R1, R2.x, R0;
MUL result.color.xyz, R0, R0.w;
END
# 49 instructions, 6 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 55 math, 6 textures
Keywords { "SPOT" }
Vector 0 [_LightColor0]
Vector 1 [_SpecColor]
Float 2 [_Shininess]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightTexture0] 2D 5
SetTexture 6 [_LightTextureB0] 2D 6
"ps_2_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s4
dcl_2d s5
dcl_2d s6
def c3, 2.00000000, -1.00000000, 1.00000000, 0.00000000
def c4, 128.00000000, 0.50000000, 0, 0
dcl t0
dcl t1.xyz
dcl t2.xyz
dcl t3
texld r7, t0, s4
rcp r1.x, t3.w
mad r2.xy, t3, r1.x, c4.y
mov r0.y, t0.w
mov r0.x, t0.z
mov r3.xy, r0
dp3 r0.x, t3, t3
mov r1.xy, r0.x
mov r6.z, c3
mov r6.xy, c3.w
texld r8, r1, s6
texld r0, r2, s5
texld r1, t0, s2
texld r2, t0, s0
texld r3, r3, s1
dp3_pp r1.x, t1, t1
rsq_pp r4.x, r1.x
dp3_pp r1.x, t2, t2
add_pp r2.xyz, r3, r2
mov r0.y, r1
mov r0.x, r1.w
mad_pp r5.xy, r0, c3.x, c3.y
mul_pp r0.xy, r5, r5
add_pp_sat r0.x, r0, r0.y
add_pp r0.x, -r0, c3.z
rsq_pp r0.x, r0.x
rcp_pp r5.z, r0.x
add_pp r6.xyz, -r5, r6
mad_pp r6.xyz, r3, r6, r5
mul_pp r4.xyz, r4.x, t1
rsq_pp r1.x, r1.x
mad_pp r1.xyz, r1.x, t2, r4
dp3_pp r0.x, r1, r1
rsq_pp r0.x, r0.x
mul_pp r1.xyz, r0.x, r1
mov_pp r0.x, c2
dp3_pp r1.x, r6, r1
mul_pp r0.x, c4, r0
max_pp r1.x, r1, c3.w
pow r5.x, r1.x, r0.x
add_pp r0.x, -r3, c3.z
mul r0.x, r7, r0
mov_pp r3.xyz, c0
mov r1.x, r5.x
mul r0.x, r0, c1
mul r0.x, r1, r0
dp3_pp r1.x, r6, r4
max_pp r1.x, r1, c3.w
mul_pp r2.xyz, r2, c0
mul_pp r2.xyz, r2, r1.x
cmp r1.x, -t3.z, c3.w, c3.z
mul_pp r1.x, r1, r0.w
mul_pp r1.x, r1, r8
mul_pp r3.xyz, c1, r3
mul_pp r1.x, r1, c3
mad r0.xyz, r3, r0.x, r2
mul r0.xyz, r0, r1.x
mov_pp r0.w, c3
mov_pp oC0, r0
"
}
SubProgram "d3d11 " {
// Stats: 40 math, 6 textures
Keywords { "SPOT" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_Clouds] 2D 4
SetTexture 2 [_BumpMap] 2D 3
SetTexture 3 [_Mask] 2D 5
SetTexture 4 [_LightTexture0] 2D 0
SetTexture 5 [_LightTextureB0] 2D 1
ConstBuffer "$Globals" 192
Vector 16 [_LightColor0]
Vector 32 [_SpecColor]
Float 128 [_Shininess]
BindCB  "$Globals" 0
"ps_4_0
eefiecedlagpmlekblicadjojjdbdngdlkklodacabaaaaaakiahaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapapaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefckaagaaaaeaaaaaaakiabaaaafjaaaaaeegiocaaaaaaaaaaaajaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaa
acaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafkaaaaad
aagabaaaafaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaa
abaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaafibiaaaeaahabaaa
adaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaafibiaaaeaahabaaa
afaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaa
gcbaaaadhcbabaaaadaaaaaagcbaaaadpcbabaaaaeaaaaaagfaaaaadpccabaaa
aaaaaaaagiaaaaacafaaaaaabaaaaaahbcaabaaaaaaaaaaaegbcbaaaadaaaaaa
egbcbaaaadaaaaaaeeaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaabaaaaaah
ccaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaaeeaaaaafccaabaaa
aaaaaaaabkaabaaaaaaaaaaadiaaaaahocaabaaaaaaaaaaafgafbaaaaaaaaaaa
agbjbaaaacaaaaaadcaaaaajhcaabaaaabaaaaaaegbcbaaaadaaaaaaagaabaaa
aaaaaaaajgahbaaaaaaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaaabaaaaaa
egacbaaaabaaaaaaeeaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaah
hcaabaaaabaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaaefaaaaajpcaabaaa
acaaaaaaegbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaaadaaaaaadcaaaaap
dcaabaaaacaaaaaahgapbaaaacaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaa
aaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaaapaaaaahbcaabaaa
aaaaaaaaegaabaaaacaaaaaaegaabaaaacaaaaaaddaaaaahbcaabaaaaaaaaaaa
akaabaaaaaaaaaaaabeaaaaaaaaaiadpaaaaaaaibcaabaaaaaaaaaaaakaabaia
ebaaaaaaaaaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaaacaaaaaaakaabaaa
aaaaaaaaaaaaaaalhcaabaaaadaaaaaaegacbaiaebaaaaaaacaaaaaaaceaaaaa
aaaaaaaaaaaaaaaaaaaaiadpaaaaaaaaefaaaaajpcaabaaaaeaaaaaaogbkbaaa
abaaaaaaeghobaaaabaaaaaaaagabaaaaeaaaaaadcaaaaajhcaabaaaacaaaaaa
egacbaaaaeaaaaaaegacbaaaadaaaaaaegacbaaaacaaaaaabaaaaaahbcaabaaa
aaaaaaaaegacbaaaacaaaaaaegacbaaaabaaaaaabaaaaaahccaabaaaaaaaaaaa
egacbaaaacaaaaaajgahbaaaaaaaaaaadeaaaaakdcaabaaaaaaaaaaaegaabaaa
aaaaaaaaaceaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaacpaaaaafbcaabaaa
aaaaaaaaakaabaaaaaaaaaaadiaaaaaiecaabaaaaaaaaaaaakiacaaaaaaaaaaa
aiaaaaaaabeaaaaaaaaaaaeddiaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
ckaabaaaaaaaaaaabjaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaai
ecaabaaaaaaaaaaaakaabaiaebaaaaaaaeaaaaaaabeaaaaaaaaaiadpefaaaaaj
pcaabaaaabaaaaaaegbabaaaabaaaaaaeghobaaaadaaaaaaaagabaaaafaaaaaa
diaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaaabaaaaaadiaaaaai
ecaabaaaaaaaaaaackaabaaaaaaaaaaaakiacaaaaaaaaaaaacaaaaaadiaaaaah
bcaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaajhcaabaaa
abaaaaaaegiccaaaaaaaaaaaabaaaaaaegiccaaaaaaaaaaaacaaaaaadiaaaaah
ncaabaaaaaaaaaaaagaabaaaaaaaaaaaagajbaaaabaaaaaaefaaaaajpcaabaaa
abaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaacaaaaaaaaaaaaah
hcaabaaaabaaaaaaegacbaaaaeaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaa
abaaaaaaegacbaaaabaaaaaaegiccaaaaaaaaaaaabaaaaaadcaaaaajhcaabaaa
aaaaaaaaegacbaaaabaaaaaafgafbaaaaaaaaaaaigadbaaaaaaaaaaaaoaaaaah
dcaabaaaabaaaaaaegbabaaaaeaaaaaapgbpbaaaaeaaaaaaaaaaaaakdcaabaaa
abaaaaaaegaabaaaabaaaaaaaceaaaaaaaaaaadpaaaaaadpaaaaaaaaaaaaaaaa
efaaaaajpcaabaaaabaaaaaaegaabaaaabaaaaaaeghobaaaaeaaaaaaaagabaaa
aaaaaaaadbaaaaahicaabaaaaaaaaaaaabeaaaaaaaaaaaaackbabaaaaeaaaaaa
abaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaiadpdiaaaaah
icaabaaaaaaaaaaadkaabaaaabaaaaaadkaabaaaaaaaaaaabaaaaaahbcaabaaa
abaaaaaaegbcbaaaaeaaaaaaegbcbaaaaeaaaaaaefaaaaajpcaabaaaabaaaaaa
agaabaaaabaaaaaaeghobaaaafaaaaaaaagabaaaabaaaaaaapaaaaahicaabaaa
aaaaaaaapgapbaaaaaaaaaaaagaabaaaabaaaaaadiaaaaahhccabaaaaaaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaadgaaaaaficcabaaaaaaaaaaaabeaaaaa
aaaaaaaadoaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 40 math, 6 textures
Keywords { "SPOT" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_Clouds] 2D 4
SetTexture 2 [_BumpMap] 2D 3
SetTexture 3 [_Mask] 2D 5
SetTexture 4 [_LightTexture0] 2D 0
SetTexture 5 [_LightTextureB0] 2D 1
ConstBuffer "$Globals" 192
Vector 16 [_LightColor0]
Vector 32 [_SpecColor]
Float 128 [_Shininess]
BindCB  "$Globals" 0
"ps_4_0_level_9_1
eefiecedgikfncpimihnbhkhlgdchniinappdgiiabaaaaaakmalaaaaaeaaaaaa
daaaaaaadaaeaaaaniakaaaahialaaaaebgpgodjpiadaaaapiadaaaaaaacpppp
keadaaaafeaaaaaaacaadmaaaaaafeaaaaaafeaaagaaceaaaaaafeaaaeaaaaaa
afababaaaaacacaaacadadaaabaeaeaaadafafaaaaaaabaaacaaaaaaaaaaaaaa
aaaaaiaaabaaacaaaaaaaaaaaaacppppfbaaaaafadaaapkaaaaaaaeaaaaaialp
aaaaaaaaaaaaiadpfbaaaaafaeaaapkaaaaaaaaaaaaaaaaaaaaaiadpaaaaaadp
fbaaaaafafaaapkaaaaaaaedaaaaaaaaaaaaaaaaaaaaaaaabpaaaaacaaaaaaia
aaaaaplabpaaaaacaaaaaaiaabaachlabpaaaaacaaaaaaiaacaachlabpaaaaac
aaaaaaiaadaaaplabpaaaaacaaaaaajaaaaiapkabpaaaaacaaaaaajaabaiapka
bpaaaaacaaaaaajaacaiapkabpaaaaacaaaaaajaadaiapkabpaaaaacaaaaaaja
aeaiapkabpaaaaacaaaaaajaafaiapkaabaaaaacaaaaabiaaaaakklaabaaaaac
aaaaaciaaaaapplaagaaaaacaaaaaeiaadaapplaaeaaaaaeabaaadiaadaaoela
aaaakkiaaeaappkaaiaaaaadacaaaiiaadaaoelaadaaoelaabaaaaacacaaadia
acaappiaecaaaaadadaacpiaaaaaoelaadaioekaecaaaaadaaaacpiaaaaaoeia
aeaioekaecaaaaadaeaaapiaaaaaoelaafaioekaecaaaaadafaacpiaaaaaoela
acaioekaecaaaaadabaacpiaabaaoeiaaaaioekaecaaaaadacaacpiaacaaoeia
abaioekaaiaaaaadaaaaciiaacaaoelaacaaoelaahaaaaacaaaaciiaaaaappia
ceaaaaacabaachiaabaaoelaaeaaaaaeagaachiaacaaoelaaaaappiaabaaoeia
ceaaaaacahaachiaagaaoeiaaeaaaaaeagaacbiaadaappiaadaaaakaadaaffka
aeaaaaaeagaacciaadaaffiaadaaaakaadaaffkafkaaaaaeaaaadiiaagaaoeia
agaaoeiaadaakkkaacaaaaadaaaaciiaaaaappibadaappkaahaaaaacaaaaciia
aaaappiaagaaaaacagaaceiaaaaappiabcaaaaaeadaachiaaaaaoeiaaeaaoeka
agaaoeiaaiaaaaadaaaaciiaadaaoeiaahaaoeiaaiaaaaadafaaciiaadaaoeia
abaaoeiaalaaaaadabaacbiaafaappiaadaakkkaalaaaaadafaaaiiaaaaappia
adaakkkaabaaaaacaaaaaiiaacaaaakaafaaaaadaaaaaiiaaaaappiaafaaaaka
caaaaaadabaaaciaafaappiaaaaappiaacaaaaadaaaaaiiaaaaaaaibadaappka
afaaaaadaaaaaiiaaaaappiaaeaaaaiaafaaaaadaaaaciiaaaaappiaabaaaaka
afaaaaadaaaaaiiaaaaappiaabaaffiaabaaaaacadaaahiaaaaaoekaafaaaaad
acaaaoiaadaabliaabaablkaafaaaaadacaaaoiaaaaappiaacaaoeiaacaaaaad
aaaachiaaaaaoeiaafaaoeiaafaaaaadaaaachiaaaaaoeiaaaaaoekaaeaaaaae
aaaaahiaaaaaoeiaabaaaaiaacaabliaafaaaaadaaaaciiaabaappiaacaaaaia
fiaaaaaeaaaaciiaadaakklbadaakkkaaaaappiaacaaaaadaaaaaiiaaaaappia
aaaappiaafaaaaadaaaachiaaaaappiaaaaaoeiaabaaaaacaaaaciiaadaakkka
abaaaaacaaaicpiaaaaaoeiappppaaaafdeieefckaagaaaaeaaaaaaakiabaaaa
fjaaaaaeegiocaaaaaaaaaaaajaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaad
aagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaa
fkaaaaadaagabaaaaeaaaaaafkaaaaadaagabaaaafaaaaaafibiaaaeaahabaaa
aaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaa
acaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaa
aeaaaaaaffffaaaafibiaaaeaahabaaaafaaaaaaffffaaaagcbaaaadpcbabaaa
abaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaad
pcbabaaaaeaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacafaaaaaabaaaaaah
bcaabaaaaaaaaaaaegbcbaaaadaaaaaaegbcbaaaadaaaaaaeeaaaaafbcaabaaa
aaaaaaaaakaabaaaaaaaaaaabaaaaaahccaabaaaaaaaaaaaegbcbaaaacaaaaaa
egbcbaaaacaaaaaaeeaaaaafccaabaaaaaaaaaaabkaabaaaaaaaaaaadiaaaaah
ocaabaaaaaaaaaaafgafbaaaaaaaaaaaagbjbaaaacaaaaaadcaaaaajhcaabaaa
abaaaaaaegbcbaaaadaaaaaaagaabaaaaaaaaaaajgahbaaaaaaaaaaabaaaaaah
bcaabaaaaaaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaafbcaabaaa
aaaaaaaaakaabaaaaaaaaaaadiaaaaahhcaabaaaabaaaaaaagaabaaaaaaaaaaa
egacbaaaabaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaa
acaaaaaaaagabaaaadaaaaaadcaaaaapdcaabaaaacaaaaaahgapbaaaacaaaaaa
aceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialp
aaaaaaaaaaaaaaaaapaaaaahbcaabaaaaaaaaaaaegaabaaaacaaaaaaegaabaaa
acaaaaaaddaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaiadp
aaaaaaaibcaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaaabeaaaaaaaaaiadp
elaaaaafecaabaaaacaaaaaaakaabaaaaaaaaaaaaaaaaaalhcaabaaaadaaaaaa
egacbaiaebaaaaaaacaaaaaaaceaaaaaaaaaaaaaaaaaaaaaaaaaiadpaaaaaaaa
efaaaaajpcaabaaaaeaaaaaaogbkbaaaabaaaaaaeghobaaaabaaaaaaaagabaaa
aeaaaaaadcaaaaajhcaabaaaacaaaaaaegacbaaaaeaaaaaaegacbaaaadaaaaaa
egacbaaaacaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaaacaaaaaaegacbaaa
abaaaaaabaaaaaahccaabaaaaaaaaaaaegacbaaaacaaaaaajgahbaaaaaaaaaaa
deaaaaakdcaabaaaaaaaaaaaegaabaaaaaaaaaaaaceaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaacpaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaai
ecaabaaaaaaaaaaaakiacaaaaaaaaaaaaiaaaaaaabeaaaaaaaaaaaeddiaaaaah
bcaabaaaaaaaaaaaakaabaaaaaaaaaaackaabaaaaaaaaaaabjaaaaafbcaabaaa
aaaaaaaaakaabaaaaaaaaaaaaaaaaaaiecaabaaaaaaaaaaaakaabaiaebaaaaaa
aeaaaaaaabeaaaaaaaaaiadpefaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaa
eghobaaaadaaaaaaaagabaaaafaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaa
aaaaaaaaakaabaaaabaaaaaadiaaaaaiecaabaaaaaaaaaaackaabaaaaaaaaaaa
akiacaaaaaaaaaaaacaaaaaadiaaaaahbcaabaaaaaaaaaaackaabaaaaaaaaaaa
akaabaaaaaaaaaaadiaaaaajhcaabaaaabaaaaaaegiccaaaaaaaaaaaabaaaaaa
egiccaaaaaaaaaaaacaaaaaadiaaaaahncaabaaaaaaaaaaaagaabaaaaaaaaaaa
agajbaaaabaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaaeghobaaa
aaaaaaaaaagabaaaacaaaaaaaaaaaaahhcaabaaaabaaaaaaegacbaaaaeaaaaaa
egacbaaaabaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaa
aaaaaaaaabaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaaabaaaaaafgafbaaa
aaaaaaaaigadbaaaaaaaaaaaaoaaaaahdcaabaaaabaaaaaaegbabaaaaeaaaaaa
pgbpbaaaaeaaaaaaaaaaaaakdcaabaaaabaaaaaaegaabaaaabaaaaaaaceaaaaa
aaaaaadpaaaaaadpaaaaaaaaaaaaaaaaefaaaaajpcaabaaaabaaaaaaegaabaaa
abaaaaaaeghobaaaaeaaaaaaaagabaaaaaaaaaaadbaaaaahicaabaaaaaaaaaaa
abeaaaaaaaaaaaaackbabaaaaeaaaaaaabaaaaahicaabaaaaaaaaaaadkaabaaa
aaaaaaaaabeaaaaaaaaaiadpdiaaaaahicaabaaaaaaaaaaadkaabaaaabaaaaaa
dkaabaaaaaaaaaaabaaaaaahbcaabaaaabaaaaaaegbcbaaaaeaaaaaaegbcbaaa
aeaaaaaaefaaaaajpcaabaaaabaaaaaaagaabaaaabaaaaaaeghobaaaafaaaaaa
aagabaaaabaaaaaaapaaaaahicaabaaaaaaaaaaapgapbaaaaaaaaaaaagaabaaa
abaaaaaadiaaaaahhccabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaa
dgaaaaaficcabaaaaaaaaaaaabeaaaaaaaaaaaaadoaaaaabejfdeheojiaaaaaa
afaaaaaaaiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaa
imaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaa
aaaaaaaaadaaaaaaacaaaaaaahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaa
adaaaaaaahahaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapapaaaa
fdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaa
abaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaa
fdfgfpfegbhcghgfheaaklkl"
}
SubProgram "gles " {
Keywords { "SPOT" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "SPOT" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "SPOT" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 45 math, 6 textures
Keywords { "POINT_COOKIE" }
Vector 0 [_LightColor0]
Vector 1 [_SpecColor]
Float 2 [_Shininess]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightTextureB0] 2D 5
SetTexture 6 [_LightTexture0] CUBE 6
"!!ARBfp1.0
PARAM c[4] = { program.local[0..2],
		{ 0, 2, 1, 128 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEX R2.yw, fragment.texcoord[0], texture[2], 2D;
TEX R0.xyz, fragment.texcoord[0], texture[0], 2D;
TEX R1.xyz, fragment.texcoord[0].zwzw, texture[1], 2D;
TEX R1.w, fragment.texcoord[3], texture[6], CUBE;
TEX R2.x, fragment.texcoord[0], texture[4], 2D;
DP3 R0.w, fragment.texcoord[3], fragment.texcoord[3];
MAD R5.xy, R2.wyzw, c[3].y, -c[3].z;
DP3 R2.z, fragment.texcoord[1], fragment.texcoord[1];
RSQ R2.y, R2.z;
MUL R2.zw, R5.xyxy, R5.xyxy;
MUL R3.xyz, R2.y, fragment.texcoord[1];
ADD_SAT R2.z, R2, R2.w;
DP3 R2.y, fragment.texcoord[2], fragment.texcoord[2];
RSQ R2.y, R2.y;
MAD R4.xyz, R2.y, fragment.texcoord[2], R3;
DP3 R2.y, R4, R4;
RSQ R3.w, R2.y;
ADD R2.z, -R2, c[3];
RSQ R2.z, R2.z;
RCP R5.z, R2.z;
ADD R2.yzw, -R5.xxyz, c[3].xxxz;
MAD R5.xyz, R1, R2.yzww, R5;
MUL R4.xyz, R3.w, R4;
DP3 R2.y, R5, R4;
MAX R2.z, R2.y, c[3].x;
ADD R2.y, -R1.x, c[3].z;
ADD R1.xyz, R1, R0;
MUL R2.x, R2, R2.y;
MOV R2.w, c[3];
MUL R2.y, R2.w, c[2].x;
POW R2.y, R2.z, R2.y;
MUL R2.x, R2, c[1];
MUL R2.x, R2.y, R2;
DP3 R2.y, R5, R3;
MUL R1.xyz, R1, c[0];
MAX R0.x, R2.y, c[3];
MUL R0.xyz, R1, R0.x;
MOV R1.xyz, c[1];
MUL R1.xyz, R1, c[0];
MAD R0.xyz, R1, R2.x, R0;
MOV result.color.w, c[3].x;
TEX R0.w, R0.w, texture[5], 2D;
MUL R0.w, R0, R1;
MUL R0.w, R0, c[3].y;
MUL result.color.xyz, R0, R0.w;
END
# 45 instructions, 6 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 51 math, 6 textures
Keywords { "POINT_COOKIE" }
Vector 0 [_LightColor0]
Vector 1 [_SpecColor]
Float 2 [_Shininess]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightTextureB0] 2D 5
SetTexture 6 [_LightTexture0] CUBE 6
"ps_2_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s4
dcl_2d s5
dcl_cube s6
def c3, 2.00000000, -1.00000000, 1.00000000, 0.00000000
def c4, 128.00000000, 0, 0, 0
dcl t0
dcl t1.xyz
dcl t2.xyz
dcl t3.xyz
texld r2, t0, s0
texld r7, t0, s4
dp3 r0.x, t3, t3
mov r0.xy, r0.x
mov r1.y, t0.w
mov r1.x, t0.z
mov r3.xy, r1
mov r6.z, c3
mov r6.xy, c3.w
texld r8, r0, s5
texld r1, t0, s2
texld r3, r3, s1
texld r0, t3, s6
dp3_pp r1.x, t1, t1
rsq_pp r4.x, r1.x
add_pp r2.xyz, r3, r2
dp3_pp r1.x, t2, t2
mov r0.y, r1
mov r0.x, r1.w
mad_pp r5.xy, r0, c3.x, c3.y
mul_pp r0.xy, r5, r5
add_pp_sat r0.x, r0, r0.y
add_pp r0.x, -r0, c3.z
rsq_pp r0.x, r0.x
rcp_pp r5.z, r0.x
add_pp r6.xyz, -r5, r6
mad_pp r6.xyz, r3, r6, r5
mul_pp r4.xyz, r4.x, t1
rsq_pp r1.x, r1.x
mad_pp r1.xyz, r1.x, t2, r4
dp3_pp r0.x, r1, r1
rsq_pp r0.x, r0.x
mul_pp r1.xyz, r0.x, r1
mov_pp r0.x, c2
dp3_pp r1.x, r6, r1
mul_pp r0.x, c4, r0
max_pp r1.x, r1, c3.w
pow r5.x, r1.x, r0.x
add_pp r0.x, -r3, c3.z
mul r0.x, r7, r0
mov_pp r3.xyz, c0
mov r1.x, r5.x
mul r0.x, r0, c1
mul r0.x, r1, r0
dp3_pp r1.x, r6, r4
max_pp r1.x, r1, c3.w
mul_pp r2.xyz, r2, c0
mul_pp r2.xyz, r2, r1.x
mul r1.x, r8, r0.w
mul_pp r3.xyz, c1, r3
mul_pp r1.x, r1, c3
mad r0.xyz, r3, r0.x, r2
mul r0.xyz, r0, r1.x
mov_pp r0.w, c3
mov_pp oC0, r0
"
}
SubProgram "d3d11 " {
// Stats: 35 math, 6 textures
Keywords { "POINT_COOKIE" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_Clouds] 2D 4
SetTexture 2 [_BumpMap] 2D 3
SetTexture 3 [_Mask] 2D 5
SetTexture 4 [_LightTextureB0] 2D 1
SetTexture 5 [_LightTexture0] CUBE 0
ConstBuffer "$Globals" 192
Vector 16 [_LightColor0]
Vector 32 [_SpecColor]
Float 128 [_Shininess]
BindCB  "$Globals" 0
"ps_4_0
eefiecedcejfmalbdpdpbocimpcbfefklhppgdmiabaaaaaabaahaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefcaiagaaaaeaaaaaaaicabaaaafjaaaaaeegiocaaaaaaaaaaaajaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaa
acaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafkaaaaad
aagabaaaafaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaa
abaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaafibiaaaeaahabaaa
adaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaafidaaaaeaahabaaa
afaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaa
gcbaaaadhcbabaaaadaaaaaagcbaaaadhcbabaaaaeaaaaaagfaaaaadpccabaaa
aaaaaaaagiaaaaacafaaaaaabaaaaaahbcaabaaaaaaaaaaaegbcbaaaadaaaaaa
egbcbaaaadaaaaaaeeaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaabaaaaaah
ccaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaaeeaaaaafccaabaaa
aaaaaaaabkaabaaaaaaaaaaadiaaaaahocaabaaaaaaaaaaafgafbaaaaaaaaaaa
agbjbaaaacaaaaaadcaaaaajhcaabaaaabaaaaaaegbcbaaaadaaaaaaagaabaaa
aaaaaaaajgahbaaaaaaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaaabaaaaaa
egacbaaaabaaaaaaeeaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaah
hcaabaaaabaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaaefaaaaajpcaabaaa
acaaaaaaegbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaaadaaaaaadcaaaaap
dcaabaaaacaaaaaahgapbaaaacaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaa
aaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaaapaaaaahbcaabaaa
aaaaaaaaegaabaaaacaaaaaaegaabaaaacaaaaaaddaaaaahbcaabaaaaaaaaaaa
akaabaaaaaaaaaaaabeaaaaaaaaaiadpaaaaaaaibcaabaaaaaaaaaaaakaabaia
ebaaaaaaaaaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaaacaaaaaaakaabaaa
aaaaaaaaaaaaaaalhcaabaaaadaaaaaaegacbaiaebaaaaaaacaaaaaaaceaaaaa
aaaaaaaaaaaaaaaaaaaaiadpaaaaaaaaefaaaaajpcaabaaaaeaaaaaaogbkbaaa
abaaaaaaeghobaaaabaaaaaaaagabaaaaeaaaaaadcaaaaajhcaabaaaacaaaaaa
egacbaaaaeaaaaaaegacbaaaadaaaaaaegacbaaaacaaaaaabaaaaaahbcaabaaa
aaaaaaaaegacbaaaacaaaaaaegacbaaaabaaaaaabaaaaaahccaabaaaaaaaaaaa
egacbaaaacaaaaaajgahbaaaaaaaaaaadeaaaaakdcaabaaaaaaaaaaaegaabaaa
aaaaaaaaaceaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaacpaaaaafbcaabaaa
aaaaaaaaakaabaaaaaaaaaaadiaaaaaiecaabaaaaaaaaaaaakiacaaaaaaaaaaa
aiaaaaaaabeaaaaaaaaaaaeddiaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
ckaabaaaaaaaaaaabjaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaai
ecaabaaaaaaaaaaaakaabaiaebaaaaaaaeaaaaaaabeaaaaaaaaaiadpefaaaaaj
pcaabaaaabaaaaaaegbabaaaabaaaaaaeghobaaaadaaaaaaaagabaaaafaaaaaa
diaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaaabaaaaaadiaaaaai
ecaabaaaaaaaaaaackaabaaaaaaaaaaaakiacaaaaaaaaaaaacaaaaaadiaaaaah
bcaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaajhcaabaaa
abaaaaaaegiccaaaaaaaaaaaabaaaaaaegiccaaaaaaaaaaaacaaaaaadiaaaaah
ncaabaaaaaaaaaaaagaabaaaaaaaaaaaagajbaaaabaaaaaaefaaaaajpcaabaaa
abaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaacaaaaaaaaaaaaah
hcaabaaaabaaaaaaegacbaaaaeaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaa
abaaaaaaegacbaaaabaaaaaaegiccaaaaaaaaaaaabaaaaaadcaaaaajhcaabaaa
aaaaaaaaegacbaaaabaaaaaafgafbaaaaaaaaaaaigadbaaaaaaaaaaabaaaaaah
icaabaaaaaaaaaaaegbcbaaaaeaaaaaaegbcbaaaaeaaaaaaefaaaaajpcaabaaa
abaaaaaapgapbaaaaaaaaaaaeghobaaaaeaaaaaaaagabaaaabaaaaaaefaaaaaj
pcaabaaaacaaaaaaegbcbaaaaeaaaaaaeghobaaaafaaaaaaaagabaaaaaaaaaaa
apaaaaahicaabaaaaaaaaaaaagaabaaaabaaaaaapgapbaaaacaaaaaadiaaaaah
hccabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaadgaaaaaficcabaaa
aaaaaaaaabeaaaaaaaaaaaaadoaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 35 math, 6 textures
Keywords { "POINT_COOKIE" }
SetTexture 0 [_MainTex] 2D 2
SetTexture 1 [_Clouds] 2D 4
SetTexture 2 [_BumpMap] 2D 3
SetTexture 3 [_Mask] 2D 5
SetTexture 4 [_LightTextureB0] 2D 1
SetTexture 5 [_LightTexture0] CUBE 0
ConstBuffer "$Globals" 192
Vector 16 [_LightColor0]
Vector 32 [_SpecColor]
Float 128 [_Shininess]
BindCB  "$Globals" 0
"ps_4_0_level_9_1
eefiecedcefjilkmkcpfghiokgfmffpofekckloeabaaaaaamiakaaaaaeaaaaaa
daaaaaaaoeadaaaapeajaaaajeakaaaaebgpgodjkmadaaaakmadaaaaaaacpppp
fiadaaaafeaaaaaaacaadmaaaaaafeaaaaaafeaaagaaceaaaaaafeaaafaaaaaa
aeababaaaaacacaaacadadaaabaeaeaaadafafaaaaaaabaaacaaaaaaaaaaaaaa
aaaaaiaaabaaacaaaaaaaaaaaaacppppfbaaaaafadaaapkaaaaaaaeaaaaaialp
aaaaaaaaaaaaiadpfbaaaaafaeaaapkaaaaaaaaaaaaaaaaaaaaaiadpaaaaaaed
bpaaaaacaaaaaaiaaaaaaplabpaaaaacaaaaaaiaabaachlabpaaaaacaaaaaaia
acaachlabpaaaaacaaaaaaiaadaaahlabpaaaaacaaaaaajiaaaiapkabpaaaaac
aaaaaajaabaiapkabpaaaaacaaaaaajaacaiapkabpaaaaacaaaaaajaadaiapka
bpaaaaacaaaaaajaaeaiapkabpaaaaacaaaaaajaafaiapkaabaaaaacaaaaabia
aaaakklaabaaaaacaaaaaciaaaaapplaaiaaaaadabaaaiiaadaaoelaadaaoela
abaaaaacabaaadiaabaappiaecaaaaadacaacpiaaaaaoelaadaioekaecaaaaad
aaaacpiaaaaaoeiaaeaioekaecaaaaadadaaapiaaaaaoelaafaioekaecaaaaad
aeaacpiaaaaaoelaacaioekaecaaaaadabaaapiaabaaoeiaabaioekaecaaaaad
afaaapiaadaaoelaaaaioekaaiaaaaadaaaaciiaacaaoelaacaaoelaahaaaaac
aaaaciiaaaaappiaceaaaaacafaachiaabaaoelaaeaaaaaeagaachiaacaaoela
aaaappiaafaaoeiaceaaaaacahaachiaagaaoeiaaeaaaaaeagaacbiaacaappia
adaaaakaadaaffkaaeaaaaaeagaacciaacaaffiaadaaaakaadaaffkafkaaaaae
aaaadiiaagaaoeiaagaaoeiaadaakkkaacaaaaadaaaaciiaaaaappibadaappka
ahaaaaacaaaaciiaaaaappiaagaaaaacagaaceiaaaaappiabcaaaaaeacaachia
aaaaoeiaaeaaoekaagaaoeiaaiaaaaadaaaaciiaacaaoeiaahaaoeiaaiaaaaad
aeaaciiaacaaoeiaafaaoeiaalaaaaadabaacciaaeaappiaadaakkkaalaaaaad
aeaaaiiaaaaappiaadaakkkaabaaaaacaaaaaiiaaeaappkaafaaaaadaaaaaiia
aaaappiaacaaaakacaaaaaadabaaaeiaaeaappiaaaaappiaacaaaaadaaaaaiia
aaaaaaibadaappkaafaaaaadaaaaaiiaaaaappiaadaaaaiaafaaaaadaaaaciia
aaaappiaabaaaakaafaaaaadaaaaaiiaaaaappiaabaakkiaabaaaaacacaaahia
aaaaoekaafaaaaadacaaahiaacaaoeiaabaaoekaafaaaaadacaaahiaaaaappia
acaaoeiaacaaaaadaaaachiaaaaaoeiaaeaaoeiaafaaaaadaaaachiaaaaaoeia
aaaaoekaaeaaaaaeaaaaahiaaaaaoeiaabaaffiaacaaoeiaafaaaaadaaaaciia
abaaaaiaafaappiaacaaaaadaaaaaiiaaaaappiaaaaappiaafaaaaadaaaachia
aaaappiaaaaaoeiaabaaaaacaaaaaiiaadaakkkaabaaaaacaaaicpiaaaaaoeia
ppppaaaafdeieefcaiagaaaaeaaaaaaaicabaaaafjaaaaaeegiocaaaaaaaaaaa
ajaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaad
aagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaa
fkaaaaadaagabaaaafaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaae
aahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaafibiaaae
aahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaafidaaaae
aahabaaaafaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaadhcbabaaa
acaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadhcbabaaaaeaaaaaagfaaaaad
pccabaaaaaaaaaaagiaaaaacafaaaaaabaaaaaahbcaabaaaaaaaaaaaegbcbaaa
adaaaaaaegbcbaaaadaaaaaaeeaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
baaaaaahccaabaaaaaaaaaaaegbcbaaaacaaaaaaegbcbaaaacaaaaaaeeaaaaaf
ccaabaaaaaaaaaaabkaabaaaaaaaaaaadiaaaaahocaabaaaaaaaaaaafgafbaaa
aaaaaaaaagbjbaaaacaaaaaadcaaaaajhcaabaaaabaaaaaaegbcbaaaadaaaaaa
agaabaaaaaaaaaaajgahbaaaaaaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaa
abaaaaaaegacbaaaabaaaaaaeeaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
diaaaaahhcaabaaaabaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaaefaaaaaj
pcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaaadaaaaaa
dcaaaaapdcaabaaaacaaaaaahgapbaaaacaaaaaaaceaaaaaaaaaaaeaaaaaaaea
aaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaaapaaaaah
bcaabaaaaaaaaaaaegaabaaaacaaaaaaegaabaaaacaaaaaaddaaaaahbcaabaaa
aaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaiadpaaaaaaaibcaabaaaaaaaaaaa
akaabaiaebaaaaaaaaaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaaacaaaaaa
akaabaaaaaaaaaaaaaaaaaalhcaabaaaadaaaaaaegacbaiaebaaaaaaacaaaaaa
aceaaaaaaaaaaaaaaaaaaaaaaaaaiadpaaaaaaaaefaaaaajpcaabaaaaeaaaaaa
ogbkbaaaabaaaaaaeghobaaaabaaaaaaaagabaaaaeaaaaaadcaaaaajhcaabaaa
acaaaaaaegacbaaaaeaaaaaaegacbaaaadaaaaaaegacbaaaacaaaaaabaaaaaah
bcaabaaaaaaaaaaaegacbaaaacaaaaaaegacbaaaabaaaaaabaaaaaahccaabaaa
aaaaaaaaegacbaaaacaaaaaajgahbaaaaaaaaaaadeaaaaakdcaabaaaaaaaaaaa
egaabaaaaaaaaaaaaceaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaacpaaaaaf
bcaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaaiecaabaaaaaaaaaaaakiacaaa
aaaaaaaaaiaaaaaaabeaaaaaaaaaaaeddiaaaaahbcaabaaaaaaaaaaaakaabaaa
aaaaaaaackaabaaaaaaaaaaabjaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
aaaaaaaiecaabaaaaaaaaaaaakaabaiaebaaaaaaaeaaaaaaabeaaaaaaaaaiadp
efaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaaeghobaaaadaaaaaaaagabaaa
afaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaaabaaaaaa
diaaaaaiecaabaaaaaaaaaaackaabaaaaaaaaaaaakiacaaaaaaaaaaaacaaaaaa
diaaaaahbcaabaaaaaaaaaaackaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaaj
hcaabaaaabaaaaaaegiccaaaaaaaaaaaabaaaaaaegiccaaaaaaaaaaaacaaaaaa
diaaaaahncaabaaaaaaaaaaaagaabaaaaaaaaaaaagajbaaaabaaaaaaefaaaaaj
pcaabaaaabaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaacaaaaaa
aaaaaaahhcaabaaaabaaaaaaegacbaaaaeaaaaaaegacbaaaabaaaaaadiaaaaai
hcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaaaaaaaaaabaaaaaadcaaaaaj
hcaabaaaaaaaaaaaegacbaaaabaaaaaafgafbaaaaaaaaaaaigadbaaaaaaaaaaa
baaaaaahicaabaaaaaaaaaaaegbcbaaaaeaaaaaaegbcbaaaaeaaaaaaefaaaaaj
pcaabaaaabaaaaaapgapbaaaaaaaaaaaeghobaaaaeaaaaaaaagabaaaabaaaaaa
efaaaaajpcaabaaaacaaaaaaegbcbaaaaeaaaaaaeghobaaaafaaaaaaaagabaaa
aaaaaaaaapaaaaahicaabaaaaaaaaaaaagaabaaaabaaaaaapgapbaaaacaaaaaa
diaaaaahhccabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaadgaaaaaf
iccabaaaaaaaaaaaabeaaaaaaaaaaaaadoaaaaabejfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahahaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklkl"
}
SubProgram "gles " {
Keywords { "POINT_COOKIE" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "POINT_COOKIE" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "POINT_COOKIE" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 40 math, 5 textures
Keywords { "DIRECTIONAL_COOKIE" }
Vector 0 [_LightColor0]
Vector 1 [_SpecColor]
Float 2 [_Shininess]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightTexture0] 2D 5
"!!ARBfp1.0
PARAM c[4] = { program.local[0..2],
		{ 0, 2, 1, 128 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEX R2.yw, fragment.texcoord[0], texture[2], 2D;
TEX R1.xyz, fragment.texcoord[0].zwzw, texture[1], 2D;
TEX R0.xyz, fragment.texcoord[0], texture[0], 2D;
TEX R2.x, fragment.texcoord[0], texture[4], 2D;
TEX R0.w, fragment.texcoord[3], texture[5], 2D;
MAD R4.xy, R2.wyzw, c[3].y, -c[3].z;
MUL R2.zw, R4.xyxy, R4.xyxy;
ADD_SAT R2.y, R2.z, R2.w;
DP3 R1.w, fragment.texcoord[2], fragment.texcoord[2];
ADD R2.y, -R2, c[3].z;
RSQ R2.y, R2.y;
RCP R4.z, R2.y;
ADD R2.yzw, -R4.xxyz, c[3].xxxz;
MAD R4.xyz, R1, R2.yzww, R4;
ADD R0.xyz, R1, R0;
RSQ R1.w, R1.w;
MOV R3.xyz, fragment.texcoord[1];
MAD R3.xyz, R1.w, fragment.texcoord[2], R3;
DP3 R1.w, R3, R3;
RSQ R1.w, R1.w;
MUL R3.xyz, R1.w, R3;
DP3 R1.w, R4, R3;
MAX R2.y, R1.w, c[3].x;
ADD R1.w, -R1.x, c[3].z;
MUL R1.w, R2.x, R1;
MOV R2.z, c[3].w;
MUL R2.x, R2.z, c[2];
POW R2.x, R2.y, R2.x;
MUL R1.w, R1, c[1].x;
MUL R1.w, R2.x, R1;
DP3 R2.x, R4, fragment.texcoord[1];
MAX R1.x, R2, c[3];
MUL R2.xyz, R0, c[0];
MOV R0.xyz, c[1];
MUL R1.xyz, R2, R1.x;
MUL R2.xyz, R0, c[0];
MUL R0.x, R0.w, c[3].y;
MAD R1.xyz, R2, R1.w, R1;
MUL result.color.xyz, R1, R0.x;
MOV result.color.w, c[3].x;
END
# 40 instructions, 5 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 46 math, 5 textures
Keywords { "DIRECTIONAL_COOKIE" }
Vector 0 [_LightColor0]
Vector 1 [_SpecColor]
Float 2 [_Shininess]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightTexture0] 2D 5
"ps_2_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s4
dcl_2d s5
def c3, 2.00000000, -1.00000000, 1.00000000, 0.00000000
def c4, 128.00000000, 0, 0, 0
dcl t0
dcl t1.xyz
dcl t2.xyz
dcl t3.xy
texld r1, t0, s2
texld r2, t0, s0
texld r6, t0, s4
dp3_pp r1.x, t2, t2
mov_pp r5.xyz, t1
mov r0.y, t0.w
mov r0.x, t0.z
mov r3.xy, r0
rsq_pp r1.x, r1.x
texld r0, t3, s5
texld r3, r3, s1
mov r0.y, r1
mad_pp r1.xyz, r1.x, t2, r5
mov r0.x, r1.w
mad_pp r4.xy, r0, c3.x, c3.y
mul_pp r0.xy, r4, r4
add_pp_sat r0.x, r0, r0.y
add_pp r2.xyz, r3, r2
add_pp r0.x, -r0, c3.z
rsq_pp r0.x, r0.x
rcp_pp r4.z, r0.x
dp3_pp r0.x, r1, r1
rsq_pp r0.x, r0.x
mul_pp r1.xyz, r0.x, r1
mov_pp r0.x, c2
mul_pp r0.x, c4, r0
mul_pp r2.xyz, r2, c0
mov r5.z, c3
mov r5.xy, c3.w
add_pp r5.xyz, -r4, r5
mad_pp r4.xyz, r3, r5, r4
dp3_pp r1.x, r4, r1
max_pp r1.x, r1, c3.w
pow r5.x, r1.x, r0.x
add_pp r0.x, -r3, c3.z
mul r0.x, r6, r0
mov r1.x, r5.x
mul r0.x, r0, c1
mul r0.x, r1, r0
dp3_pp r1.x, r4, t1
max_pp r1.x, r1, c3.w
mul_pp r3.xyz, r2, r1.x
mul_pp r1.x, r0.w, c3
mov_pp r2.xyz, c0
mul_pp r2.xyz, c1, r2
mad r0.xyz, r2, r0.x, r3
mul r0.xyz, r0, r1.x
mov_pp r0.w, c3
mov_pp oC0, r0
"
}
SubProgram "d3d11 " {
// Stats: 31 math, 5 textures
Keywords { "DIRECTIONAL_COOKIE" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_Clouds] 2D 3
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Mask] 2D 4
SetTexture 4 [_LightTexture0] 2D 0
ConstBuffer "$Globals" 192
Vector 16 [_LightColor0]
Vector 32 [_SpecColor]
Float 128 [_Shininess]
BindCB  "$Globals" 0
"ps_4_0
eefiecediapdhklpkcajepcajnknmmjahadcijknabaaaaaagiagaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaadadaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefcgaafaaaaeaaaaaaafiabaaaafjaaaaaeegiocaaaaaaaaaaaajaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaa
acaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafibiaaae
aahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaae
aahabaaaacaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaafibiaaae
aahabaaaaeaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaadhcbabaaa
acaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaaddcbabaaaaeaaaaaagfaaaaad
pccabaaaaaaaaaaagiaaaaacaeaaaaaabaaaaaahbcaabaaaaaaaaaaaegbcbaaa
adaaaaaaegbcbaaaadaaaaaaeeaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
dcaaaaajhcaabaaaaaaaaaaaegbcbaaaadaaaaaaagaabaaaaaaaaaaaegbcbaaa
acaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaa
eeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaa
abaaaaaaeghobaaaacaaaaaaaagabaaaacaaaaaadcaaaaapdcaabaaaabaaaaaa
hgapbaaaabaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaa
aaaaialpaaaaialpaaaaaaaaaaaaaaaaapaaaaahicaabaaaaaaaaaaaegaabaaa
abaaaaaaegaabaaaabaaaaaaddaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaa
abeaaaaaaaaaiadpaaaaaaaiicaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaa
abeaaaaaaaaaiadpelaaaaafecaabaaaabaaaaaadkaabaaaaaaaaaaaaaaaaaal
hcaabaaaacaaaaaaegacbaiaebaaaaaaabaaaaaaaceaaaaaaaaaaaaaaaaaaaaa
aaaaiadpaaaaaaaaefaaaaajpcaabaaaadaaaaaaogbkbaaaabaaaaaaeghobaaa
abaaaaaaaagabaaaadaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaaadaaaaaa
egacbaaaacaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaa
abaaaaaaegacbaaaaaaaaaaabaaaaaahccaabaaaaaaaaaaaegacbaaaabaaaaaa
egbcbaaaacaaaaaadeaaaaakdcaabaaaaaaaaaaaegaabaaaaaaaaaaaaceaaaaa
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaacpaaaaafbcaabaaaaaaaaaaaakaabaaa
aaaaaaaadiaaaaaiecaabaaaaaaaaaaaakiacaaaaaaaaaaaaiaaaaaaabeaaaaa
aaaaaaeddiaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaackaabaaaaaaaaaaa
bjaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaaiecaabaaaaaaaaaaa
akaabaiaebaaaaaaadaaaaaaabeaaaaaaaaaiadpefaaaaajpcaabaaaabaaaaaa
egbabaaaabaaaaaaeghobaaaadaaaaaaaagabaaaaeaaaaaadiaaaaahecaabaaa
aaaaaaaackaabaaaaaaaaaaaakaabaaaabaaaaaadiaaaaaiecaabaaaaaaaaaaa
ckaabaaaaaaaaaaaakiacaaaaaaaaaaaacaaaaaadiaaaaahbcaabaaaaaaaaaaa
ckaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaajhcaabaaaabaaaaaaegiccaaa
aaaaaaaaabaaaaaaegiccaaaaaaaaaaaacaaaaaadiaaaaahncaabaaaaaaaaaaa
agaabaaaaaaaaaaaagajbaaaabaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaa
abaaaaaaeghobaaaaaaaaaaaaagabaaaabaaaaaaaaaaaaahhcaabaaaabaaaaaa
egacbaaaadaaaaaaegacbaaaabaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaa
abaaaaaaegiccaaaaaaaaaaaabaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaa
abaaaaaafgafbaaaaaaaaaaaigadbaaaaaaaaaaaefaaaaajpcaabaaaabaaaaaa
egbabaaaaeaaaaaaeghobaaaaeaaaaaaaagabaaaaaaaaaaaaaaaaaahicaabaaa
aaaaaaaadkaabaaaabaaaaaadkaabaaaabaaaaaadiaaaaahhccabaaaaaaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaadgaaaaaficcabaaaaaaaaaaaabeaaaaa
aaaaaaaadoaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 31 math, 5 textures
Keywords { "DIRECTIONAL_COOKIE" }
SetTexture 0 [_MainTex] 2D 1
SetTexture 1 [_Clouds] 2D 3
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Mask] 2D 4
SetTexture 4 [_LightTexture0] 2D 0
ConstBuffer "$Globals" 192
Vector 16 [_LightColor0]
Vector 32 [_SpecColor]
Float 128 [_Shininess]
BindCB  "$Globals" 0
"ps_4_0_level_9_1
eefiecedoneledfpkpcbjeodpkmcejmgjmajidpkabaaaaaaneajaaaaaeaaaaaa
daaaaaaajiadaaaaaaajaaaakaajaaaaebgpgodjgaadaaaagaadaaaaaaacpppp
baadaaaafaaaaaaaacaadiaaaaaafaaaaaaafaaaafaaceaaaaaafaaaaeaaaaaa
aaababaaacacacaaabadadaaadaeaeaaaaaaabaaacaaaaaaaaaaaaaaaaaaaiaa
abaaacaaaaaaaaaaaaacppppfbaaaaafadaaapkaaaaaaaeaaaaaialpaaaaaaaa
aaaaiadpfbaaaaafaeaaapkaaaaaaaaaaaaaaaaaaaaaiadpaaaaaaedbpaaaaac
aaaaaaiaaaaaaplabpaaaaacaaaaaaiaabaachlabpaaaaacaaaaaaiaacaachla
bpaaaaacaaaaaaiaadaaadlabpaaaaacaaaaaajaaaaiapkabpaaaaacaaaaaaja
abaiapkabpaaaaacaaaaaajaacaiapkabpaaaaacaaaaaajaadaiapkabpaaaaac
aaaaaajaaeaiapkaabaaaaacaaaaabiaaaaakklaabaaaaacaaaaaciaaaaappla
ecaaaaadabaacpiaaaaaoelaacaioekaecaaaaadaaaacpiaaaaaoeiaadaioeka
ecaaaaadacaaapiaaaaaoelaaeaioekaecaaaaadadaacpiaaaaaoelaabaioeka
ecaaaaadaeaacpiaadaaoelaaaaioekaaiaaaaadaaaaciiaacaaoelaacaaoela
ahaaaaacaaaaciiaaaaappiaabaaaaacaeaaahiaacaaoelaaeaaaaaeaeaachia
aeaaoeiaaaaappiaabaaoelaceaaaaacafaachiaaeaaoeiaaeaaaaaeaeaacbia
abaappiaadaaaakaadaaffkaaeaaaaaeaeaacciaabaaffiaadaaaakaadaaffka
fkaaaaaeaaaadiiaaeaaoeiaaeaaoeiaadaakkkaacaaaaadaaaaciiaaaaappib
adaappkaahaaaaacaaaaciiaaaaappiaagaaaaacaeaaceiaaaaappiabcaaaaae
abaachiaaaaaoeiaaeaaoekaaeaaoeiaaiaaaaadaaaaciiaabaaoeiaafaaoeia
aiaaaaadadaaciiaabaaoeiaabaaoelaalaaaaadabaacbiaadaappiaadaakkka
alaaaaadadaaaiiaaaaappiaadaakkkaabaaaaacaaaaaiiaaeaappkaafaaaaad
aaaaaiiaaaaappiaacaaaakacaaaaaadabaaaciaadaappiaaaaappiaacaaaaad
aaaaaiiaaaaaaaibadaappkaafaaaaadaaaaaiiaaaaappiaacaaaaiaafaaaaad
aaaaciiaaaaappiaabaaaakaafaaaaadaaaaaiiaaaaappiaabaaffiaabaaaaac
acaaahiaaaaaoekaafaaaaadabaaaoiaacaabliaabaablkaafaaaaadabaaaoia
aaaappiaabaaoeiaacaaaaadaaaachiaaaaaoeiaadaaoeiaafaaaaadaaaachia
aaaaoeiaaaaaoekaaeaaaaaeaaaaahiaaaaaoeiaabaaaaiaabaabliaacaaaaad
aaaaaiiaaeaappiaaeaappiaafaaaaadaaaachiaaaaappiaaaaaoeiaabaaaaac
aaaaaiiaadaakkkaabaaaaacaaaicpiaaaaaoeiappppaaaafdeieefcgaafaaaa
eaaaaaaafiabaaaafjaaaaaeegiocaaaaaaaaaaaajaaaaaafkaaaaadaagabaaa
aaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaad
aagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafibiaaaeaahabaaaaaaaaaaa
ffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaa
ffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaa
ffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaad
hcbabaaaadaaaaaagcbaaaaddcbabaaaaeaaaaaagfaaaaadpccabaaaaaaaaaaa
giaaaaacaeaaaaaabaaaaaahbcaabaaaaaaaaaaaegbcbaaaadaaaaaaegbcbaaa
adaaaaaaeeaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaadcaaaaajhcaabaaa
aaaaaaaaegbcbaaaadaaaaaaagaabaaaaaaaaaaaegbcbaaaacaaaaaabaaaaaah
icaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaaaaaaaaaeeaaaaaficaabaaa
aaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaapgapbaaaaaaaaaaa
egacbaaaaaaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaaeghobaaa
acaaaaaaaagabaaaacaaaaaadcaaaaapdcaabaaaabaaaaaahgapbaaaabaaaaaa
aceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialp
aaaaaaaaaaaaaaaaapaaaaahicaabaaaaaaaaaaaegaabaaaabaaaaaaegaabaaa
abaaaaaaddaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaiadp
aaaaaaaiicaabaaaaaaaaaaadkaabaiaebaaaaaaaaaaaaaaabeaaaaaaaaaiadp
elaaaaafecaabaaaabaaaaaadkaabaaaaaaaaaaaaaaaaaalhcaabaaaacaaaaaa
egacbaiaebaaaaaaabaaaaaaaceaaaaaaaaaaaaaaaaaaaaaaaaaiadpaaaaaaaa
efaaaaajpcaabaaaadaaaaaaogbkbaaaabaaaaaaeghobaaaabaaaaaaaagabaaa
adaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaaadaaaaaaegacbaaaacaaaaaa
egacbaaaabaaaaaabaaaaaahbcaabaaaaaaaaaaaegacbaaaabaaaaaaegacbaaa
aaaaaaaabaaaaaahccaabaaaaaaaaaaaegacbaaaabaaaaaaegbcbaaaacaaaaaa
deaaaaakdcaabaaaaaaaaaaaegaabaaaaaaaaaaaaceaaaaaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaacpaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaai
ecaabaaaaaaaaaaaakiacaaaaaaaaaaaaiaaaaaaabeaaaaaaaaaaaeddiaaaaah
bcaabaaaaaaaaaaaakaabaaaaaaaaaaackaabaaaaaaaaaaabjaaaaafbcaabaaa
aaaaaaaaakaabaaaaaaaaaaaaaaaaaaiecaabaaaaaaaaaaaakaabaiaebaaaaaa
adaaaaaaabeaaaaaaaaaiadpefaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaa
eghobaaaadaaaaaaaagabaaaaeaaaaaadiaaaaahecaabaaaaaaaaaaackaabaaa
aaaaaaaaakaabaaaabaaaaaadiaaaaaiecaabaaaaaaaaaaackaabaaaaaaaaaaa
akiacaaaaaaaaaaaacaaaaaadiaaaaahbcaabaaaaaaaaaaackaabaaaaaaaaaaa
akaabaaaaaaaaaaadiaaaaajhcaabaaaabaaaaaaegiccaaaaaaaaaaaabaaaaaa
egiccaaaaaaaaaaaacaaaaaadiaaaaahncaabaaaaaaaaaaaagaabaaaaaaaaaaa
agajbaaaabaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaaeghobaaa
aaaaaaaaaagabaaaabaaaaaaaaaaaaahhcaabaaaabaaaaaaegacbaaaadaaaaaa
egacbaaaabaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaa
aaaaaaaaabaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaaabaaaaaafgafbaaa
aaaaaaaaigadbaaaaaaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaaeaaaaaa
eghobaaaaeaaaaaaaagabaaaaaaaaaaaaaaaaaahicaabaaaaaaaaaaadkaabaaa
abaaaaaadkaabaaaabaaaaaadiaaaaahhccabaaaaaaaaaaapgapbaaaaaaaaaaa
egacbaaaaaaaaaaadgaaaaaficcabaaaaaaaaaaaabeaaaaaaaaaaaaadoaaaaab
ejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapapaaaa
imaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaahahaaaaimaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaahahaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaadadaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl
epfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
aaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl"
}
SubProgram "gles " {
Keywords { "DIRECTIONAL_COOKIE" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "DIRECTIONAL_COOKIE" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "DIRECTIONAL_COOKIE" }
"!!GLES3"
}
}
 }


 // Stats for Vertex shader:
 //       d3d11 : 21 math
 //    d3d11_9x : 21 math
 //        d3d9 : 23 math
 //      opengl : 22 math
 // Stats for Fragment shader:
 //       d3d11 : 11 math, 2 texture
 //    d3d11_9x : 11 math, 2 texture
 //        d3d9 : 19 math, 2 texture
 //      opengl : 15 math, 2 texture
 Pass {
  Name "PREPASS"
  Tags { "LIGHTMODE"="PrePassBase" "RenderType"="Opaque" }
  Fog { Mode Off }
Program "vp" {
SubProgram "opengl " {
// Stats: 22 math
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" ATTR14
Matrix 5 [_Object2World]
Vector 9 [unity_Scale]
Vector 10 [_MainTex_ST]
Vector 11 [_Clouds_ST]
"!!ARBvp1.0
PARAM c[12] = { program.local[0],
		state.matrix.mvp,
		program.local[5..11] };
TEMP R0;
TEMP R1;
MOV R0.xyz, vertex.attrib[14];
MUL R1.xyz, vertex.normal.zxyw, R0.yzxw;
MAD R0.xyz, vertex.normal.yzxw, R0.zxyw, -R1;
MUL R1.xyz, R0, vertex.attrib[14].w;
DP3 R0.y, R1, c[5];
DP3 R0.x, vertex.attrib[14], c[5];
DP3 R0.z, vertex.normal, c[5];
MUL result.texcoord[1].xyz, R0, c[9].w;
DP3 R0.y, R1, c[6];
DP3 R0.x, vertex.attrib[14], c[6];
DP3 R0.z, vertex.normal, c[6];
MUL result.texcoord[2].xyz, R0, c[9].w;
DP3 R0.y, R1, c[7];
DP3 R0.x, vertex.attrib[14], c[7];
DP3 R0.z, vertex.normal, c[7];
MUL result.texcoord[3].xyz, R0, c[9].w;
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[11].xyxy, c[11];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[10], c[10].zwzw;
DP4 result.position.w, vertex.position, c[4];
DP4 result.position.z, vertex.position, c[3];
DP4 result.position.y, vertex.position, c[2];
DP4 result.position.x, vertex.position, c[1];
END
# 22 instructions, 2 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 23 math
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Vector 8 [unity_Scale]
Vector 9 [_MainTex_ST]
Vector 10 [_Clouds_ST]
"vs_2_0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r0.xyz, v2.yzxw, r0.zxyw, -r1
mul r1.xyz, r0, v1.w
dp3 r0.y, r1, c4
dp3 r0.x, v1, c4
dp3 r0.z, v2, c4
mul oT1.xyz, r0, c8.w
dp3 r0.y, r1, c5
dp3 r0.x, v1, c5
dp3 r0.z, v2, c5
mul oT2.xyz, r0, c8.w
dp3 r0.y, r1, c6
dp3 r0.x, v1, c6
dp3 r0.z, v2, c6
mul oT3.xyz, r0, c8.w
mad oT0.zw, v3.xyxy, c10.xyxy, c10
mad oT0.xy, v3, c9, c9.zwzw
dp4 oPos.w, v0, c3
dp4 oPos.z, v0, c2
dp4 oPos.y, v0, c1
dp4 oPos.x, v0, c0
"
}
SubProgram "d3d11 " {
// Stats: 21 math
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 128
Vector 96 [_MainTex_ST]
Vector 112 [_Clouds_ST]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerDraw" 1
"vs_4_0
eefiecedniololgkhadieadhamdjkeadgaihnleoabaaaaaameafaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcciaeaaaaeaaaabaa
akabaaaafjaaaaaeegiocaaaaaaaaaaaaiaaaaaafjaaaaaeegiocaaaabaaaaaa
bfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaad
hcbabaaaacaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaad
hccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaagiaaaaacadaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaabaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaabaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaabaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaaaaaaaaaegiocaaaabaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaa
egbabaaaadaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaa
dcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaahaaaaaa
kgiocaaaaaaaaaaaahaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaa
cgbjbaaaacaaaaaadcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaa
abaaaaaaegacbaiaebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaa
aaaaaaaapgbpbaaaabaaaaaadgaaaaagbcaabaaaabaaaaaaakiacaaaabaaaaaa
amaaaaaadgaaaaagccaabaaaabaaaaaaakiacaaaabaaaaaaanaaaaaadgaaaaag
ecaabaaaabaaaaaaakiacaaaabaaaaaaaoaaaaaabaaaaaahccaabaaaacaaaaaa
egacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaacaaaaaaegbcbaaa
abaaaaaaegacbaaaabaaaaaabaaaaaahecaabaaaacaaaaaaegbcbaaaacaaaaaa
egacbaaaabaaaaaadiaaaaaihccabaaaacaaaaaaegacbaaaacaaaaaapgipcaaa
abaaaaaabeaaaaaadgaaaaagbcaabaaaabaaaaaabkiacaaaabaaaaaaamaaaaaa
dgaaaaagccaabaaaabaaaaaabkiacaaaabaaaaaaanaaaaaadgaaaaagecaabaaa
abaaaaaabkiacaaaabaaaaaaaoaaaaaabaaaaaahccaabaaaacaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaabaaaaaahbcaabaaaacaaaaaaegbcbaaaabaaaaaa
egacbaaaabaaaaaabaaaaaahecaabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaa
abaaaaaadiaaaaaihccabaaaadaaaaaaegacbaaaacaaaaaapgipcaaaabaaaaaa
beaaaaaadgaaaaagbcaabaaaabaaaaaackiacaaaabaaaaaaamaaaaaadgaaaaag
ccaabaaaabaaaaaackiacaaaabaaaaaaanaaaaaadgaaaaagecaabaaaabaaaaaa
ckiacaaaabaaaaaaaoaaaaaabaaaaaahccaabaaaaaaaaaaaegacbaaaaaaaaaaa
egacbaaaabaaaaaabaaaaaahbcaabaaaaaaaaaaaegbcbaaaabaaaaaaegacbaaa
abaaaaaabaaaaaahecaabaaaaaaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaa
diaaaaaihccabaaaaeaaaaaaegacbaaaaaaaaaaapgipcaaaabaaaaaabeaaaaaa
doaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 21 math
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 128
Vector 96 [_MainTex_ST]
Vector 112 [_Clouds_ST]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerDraw" 1
"vs_4_0_level_9_1
eefiecedilfbdgkmcheeagepgepgddppaghhkkibabaaaaaagaaiaaaaaeaaaaaa
daaaaaaamiacaaaapiagaaaamaahaaaaebgpgodjjaacaaaajaacaaaaaaacpopp
diacaaaafiaaaaaaaeaaceaaaaaafeaaaaaafeaaaaaaceaaabaafeaaaaaaagaa
acaaabaaaaaaaaaaabaaaaaaaeaaadaaaaaaaaaaabaaamaaadaaahaaaaaaaaaa
abaabeaaabaaakaaaaaaaaaaaaaaaaaaaaacpoppbpaaaaacafaaaaiaaaaaapja
bpaaaaacafaaabiaabaaapjabpaaaaacafaaaciaacaaapjabpaaaaacafaaadia
adaaapjaaeaaaaaeaaaaadoaadaaoejaabaaoekaabaaookaaeaaaaaeaaaaamoa
adaaeejaacaaeekaacaaoekaabaaaaacaaaaahiaabaaoejaafaaaaadabaaahia
aaaamjiaacaancjaaeaaaaaeaaaaahiaacaamjjaaaaanciaabaaoeibafaaaaad
aaaaahiaaaaaoeiaabaappjaabaaaaacabaaabiaahaaaakaabaaaaacabaaacia
aiaaaakaabaaaaacabaaaeiaajaaaakaaiaaaaadacaaaciaaaaaoeiaabaaoeia
aiaaaaadacaaabiaabaaoejaabaaoeiaaiaaaaadacaaaeiaacaaoejaabaaoeia
afaaaaadabaaahoaacaaoeiaakaappkaabaaaaacabaaabiaahaaffkaabaaaaac
abaaaciaaiaaffkaabaaaaacabaaaeiaajaaffkaaiaaaaadacaaaciaaaaaoeia
abaaoeiaaiaaaaadacaaabiaabaaoejaabaaoeiaaiaaaaadacaaaeiaacaaoeja
abaaoeiaafaaaaadacaaahoaacaaoeiaakaappkaabaaaaacabaaabiaahaakkka
abaaaaacabaaaciaaiaakkkaabaaaaacabaaaeiaajaakkkaaiaaaaadaaaaacia
aaaaoeiaabaaoeiaaiaaaaadaaaaabiaabaaoejaabaaoeiaaiaaaaadaaaaaeia
acaaoejaabaaoeiaafaaaaadadaaahoaaaaaoeiaakaappkaafaaaaadaaaaapia
aaaaffjaaeaaoekaaeaaaaaeaaaaapiaadaaoekaaaaaaajaaaaaoeiaaeaaaaae
aaaaapiaafaaoekaaaaakkjaaaaaoeiaaeaaaaaeaaaaapiaagaaoekaaaaappja
aaaaoeiaaeaaaaaeaaaaadmaaaaappiaaaaaoekaaaaaoeiaabaaaaacaaaaamma
aaaaoeiappppaaaafdeieefcciaeaaaaeaaaabaaakabaaaafjaaaaaeegiocaaa
aaaaaaaaaiaaaaaafjaaaaaeegiocaaaabaaaaaabfaaaaaafpaaaaadpcbabaaa
aaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaad
dcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaadpccabaaa
abaaaaaagfaaaaadhccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaagfaaaaad
hccabaaaaeaaaaaagiaaaaacadaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaabaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
abaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaabaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpccabaaaaaaaaaaaegiocaaaabaaaaaaadaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaa
aaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaadcaaaaalmccabaaaabaaaaaa
agbebaaaadaaaaaaagiecaaaaaaaaaaaahaaaaaakgiocaaaaaaaaaaaahaaaaaa
diaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaadcaaaaak
hcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaiaebaaaaaa
aaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaapgbpbaaaabaaaaaa
dgaaaaagbcaabaaaabaaaaaaakiacaaaabaaaaaaamaaaaaadgaaaaagccaabaaa
abaaaaaaakiacaaaabaaaaaaanaaaaaadgaaaaagecaabaaaabaaaaaaakiacaaa
abaaaaaaaoaaaaaabaaaaaahccaabaaaacaaaaaaegacbaaaaaaaaaaaegacbaaa
abaaaaaabaaaaaahbcaabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaa
baaaaaahecaabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaai
hccabaaaacaaaaaaegacbaaaacaaaaaapgipcaaaabaaaaaabeaaaaaadgaaaaag
bcaabaaaabaaaaaabkiacaaaabaaaaaaamaaaaaadgaaaaagccaabaaaabaaaaaa
bkiacaaaabaaaaaaanaaaaaadgaaaaagecaabaaaabaaaaaabkiacaaaabaaaaaa
aoaaaaaabaaaaaahccaabaaaacaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaa
baaaaaahbcaabaaaacaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaah
ecaabaaaacaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaaihccabaaa
adaaaaaaegacbaaaacaaaaaapgipcaaaabaaaaaabeaaaaaadgaaaaagbcaabaaa
abaaaaaackiacaaaabaaaaaaamaaaaaadgaaaaagccaabaaaabaaaaaackiacaaa
abaaaaaaanaaaaaadgaaaaagecaabaaaabaaaaaackiacaaaabaaaaaaaoaaaaaa
baaaaaahccaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaabaaaaaah
bcaabaaaaaaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaabaaaaaahecaabaaa
aaaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaadiaaaaaihccabaaaaeaaaaaa
egacbaaaaaaaaaaapgipcaaaabaaaaaabeaaaaaadoaaaaabejfdeheomaaaaaaa
agaaaaaaaiaaaaaajiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaa
kbaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaacaaaaaaahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
adaaaaaaapadaaaalaaaaaaaabaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaa
ljaaaaaaaaaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeo
aafeebeoehefeofeaaeoepfcenebemaafeeffiedepepfceeaaedepemepfcaakl
epfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaa
imaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaahaiaaaaimaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaahaiaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaahaiaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl
"
}
SubProgram "gles " {
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  tmpvar_4 = tmpvar_1.xyz;
  tmpvar_5 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_4.x;
  tmpvar_6[0].y = tmpvar_5.x;
  tmpvar_6[0].z = tmpvar_2.x;
  tmpvar_6[1].x = tmpvar_4.y;
  tmpvar_6[1].y = tmpvar_5.y;
  tmpvar_6[1].z = tmpvar_2.y;
  tmpvar_6[2].x = tmpvar_4.z;
  tmpvar_6[2].y = tmpvar_5.z;
  tmpvar_6[2].z = tmpvar_2.z;
  vec3 v_7;
  v_7.x = _Object2World[0].x;
  v_7.y = _Object2World[1].x;
  v_7.z = _Object2World[2].x;
  vec3 v_8;
  v_8.x = _Object2World[0].y;
  v_8.y = _Object2World[1].y;
  v_8.z = _Object2World[2].y;
  vec3 v_9;
  v_9.x = _Object2World[0].z;
  v_9.y = _Object2World[1].z;
  v_9.z = _Object2World[2].z;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = ((tmpvar_6 * v_7) * unity_Scale.w);
  xlv_TEXCOORD2 = ((tmpvar_6 * v_8) * unity_Scale.w);
  xlv_TEXCOORD3 = ((tmpvar_6 * v_9) * unity_Scale.w);
}



#endif
#ifdef FRAGMENT

uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform lowp float _Shininess;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 res_1;
  lowp vec3 worldN_2;
  lowp vec3 tmpvar_3;
  mediump float tmpvar_4;
  mediump vec3 clouds_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_5 = tmpvar_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_8;
  tmpvar_8 = mix (tmpvar_7, vec3(0.0, 0.0, 1.0), clouds_5);
  tmpvar_3 = tmpvar_8;
  tmpvar_4 = _Shininess;
  highp float tmpvar_9;
  tmpvar_9 = dot (xlv_TEXCOORD1, tmpvar_3);
  worldN_2.x = tmpvar_9;
  highp float tmpvar_10;
  tmpvar_10 = dot (xlv_TEXCOORD2, tmpvar_3);
  worldN_2.y = tmpvar_10;
  highp float tmpvar_11;
  tmpvar_11 = dot (xlv_TEXCOORD3, tmpvar_3);
  worldN_2.z = tmpvar_11;
  res_1.xyz = ((worldN_2 * 0.5) + 0.5);
  res_1.w = tmpvar_4;
  gl_FragData[0] = res_1;
}



#endif"
}
SubProgram "glesdesktop " {
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  tmpvar_4 = tmpvar_1.xyz;
  tmpvar_5 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_4.x;
  tmpvar_6[0].y = tmpvar_5.x;
  tmpvar_6[0].z = tmpvar_2.x;
  tmpvar_6[1].x = tmpvar_4.y;
  tmpvar_6[1].y = tmpvar_5.y;
  tmpvar_6[1].z = tmpvar_2.y;
  tmpvar_6[2].x = tmpvar_4.z;
  tmpvar_6[2].y = tmpvar_5.z;
  tmpvar_6[2].z = tmpvar_2.z;
  vec3 v_7;
  v_7.x = _Object2World[0].x;
  v_7.y = _Object2World[1].x;
  v_7.z = _Object2World[2].x;
  vec3 v_8;
  v_8.x = _Object2World[0].y;
  v_8.y = _Object2World[1].y;
  v_8.z = _Object2World[2].y;
  vec3 v_9;
  v_9.x = _Object2World[0].z;
  v_9.y = _Object2World[1].z;
  v_9.z = _Object2World[2].z;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = ((tmpvar_6 * v_7) * unity_Scale.w);
  xlv_TEXCOORD2 = ((tmpvar_6 * v_8) * unity_Scale.w);
  xlv_TEXCOORD3 = ((tmpvar_6 * v_9) * unity_Scale.w);
}



#endif
#ifdef FRAGMENT

uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform lowp float _Shininess;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec3 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 res_1;
  lowp vec3 worldN_2;
  lowp vec3 tmpvar_3;
  mediump float tmpvar_4;
  mediump vec3 clouds_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_5 = tmpvar_6;
  lowp vec3 normal_7;
  normal_7.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_7.z = sqrt((1.0 - clamp (dot (normal_7.xy, normal_7.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_8;
  tmpvar_8 = mix (normal_7, vec3(0.0, 0.0, 1.0), clouds_5);
  tmpvar_3 = tmpvar_8;
  tmpvar_4 = _Shininess;
  highp float tmpvar_9;
  tmpvar_9 = dot (xlv_TEXCOORD1, tmpvar_3);
  worldN_2.x = tmpvar_9;
  highp float tmpvar_10;
  tmpvar_10 = dot (xlv_TEXCOORD2, tmpvar_3);
  worldN_2.y = tmpvar_10;
  highp float tmpvar_11;
  tmpvar_11 = dot (xlv_TEXCOORD3, tmpvar_3);
  worldN_2.z = tmpvar_11;
  res_1.xyz = ((worldN_2 * 0.5) + 0.5);
  res_1.w = tmpvar_4;
  gl_FragData[0] = res_1;
}



#endif"
}
SubProgram "gles3 " {
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesTANGENT;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec3 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec3 tmpvar_4;
  highp vec3 tmpvar_5;
  tmpvar_4 = tmpvar_1.xyz;
  tmpvar_5 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_6;
  tmpvar_6[0].x = tmpvar_4.x;
  tmpvar_6[0].y = tmpvar_5.x;
  tmpvar_6[0].z = tmpvar_2.x;
  tmpvar_6[1].x = tmpvar_4.y;
  tmpvar_6[1].y = tmpvar_5.y;
  tmpvar_6[1].z = tmpvar_2.y;
  tmpvar_6[2].x = tmpvar_4.z;
  tmpvar_6[2].y = tmpvar_5.z;
  tmpvar_6[2].z = tmpvar_2.z;
  vec3 v_7;
  v_7.x = _Object2World[0].x;
  v_7.y = _Object2World[1].x;
  v_7.z = _Object2World[2].x;
  vec3 v_8;
  v_8.x = _Object2World[0].y;
  v_8.y = _Object2World[1].y;
  v_8.z = _Object2World[2].y;
  vec3 v_9;
  v_9.x = _Object2World[0].z;
  v_9.y = _Object2World[1].z;
  v_9.z = _Object2World[2].z;
  gl_Position = (glstate_matrix_mvp * _glesVertex);
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = ((tmpvar_6 * v_7) * unity_Scale.w);
  xlv_TEXCOORD2 = ((tmpvar_6 * v_8) * unity_Scale.w);
  xlv_TEXCOORD3 = ((tmpvar_6 * v_9) * unity_Scale.w);
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform sampler2D _BumpMap;
uniform sampler2D _Clouds;
uniform lowp float _Shininess;
in highp vec4 xlv_TEXCOORD0;
in highp vec3 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 res_1;
  lowp vec3 worldN_2;
  lowp vec3 tmpvar_3;
  mediump float tmpvar_4;
  mediump vec3 clouds_5;
  lowp vec3 tmpvar_6;
  tmpvar_6 = texture (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_5 = tmpvar_6;
  lowp vec3 tmpvar_7;
  tmpvar_7 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_8;
  tmpvar_8 = mix (tmpvar_7, vec3(0.0, 0.0, 1.0), clouds_5);
  tmpvar_3 = tmpvar_8;
  tmpvar_4 = _Shininess;
  highp float tmpvar_9;
  tmpvar_9 = dot (xlv_TEXCOORD1, tmpvar_3);
  worldN_2.x = tmpvar_9;
  highp float tmpvar_10;
  tmpvar_10 = dot (xlv_TEXCOORD2, tmpvar_3);
  worldN_2.y = tmpvar_10;
  highp float tmpvar_11;
  tmpvar_11 = dot (xlv_TEXCOORD3, tmpvar_3);
  worldN_2.z = tmpvar_11;
  res_1.xyz = ((worldN_2 * 0.5) + 0.5);
  res_1.w = tmpvar_4;
  _glesFragData[0] = res_1;
}



#endif"
}
}
Program "fp" {
SubProgram "opengl " {
// Stats: 15 math, 2 textures
Float 0 [_Shininess]
SetTexture 0 [_Clouds] 2D 0
SetTexture 1 [_BumpMap] 2D 1
"!!ARBfp1.0
PARAM c[2] = { program.local[0],
		{ 2, 1, 0, 0.5 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEX R1.yw, fragment.texcoord[0], texture[1], 2D;
TEX R0.xyz, fragment.texcoord[0].zwzw, texture[0], 2D;
MAD R1.xy, R1.wyzw, c[1].x, -c[1].y;
MUL R1.zw, R1.xyxy, R1.xyxy;
ADD_SAT R0.w, R1.z, R1;
ADD R0.w, -R0, c[1].y;
RSQ R0.w, R0.w;
RCP R1.z, R0.w;
ADD R2.xyz, -R1, c[1].zzyw;
MAD R1.xyz, R0, R2, R1;
DP3 R0.z, fragment.texcoord[3], R1;
DP3 R0.x, R1, fragment.texcoord[1];
DP3 R0.y, R1, fragment.texcoord[2];
MAD result.color.xyz, R0, c[1].w, c[1].w;
MOV result.color.w, c[0].x;
END
# 15 instructions, 3 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 19 math, 2 textures
Float 0 [_Shininess]
SetTexture 0 [_Clouds] 2D 0
SetTexture 1 [_BumpMap] 2D 1
"ps_2_0
dcl_2d s0
dcl_2d s1
def c1, 2.00000000, -1.00000000, 1.00000000, 0.00000000
def c2, 0.50000000, 0, 0, 0
dcl t0
dcl t1.xyz
dcl t2.xyz
dcl t3.xyz
texld r1, t0, s1
mov r1.x, r1.w
mad_pp r2.xy, r1, c1.x, c1.y
mul_pp r1.xy, r2, r2
add_pp_sat r1.x, r1, r1.y
add_pp r1.x, -r1, c1.z
rsq_pp r1.x, r1.x
rcp_pp r2.z, r1.x
mov r0.y, t0.w
mov r0.x, t0.z
mov r1.z, c1
mov r1.xy, c1.w
add_pp r1.xyz, -r2, r1
texld r0, r0, s0
mad_pp r1.xyz, r0, r1, r2
dp3 r0.z, t3, r1
dp3 r0.x, r1, t1
dp3 r0.y, r1, t2
mad_pp r0.xyz, r0, c2.x, c2.x
mov_pp r0.w, c0.x
mov_pp oC0, r0
"
}
SubProgram "d3d11 " {
// Stats: 11 math, 2 textures
SetTexture 0 [_Clouds] 2D 1
SetTexture 1 [_BumpMap] 2D 0
ConstBuffer "$Globals" 128
Float 64 [_Shininess]
BindCB  "$Globals" 0
"ps_4_0
eefiecedminmdcmpjkemhobklbjnojdlnfakbhibabaaaaaaiiadaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefciaacaaaaeaaaaaaakaaaaaaafjaaaaaeegiocaaaaaaaaaaaafaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafibiaaaeaahabaaa
aaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaagcbaaaadpcbabaaa
abaaaaaagcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaad
hcbabaaaaeaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacadaaaaaaefaaaaaj
pcaabaaaaaaaaaaaegbabaaaabaaaaaaeghobaaaabaaaaaaaagabaaaaaaaaaaa
dcaaaaapdcaabaaaaaaaaaaahgapbaaaaaaaaaaaaceaaaaaaaaaaaeaaaaaaaea
aaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaaapaaaaah
icaabaaaaaaaaaaaegaabaaaaaaaaaaaegaabaaaaaaaaaaaddaaaaahicaabaaa
aaaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaiadpaaaaaaaiicaabaaaaaaaaaaa
dkaabaiaebaaaaaaaaaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaaaaaaaaaa
dkaabaaaaaaaaaaaaaaaaaalhcaabaaaabaaaaaaegacbaiaebaaaaaaaaaaaaaa
aceaaaaaaaaaaaaaaaaaaaaaaaaaiadpaaaaaaaaefaaaaajpcaabaaaacaaaaaa
ogbkbaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaabaaaaaadcaaaaajhcaabaaa
aaaaaaaaegacbaaaacaaaaaaegacbaaaabaaaaaaegacbaaaaaaaaaaabaaaaaah
bcaabaaaabaaaaaaegbcbaaaacaaaaaaegacbaaaaaaaaaaabaaaaaahccaabaaa
abaaaaaaegbcbaaaadaaaaaaegacbaaaaaaaaaaabaaaaaahecaabaaaabaaaaaa
egbcbaaaaeaaaaaaegacbaaaaaaaaaaadcaaaaaphccabaaaaaaaaaaaegacbaaa
abaaaaaaaceaaaaaaaaaaadpaaaaaadpaaaaaadpaaaaaaaaaceaaaaaaaaaaadp
aaaaaadpaaaaaadpaaaaaaaadgaaaaagiccabaaaaaaaaaaaakiacaaaaaaaaaaa
aeaaaaaadoaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 11 math, 2 textures
SetTexture 0 [_Clouds] 2D 1
SetTexture 1 [_BumpMap] 2D 0
ConstBuffer "$Globals" 128
Float 64 [_Shininess]
BindCB  "$Globals" 0
"ps_4_0_level_9_1
eefiecedamalfeameniemofigpbpakbplmdljkfdabaaaaaafiafaaaaaeaaaaaa
daaaaaaapmabaaaaieaeaaaaceafaaaaebgpgodjmeabaaaameabaaaaaaacpppp
imabaaaadiaaaaaaabaacmaaaaaadiaaaaaadiaaacaaceaaaaaadiaaabaaaaaa
aaababaaaaaaaeaaabaaaaaaaaaaaaaaaaacppppfbaaaaafabaaapkaaaaaaaea
aaaaialpaaaaaaaaaaaaiadpfbaaaaafacaaapkaaaaaaaaaaaaaaaaaaaaaiadp
aaaaaadpbpaaaaacaaaaaaiaaaaaaplabpaaaaacaaaaaaiaabaaahlabpaaaaac
aaaaaaiaacaaahlabpaaaaacaaaaaaiaadaaahlabpaaaaacaaaaaajaaaaiapka
bpaaaaacaaaaaajaabaiapkaabaaaaacaaaaabiaaaaakklaabaaaaacaaaaacia
aaaapplaecaaaaadabaacpiaaaaaoelaaaaioekaecaaaaadaaaacpiaaaaaoeia
abaioekaaeaaaaaeacaacbiaabaappiaabaaaakaabaaffkaaeaaaaaeacaaccia
abaaffiaabaaaakaabaaffkafkaaaaaeaaaadiiaacaaoeiaacaaoeiaabaakkka
acaaaaadaaaaciiaaaaappibabaappkaahaaaaacaaaaciiaaaaappiaagaaaaac
acaaceiaaaaappiabcaaaaaeabaachiaaaaaoeiaacaaoekaacaaoeiaaiaaaaad
aaaacbiaabaaoelaabaaoeiaaiaaaaadaaaacciaacaaoelaabaaoeiaaiaaaaad
aaaaceiaadaaoelaabaaoeiaaeaaaaaeaaaachiaaaaaoeiaacaappkaacaappka
abaaaaacaaaaciiaaaaaaakaabaaaaacaaaicpiaaaaaoeiappppaaaafdeieefc
iaacaaaaeaaaaaaakaaaaaaafjaaaaaeegiocaaaaaaaaaaaafaaaaaafkaaaaad
aagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafibiaaaeaahabaaaaaaaaaaa
ffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaa
gcbaaaadhcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagcbaaaadhcbabaaa
aeaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacadaaaaaaefaaaaajpcaabaaa
aaaaaaaaegbabaaaabaaaaaaeghobaaaabaaaaaaaagabaaaaaaaaaaadcaaaaap
dcaabaaaaaaaaaaahgapbaaaaaaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaa
aaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaaapaaaaahicaabaaa
aaaaaaaaegaabaaaaaaaaaaaegaabaaaaaaaaaaaddaaaaahicaabaaaaaaaaaaa
dkaabaaaaaaaaaaaabeaaaaaaaaaiadpaaaaaaaiicaabaaaaaaaaaaadkaabaia
ebaaaaaaaaaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaaaaaaaaaadkaabaaa
aaaaaaaaaaaaaaalhcaabaaaabaaaaaaegacbaiaebaaaaaaaaaaaaaaaceaaaaa
aaaaaaaaaaaaaaaaaaaaiadpaaaaaaaaefaaaaajpcaabaaaacaaaaaaogbkbaaa
abaaaaaaeghobaaaaaaaaaaaaagabaaaabaaaaaadcaaaaajhcaabaaaaaaaaaaa
egacbaaaacaaaaaaegacbaaaabaaaaaaegacbaaaaaaaaaaabaaaaaahbcaabaaa
abaaaaaaegbcbaaaacaaaaaaegacbaaaaaaaaaaabaaaaaahccaabaaaabaaaaaa
egbcbaaaadaaaaaaegacbaaaaaaaaaaabaaaaaahecaabaaaabaaaaaaegbcbaaa
aeaaaaaaegacbaaaaaaaaaaadcaaaaaphccabaaaaaaaaaaaegacbaaaabaaaaaa
aceaaaaaaaaaaadpaaaaaadpaaaaaadpaaaaaaaaaceaaaaaaaaaaadpaaaaaadp
aaaaaadpaaaaaaaadgaaaaagiccabaaaaaaaaaaaakiacaaaaaaaaaaaaeaaaaaa
doaaaaabejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaaaaaaaaaaabaaaaaa
adaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaa
apapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaahahaaaaimaaaaaa
acaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaaimaaaaaaadaaaaaaaaaaaaaa
adaaaaaaaeaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl"
}
SubProgram "gles " {
"!!GLES"
}
SubProgram "glesdesktop " {
"!!GLES"
}
SubProgram "gles3 " {
"!!GLES3"
}
}
 }


 // Stats for Vertex shader:
 //       d3d11 : 22 avg math (21..24)
 //    d3d11_9x : 22 avg math (21..24)
 //        d3d9 : 25 avg math (21..29)
 //      opengl : 25 avg math (21..29)
 // Stats for Fragment shader:
 //       d3d11 : 28 avg math (14..49), 6 avg texture (5..8)
 //    d3d11_9x : 28 avg math (14..49), 6 avg texture (5..8)
 //        d3d9 : 34 avg math (16..60), 6 avg texture (5..8)
 //      opengl : 36 avg math (18..59), 6 avg texture (5..8)
 Pass {
  Name "PREPASS"
  Tags { "LIGHTMODE"="PrePassFinal" "RenderType"="Opaque" }
  ZWrite Off
Program "vp" {
SubProgram "opengl " {
// Stats: 29 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 5 [_Object2World]
Vector 9 [_ProjectionParams]
Vector 10 [unity_SHAr]
Vector 11 [unity_SHAg]
Vector 12 [unity_SHAb]
Vector 13 [unity_SHBr]
Vector 14 [unity_SHBg]
Vector 15 [unity_SHBb]
Vector 16 [unity_SHC]
Vector 17 [unity_Scale]
Vector 18 [_MainTex_ST]
Vector 19 [_Clouds_ST]
"!!ARBvp1.0
PARAM c[20] = { { 0.5, 1 },
		state.matrix.mvp,
		program.local[5..19] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R1.xyz, vertex.normal, c[17].w;
DP3 R2.w, R1, c[6];
DP3 R0.x, R1, c[5];
DP3 R0.z, R1, c[7];
MOV R0.y, R2.w;
MUL R1, R0.xyzz, R0.yzzx;
MOV R0.w, c[0].y;
DP4 R2.z, R0, c[12];
DP4 R2.y, R0, c[11];
DP4 R2.x, R0, c[10];
MUL R0.y, R2.w, R2.w;
DP4 R3.z, R1, c[15];
DP4 R3.y, R1, c[14];
DP4 R3.x, R1, c[13];
DP4 R1.w, vertex.position, c[4];
DP4 R1.z, vertex.position, c[3];
MAD R0.x, R0, R0, -R0.y;
ADD R3.xyz, R2, R3;
MUL R2.xyz, R0.x, c[16];
DP4 R1.x, vertex.position, c[1];
DP4 R1.y, vertex.position, c[2];
MUL R0.xyz, R1.xyww, c[0].x;
MUL R0.y, R0, c[9].x;
ADD result.texcoord[2].xyz, R3, R2;
ADD result.texcoord[1].xy, R0, R0.z;
MOV result.position, R1;
MOV result.texcoord[1].zw, R1;
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[19].xyxy, c[19];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[18], c[18].zwzw;
END
# 29 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 29 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Vector 8 [_ProjectionParams]
Vector 9 [_ScreenParams]
Vector 10 [unity_SHAr]
Vector 11 [unity_SHAg]
Vector 12 [unity_SHAb]
Vector 13 [unity_SHBr]
Vector 14 [unity_SHBg]
Vector 15 [unity_SHBb]
Vector 16 [unity_SHC]
Vector 17 [unity_Scale]
Vector 18 [_MainTex_ST]
Vector 19 [_Clouds_ST]
"vs_2_0
def c20, 0.50000000, 1.00000000, 0, 0
dcl_position0 v0
dcl_normal0 v1
dcl_texcoord0 v2
mul r1.xyz, v1, c17.w
dp3 r2.w, r1, c5
dp3 r0.x, r1, c4
dp3 r0.z, r1, c6
mov r0.y, r2.w
mul r1, r0.xyzz, r0.yzzx
mov r0.w, c20.y
dp4 r2.z, r0, c12
dp4 r2.y, r0, c11
dp4 r2.x, r0, c10
mul r0.y, r2.w, r2.w
dp4 r3.z, r1, c15
dp4 r3.y, r1, c14
dp4 r3.x, r1, c13
dp4 r1.w, v0, c3
dp4 r1.z, v0, c2
mad r0.x, r0, r0, -r0.y
add r3.xyz, r2, r3
mul r2.xyz, r0.x, c16
dp4 r1.x, v0, c0
dp4 r1.y, v0, c1
mul r0.xyz, r1.xyww, c20.x
mul r0.y, r0, c8.x
add oT2.xyz, r3, r2
mad oT1.xy, r0.z, c9.zwzw, r0
mov oPos, r1
mov oT1.zw, r1
mad oT0.zw, v2.xyxy, c19.xyxy, c19
mad oT0.xy, v2, c18, c18.zwzw
"
}
SubProgram "d3d11 " {
// Stats: 24 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
ConstBuffer "$Globals" 144
Vector 96 [_MainTex_ST]
Vector 112 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0
eefieceddjimjiinodlpgbnjeefkncdlfeajkjgnabaaaaaaleafaaaaadaaaaaa
cmaaaaaapeaaaaaahmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheoiaaaaaaaaeaaaaaa
aiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaheaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaapaaaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefc
daaeaaaaeaaaabaaamabaaaafjaaaaaeegiocaaaaaaaaaaaaiaaaaaafjaaaaae
egiocaaaabaaaaaaagaaaaaafjaaaaaeegiocaaaacaaaaaacnaaaaaafjaaaaae
egiocaaaadaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaa
acaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaa
gfaaaaadpccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaadhccabaaa
adaaaaaagiaaaaacaeaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaa
egiocaaaadaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaa
aaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaa
egiocaaaadaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaa
aaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaa
abaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaa
agaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaa
ahaaaaaakgiocaaaaaaaaaaaahaaaaaadiaaaaaiccaabaaaaaaaaaaabkaabaaa
aaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaaabaaaaaaagahbaaa
aaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadpdgaaaaafmccabaaa
acaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaacaaaaaakgakbaaaabaaaaaa
mgaabaaaabaaaaaadiaaaaaihcaabaaaaaaaaaaaegbcbaaaacaaaaaapgipcaaa
adaaaaaabeaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaaegiccaaa
adaaaaaaanaaaaaadcaaaaaklcaabaaaaaaaaaaaegiicaaaadaaaaaaamaaaaaa
agaabaaaaaaaaaaaegaibaaaabaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaa
adaaaaaaaoaaaaaakgakbaaaaaaaaaaaegadbaaaaaaaaaaadgaaaaaficaabaaa
aaaaaaaaabeaaaaaaaaaiadpbbaaaaaibcaabaaaabaaaaaaegiocaaaacaaaaaa
cgaaaaaaegaobaaaaaaaaaaabbaaaaaiccaabaaaabaaaaaaegiocaaaacaaaaaa
chaaaaaaegaobaaaaaaaaaaabbaaaaaiecaabaaaabaaaaaaegiocaaaacaaaaaa
ciaaaaaaegaobaaaaaaaaaaadiaaaaahpcaabaaaacaaaaaajgacbaaaaaaaaaaa
egakbaaaaaaaaaaabbaaaaaibcaabaaaadaaaaaaegiocaaaacaaaaaacjaaaaaa
egaobaaaacaaaaaabbaaaaaiccaabaaaadaaaaaaegiocaaaacaaaaaackaaaaaa
egaobaaaacaaaaaabbaaaaaiecaabaaaadaaaaaaegiocaaaacaaaaaaclaaaaaa
egaobaaaacaaaaaaaaaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaa
adaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaabkaabaaaaaaaaaaa
dcaaaaakbcaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaaaaaaaaaaabkaabaia
ebaaaaaaaaaaaaaadcaaaaakhccabaaaadaaaaaaegiccaaaacaaaaaacmaaaaaa
agaabaaaaaaaaaaaegacbaaaabaaaaaadoaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 24 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
ConstBuffer "$Globals" 144
Vector 96 [_MainTex_ST]
Vector 112 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0_level_9_1
eefiecedpfnbdipllflhooakmbenahofaplofaolabaaaaaagaaiaaaaaeaaaaaa
daaaaaaaniacaaaabaahaaaaniahaaaaebgpgodjkaacaaaakaacaaaaaaacpopp
daacaaaahaaaaaaaagaaceaaaaaagmaaaaaagmaaaaaaceaaabaagmaaaaaaagaa
acaaabaaaaaaaaaaabaaafaaabaaadaaaaaaaaaaacaacgaaahaaaeaaaaaaaaaa
adaaaaaaaeaaalaaaaaaaaaaadaaamaaadaaapaaaaaaaaaaadaabeaaabaabcaa
aaaaaaaaaaaaaaaaaaacpoppfbaaaaafbdaaapkaaaaaaadpaaaaiadpaaaaaaaa
aaaaaaaabpaaaaacafaaaaiaaaaaapjabpaaaaacafaaaciaacaaapjabpaaaaac
afaaadiaadaaapjaaeaaaaaeaaaaadoaadaaoejaabaaoekaabaaookaaeaaaaae
aaaaamoaadaaeejaacaaeekaacaaoekaafaaaaadaaaaapiaaaaaffjaamaaoeka
aeaaaaaeaaaaapiaalaaoekaaaaaaajaaaaaoeiaaeaaaaaeaaaaapiaanaaoeka
aaaakkjaaaaaoeiaaeaaaaaeaaaaapiaaoaaoekaaaaappjaaaaaoeiaafaaaaad
abaaabiaaaaaffiaadaaaakaafaaaaadabaaaiiaabaaaaiabdaaaakaafaaaaad
abaaafiaaaaapeiabdaaaakaacaaaaadabaaadoaabaakkiaabaaomiaafaaaaad
abaaahiaacaaoejabcaappkaafaaaaadacaaahiaabaaffiabaaaoekaaeaaaaae
abaaaliaapaakekaabaaaaiaacaakeiaaeaaaaaeabaaahiabbaaoekaabaakkia
abaapeiaabaaaaacabaaaiiabdaaffkaajaaaaadacaaabiaaeaaoekaabaaoeia
ajaaaaadacaaaciaafaaoekaabaaoeiaajaaaaadacaaaeiaagaaoekaabaaoeia
afaaaaadadaaapiaabaacjiaabaakeiaajaaaaadaeaaabiaahaaoekaadaaoeia
ajaaaaadaeaaaciaaiaaoekaadaaoeiaajaaaaadaeaaaeiaajaaoekaadaaoeia
acaaaaadacaaahiaacaaoeiaaeaaoeiaafaaaaadabaaaciaabaaffiaabaaffia
aeaaaaaeabaaabiaabaaaaiaabaaaaiaabaaffibaeaaaaaeacaaahoaakaaoeka
abaaaaiaacaaoeiaaeaaaaaeaaaaadmaaaaappiaaaaaoekaaaaaoeiaabaaaaac
aaaaammaaaaaoeiaabaaaaacabaaamoaaaaaoeiappppaaaafdeieefcdaaeaaaa
eaaaabaaamabaaaafjaaaaaeegiocaaaaaaaaaaaaiaaaaaafjaaaaaeegiocaaa
abaaaaaaagaaaaaafjaaaaaeegiocaaaacaaaaaacnaaaaaafjaaaaaeegiocaaa
adaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaacaaaaaa
fpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaad
pccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaa
giaaaaacaeaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaa
adaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaa
agbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaa
dgaaaaafpccabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaa
egbabaaaadaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaa
dcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaahaaaaaa
kgiocaaaaaaaaaaaahaaaaaadiaaaaaiccaabaaaaaaaaaaabkaabaaaaaaaaaaa
akiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaaabaaaaaaagahbaaaaaaaaaaa
aceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadpdgaaaaafmccabaaaacaaaaaa
kgaobaaaaaaaaaaaaaaaaaahdccabaaaacaaaaaakgakbaaaabaaaaaamgaabaaa
abaaaaaadiaaaaaihcaabaaaaaaaaaaaegbcbaaaacaaaaaapgipcaaaadaaaaaa
beaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaaegiccaaaadaaaaaa
anaaaaaadcaaaaaklcaabaaaaaaaaaaaegiicaaaadaaaaaaamaaaaaaagaabaaa
aaaaaaaaegaibaaaabaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaaadaaaaaa
aoaaaaaakgakbaaaaaaaaaaaegadbaaaaaaaaaaadgaaaaaficaabaaaaaaaaaaa
abeaaaaaaaaaiadpbbaaaaaibcaabaaaabaaaaaaegiocaaaacaaaaaacgaaaaaa
egaobaaaaaaaaaaabbaaaaaiccaabaaaabaaaaaaegiocaaaacaaaaaachaaaaaa
egaobaaaaaaaaaaabbaaaaaiecaabaaaabaaaaaaegiocaaaacaaaaaaciaaaaaa
egaobaaaaaaaaaaadiaaaaahpcaabaaaacaaaaaajgacbaaaaaaaaaaaegakbaaa
aaaaaaaabbaaaaaibcaabaaaadaaaaaaegiocaaaacaaaaaacjaaaaaaegaobaaa
acaaaaaabbaaaaaiccaabaaaadaaaaaaegiocaaaacaaaaaackaaaaaaegaobaaa
acaaaaaabbaaaaaiecaabaaaadaaaaaaegiocaaaacaaaaaaclaaaaaaegaobaaa
acaaaaaaaaaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaadaaaaaa
diaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaabkaabaaaaaaaaaaadcaaaaak
bcaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaaaaaaaaaaabkaabaiaebaaaaaa
aaaaaaaadcaaaaakhccabaaaadaaaaaaegiccaaaacaaaaaacmaaaaaaagaabaaa
aaaaaaaaegacbaaaabaaaaaadoaaaaabejfdeheomaaaaaaaagaaaaaaaiaaaaaa
jiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
acaaaaaaahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaa
laaaaaaaabaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofe
aaeoepfcenebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheoiaaaaaaa
aeaaaaaaaiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaa
heaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaheaaaaaaabaaaaaa
aaaaaaaaadaaaaaaacaaaaaaapaaaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaa
adaaaaaaahaiaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl
"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_6;
  tmpvar_6.x = tmpvar_5.x;
  tmpvar_6.y = (tmpvar_5.y * _ProjectionParams.x);
  o_4.xy = (tmpvar_6 + tmpvar_5.w);
  o_4.zw = tmpvar_3.zw;
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  mediump vec3 tmpvar_9;
  mediump vec4 normal_10;
  normal_10 = tmpvar_8;
  highp float vC_11;
  mediump vec3 x3_12;
  mediump vec3 x2_13;
  mediump vec3 x1_14;
  highp float tmpvar_15;
  tmpvar_15 = dot (unity_SHAr, normal_10);
  x1_14.x = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAg, normal_10);
  x1_14.y = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAb, normal_10);
  x1_14.z = tmpvar_17;
  mediump vec4 tmpvar_18;
  tmpvar_18 = (normal_10.xyzz * normal_10.yzzx);
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHBr, tmpvar_18);
  x2_13.x = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBg, tmpvar_18);
  x2_13.y = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBb, tmpvar_18);
  x2_13.z = tmpvar_21;
  mediump float tmpvar_22;
  tmpvar_22 = ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y));
  vC_11 = tmpvar_22;
  highp vec3 tmpvar_23;
  tmpvar_23 = (unity_SHC.xyz * vC_11);
  x3_12 = tmpvar_23;
  tmpvar_9 = ((x1_14 + x2_13) + x3_12);
  tmpvar_2 = tmpvar_9;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = o_4;
  xlv_TEXCOORD2 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform sampler2D _LightBuffer;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_4 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11.w = 0.0;
  tmpvar_11.xyz = clouds_7;
  lowp vec4 arg0_12;
  arg0_12 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_13;
  tmpvar_13 = mix (arg0_12, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_11).xyz;
  tmpvar_5 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_15;
  tmpvar_15 = ((tmpvar_14.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_3 = tmpvar_16;
  mediump vec4 tmpvar_17;
  tmpvar_17 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.w = tmpvar_17.w;
  highp vec3 tmpvar_18;
  tmpvar_18 = (tmpvar_17.xyz + xlv_TEXCOORD2);
  light_3.xyz = tmpvar_18;
  lowp vec4 c_19;
  lowp float spec_20;
  mediump float tmpvar_21;
  tmpvar_21 = (tmpvar_17.w * tmpvar_6);
  spec_20 = tmpvar_21;
  mediump vec3 tmpvar_22;
  tmpvar_22 = ((tmpvar_4 * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_20));
  c_19.xyz = tmpvar_22;
  c_19.w = (tmpvar_8.w + (spec_20 * _SpecColor.w));
  c_2 = c_19;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_6;
  tmpvar_6.x = tmpvar_5.x;
  tmpvar_6.y = (tmpvar_5.y * _ProjectionParams.x);
  o_4.xy = (tmpvar_6 + tmpvar_5.w);
  o_4.zw = tmpvar_3.zw;
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  mediump vec3 tmpvar_9;
  mediump vec4 normal_10;
  normal_10 = tmpvar_8;
  highp float vC_11;
  mediump vec3 x3_12;
  mediump vec3 x2_13;
  mediump vec3 x1_14;
  highp float tmpvar_15;
  tmpvar_15 = dot (unity_SHAr, normal_10);
  x1_14.x = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAg, normal_10);
  x1_14.y = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAb, normal_10);
  x1_14.z = tmpvar_17;
  mediump vec4 tmpvar_18;
  tmpvar_18 = (normal_10.xyzz * normal_10.yzzx);
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHBr, tmpvar_18);
  x2_13.x = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBg, tmpvar_18);
  x2_13.y = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBb, tmpvar_18);
  x2_13.z = tmpvar_21;
  mediump float tmpvar_22;
  tmpvar_22 = ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y));
  vC_11 = tmpvar_22;
  highp vec3 tmpvar_23;
  tmpvar_23 = (unity_SHC.xyz * vC_11);
  x3_12 = tmpvar_23;
  tmpvar_9 = ((x1_14 + x2_13) + x3_12);
  tmpvar_2 = tmpvar_9;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = o_4;
  xlv_TEXCOORD2 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform sampler2D _LightBuffer;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_4 = tmpvar_10;
  lowp vec3 normal_11;
  normal_11.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_11.z = sqrt((1.0 - clamp (dot (normal_11.xy, normal_11.xy), 0.0, 1.0)));
  mediump vec4 tmpvar_12;
  tmpvar_12.w = 0.0;
  tmpvar_12.xyz = clouds_7;
  lowp vec4 arg0_13;
  arg0_13 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_14;
  tmpvar_14 = mix (arg0_13, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_12).xyz;
  tmpvar_5 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_16;
  tmpvar_16 = ((tmpvar_15.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_3 = tmpvar_17;
  mediump vec4 tmpvar_18;
  tmpvar_18 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.w = tmpvar_18.w;
  highp vec3 tmpvar_19;
  tmpvar_19 = (tmpvar_18.xyz + xlv_TEXCOORD2);
  light_3.xyz = tmpvar_19;
  lowp vec4 c_20;
  lowp float spec_21;
  mediump float tmpvar_22;
  tmpvar_22 = (tmpvar_18.w * tmpvar_6);
  spec_21 = tmpvar_22;
  mediump vec3 tmpvar_23;
  tmpvar_23 = ((tmpvar_4 * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_21));
  c_20.xyz = tmpvar_23;
  c_20.w = (tmpvar_8.w + (spec_21 * _SpecColor.w));
  c_2 = c_20;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_6;
  tmpvar_6.x = tmpvar_5.x;
  tmpvar_6.y = (tmpvar_5.y * _ProjectionParams.x);
  o_4.xy = (tmpvar_6 + tmpvar_5.w);
  o_4.zw = tmpvar_3.zw;
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  mediump vec3 tmpvar_9;
  mediump vec4 normal_10;
  normal_10 = tmpvar_8;
  highp float vC_11;
  mediump vec3 x3_12;
  mediump vec3 x2_13;
  mediump vec3 x1_14;
  highp float tmpvar_15;
  tmpvar_15 = dot (unity_SHAr, normal_10);
  x1_14.x = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAg, normal_10);
  x1_14.y = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAb, normal_10);
  x1_14.z = tmpvar_17;
  mediump vec4 tmpvar_18;
  tmpvar_18 = (normal_10.xyzz * normal_10.yzzx);
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHBr, tmpvar_18);
  x2_13.x = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBg, tmpvar_18);
  x2_13.y = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBb, tmpvar_18);
  x2_13.z = tmpvar_21;
  mediump float tmpvar_22;
  tmpvar_22 = ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y));
  vC_11 = tmpvar_22;
  highp vec3 tmpvar_23;
  tmpvar_23 = (unity_SHC.xyz * vC_11);
  x3_12 = tmpvar_23;
  tmpvar_9 = ((x1_14 + x2_13) + x3_12);
  tmpvar_2 = tmpvar_9;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = o_4;
  xlv_TEXCOORD2 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform sampler2D _LightBuffer;
in highp vec4 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_4 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11.w = 0.0;
  tmpvar_11.xyz = clouds_7;
  lowp vec4 arg0_12;
  arg0_12 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_13;
  tmpvar_13 = mix (arg0_12, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_11).xyz;
  tmpvar_5 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_15;
  tmpvar_15 = ((tmpvar_14.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = textureProj (_LightBuffer, xlv_TEXCOORD1);
  light_3 = tmpvar_16;
  mediump vec4 tmpvar_17;
  tmpvar_17 = -(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001))));
  light_3.w = tmpvar_17.w;
  highp vec3 tmpvar_18;
  tmpvar_18 = (tmpvar_17.xyz + xlv_TEXCOORD2);
  light_3.xyz = tmpvar_18;
  lowp vec4 c_19;
  lowp float spec_20;
  mediump float tmpvar_21;
  tmpvar_21 = (tmpvar_17.w * tmpvar_6);
  spec_20 = tmpvar_21;
  mediump vec3 tmpvar_22;
  tmpvar_22 = ((tmpvar_4 * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_20));
  c_19.xyz = tmpvar_22;
  c_19.w = (tmpvar_8.w + (spec_20 * _SpecColor.w));
  c_2 = c_19;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 21 math
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 9 [_Object2World]
Vector 13 [_ProjectionParams]
Vector 14 [unity_ShadowFadeCenterAndType]
Vector 15 [unity_LightmapST]
Vector 16 [_MainTex_ST]
Vector 17 [_Clouds_ST]
"!!ARBvp1.0
PARAM c[18] = { { 0.5, 1 },
		state.matrix.modelview[0],
		state.matrix.mvp,
		program.local[9..17] };
TEMP R0;
TEMP R1;
DP4 R0.w, vertex.position, c[8];
DP4 R0.z, vertex.position, c[7];
DP4 R0.x, vertex.position, c[5];
DP4 R0.y, vertex.position, c[6];
MUL R1.xyz, R0.xyww, c[0].x;
MUL R1.y, R1, c[13].x;
ADD result.texcoord[1].xy, R1, R1.z;
MOV result.position, R0;
MOV R0.x, c[0].y;
ADD R0.y, R0.x, -c[14].w;
DP4 R0.x, vertex.position, c[3];
DP4 R1.z, vertex.position, c[11];
DP4 R1.x, vertex.position, c[9];
DP4 R1.y, vertex.position, c[10];
ADD R1.xyz, R1, -c[14];
MOV result.texcoord[1].zw, R0;
MUL result.texcoord[3].xyz, R1, c[14].w;
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[17].xyxy, c[17];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[16], c[16].zwzw;
MAD result.texcoord[2].xy, vertex.texcoord[1], c[15], c[15].zwzw;
MUL result.texcoord[3].w, -R0.x, R0.y;
END
# 21 instructions, 2 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 21 math
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 0 [glstate_matrix_modelview0]
Matrix 4 [glstate_matrix_mvp]
Matrix 8 [_Object2World]
Vector 12 [_ProjectionParams]
Vector 13 [_ScreenParams]
Vector 14 [unity_ShadowFadeCenterAndType]
Vector 15 [unity_LightmapST]
Vector 16 [_MainTex_ST]
Vector 17 [_Clouds_ST]
"vs_2_0
def c18, 0.50000000, 1.00000000, 0, 0
dcl_position0 v0
dcl_texcoord0 v1
dcl_texcoord1 v2
dp4 r0.w, v0, c7
dp4 r0.z, v0, c6
dp4 r0.x, v0, c4
dp4 r0.y, v0, c5
mul r1.xyz, r0.xyww, c18.x
mul r1.y, r1, c12.x
mad oT1.xy, r1.z, c13.zwzw, r1
mov oPos, r0
mov r0.x, c14.w
add r0.y, c18, -r0.x
dp4 r0.x, v0, c2
dp4 r1.z, v0, c10
dp4 r1.x, v0, c8
dp4 r1.y, v0, c9
add r1.xyz, r1, -c14
mov oT1.zw, r0
mul oT3.xyz, r1, c14.w
mad oT0.zw, v1.xyxy, c17.xyxy, c17
mad oT0.xy, v1, c16, c16.zwzw
mad oT2.xy, v2, c15, c15.zwzw
mul oT3.w, -r0.x, r0.y
"
}
SubProgram "d3d11 " {
// Stats: 22 math
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "color" Color
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 176
Vector 96 [unity_LightmapST]
Vector 112 [_MainTex_ST]
Vector 128 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 80 [_ProjectionParams]
ConstBuffer "UnityShadows" 416
Vector 400 [unity_ShadowFadeCenterAndType]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 64 [glstate_matrix_modelview0]
Matrix 192 [_Object2World]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityShadows" 2
BindCB  "UnityPerDraw" 3
"vs_4_0
eefiecedlbhkfhhbknndcooglpedpbflaoigbnljabaaaaaaleafaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahaaaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaapaaaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
adamaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcbiaeaaaaeaaaabaa
agabaaaafjaaaaaeegiocaaaaaaaaaaaajaaaaaafjaaaaaeegiocaaaabaaaaaa
agaaaaaafjaaaaaeegiocaaaacaaaaaabkaaaaaafjaaaaaeegiocaaaadaaaaaa
baaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaaddcbabaaaadaaaaaafpaaaaad
dcbabaaaaeaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaadpccabaaa
abaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaaddccabaaaadaaaaaagfaaaaad
pccabaaaaeaaaaaagiaaaaacacaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaal
dccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaahaaaaaaogikcaaa
aaaaaaaaahaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaa
aaaaaaaaaiaaaaaakgiocaaaaaaaaaaaaiaaaaaadiaaaaaiccaabaaaaaaaaaaa
bkaabaaaaaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaaabaaaaaa
agahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadpdgaaaaaf
mccabaaaacaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaacaaaaaakgakbaaa
abaaaaaamgaabaaaabaaaaaadcaaaaaldccabaaaadaaaaaaegbabaaaaeaaaaaa
egiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaadiaaaaaihcaabaaa
aaaaaaaafgbfbaaaaaaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaakhcaabaaa
aaaaaaaaegiccaaaadaaaaaaamaaaaaaagbabaaaaaaaaaaaegacbaaaaaaaaaaa
dcaaaaakhcaabaaaaaaaaaaaegiccaaaadaaaaaaaoaaaaaakgbkbaaaaaaaaaaa
egacbaaaaaaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaaadaaaaaaapaaaaaa
pgbpbaaaaaaaaaaaegacbaaaaaaaaaaaaaaaaaajhcaabaaaaaaaaaaaegacbaaa
aaaaaaaaegiccaiaebaaaaaaacaaaaaabjaaaaaadiaaaaaihccabaaaaeaaaaaa
egacbaaaaaaaaaaapgipcaaaacaaaaaabjaaaaaadiaaaaaibcaabaaaaaaaaaaa
bkbabaaaaaaaaaaackiacaaaadaaaaaaafaaaaaadcaaaaakbcaabaaaaaaaaaaa
ckiacaaaadaaaaaaaeaaaaaaakbabaaaaaaaaaaaakaabaaaaaaaaaaadcaaaaak
bcaabaaaaaaaaaaackiacaaaadaaaaaaagaaaaaackbabaaaaaaaaaaaakaabaaa
aaaaaaaadcaaaaakbcaabaaaaaaaaaaackiacaaaadaaaaaaahaaaaaadkbabaaa
aaaaaaaaakaabaaaaaaaaaaaaaaaaaajccaabaaaaaaaaaaadkiacaiaebaaaaaa
acaaaaaabjaaaaaaabeaaaaaaaaaiadpdiaaaaaiiccabaaaaeaaaaaabkaabaaa
aaaaaaaaakaabaiaebaaaaaaaaaaaaaadoaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 22 math
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "color" Color
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 176
Vector 96 [unity_LightmapST]
Vector 112 [_MainTex_ST]
Vector 128 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 80 [_ProjectionParams]
ConstBuffer "UnityShadows" 416
Vector 400 [unity_ShadowFadeCenterAndType]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 64 [glstate_matrix_modelview0]
Matrix 192 [_Object2World]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityShadows" 2
BindCB  "UnityPerDraw" 3
"vs_4_0_level_9_1
eefiecedmphialkkflckcamdagkjclnnlbcbbbjkabaaaaaaeaaiaaaaaeaaaaaa
daaaaaaaliacaaaaniagaaaakaahaaaaebgpgodjiaacaaaaiaacaaaaaaacpopp
bmacaaaageaaaaaaafaaceaaaaaagaaaaaaagaaaaaaaceaaabaagaaaaaaaagaa
adaaabaaaaaaaaaaabaaafaaabaaaeaaaaaaaaaaacaabjaaabaaafaaaaaaaaaa
adaaaaaaaiaaagaaaaaaaaaaadaaamaaaeaaaoaaaaaaaaaaaaaaaaaaaaacpopp
fbaaaaafbcaaapkaaaaaaadpaaaaiadpaaaaaaaaaaaaaaaabpaaaaacafaaaaia
aaaaapjabpaaaaacafaaadiaadaaapjabpaaaaacafaaaeiaaeaaapjaaeaaaaae
aaaaadoaadaaoejaacaaoekaacaaookaaeaaaaaeaaaaamoaadaaeejaadaaeeka
adaaoekaafaaaaadaaaaapiaaaaaffjaahaaoekaaeaaaaaeaaaaapiaagaaoeka
aaaaaajaaaaaoeiaaeaaaaaeaaaaapiaaiaaoekaaaaakkjaaaaaoeiaaeaaaaae
aaaaapiaajaaoekaaaaappjaaaaaoeiaafaaaaadabaaabiaaaaaffiaaeaaaaka
afaaaaadabaaaiiaabaaaaiabcaaaakaafaaaaadabaaafiaaaaapeiabcaaaaka
acaaaaadabaaadoaabaakkiaabaaomiaaeaaaaaeacaaadoaaeaaoejaabaaoeka
abaaookaafaaaaadabaaahiaaaaaffjaapaaoekaaeaaaaaeabaaahiaaoaaoeka
aaaaaajaabaaoeiaaeaaaaaeabaaahiabaaaoekaaaaakkjaabaaoeiaaeaaaaae
abaaahiabbaaoekaaaaappjaabaaoeiaacaaaaadabaaahiaabaaoeiaafaaoekb
afaaaaadadaaahoaabaaoeiaafaappkaafaaaaadabaaabiaaaaaffjaalaakkka
aeaaaaaeabaaabiaakaakkkaaaaaaajaabaaaaiaaeaaaaaeabaaabiaamaakkka
aaaakkjaabaaaaiaaeaaaaaeabaaabiaanaakkkaaaaappjaabaaaaiaabaaaaac
abaaaiiaafaappkaacaaaaadabaaaciaabaappibbcaaffkaafaaaaadadaaaioa
abaaffiaabaaaaibaeaaaaaeaaaaadmaaaaappiaaaaaoekaaaaaoeiaabaaaaac
aaaaammaaaaaoeiaabaaaaacabaaamoaaaaaoeiappppaaaafdeieefcbiaeaaaa
eaaaabaaagabaaaafjaaaaaeegiocaaaaaaaaaaaajaaaaaafjaaaaaeegiocaaa
abaaaaaaagaaaaaafjaaaaaeegiocaaaacaaaaaabkaaaaaafjaaaaaeegiocaaa
adaaaaaabaaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaaddcbabaaaadaaaaaa
fpaaaaaddcbabaaaaeaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaad
pccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaaddccabaaaadaaaaaa
gfaaaaadpccabaaaaeaaaaaagiaaaaacacaaaaaadiaaaaaipcaabaaaaaaaaaaa
fgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaa
egiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaa
aaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaahaaaaaa
ogikcaaaaaaaaaaaahaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaa
agiecaaaaaaaaaaaaiaaaaaakgiocaaaaaaaaaaaaiaaaaaadiaaaaaiccaabaaa
aaaaaaaabkaabaaaaaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaa
abaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadp
dgaaaaafmccabaaaacaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaacaaaaaa
kgakbaaaabaaaaaamgaabaaaabaaaaaadcaaaaaldccabaaaadaaaaaaegbabaaa
aeaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaadiaaaaai
hcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaak
hcaabaaaaaaaaaaaegiccaaaadaaaaaaamaaaaaaagbabaaaaaaaaaaaegacbaaa
aaaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaaadaaaaaaaoaaaaaakgbkbaaa
aaaaaaaaegacbaaaaaaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaaadaaaaaa
apaaaaaapgbpbaaaaaaaaaaaegacbaaaaaaaaaaaaaaaaaajhcaabaaaaaaaaaaa
egacbaaaaaaaaaaaegiccaiaebaaaaaaacaaaaaabjaaaaaadiaaaaaihccabaaa
aeaaaaaaegacbaaaaaaaaaaapgipcaaaacaaaaaabjaaaaaadiaaaaaibcaabaaa
aaaaaaaabkbabaaaaaaaaaaackiacaaaadaaaaaaafaaaaaadcaaaaakbcaabaaa
aaaaaaaackiacaaaadaaaaaaaeaaaaaaakbabaaaaaaaaaaaakaabaaaaaaaaaaa
dcaaaaakbcaabaaaaaaaaaaackiacaaaadaaaaaaagaaaaaackbabaaaaaaaaaaa
akaabaaaaaaaaaaadcaaaaakbcaabaaaaaaaaaaackiacaaaadaaaaaaahaaaaaa
dkbabaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaajccaabaaaaaaaaaaadkiacaia
ebaaaaaaacaaaaaabjaaaaaaabeaaaaaaaaaiadpdiaaaaaiiccabaaaaeaaaaaa
bkaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaadoaaaaabejfdeheomaaaaaaa
agaaaaaaaiaaaaaajiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaa
kbaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaacaaaaaaahaaaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
adaaaaaaapadaaaalaaaaaaaabaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaa
ljaaaaaaaaaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeo
aafeebeoehefeofeaaeoepfcenebemaafeeffiedepepfceeaaedepemepfcaakl
epfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaa
imaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapaaaaaaimaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaadamaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaapaaaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl
"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_6;
  tmpvar_6.x = tmpvar_5.x;
  tmpvar_6.y = (tmpvar_5.y * _ProjectionParams.x);
  o_4.xy = (tmpvar_6 + tmpvar_5.w);
  o_4.zw = tmpvar_3.zw;
  tmpvar_2.xyz = (((_Object2World * _glesVertex).xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  tmpvar_2.w = (-((glstate_matrix_modelview0 * _glesVertex).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = o_4;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec3 lmIndirect_3;
  mediump vec3 lmFull_4;
  mediump float lmFade_5;
  mediump vec4 light_6;
  lowp vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  lowp float tmpvar_9;
  mediump vec3 clouds_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_12;
  tmpvar_12 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_10 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_11.xyz + clouds_10);
  tmpvar_7 = tmpvar_13;
  mediump vec4 tmpvar_14;
  tmpvar_14.w = 0.0;
  tmpvar_14.xyz = clouds_10;
  lowp vec4 arg0_15;
  arg0_15 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_16;
  tmpvar_16 = mix (arg0_15, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_14).xyz;
  tmpvar_8 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_18;
  tmpvar_18 = ((tmpvar_17.xyz * (1.0 - clouds_10)) * _SpecColor.xyz).x;
  tmpvar_9 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_6 = tmpvar_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = -(log2(max (light_6, vec4(0.001, 0.001, 0.001, 0.001))));
  light_6.w = tmpvar_20.w;
  highp float tmpvar_21;
  tmpvar_21 = ((sqrt(dot (xlv_TEXCOORD3, xlv_TEXCOORD3)) * unity_LightmapFade.z) + unity_LightmapFade.w);
  lmFade_5 = tmpvar_21;
  lowp vec3 tmpvar_22;
  tmpvar_22 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lmFull_4 = tmpvar_22;
  lowp vec3 tmpvar_23;
  tmpvar_23 = (2.0 * texture2D (unity_LightmapInd, xlv_TEXCOORD2).xyz);
  lmIndirect_3 = tmpvar_23;
  light_6.xyz = (tmpvar_20.xyz + mix (lmIndirect_3, lmFull_4, vec3(clamp (lmFade_5, 0.0, 1.0))));
  lowp vec4 c_24;
  lowp float spec_25;
  mediump float tmpvar_26;
  tmpvar_26 = (tmpvar_20.w * tmpvar_9);
  spec_25 = tmpvar_26;
  mediump vec3 tmpvar_27;
  tmpvar_27 = ((tmpvar_7 * light_6.xyz) + ((light_6.xyz * _SpecColor.xyz) * spec_25));
  c_24.xyz = tmpvar_27;
  c_24.w = (tmpvar_11.w + (spec_25 * _SpecColor.w));
  c_2 = c_24;
  c_2.xyz = (c_2.xyz + tmpvar_8);
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_6;
  tmpvar_6.x = tmpvar_5.x;
  tmpvar_6.y = (tmpvar_5.y * _ProjectionParams.x);
  o_4.xy = (tmpvar_6 + tmpvar_5.w);
  o_4.zw = tmpvar_3.zw;
  tmpvar_2.xyz = (((_Object2World * _glesVertex).xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  tmpvar_2.w = (-((glstate_matrix_modelview0 * _glesVertex).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = o_4;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec3 lmIndirect_3;
  mediump vec3 lmFull_4;
  mediump float lmFade_5;
  mediump vec4 light_6;
  lowp vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  lowp float tmpvar_9;
  mediump vec3 clouds_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_12;
  tmpvar_12 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_10 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_11.xyz + clouds_10);
  tmpvar_7 = tmpvar_13;
  lowp vec3 normal_14;
  normal_14.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_14.z = sqrt((1.0 - clamp (dot (normal_14.xy, normal_14.xy), 0.0, 1.0)));
  mediump vec4 tmpvar_15;
  tmpvar_15.w = 0.0;
  tmpvar_15.xyz = clouds_10;
  lowp vec4 arg0_16;
  arg0_16 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_17;
  tmpvar_17 = mix (arg0_16, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_15).xyz;
  tmpvar_8 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_19;
  tmpvar_19 = ((tmpvar_18.xyz * (1.0 - clouds_10)) * _SpecColor.xyz).x;
  tmpvar_9 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_6 = tmpvar_20;
  mediump vec4 tmpvar_21;
  tmpvar_21 = -(log2(max (light_6, vec4(0.001, 0.001, 0.001, 0.001))));
  light_6.w = tmpvar_21.w;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (unity_Lightmap, xlv_TEXCOORD2);
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (unity_LightmapInd, xlv_TEXCOORD2);
  highp float tmpvar_24;
  tmpvar_24 = ((sqrt(dot (xlv_TEXCOORD3, xlv_TEXCOORD3)) * unity_LightmapFade.z) + unity_LightmapFade.w);
  lmFade_5 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = ((8.0 * tmpvar_22.w) * tmpvar_22.xyz);
  lmFull_4 = tmpvar_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = ((8.0 * tmpvar_23.w) * tmpvar_23.xyz);
  lmIndirect_3 = tmpvar_26;
  light_6.xyz = (tmpvar_21.xyz + mix (lmIndirect_3, lmFull_4, vec3(clamp (lmFade_5, 0.0, 1.0))));
  lowp vec4 c_27;
  lowp float spec_28;
  mediump float tmpvar_29;
  tmpvar_29 = (tmpvar_21.w * tmpvar_9);
  spec_28 = tmpvar_29;
  mediump vec3 tmpvar_30;
  tmpvar_30 = ((tmpvar_7 * light_6.xyz) + ((light_6.xyz * _SpecColor.xyz) * spec_28));
  c_27.xyz = tmpvar_30;
  c_27.w = (tmpvar_11.w + (spec_28 * _SpecColor.w));
  c_2 = c_27;
  c_2.xyz = (c_2.xyz + tmpvar_8);
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec2 xlv_TEXCOORD2;
out highp vec4 xlv_TEXCOORD3;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_6;
  tmpvar_6.x = tmpvar_5.x;
  tmpvar_6.y = (tmpvar_5.y * _ProjectionParams.x);
  o_4.xy = (tmpvar_6 + tmpvar_5.w);
  o_4.zw = tmpvar_3.zw;
  tmpvar_2.xyz = (((_Object2World * _glesVertex).xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  tmpvar_2.w = (-((glstate_matrix_modelview0 * _glesVertex).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = o_4;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
in highp vec4 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec2 xlv_TEXCOORD2;
in highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec3 lmIndirect_3;
  mediump vec3 lmFull_4;
  mediump float lmFade_5;
  mediump vec4 light_6;
  lowp vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  lowp float tmpvar_9;
  mediump vec3 clouds_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_12;
  tmpvar_12 = texture (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_10 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_11.xyz + clouds_10);
  tmpvar_7 = tmpvar_13;
  mediump vec4 tmpvar_14;
  tmpvar_14.w = 0.0;
  tmpvar_14.xyz = clouds_10;
  lowp vec4 arg0_15;
  arg0_15 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_16;
  tmpvar_16 = mix (arg0_15, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_14).xyz;
  tmpvar_8 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_18;
  tmpvar_18 = ((tmpvar_17.xyz * (1.0 - clouds_10)) * _SpecColor.xyz).x;
  tmpvar_9 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = textureProj (_LightBuffer, xlv_TEXCOORD1);
  light_6 = tmpvar_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = -(log2(max (light_6, vec4(0.001, 0.001, 0.001, 0.001))));
  light_6.w = tmpvar_20.w;
  highp float tmpvar_21;
  tmpvar_21 = ((sqrt(dot (xlv_TEXCOORD3, xlv_TEXCOORD3)) * unity_LightmapFade.z) + unity_LightmapFade.w);
  lmFade_5 = tmpvar_21;
  lowp vec3 tmpvar_22;
  tmpvar_22 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lmFull_4 = tmpvar_22;
  lowp vec3 tmpvar_23;
  tmpvar_23 = (2.0 * texture (unity_LightmapInd, xlv_TEXCOORD2).xyz);
  lmIndirect_3 = tmpvar_23;
  light_6.xyz = (tmpvar_20.xyz + mix (lmIndirect_3, lmFull_4, vec3(clamp (lmFade_5, 0.0, 1.0))));
  lowp vec4 c_24;
  lowp float spec_25;
  mediump float tmpvar_26;
  tmpvar_26 = (tmpvar_20.w * tmpvar_9);
  spec_25 = tmpvar_26;
  mediump vec3 tmpvar_27;
  tmpvar_27 = ((tmpvar_7 * light_6.xyz) + ((light_6.xyz * _SpecColor.xyz) * spec_25));
  c_24.xyz = tmpvar_27;
  c_24.w = (tmpvar_11.w + (spec_25 * _SpecColor.w));
  c_2 = c_24;
  c_2.xyz = (c_2.xyz + tmpvar_8);
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 25 math
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" ATTR14
Matrix 5 [_World2Object]
Vector 9 [_WorldSpaceCameraPos]
Vector 10 [_ProjectionParams]
Vector 11 [unity_Scale]
Vector 12 [unity_LightmapST]
Vector 13 [_MainTex_ST]
Vector 14 [_Clouds_ST]
"!!ARBvp1.0
PARAM c[15] = { { 0.5, 1 },
		state.matrix.mvp,
		program.local[5..14] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MOV R0.xyz, vertex.attrib[14];
MUL R1.xyz, vertex.normal.zxyw, R0.yzxw;
MAD R0.xyz, vertex.normal.yzxw, R0.zxyw, -R1;
MUL R3.xyz, R0, vertex.attrib[14].w;
MOV R1.xyz, c[9];
MOV R1.w, c[0].y;
DP4 R2.z, R1, c[7];
DP4 R2.x, R1, c[5];
DP4 R2.y, R1, c[6];
MAD R1.xyz, R2, c[11].w, -vertex.position;
DP4 R0.w, vertex.position, c[4];
DP4 R0.z, vertex.position, c[3];
DP4 R0.x, vertex.position, c[1];
DP4 R0.y, vertex.position, c[2];
MUL R2.xyz, R0.xyww, c[0].x;
MUL R2.y, R2, c[10].x;
DP3 result.texcoord[3].y, R1, R3;
ADD result.texcoord[1].xy, R2, R2.z;
DP3 result.texcoord[3].z, vertex.normal, R1;
DP3 result.texcoord[3].x, R1, vertex.attrib[14];
MOV result.position, R0;
MOV result.texcoord[1].zw, R0;
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[14].xyxy, c[14];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[13], c[13].zwzw;
MAD result.texcoord[2].xy, vertex.texcoord[1], c[12], c[12].zwzw;
END
# 25 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 26 math
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_World2Object]
Vector 8 [_WorldSpaceCameraPos]
Vector 9 [_ProjectionParams]
Vector 10 [_ScreenParams]
Vector 11 [unity_Scale]
Vector 12 [unity_LightmapST]
Vector 13 [_MainTex_ST]
Vector 14 [_Clouds_ST]
"vs_2_0
def c15, 0.50000000, 1.00000000, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
dcl_texcoord1 v4
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r0.xyz, v2.yzxw, r0.zxyw, -r1
mul r3.xyz, r0, v1.w
mov r1.xyz, c8
mov r1.w, c15.y
dp4 r2.z, r1, c6
dp4 r2.x, r1, c4
dp4 r2.y, r1, c5
mad r1.xyz, r2, c11.w, -v0
dp4 r0.w, v0, c3
dp4 r0.z, v0, c2
dp4 r0.x, v0, c0
dp4 r0.y, v0, c1
mul r2.xyz, r0.xyww, c15.x
mul r2.y, r2, c9.x
dp3 oT3.y, r1, r3
mad oT1.xy, r2.z, c10.zwzw, r2
dp3 oT3.z, v2, r1
dp3 oT3.x, r1, v1
mov oPos, r0
mov oT1.zw, r0
mad oT0.zw, v3.xyxy, c14.xyxy, c14
mad oT0.xy, v3, c13, c13.zwzw
mad oT2.xy, v4, c12, c12.zwzw
"
}
SubProgram "d3d11 " {
// Stats: 21 math
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 176
Vector 96 [unity_LightmapST]
Vector 112 [_MainTex_ST]
Vector 128 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityPerDraw" 2
"vs_4_0
eefiecedflgjacajgcdgblgdendfjmpdfpmfmnofabaaaaaaiaafaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaapaaaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
adamaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcoeadaaaaeaaaabaa
pjaaaaaafjaaaaaeegiocaaaaaaaaaaaajaaaaaafjaaaaaeegiocaaaabaaaaaa
agaaaaaafjaaaaaeegiocaaaacaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaa
fpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaa
adaaaaaafpaaaaaddcbabaaaaeaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaa
gfaaaaadpccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaaddccabaaa
adaaaaaagfaaaaadhccabaaaaeaaaaaagiaaaaacacaaaaaadiaaaaaipcaabaaa
aaaaaaaafgbfbaaaaaaaaaaaegiocaaaacaaaaaaabaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaacaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaacaaaaaakgbkbaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaadaaaaaa
pgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaa
ahaaaaaaogikcaaaaaaaaaaaahaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaa
adaaaaaaagiecaaaaaaaaaaaaiaaaaaakgiocaaaaaaaaaaaaiaaaaaadiaaaaai
ccaabaaaaaaaaaaabkaabaaaaaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaak
ncaabaaaabaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadp
aaaaaadpdgaaaaafmccabaaaacaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaa
acaaaaaakgakbaaaabaaaaaamgaabaaaabaaaaaadcaaaaaldccabaaaadaaaaaa
egbabaaaaeaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaa
diaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaadcaaaaak
hcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaiaebaaaaaa
aaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaapgbpbaaaabaaaaaa
diaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaaacaaaaaa
bbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaacaaaaaabaaaaaaaagiacaaa
abaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
acaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaaaaaaaaai
hcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaacaaaaaabdaaaaaadcaaaaal
hcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaaacaaaaaabeaaaaaaegbcbaia
ebaaaaaaaaaaaaaabaaaaaahcccabaaaaeaaaaaaegacbaaaaaaaaaaaegacbaaa
abaaaaaabaaaaaahbccabaaaaeaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaa
baaaaaaheccabaaaaeaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaadoaaaaab
"
}
SubProgram "d3d11_9x " {
// Stats: 21 math
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 176
Vector 96 [unity_LightmapST]
Vector 112 [_MainTex_ST]
Vector 128 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityPerDraw" 2
"vs_4_0_level_9_1
eefiecedbelgancohhkjpjmkfjldogplljpjkglkabaaaaaaamaiaaaaaeaaaaaa
daaaaaaaliacaaaakeagaaaagmahaaaaebgpgodjiaacaaaaiaacaaaaaaacpopp
ciacaaaafiaaaaaaaeaaceaaaaaafeaaaaaafeaaaaaaceaaabaafeaaaaaaagaa
adaaabaaaaaaaaaaabaaaeaaacaaaeaaaaaaaaaaacaaaaaaaeaaagaaaaaaaaaa
acaabaaaafaaakaaaaaaaaaaaaaaaaaaaaacpoppfbaaaaafapaaapkaaaaaaadp
aaaaaaaaaaaaaaaaaaaaaaaabpaaaaacafaaaaiaaaaaapjabpaaaaacafaaabia
abaaapjabpaaaaacafaaaciaacaaapjabpaaaaacafaaadiaadaaapjabpaaaaac
afaaaeiaaeaaapjaaeaaaaaeaaaaadoaadaaoejaacaaoekaacaaookaaeaaaaae
aaaaamoaadaaeejaadaaeekaadaaoekaafaaaaadaaaaapiaaaaaffjaahaaoeka
aeaaaaaeaaaaapiaagaaoekaaaaaaajaaaaaoeiaaeaaaaaeaaaaapiaaiaaoeka
aaaakkjaaaaaoeiaaeaaaaaeaaaaapiaajaaoekaaaaappjaaaaaoeiaafaaaaad
abaaabiaaaaaffiaafaaaakaafaaaaadabaaaiiaabaaaaiaapaaaakaafaaaaad
abaaafiaaaaapeiaapaaaakaacaaaaadabaaadoaabaakkiaabaaomiaaeaaaaae
acaaadoaaeaaoejaabaaoekaabaaookaabaaaaacabaaahiaaeaaoekaafaaaaad
acaaahiaabaaffiaalaaoekaaeaaaaaeabaaaliaakaakekaabaaaaiaacaakeia
aeaaaaaeabaaahiaamaaoekaabaakkiaabaapeiaacaaaaadabaaahiaabaaoeia
anaaoekaaeaaaaaeabaaahiaabaaoeiaaoaappkaaaaaoejbaiaaaaadadaaaboa
abaaoejaabaaoeiaabaaaaacacaaahiaabaaoejaafaaaaadadaaahiaacaamjia
acaancjaaeaaaaaeacaaahiaacaamjjaacaanciaadaaoeibafaaaaadacaaahia
acaaoeiaabaappjaaiaaaaadadaaacoaacaaoeiaabaaoeiaaiaaaaadadaaaeoa
acaaoejaabaaoeiaaeaaaaaeaaaaadmaaaaappiaaaaaoekaaaaaoeiaabaaaaac
aaaaammaaaaaoeiaabaaaaacabaaamoaaaaaoeiappppaaaafdeieefcoeadaaaa
eaaaabaapjaaaaaafjaaaaaeegiocaaaaaaaaaaaajaaaaaafjaaaaaeegiocaaa
abaaaaaaagaaaaaafjaaaaaeegiocaaaacaaaaaabfaaaaaafpaaaaadpcbabaaa
aaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaad
dcbabaaaadaaaaaafpaaaaaddcbabaaaaeaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaad
dccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaagiaaaaacacaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaacaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaacaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaa
aaaaaaaaahaaaaaaogikcaaaaaaaaaaaahaaaaaadcaaaaalmccabaaaabaaaaaa
agbebaaaadaaaaaaagiecaaaaaaaaaaaaiaaaaaakgiocaaaaaaaaaaaaiaaaaaa
diaaaaaiccaabaaaaaaaaaaabkaabaaaaaaaaaaaakiacaaaabaaaaaaafaaaaaa
diaaaaakncaabaaaabaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaa
aaaaaadpaaaaaadpdgaaaaafmccabaaaacaaaaaakgaobaaaaaaaaaaaaaaaaaah
dccabaaaacaaaaaakgakbaaaabaaaaaamgaabaaaabaaaaaadcaaaaaldccabaaa
adaaaaaaegbabaaaaeaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaa
agaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaa
dcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaia
ebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaapgbpbaaa
abaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaa
acaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaacaaaaaabaaaaaaa
agiacaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaa
egiccaaaacaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaa
aaaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaacaaaaaabdaaaaaa
dcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaaacaaaaaabeaaaaaa
egbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaaaeaaaaaaegacbaaaaaaaaaaa
egacbaaaabaaaaaabaaaaaahbccabaaaaeaaaaaaegbcbaaaabaaaaaaegacbaaa
abaaaaaabaaaaaaheccabaaaaeaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaa
doaaaaabejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaa
apapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaaahahaaaalaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaaabaaaaaaaaaaaaaa
adaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaaadaaaaaaafaaaaaa
apaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfcenebemaafeeffied
epepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apaaaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaadamaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklkl"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_5;
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_7;
  tmpvar_7.x = tmpvar_6.x;
  tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
  o_5.xy = (tmpvar_7 + tmpvar_6.w);
  o_5.zw = tmpvar_4.zw;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = _WorldSpaceCameraPos;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = o_5;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = (tmpvar_10 * (((_World2Object * tmpvar_11).xyz * unity_Scale.w) - _glesVertex.xyz));
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  mediump vec3 clouds_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_11;
  tmpvar_11 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_9 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_10.xyz + clouds_9);
  tmpvar_4 = tmpvar_12;
  lowp vec3 tmpvar_13;
  tmpvar_13 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_14;
  tmpvar_14 = mix (tmpvar_13, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_14;
  mediump vec4 tmpvar_15;
  tmpvar_15.w = 0.0;
  tmpvar_15.xyz = clouds_9;
  lowp vec4 arg0_16;
  arg0_16 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_17;
  tmpvar_17 = mix (arg0_16, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_15).xyz;
  tmpvar_6 = tmpvar_17;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_19;
  tmpvar_19 = ((tmpvar_18.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_3 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize(xlv_TEXCOORD3);
  mediump vec4 tmpvar_22;
  mediump vec3 viewDir_23;
  viewDir_23 = tmpvar_21;
  highp float nh_24;
  mat3 tmpvar_25;
  tmpvar_25[0].x = 0.816497;
  tmpvar_25[0].y = -0.408248;
  tmpvar_25[0].z = -0.408248;
  tmpvar_25[1].x = 0.0;
  tmpvar_25[1].y = 0.707107;
  tmpvar_25[1].z = -0.707107;
  tmpvar_25[2].x = 0.57735;
  tmpvar_25[2].y = 0.57735;
  tmpvar_25[2].z = 0.57735;
  mediump vec3 normal_26;
  normal_26 = tmpvar_5;
  mediump vec3 scalePerBasisVector_27;
  mediump vec3 lm_28;
  lowp vec3 tmpvar_29;
  tmpvar_29 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lm_28 = tmpvar_29;
  lowp vec3 tmpvar_30;
  tmpvar_30 = (2.0 * texture2D (unity_LightmapInd, xlv_TEXCOORD2).xyz);
  scalePerBasisVector_27 = tmpvar_30;
  lm_28 = (lm_28 * dot (clamp ((tmpvar_25 * normal_26), 0.0, 1.0), scalePerBasisVector_27));
  vec3 v_31;
  v_31.x = tmpvar_25[0].x;
  v_31.y = tmpvar_25[1].x;
  v_31.z = tmpvar_25[2].x;
  vec3 v_32;
  v_32.x = tmpvar_25[0].y;
  v_32.y = tmpvar_25[1].y;
  v_32.z = tmpvar_25[2].y;
  vec3 v_33;
  v_33.x = tmpvar_25[0].z;
  v_33.y = tmpvar_25[1].z;
  v_33.z = tmpvar_25[2].z;
  mediump float tmpvar_34;
  tmpvar_34 = max (0.0, dot (tmpvar_5, normalize((normalize((((scalePerBasisVector_27.x * v_31) + (scalePerBasisVector_27.y * v_32)) + (scalePerBasisVector_27.z * v_33))) + viewDir_23))));
  nh_24 = tmpvar_34;
  mediump float arg1_35;
  arg1_35 = (tmpvar_7 * 128.0);
  highp vec4 tmpvar_36;
  tmpvar_36.xyz = lm_28;
  tmpvar_36.w = pow (nh_24, arg1_35);
  tmpvar_22 = tmpvar_36;
  mediump vec4 tmpvar_37;
  tmpvar_37 = (-(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001)))) + tmpvar_22);
  light_3 = tmpvar_37;
  lowp vec4 c_38;
  lowp float spec_39;
  mediump float tmpvar_40;
  tmpvar_40 = (tmpvar_37.w * tmpvar_8);
  spec_39 = tmpvar_40;
  mediump vec3 tmpvar_41;
  tmpvar_41 = ((tmpvar_4 * tmpvar_37.xyz) + ((tmpvar_37.xyz * _SpecColor.xyz) * spec_39));
  c_38.xyz = tmpvar_41;
  c_38.w = (tmpvar_10.w + (spec_39 * _SpecColor.w));
  c_2 = c_38;
  c_2.xyz = (c_2.xyz + tmpvar_6);
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_5;
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_7;
  tmpvar_7.x = tmpvar_6.x;
  tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
  o_5.xy = (tmpvar_7 + tmpvar_6.w);
  o_5.zw = tmpvar_4.zw;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = _WorldSpaceCameraPos;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = o_5;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = (tmpvar_10 * (((_World2Object * tmpvar_11).xyz * unity_Scale.w) - _glesVertex.xyz));
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  mediump vec3 clouds_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_11;
  tmpvar_11 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_9 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_10.xyz + clouds_9);
  tmpvar_4 = tmpvar_12;
  lowp vec3 normal_13;
  normal_13.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_13.z = sqrt((1.0 - clamp (dot (normal_13.xy, normal_13.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_14;
  tmpvar_14 = mix (normal_13, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_14;
  mediump vec4 tmpvar_15;
  tmpvar_15.w = 0.0;
  tmpvar_15.xyz = clouds_9;
  lowp vec4 arg0_16;
  arg0_16 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_17;
  tmpvar_17 = mix (arg0_16, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_15).xyz;
  tmpvar_6 = tmpvar_17;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_19;
  tmpvar_19 = ((tmpvar_18.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_3 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (unity_Lightmap, xlv_TEXCOORD2);
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (unity_LightmapInd, xlv_TEXCOORD2);
  highp vec3 tmpvar_23;
  tmpvar_23 = normalize(xlv_TEXCOORD3);
  mediump vec4 tmpvar_24;
  mediump vec3 viewDir_25;
  viewDir_25 = tmpvar_23;
  highp float nh_26;
  mat3 tmpvar_27;
  tmpvar_27[0].x = 0.816497;
  tmpvar_27[0].y = -0.408248;
  tmpvar_27[0].z = -0.408248;
  tmpvar_27[1].x = 0.0;
  tmpvar_27[1].y = 0.707107;
  tmpvar_27[1].z = -0.707107;
  tmpvar_27[2].x = 0.57735;
  tmpvar_27[2].y = 0.57735;
  tmpvar_27[2].z = 0.57735;
  mediump vec3 normal_28;
  normal_28 = tmpvar_5;
  mediump vec3 scalePerBasisVector_29;
  mediump vec3 lm_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((8.0 * tmpvar_21.w) * tmpvar_21.xyz);
  lm_30 = tmpvar_31;
  lowp vec3 tmpvar_32;
  tmpvar_32 = ((8.0 * tmpvar_22.w) * tmpvar_22.xyz);
  scalePerBasisVector_29 = tmpvar_32;
  lm_30 = (lm_30 * dot (clamp ((tmpvar_27 * normal_28), 0.0, 1.0), scalePerBasisVector_29));
  vec3 v_33;
  v_33.x = tmpvar_27[0].x;
  v_33.y = tmpvar_27[1].x;
  v_33.z = tmpvar_27[2].x;
  vec3 v_34;
  v_34.x = tmpvar_27[0].y;
  v_34.y = tmpvar_27[1].y;
  v_34.z = tmpvar_27[2].y;
  vec3 v_35;
  v_35.x = tmpvar_27[0].z;
  v_35.y = tmpvar_27[1].z;
  v_35.z = tmpvar_27[2].z;
  mediump float tmpvar_36;
  tmpvar_36 = max (0.0, dot (tmpvar_5, normalize((normalize((((scalePerBasisVector_29.x * v_33) + (scalePerBasisVector_29.y * v_34)) + (scalePerBasisVector_29.z * v_35))) + viewDir_25))));
  nh_26 = tmpvar_36;
  mediump float arg1_37;
  arg1_37 = (tmpvar_7 * 128.0);
  highp vec4 tmpvar_38;
  tmpvar_38.xyz = lm_30;
  tmpvar_38.w = pow (nh_26, arg1_37);
  tmpvar_24 = tmpvar_38;
  mediump vec4 tmpvar_39;
  tmpvar_39 = (-(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001)))) + tmpvar_24);
  light_3 = tmpvar_39;
  lowp vec4 c_40;
  lowp float spec_41;
  mediump float tmpvar_42;
  tmpvar_42 = (tmpvar_39.w * tmpvar_8);
  spec_41 = tmpvar_42;
  mediump vec3 tmpvar_43;
  tmpvar_43 = ((tmpvar_4 * tmpvar_39.xyz) + ((tmpvar_39.xyz * _SpecColor.xyz) * spec_41));
  c_40.xyz = tmpvar_43;
  c_40.w = (tmpvar_10.w + (spec_41 * _SpecColor.w));
  c_2 = c_40;
  c_2.xyz = (c_2.xyz + tmpvar_6);
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec2 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_5;
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_7;
  tmpvar_7.x = tmpvar_6.x;
  tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
  o_5.xy = (tmpvar_7 + tmpvar_6.w);
  o_5.zw = tmpvar_4.zw;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = _WorldSpaceCameraPos;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = o_5;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = (tmpvar_10 * (((_World2Object * tmpvar_11).xyz * unity_Scale.w) - _glesVertex.xyz));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
in highp vec4 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec2 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  mediump vec3 clouds_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_11;
  tmpvar_11 = texture (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_9 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_10.xyz + clouds_9);
  tmpvar_4 = tmpvar_12;
  lowp vec3 tmpvar_13;
  tmpvar_13 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_14;
  tmpvar_14 = mix (tmpvar_13, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_14;
  mediump vec4 tmpvar_15;
  tmpvar_15.w = 0.0;
  tmpvar_15.xyz = clouds_9;
  lowp vec4 arg0_16;
  arg0_16 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_17;
  tmpvar_17 = mix (arg0_16, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_15).xyz;
  tmpvar_6 = tmpvar_17;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_19;
  tmpvar_19 = ((tmpvar_18.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = textureProj (_LightBuffer, xlv_TEXCOORD1);
  light_3 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize(xlv_TEXCOORD3);
  mediump vec4 tmpvar_22;
  mediump vec3 viewDir_23;
  viewDir_23 = tmpvar_21;
  highp float nh_24;
  mat3 tmpvar_25;
  tmpvar_25[0].x = 0.816497;
  tmpvar_25[0].y = -0.408248;
  tmpvar_25[0].z = -0.408248;
  tmpvar_25[1].x = 0.0;
  tmpvar_25[1].y = 0.707107;
  tmpvar_25[1].z = -0.707107;
  tmpvar_25[2].x = 0.57735;
  tmpvar_25[2].y = 0.57735;
  tmpvar_25[2].z = 0.57735;
  mediump vec3 normal_26;
  normal_26 = tmpvar_5;
  mediump vec3 scalePerBasisVector_27;
  mediump vec3 lm_28;
  lowp vec3 tmpvar_29;
  tmpvar_29 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lm_28 = tmpvar_29;
  lowp vec3 tmpvar_30;
  tmpvar_30 = (2.0 * texture (unity_LightmapInd, xlv_TEXCOORD2).xyz);
  scalePerBasisVector_27 = tmpvar_30;
  lm_28 = (lm_28 * dot (clamp ((tmpvar_25 * normal_26), 0.0, 1.0), scalePerBasisVector_27));
  vec3 v_31;
  v_31.x = tmpvar_25[0].x;
  v_31.y = tmpvar_25[1].x;
  v_31.z = tmpvar_25[2].x;
  vec3 v_32;
  v_32.x = tmpvar_25[0].y;
  v_32.y = tmpvar_25[1].y;
  v_32.z = tmpvar_25[2].y;
  vec3 v_33;
  v_33.x = tmpvar_25[0].z;
  v_33.y = tmpvar_25[1].z;
  v_33.z = tmpvar_25[2].z;
  mediump float tmpvar_34;
  tmpvar_34 = max (0.0, dot (tmpvar_5, normalize((normalize((((scalePerBasisVector_27.x * v_31) + (scalePerBasisVector_27.y * v_32)) + (scalePerBasisVector_27.z * v_33))) + viewDir_23))));
  nh_24 = tmpvar_34;
  mediump float arg1_35;
  arg1_35 = (tmpvar_7 * 128.0);
  highp vec4 tmpvar_36;
  tmpvar_36.xyz = lm_28;
  tmpvar_36.w = pow (nh_24, arg1_35);
  tmpvar_22 = tmpvar_36;
  mediump vec4 tmpvar_37;
  tmpvar_37 = (-(log2(max (light_3, vec4(0.001, 0.001, 0.001, 0.001)))) + tmpvar_22);
  light_3 = tmpvar_37;
  lowp vec4 c_38;
  lowp float spec_39;
  mediump float tmpvar_40;
  tmpvar_40 = (tmpvar_37.w * tmpvar_8);
  spec_39 = tmpvar_40;
  mediump vec3 tmpvar_41;
  tmpvar_41 = ((tmpvar_4 * tmpvar_37.xyz) + ((tmpvar_37.xyz * _SpecColor.xyz) * spec_39));
  c_38.xyz = tmpvar_41;
  c_38.w = (tmpvar_10.w + (spec_39 * _SpecColor.w));
  c_2 = c_38;
  c_2.xyz = (c_2.xyz + tmpvar_6);
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 29 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 5 [_Object2World]
Vector 9 [_ProjectionParams]
Vector 10 [unity_SHAr]
Vector 11 [unity_SHAg]
Vector 12 [unity_SHAb]
Vector 13 [unity_SHBr]
Vector 14 [unity_SHBg]
Vector 15 [unity_SHBb]
Vector 16 [unity_SHC]
Vector 17 [unity_Scale]
Vector 18 [_MainTex_ST]
Vector 19 [_Clouds_ST]
"!!ARBvp1.0
PARAM c[20] = { { 0.5, 1 },
		state.matrix.mvp,
		program.local[5..19] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MUL R1.xyz, vertex.normal, c[17].w;
DP3 R2.w, R1, c[6];
DP3 R0.x, R1, c[5];
DP3 R0.z, R1, c[7];
MOV R0.y, R2.w;
MUL R1, R0.xyzz, R0.yzzx;
MOV R0.w, c[0].y;
DP4 R2.z, R0, c[12];
DP4 R2.y, R0, c[11];
DP4 R2.x, R0, c[10];
MUL R0.y, R2.w, R2.w;
DP4 R3.z, R1, c[15];
DP4 R3.y, R1, c[14];
DP4 R3.x, R1, c[13];
DP4 R1.w, vertex.position, c[4];
DP4 R1.z, vertex.position, c[3];
MAD R0.x, R0, R0, -R0.y;
ADD R3.xyz, R2, R3;
MUL R2.xyz, R0.x, c[16];
DP4 R1.x, vertex.position, c[1];
DP4 R1.y, vertex.position, c[2];
MUL R0.xyz, R1.xyww, c[0].x;
MUL R0.y, R0, c[9].x;
ADD result.texcoord[2].xyz, R3, R2;
ADD result.texcoord[1].xy, R0, R0.z;
MOV result.position, R1;
MOV result.texcoord[1].zw, R1;
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[19].xyxy, c[19];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[18], c[18].zwzw;
END
# 29 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 29 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_Object2World]
Vector 8 [_ProjectionParams]
Vector 9 [_ScreenParams]
Vector 10 [unity_SHAr]
Vector 11 [unity_SHAg]
Vector 12 [unity_SHAb]
Vector 13 [unity_SHBr]
Vector 14 [unity_SHBg]
Vector 15 [unity_SHBb]
Vector 16 [unity_SHC]
Vector 17 [unity_Scale]
Vector 18 [_MainTex_ST]
Vector 19 [_Clouds_ST]
"vs_2_0
def c20, 0.50000000, 1.00000000, 0, 0
dcl_position0 v0
dcl_normal0 v1
dcl_texcoord0 v2
mul r1.xyz, v1, c17.w
dp3 r2.w, r1, c5
dp3 r0.x, r1, c4
dp3 r0.z, r1, c6
mov r0.y, r2.w
mul r1, r0.xyzz, r0.yzzx
mov r0.w, c20.y
dp4 r2.z, r0, c12
dp4 r2.y, r0, c11
dp4 r2.x, r0, c10
mul r0.y, r2.w, r2.w
dp4 r3.z, r1, c15
dp4 r3.y, r1, c14
dp4 r3.x, r1, c13
dp4 r1.w, v0, c3
dp4 r1.z, v0, c2
mad r0.x, r0, r0, -r0.y
add r3.xyz, r2, r3
mul r2.xyz, r0.x, c16
dp4 r1.x, v0, c0
dp4 r1.y, v0, c1
mul r0.xyz, r1.xyww, c20.x
mul r0.y, r0, c8.x
add oT2.xyz, r3, r2
mad oT1.xy, r0.z, c9.zwzw, r0
mov oPos, r1
mov oT1.zw, r1
mad oT0.zw, v2.xyxy, c19.xyxy, c19
mad oT0.xy, v2, c18, c18.zwzw
"
}
SubProgram "d3d11 " {
// Stats: 24 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
ConstBuffer "$Globals" 144
Vector 96 [_MainTex_ST]
Vector 112 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0
eefieceddjimjiinodlpgbnjeefkncdlfeajkjgnabaaaaaaleafaaaaadaaaaaa
cmaaaaaapeaaaaaahmabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheoiaaaaaaaaeaaaaaa
aiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaheaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaapaaaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
ahaiaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefc
daaeaaaaeaaaabaaamabaaaafjaaaaaeegiocaaaaaaaaaaaaiaaaaaafjaaaaae
egiocaaaabaaaaaaagaaaaaafjaaaaaeegiocaaaacaaaaaacnaaaaaafjaaaaae
egiocaaaadaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaa
acaaaaaafpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaa
gfaaaaadpccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaadhccabaaa
adaaaaaagiaaaaacaeaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaa
egiocaaaadaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaa
aaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaa
egiocaaaadaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaa
aaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaa
abaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaa
agaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaa
ahaaaaaakgiocaaaaaaaaaaaahaaaaaadiaaaaaiccaabaaaaaaaaaaabkaabaaa
aaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaaabaaaaaaagahbaaa
aaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadpdgaaaaafmccabaaa
acaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaacaaaaaakgakbaaaabaaaaaa
mgaabaaaabaaaaaadiaaaaaihcaabaaaaaaaaaaaegbcbaaaacaaaaaapgipcaaa
adaaaaaabeaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaaegiccaaa
adaaaaaaanaaaaaadcaaaaaklcaabaaaaaaaaaaaegiicaaaadaaaaaaamaaaaaa
agaabaaaaaaaaaaaegaibaaaabaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaa
adaaaaaaaoaaaaaakgakbaaaaaaaaaaaegadbaaaaaaaaaaadgaaaaaficaabaaa
aaaaaaaaabeaaaaaaaaaiadpbbaaaaaibcaabaaaabaaaaaaegiocaaaacaaaaaa
cgaaaaaaegaobaaaaaaaaaaabbaaaaaiccaabaaaabaaaaaaegiocaaaacaaaaaa
chaaaaaaegaobaaaaaaaaaaabbaaaaaiecaabaaaabaaaaaaegiocaaaacaaaaaa
ciaaaaaaegaobaaaaaaaaaaadiaaaaahpcaabaaaacaaaaaajgacbaaaaaaaaaaa
egakbaaaaaaaaaaabbaaaaaibcaabaaaadaaaaaaegiocaaaacaaaaaacjaaaaaa
egaobaaaacaaaaaabbaaaaaiccaabaaaadaaaaaaegiocaaaacaaaaaackaaaaaa
egaobaaaacaaaaaabbaaaaaiecaabaaaadaaaaaaegiocaaaacaaaaaaclaaaaaa
egaobaaaacaaaaaaaaaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaa
adaaaaaadiaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaabkaabaaaaaaaaaaa
dcaaaaakbcaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaaaaaaaaaaabkaabaia
ebaaaaaaaaaaaaaadcaaaaakhccabaaaadaaaaaaegiccaaaacaaaaaacmaaaaaa
agaabaaaaaaaaaaaegacbaaaabaaaaaadoaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 24 math
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
ConstBuffer "$Globals" 144
Vector 96 [_MainTex_ST]
Vector 112 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 80 [_ProjectionParams]
ConstBuffer "UnityLighting" 720
Vector 608 [unity_SHAr]
Vector 624 [unity_SHAg]
Vector 640 [unity_SHAb]
Vector 656 [unity_SHBr]
Vector 672 [unity_SHBg]
Vector 688 [unity_SHBb]
Vector 704 [unity_SHC]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 192 [_Object2World]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityLighting" 2
BindCB  "UnityPerDraw" 3
"vs_4_0_level_9_1
eefiecedpfnbdipllflhooakmbenahofaplofaolabaaaaaagaaiaaaaaeaaaaaa
daaaaaaaniacaaaabaahaaaaniahaaaaebgpgodjkaacaaaakaacaaaaaaacpopp
daacaaaahaaaaaaaagaaceaaaaaagmaaaaaagmaaaaaaceaaabaagmaaaaaaagaa
acaaabaaaaaaaaaaabaaafaaabaaadaaaaaaaaaaacaacgaaahaaaeaaaaaaaaaa
adaaaaaaaeaaalaaaaaaaaaaadaaamaaadaaapaaaaaaaaaaadaabeaaabaabcaa
aaaaaaaaaaaaaaaaaaacpoppfbaaaaafbdaaapkaaaaaaadpaaaaiadpaaaaaaaa
aaaaaaaabpaaaaacafaaaaiaaaaaapjabpaaaaacafaaaciaacaaapjabpaaaaac
afaaadiaadaaapjaaeaaaaaeaaaaadoaadaaoejaabaaoekaabaaookaaeaaaaae
aaaaamoaadaaeejaacaaeekaacaaoekaafaaaaadaaaaapiaaaaaffjaamaaoeka
aeaaaaaeaaaaapiaalaaoekaaaaaaajaaaaaoeiaaeaaaaaeaaaaapiaanaaoeka
aaaakkjaaaaaoeiaaeaaaaaeaaaaapiaaoaaoekaaaaappjaaaaaoeiaafaaaaad
abaaabiaaaaaffiaadaaaakaafaaaaadabaaaiiaabaaaaiabdaaaakaafaaaaad
abaaafiaaaaapeiabdaaaakaacaaaaadabaaadoaabaakkiaabaaomiaafaaaaad
abaaahiaacaaoejabcaappkaafaaaaadacaaahiaabaaffiabaaaoekaaeaaaaae
abaaaliaapaakekaabaaaaiaacaakeiaaeaaaaaeabaaahiabbaaoekaabaakkia
abaapeiaabaaaaacabaaaiiabdaaffkaajaaaaadacaaabiaaeaaoekaabaaoeia
ajaaaaadacaaaciaafaaoekaabaaoeiaajaaaaadacaaaeiaagaaoekaabaaoeia
afaaaaadadaaapiaabaacjiaabaakeiaajaaaaadaeaaabiaahaaoekaadaaoeia
ajaaaaadaeaaaciaaiaaoekaadaaoeiaajaaaaadaeaaaeiaajaaoekaadaaoeia
acaaaaadacaaahiaacaaoeiaaeaaoeiaafaaaaadabaaaciaabaaffiaabaaffia
aeaaaaaeabaaabiaabaaaaiaabaaaaiaabaaffibaeaaaaaeacaaahoaakaaoeka
abaaaaiaacaaoeiaaeaaaaaeaaaaadmaaaaappiaaaaaoekaaaaaoeiaabaaaaac
aaaaammaaaaaoeiaabaaaaacabaaamoaaaaaoeiappppaaaafdeieefcdaaeaaaa
eaaaabaaamabaaaafjaaaaaeegiocaaaaaaaaaaaaiaaaaaafjaaaaaeegiocaaa
abaaaaaaagaaaaaafjaaaaaeegiocaaaacaaaaaacnaaaaaafjaaaaaeegiocaaa
adaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaadhcbabaaaacaaaaaa
fpaaaaaddcbabaaaadaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaad
pccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaadhccabaaaadaaaaaa
giaaaaacaeaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaa
adaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaaaaaaaaa
agbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaa
dgaaaaafpccabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaa
egbabaaaadaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaa
dcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaaaaaaaaaaahaaaaaa
kgiocaaaaaaaaaaaahaaaaaadiaaaaaiccaabaaaaaaaaaaabkaabaaaaaaaaaaa
akiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaaabaaaaaaagahbaaaaaaaaaaa
aceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadpdgaaaaafmccabaaaacaaaaaa
kgaobaaaaaaaaaaaaaaaaaahdccabaaaacaaaaaakgakbaaaabaaaaaamgaabaaa
abaaaaaadiaaaaaihcaabaaaaaaaaaaaegbcbaaaacaaaaaapgipcaaaadaaaaaa
beaaaaaadiaaaaaihcaabaaaabaaaaaafgafbaaaaaaaaaaaegiccaaaadaaaaaa
anaaaaaadcaaaaaklcaabaaaaaaaaaaaegiicaaaadaaaaaaamaaaaaaagaabaaa
aaaaaaaaegaibaaaabaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaaadaaaaaa
aoaaaaaakgakbaaaaaaaaaaaegadbaaaaaaaaaaadgaaaaaficaabaaaaaaaaaaa
abeaaaaaaaaaiadpbbaaaaaibcaabaaaabaaaaaaegiocaaaacaaaaaacgaaaaaa
egaobaaaaaaaaaaabbaaaaaiccaabaaaabaaaaaaegiocaaaacaaaaaachaaaaaa
egaobaaaaaaaaaaabbaaaaaiecaabaaaabaaaaaaegiocaaaacaaaaaaciaaaaaa
egaobaaaaaaaaaaadiaaaaahpcaabaaaacaaaaaajgacbaaaaaaaaaaaegakbaaa
aaaaaaaabbaaaaaibcaabaaaadaaaaaaegiocaaaacaaaaaacjaaaaaaegaobaaa
acaaaaaabbaaaaaiccaabaaaadaaaaaaegiocaaaacaaaaaackaaaaaaegaobaaa
acaaaaaabbaaaaaiecaabaaaadaaaaaaegiocaaaacaaaaaaclaaaaaaegaobaaa
acaaaaaaaaaaaaahhcaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaadaaaaaa
diaaaaahccaabaaaaaaaaaaabkaabaaaaaaaaaaabkaabaaaaaaaaaaadcaaaaak
bcaabaaaaaaaaaaaakaabaaaaaaaaaaaakaabaaaaaaaaaaabkaabaiaebaaaaaa
aaaaaaaadcaaaaakhccabaaaadaaaaaaegiccaaaacaaaaaacmaaaaaaagaabaaa
aaaaaaaaegacbaaaabaaaaaadoaaaaabejfdeheomaaaaaaaagaaaaaaaiaaaaaa
jiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
acaaaaaaahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaa
laaaaaaaabaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaaljaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofe
aaeoepfcenebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheoiaaaaaaa
aeaaaaaaaiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaa
heaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaheaaaaaaabaaaaaa
aaaaaaaaadaaaaaaacaaaaaaapaaaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaa
adaaaaaaahaiaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl
"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_6;
  tmpvar_6.x = tmpvar_5.x;
  tmpvar_6.y = (tmpvar_5.y * _ProjectionParams.x);
  o_4.xy = (tmpvar_6 + tmpvar_5.w);
  o_4.zw = tmpvar_3.zw;
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  mediump vec3 tmpvar_9;
  mediump vec4 normal_10;
  normal_10 = tmpvar_8;
  highp float vC_11;
  mediump vec3 x3_12;
  mediump vec3 x2_13;
  mediump vec3 x1_14;
  highp float tmpvar_15;
  tmpvar_15 = dot (unity_SHAr, normal_10);
  x1_14.x = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAg, normal_10);
  x1_14.y = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAb, normal_10);
  x1_14.z = tmpvar_17;
  mediump vec4 tmpvar_18;
  tmpvar_18 = (normal_10.xyzz * normal_10.yzzx);
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHBr, tmpvar_18);
  x2_13.x = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBg, tmpvar_18);
  x2_13.y = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBb, tmpvar_18);
  x2_13.z = tmpvar_21;
  mediump float tmpvar_22;
  tmpvar_22 = ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y));
  vC_11 = tmpvar_22;
  highp vec3 tmpvar_23;
  tmpvar_23 = (unity_SHC.xyz * vC_11);
  x3_12 = tmpvar_23;
  tmpvar_9 = ((x1_14 + x2_13) + x3_12);
  tmpvar_2 = tmpvar_9;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = o_4;
  xlv_TEXCOORD2 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform sampler2D _LightBuffer;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_4 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11.w = 0.0;
  tmpvar_11.xyz = clouds_7;
  lowp vec4 arg0_12;
  arg0_12 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_13;
  tmpvar_13 = mix (arg0_12, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_11).xyz;
  tmpvar_5 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_15;
  tmpvar_15 = ((tmpvar_14.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_3 = tmpvar_16;
  mediump vec4 tmpvar_17;
  tmpvar_17 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_17.w;
  highp vec3 tmpvar_18;
  tmpvar_18 = (tmpvar_17.xyz + xlv_TEXCOORD2);
  light_3.xyz = tmpvar_18;
  lowp vec4 c_19;
  lowp float spec_20;
  mediump float tmpvar_21;
  tmpvar_21 = (tmpvar_17.w * tmpvar_6);
  spec_20 = tmpvar_21;
  mediump vec3 tmpvar_22;
  tmpvar_22 = ((tmpvar_4 * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_20));
  c_19.xyz = tmpvar_22;
  c_19.w = (tmpvar_8.w + (spec_20 * _SpecColor.w));
  c_2 = c_19;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_6;
  tmpvar_6.x = tmpvar_5.x;
  tmpvar_6.y = (tmpvar_5.y * _ProjectionParams.x);
  o_4.xy = (tmpvar_6 + tmpvar_5.w);
  o_4.zw = tmpvar_3.zw;
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  mediump vec3 tmpvar_9;
  mediump vec4 normal_10;
  normal_10 = tmpvar_8;
  highp float vC_11;
  mediump vec3 x3_12;
  mediump vec3 x2_13;
  mediump vec3 x1_14;
  highp float tmpvar_15;
  tmpvar_15 = dot (unity_SHAr, normal_10);
  x1_14.x = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAg, normal_10);
  x1_14.y = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAb, normal_10);
  x1_14.z = tmpvar_17;
  mediump vec4 tmpvar_18;
  tmpvar_18 = (normal_10.xyzz * normal_10.yzzx);
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHBr, tmpvar_18);
  x2_13.x = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBg, tmpvar_18);
  x2_13.y = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBb, tmpvar_18);
  x2_13.z = tmpvar_21;
  mediump float tmpvar_22;
  tmpvar_22 = ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y));
  vC_11 = tmpvar_22;
  highp vec3 tmpvar_23;
  tmpvar_23 = (unity_SHC.xyz * vC_11);
  x3_12 = tmpvar_23;
  tmpvar_9 = ((x1_14 + x2_13) + x3_12);
  tmpvar_2 = tmpvar_9;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = o_4;
  xlv_TEXCOORD2 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform sampler2D _LightBuffer;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec3 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_4 = tmpvar_10;
  lowp vec3 normal_11;
  normal_11.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_11.z = sqrt((1.0 - clamp (dot (normal_11.xy, normal_11.xy), 0.0, 1.0)));
  mediump vec4 tmpvar_12;
  tmpvar_12.w = 0.0;
  tmpvar_12.xyz = clouds_7;
  lowp vec4 arg0_13;
  arg0_13 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_14;
  tmpvar_14 = mix (arg0_13, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_12).xyz;
  tmpvar_5 = tmpvar_14;
  lowp vec4 tmpvar_15;
  tmpvar_15 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_16;
  tmpvar_16 = ((tmpvar_15.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_3 = tmpvar_17;
  mediump vec4 tmpvar_18;
  tmpvar_18 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_18.w;
  highp vec3 tmpvar_19;
  tmpvar_19 = (tmpvar_18.xyz + xlv_TEXCOORD2);
  light_3.xyz = tmpvar_19;
  lowp vec4 c_20;
  lowp float spec_21;
  mediump float tmpvar_22;
  tmpvar_22 = (tmpvar_18.w * tmpvar_6);
  spec_21 = tmpvar_22;
  mediump vec3 tmpvar_23;
  tmpvar_23 = ((tmpvar_4 * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_21));
  c_20.xyz = tmpvar_23;
  c_20.w = (tmpvar_8.w + (spec_21 * _SpecColor.w));
  c_2 = c_20;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_Scale;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec3 xlv_TEXCOORD2;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec3 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_6;
  tmpvar_6.x = tmpvar_5.x;
  tmpvar_6.y = (tmpvar_5.y * _ProjectionParams.x);
  o_4.xy = (tmpvar_6 + tmpvar_5.w);
  o_4.zw = tmpvar_3.zw;
  mat3 tmpvar_7;
  tmpvar_7[0] = _Object2World[0].xyz;
  tmpvar_7[1] = _Object2World[1].xyz;
  tmpvar_7[2] = _Object2World[2].xyz;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = (tmpvar_7 * (normalize(_glesNormal) * unity_Scale.w));
  mediump vec3 tmpvar_9;
  mediump vec4 normal_10;
  normal_10 = tmpvar_8;
  highp float vC_11;
  mediump vec3 x3_12;
  mediump vec3 x2_13;
  mediump vec3 x1_14;
  highp float tmpvar_15;
  tmpvar_15 = dot (unity_SHAr, normal_10);
  x1_14.x = tmpvar_15;
  highp float tmpvar_16;
  tmpvar_16 = dot (unity_SHAg, normal_10);
  x1_14.y = tmpvar_16;
  highp float tmpvar_17;
  tmpvar_17 = dot (unity_SHAb, normal_10);
  x1_14.z = tmpvar_17;
  mediump vec4 tmpvar_18;
  tmpvar_18 = (normal_10.xyzz * normal_10.yzzx);
  highp float tmpvar_19;
  tmpvar_19 = dot (unity_SHBr, tmpvar_18);
  x2_13.x = tmpvar_19;
  highp float tmpvar_20;
  tmpvar_20 = dot (unity_SHBg, tmpvar_18);
  x2_13.y = tmpvar_20;
  highp float tmpvar_21;
  tmpvar_21 = dot (unity_SHBb, tmpvar_18);
  x2_13.z = tmpvar_21;
  mediump float tmpvar_22;
  tmpvar_22 = ((normal_10.x * normal_10.x) - (normal_10.y * normal_10.y));
  vC_11 = tmpvar_22;
  highp vec3 tmpvar_23;
  tmpvar_23 = (unity_SHC.xyz * vC_11);
  x3_12 = tmpvar_23;
  tmpvar_9 = ((x1_14 + x2_13) + x3_12);
  tmpvar_2 = tmpvar_9;
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = o_4;
  xlv_TEXCOORD2 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform sampler2D _LightBuffer;
in highp vec4 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec3 xlv_TEXCOORD2;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp float tmpvar_6;
  mediump vec3 clouds_7;
  lowp vec4 tmpvar_8;
  tmpvar_8 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_9;
  tmpvar_9 = texture (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_7 = tmpvar_9;
  mediump vec3 tmpvar_10;
  tmpvar_10 = (tmpvar_8.xyz + clouds_7);
  tmpvar_4 = tmpvar_10;
  mediump vec4 tmpvar_11;
  tmpvar_11.w = 0.0;
  tmpvar_11.xyz = clouds_7;
  lowp vec4 arg0_12;
  arg0_12 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_13;
  tmpvar_13 = mix (arg0_12, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_11).xyz;
  tmpvar_5 = tmpvar_13;
  lowp vec4 tmpvar_14;
  tmpvar_14 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_15;
  tmpvar_15 = ((tmpvar_14.xyz * (1.0 - clouds_7)) * _SpecColor.xyz).x;
  tmpvar_6 = tmpvar_15;
  lowp vec4 tmpvar_16;
  tmpvar_16 = textureProj (_LightBuffer, xlv_TEXCOORD1);
  light_3 = tmpvar_16;
  mediump vec4 tmpvar_17;
  tmpvar_17 = max (light_3, vec4(0.001, 0.001, 0.001, 0.001));
  light_3.w = tmpvar_17.w;
  highp vec3 tmpvar_18;
  tmpvar_18 = (tmpvar_17.xyz + xlv_TEXCOORD2);
  light_3.xyz = tmpvar_18;
  lowp vec4 c_19;
  lowp float spec_20;
  mediump float tmpvar_21;
  tmpvar_21 = (tmpvar_17.w * tmpvar_6);
  spec_20 = tmpvar_21;
  mediump vec3 tmpvar_22;
  tmpvar_22 = ((tmpvar_4 * light_3.xyz) + ((light_3.xyz * _SpecColor.xyz) * spec_20));
  c_19.xyz = tmpvar_22;
  c_19.w = (tmpvar_8.w + (spec_20 * _SpecColor.w));
  c_2 = c_19;
  c_2.xyz = (c_2.xyz + tmpvar_5);
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 21 math
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 9 [_Object2World]
Vector 13 [_ProjectionParams]
Vector 14 [unity_ShadowFadeCenterAndType]
Vector 15 [unity_LightmapST]
Vector 16 [_MainTex_ST]
Vector 17 [_Clouds_ST]
"!!ARBvp1.0
PARAM c[18] = { { 0.5, 1 },
		state.matrix.modelview[0],
		state.matrix.mvp,
		program.local[9..17] };
TEMP R0;
TEMP R1;
DP4 R0.w, vertex.position, c[8];
DP4 R0.z, vertex.position, c[7];
DP4 R0.x, vertex.position, c[5];
DP4 R0.y, vertex.position, c[6];
MUL R1.xyz, R0.xyww, c[0].x;
MUL R1.y, R1, c[13].x;
ADD result.texcoord[1].xy, R1, R1.z;
MOV result.position, R0;
MOV R0.x, c[0].y;
ADD R0.y, R0.x, -c[14].w;
DP4 R0.x, vertex.position, c[3];
DP4 R1.z, vertex.position, c[11];
DP4 R1.x, vertex.position, c[9];
DP4 R1.y, vertex.position, c[10];
ADD R1.xyz, R1, -c[14];
MOV result.texcoord[1].zw, R0;
MUL result.texcoord[3].xyz, R1, c[14].w;
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[17].xyxy, c[17];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[16], c[16].zwzw;
MAD result.texcoord[2].xy, vertex.texcoord[1], c[15], c[15].zwzw;
MUL result.texcoord[3].w, -R0.x, R0.y;
END
# 21 instructions, 2 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 21 math
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Matrix 0 [glstate_matrix_modelview0]
Matrix 4 [glstate_matrix_mvp]
Matrix 8 [_Object2World]
Vector 12 [_ProjectionParams]
Vector 13 [_ScreenParams]
Vector 14 [unity_ShadowFadeCenterAndType]
Vector 15 [unity_LightmapST]
Vector 16 [_MainTex_ST]
Vector 17 [_Clouds_ST]
"vs_2_0
def c18, 0.50000000, 1.00000000, 0, 0
dcl_position0 v0
dcl_texcoord0 v1
dcl_texcoord1 v2
dp4 r0.w, v0, c7
dp4 r0.z, v0, c6
dp4 r0.x, v0, c4
dp4 r0.y, v0, c5
mul r1.xyz, r0.xyww, c18.x
mul r1.y, r1, c12.x
mad oT1.xy, r1.z, c13.zwzw, r1
mov oPos, r0
mov r0.x, c14.w
add r0.y, c18, -r0.x
dp4 r0.x, v0, c2
dp4 r1.z, v0, c10
dp4 r1.x, v0, c8
dp4 r1.y, v0, c9
add r1.xyz, r1, -c14
mov oT1.zw, r0
mul oT3.xyz, r1, c14.w
mad oT0.zw, v1.xyxy, c17.xyxy, c17
mad oT0.xy, v1, c16, c16.zwzw
mad oT2.xy, v2, c15, c15.zwzw
mul oT3.w, -r0.x, r0.y
"
}
SubProgram "d3d11 " {
// Stats: 22 math
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "color" Color
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 176
Vector 96 [unity_LightmapST]
Vector 112 [_MainTex_ST]
Vector 128 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 80 [_ProjectionParams]
ConstBuffer "UnityShadows" 416
Vector 400 [unity_ShadowFadeCenterAndType]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 64 [glstate_matrix_modelview0]
Matrix 192 [_Object2World]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityShadows" 2
BindCB  "UnityPerDraw" 3
"vs_4_0
eefiecedlbhkfhhbknndcooglpedpbflaoigbnljabaaaaaaleafaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahaaaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaapaaaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
adamaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapaaaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcbiaeaaaaeaaaabaa
agabaaaafjaaaaaeegiocaaaaaaaaaaaajaaaaaafjaaaaaeegiocaaaabaaaaaa
agaaaaaafjaaaaaeegiocaaaacaaaaaabkaaaaaafjaaaaaeegiocaaaadaaaaaa
baaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaaddcbabaaaadaaaaaafpaaaaad
dcbabaaaaeaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaadpccabaaa
abaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaaddccabaaaadaaaaaagfaaaaad
pccabaaaaeaaaaaagiaaaaacacaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
adaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaal
dccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaahaaaaaaogikcaaa
aaaaaaaaahaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaaagiecaaa
aaaaaaaaaiaaaaaakgiocaaaaaaaaaaaaiaaaaaadiaaaaaiccaabaaaaaaaaaaa
bkaabaaaaaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaaabaaaaaa
agahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadpdgaaaaaf
mccabaaaacaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaacaaaaaakgakbaaa
abaaaaaamgaabaaaabaaaaaadcaaaaaldccabaaaadaaaaaaegbabaaaaeaaaaaa
egiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaadiaaaaaihcaabaaa
aaaaaaaafgbfbaaaaaaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaakhcaabaaa
aaaaaaaaegiccaaaadaaaaaaamaaaaaaagbabaaaaaaaaaaaegacbaaaaaaaaaaa
dcaaaaakhcaabaaaaaaaaaaaegiccaaaadaaaaaaaoaaaaaakgbkbaaaaaaaaaaa
egacbaaaaaaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaaadaaaaaaapaaaaaa
pgbpbaaaaaaaaaaaegacbaaaaaaaaaaaaaaaaaajhcaabaaaaaaaaaaaegacbaaa
aaaaaaaaegiccaiaebaaaaaaacaaaaaabjaaaaaadiaaaaaihccabaaaaeaaaaaa
egacbaaaaaaaaaaapgipcaaaacaaaaaabjaaaaaadiaaaaaibcaabaaaaaaaaaaa
bkbabaaaaaaaaaaackiacaaaadaaaaaaafaaaaaadcaaaaakbcaabaaaaaaaaaaa
ckiacaaaadaaaaaaaeaaaaaaakbabaaaaaaaaaaaakaabaaaaaaaaaaadcaaaaak
bcaabaaaaaaaaaaackiacaaaadaaaaaaagaaaaaackbabaaaaaaaaaaaakaabaaa
aaaaaaaadcaaaaakbcaabaaaaaaaaaaackiacaaaadaaaaaaahaaaaaadkbabaaa
aaaaaaaaakaabaaaaaaaaaaaaaaaaaajccaabaaaaaaaaaaadkiacaiaebaaaaaa
acaaaaaabjaaaaaaabeaaaaaaaaaiadpdiaaaaaiiccabaaaaeaaaaaabkaabaaa
aaaaaaaaakaabaiaebaaaaaaaaaaaaaadoaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 22 math
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "color" Color
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
ConstBuffer "$Globals" 176
Vector 96 [unity_LightmapST]
Vector 112 [_MainTex_ST]
Vector 128 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 80 [_ProjectionParams]
ConstBuffer "UnityShadows" 416
Vector 400 [unity_ShadowFadeCenterAndType]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 64 [glstate_matrix_modelview0]
Matrix 192 [_Object2World]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityShadows" 2
BindCB  "UnityPerDraw" 3
"vs_4_0_level_9_1
eefiecedmphialkkflckcamdagkjclnnlbcbbbjkabaaaaaaeaaiaaaaaeaaaaaa
daaaaaaaliacaaaaniagaaaakaahaaaaebgpgodjiaacaaaaiaacaaaaaaacpopp
bmacaaaageaaaaaaafaaceaaaaaagaaaaaaagaaaaaaaceaaabaagaaaaaaaagaa
adaaabaaaaaaaaaaabaaafaaabaaaeaaaaaaaaaaacaabjaaabaaafaaaaaaaaaa
adaaaaaaaiaaagaaaaaaaaaaadaaamaaaeaaaoaaaaaaaaaaaaaaaaaaaaacpopp
fbaaaaafbcaaapkaaaaaaadpaaaaiadpaaaaaaaaaaaaaaaabpaaaaacafaaaaia
aaaaapjabpaaaaacafaaadiaadaaapjabpaaaaacafaaaeiaaeaaapjaaeaaaaae
aaaaadoaadaaoejaacaaoekaacaaookaaeaaaaaeaaaaamoaadaaeejaadaaeeka
adaaoekaafaaaaadaaaaapiaaaaaffjaahaaoekaaeaaaaaeaaaaapiaagaaoeka
aaaaaajaaaaaoeiaaeaaaaaeaaaaapiaaiaaoekaaaaakkjaaaaaoeiaaeaaaaae
aaaaapiaajaaoekaaaaappjaaaaaoeiaafaaaaadabaaabiaaaaaffiaaeaaaaka
afaaaaadabaaaiiaabaaaaiabcaaaakaafaaaaadabaaafiaaaaapeiabcaaaaka
acaaaaadabaaadoaabaakkiaabaaomiaaeaaaaaeacaaadoaaeaaoejaabaaoeka
abaaookaafaaaaadabaaahiaaaaaffjaapaaoekaaeaaaaaeabaaahiaaoaaoeka
aaaaaajaabaaoeiaaeaaaaaeabaaahiabaaaoekaaaaakkjaabaaoeiaaeaaaaae
abaaahiabbaaoekaaaaappjaabaaoeiaacaaaaadabaaahiaabaaoeiaafaaoekb
afaaaaadadaaahoaabaaoeiaafaappkaafaaaaadabaaabiaaaaaffjaalaakkka
aeaaaaaeabaaabiaakaakkkaaaaaaajaabaaaaiaaeaaaaaeabaaabiaamaakkka
aaaakkjaabaaaaiaaeaaaaaeabaaabiaanaakkkaaaaappjaabaaaaiaabaaaaac
abaaaiiaafaappkaacaaaaadabaaaciaabaappibbcaaffkaafaaaaadadaaaioa
abaaffiaabaaaaibaeaaaaaeaaaaadmaaaaappiaaaaaoekaaaaaoeiaabaaaaac
aaaaammaaaaaoeiaabaaaaacabaaamoaaaaaoeiappppaaaafdeieefcbiaeaaaa
eaaaabaaagabaaaafjaaaaaeegiocaaaaaaaaaaaajaaaaaafjaaaaaeegiocaaa
abaaaaaaagaaaaaafjaaaaaeegiocaaaacaaaaaabkaaaaaafjaaaaaeegiocaaa
adaaaaaabaaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaaddcbabaaaadaaaaaa
fpaaaaaddcbabaaaaeaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaad
pccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaaddccabaaaadaaaaaa
gfaaaaadpccabaaaaeaaaaaagiaaaaacacaaaaaadiaaaaaipcaabaaaaaaaaaaa
fgbfbaaaaaaaaaaaegiocaaaadaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaa
egiocaaaadaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaadaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaadaaaaaaadaaaaaapgbpbaaa
aaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaaahaaaaaa
ogikcaaaaaaaaaaaahaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaaadaaaaaa
agiecaaaaaaaaaaaaiaaaaaakgiocaaaaaaaaaaaaiaaaaaadiaaaaaiccaabaaa
aaaaaaaabkaabaaaaaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaakncaabaaa
abaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadpaaaaaadp
dgaaaaafmccabaaaacaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaaacaaaaaa
kgakbaaaabaaaaaamgaabaaaabaaaaaadcaaaaaldccabaaaadaaaaaaegbabaaa
aeaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaadiaaaaai
hcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiccaaaadaaaaaaanaaaaaadcaaaaak
hcaabaaaaaaaaaaaegiccaaaadaaaaaaamaaaaaaagbabaaaaaaaaaaaegacbaaa
aaaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaaadaaaaaaaoaaaaaakgbkbaaa
aaaaaaaaegacbaaaaaaaaaaadcaaaaakhcaabaaaaaaaaaaaegiccaaaadaaaaaa
apaaaaaapgbpbaaaaaaaaaaaegacbaaaaaaaaaaaaaaaaaajhcaabaaaaaaaaaaa
egacbaaaaaaaaaaaegiccaiaebaaaaaaacaaaaaabjaaaaaadiaaaaaihccabaaa
aeaaaaaaegacbaaaaaaaaaaapgipcaaaacaaaaaabjaaaaaadiaaaaaibcaabaaa
aaaaaaaabkbabaaaaaaaaaaackiacaaaadaaaaaaafaaaaaadcaaaaakbcaabaaa
aaaaaaaackiacaaaadaaaaaaaeaaaaaaakbabaaaaaaaaaaaakaabaaaaaaaaaaa
dcaaaaakbcaabaaaaaaaaaaackiacaaaadaaaaaaagaaaaaackbabaaaaaaaaaaa
akaabaaaaaaaaaaadcaaaaakbcaabaaaaaaaaaaackiacaaaadaaaaaaahaaaaaa
dkbabaaaaaaaaaaaakaabaaaaaaaaaaaaaaaaaajccaabaaaaaaaaaaadkiacaia
ebaaaaaaacaaaaaabjaaaaaaabeaaaaaaaaaiadpdiaaaaaiiccabaaaaeaaaaaa
bkaabaaaaaaaaaaaakaabaiaebaaaaaaaaaaaaaadoaaaaabejfdeheomaaaaaaa
agaaaaaaaiaaaaaajiaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaa
kbaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaakjaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaacaaaaaaahaaaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
adaaaaaaapadaaaalaaaaaaaabaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaa
ljaaaaaaaaaaaaaaaaaaaaaaadaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeo
aafeebeoehefeofeaaeoepfcenebemaafeeffiedepepfceeaaedepemepfcaakl
epfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaa
imaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapaaaaaaimaaaaaaacaaaaaa
aaaaaaaaadaaaaaaadaaaaaaadamaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaa
aeaaaaaaapaaaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklkl
"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_6;
  tmpvar_6.x = tmpvar_5.x;
  tmpvar_6.y = (tmpvar_5.y * _ProjectionParams.x);
  o_4.xy = (tmpvar_6 + tmpvar_5.w);
  o_4.zw = tmpvar_3.zw;
  tmpvar_2.xyz = (((_Object2World * _glesVertex).xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  tmpvar_2.w = (-((glstate_matrix_modelview0 * _glesVertex).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = o_4;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec3 lmIndirect_3;
  mediump vec3 lmFull_4;
  mediump float lmFade_5;
  mediump vec4 light_6;
  lowp vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  lowp float tmpvar_9;
  mediump vec3 clouds_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_12;
  tmpvar_12 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_10 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_11.xyz + clouds_10);
  tmpvar_7 = tmpvar_13;
  mediump vec4 tmpvar_14;
  tmpvar_14.w = 0.0;
  tmpvar_14.xyz = clouds_10;
  lowp vec4 arg0_15;
  arg0_15 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_16;
  tmpvar_16 = mix (arg0_15, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_14).xyz;
  tmpvar_8 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_18;
  tmpvar_18 = ((tmpvar_17.xyz * (1.0 - clouds_10)) * _SpecColor.xyz).x;
  tmpvar_9 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_6 = tmpvar_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = max (light_6, vec4(0.001, 0.001, 0.001, 0.001));
  light_6.w = tmpvar_20.w;
  highp float tmpvar_21;
  tmpvar_21 = ((sqrt(dot (xlv_TEXCOORD3, xlv_TEXCOORD3)) * unity_LightmapFade.z) + unity_LightmapFade.w);
  lmFade_5 = tmpvar_21;
  lowp vec3 tmpvar_22;
  tmpvar_22 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lmFull_4 = tmpvar_22;
  lowp vec3 tmpvar_23;
  tmpvar_23 = (2.0 * texture2D (unity_LightmapInd, xlv_TEXCOORD2).xyz);
  lmIndirect_3 = tmpvar_23;
  light_6.xyz = (tmpvar_20.xyz + mix (lmIndirect_3, lmFull_4, vec3(clamp (lmFade_5, 0.0, 1.0))));
  lowp vec4 c_24;
  lowp float spec_25;
  mediump float tmpvar_26;
  tmpvar_26 = (tmpvar_20.w * tmpvar_9);
  spec_25 = tmpvar_26;
  mediump vec3 tmpvar_27;
  tmpvar_27 = ((tmpvar_7 * light_6.xyz) + ((light_6.xyz * _SpecColor.xyz) * spec_25));
  c_24.xyz = tmpvar_27;
  c_24.w = (tmpvar_11.w + (spec_25 * _SpecColor.w));
  c_2 = c_24;
  c_2.xyz = (c_2.xyz + tmpvar_8);
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_6;
  tmpvar_6.x = tmpvar_5.x;
  tmpvar_6.y = (tmpvar_5.y * _ProjectionParams.x);
  o_4.xy = (tmpvar_6 + tmpvar_5.w);
  o_4.zw = tmpvar_3.zw;
  tmpvar_2.xyz = (((_Object2World * _glesVertex).xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  tmpvar_2.w = (-((glstate_matrix_modelview0 * _glesVertex).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = o_4;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec3 lmIndirect_3;
  mediump vec3 lmFull_4;
  mediump float lmFade_5;
  mediump vec4 light_6;
  lowp vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  lowp float tmpvar_9;
  mediump vec3 clouds_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_12;
  tmpvar_12 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_10 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_11.xyz + clouds_10);
  tmpvar_7 = tmpvar_13;
  lowp vec3 normal_14;
  normal_14.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_14.z = sqrt((1.0 - clamp (dot (normal_14.xy, normal_14.xy), 0.0, 1.0)));
  mediump vec4 tmpvar_15;
  tmpvar_15.w = 0.0;
  tmpvar_15.xyz = clouds_10;
  lowp vec4 arg0_16;
  arg0_16 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_17;
  tmpvar_17 = mix (arg0_16, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_15).xyz;
  tmpvar_8 = tmpvar_17;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_19;
  tmpvar_19 = ((tmpvar_18.xyz * (1.0 - clouds_10)) * _SpecColor.xyz).x;
  tmpvar_9 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_6 = tmpvar_20;
  mediump vec4 tmpvar_21;
  tmpvar_21 = max (light_6, vec4(0.001, 0.001, 0.001, 0.001));
  light_6.w = tmpvar_21.w;
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (unity_Lightmap, xlv_TEXCOORD2);
  lowp vec4 tmpvar_23;
  tmpvar_23 = texture2D (unity_LightmapInd, xlv_TEXCOORD2);
  highp float tmpvar_24;
  tmpvar_24 = ((sqrt(dot (xlv_TEXCOORD3, xlv_TEXCOORD3)) * unity_LightmapFade.z) + unity_LightmapFade.w);
  lmFade_5 = tmpvar_24;
  lowp vec3 tmpvar_25;
  tmpvar_25 = ((8.0 * tmpvar_22.w) * tmpvar_22.xyz);
  lmFull_4 = tmpvar_25;
  lowp vec3 tmpvar_26;
  tmpvar_26 = ((8.0 * tmpvar_23.w) * tmpvar_23.xyz);
  lmIndirect_3 = tmpvar_26;
  light_6.xyz = (tmpvar_21.xyz + mix (lmIndirect_3, lmFull_4, vec3(clamp (lmFade_5, 0.0, 1.0))));
  lowp vec4 c_27;
  lowp float spec_28;
  mediump float tmpvar_29;
  tmpvar_29 = (tmpvar_21.w * tmpvar_9);
  spec_28 = tmpvar_29;
  mediump vec3 tmpvar_30;
  tmpvar_30 = ((tmpvar_7 * light_6.xyz) + ((light_6.xyz * _SpecColor.xyz) * spec_28));
  c_27.xyz = tmpvar_30;
  c_27.w = (tmpvar_11.w + (spec_28 * _SpecColor.w));
  c_2 = c_27;
  c_2.xyz = (c_2.xyz + tmpvar_8);
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
uniform highp vec4 _ProjectionParams;
uniform highp vec4 unity_ShadowFadeCenterAndType;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 _Object2World;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec2 xlv_TEXCOORD2;
out highp vec4 xlv_TEXCOORD3;
void main ()
{
  highp vec4 tmpvar_1;
  highp vec4 tmpvar_2;
  highp vec4 tmpvar_3;
  tmpvar_3 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_1.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_1.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_4;
  highp vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_3 * 0.5);
  highp vec2 tmpvar_6;
  tmpvar_6.x = tmpvar_5.x;
  tmpvar_6.y = (tmpvar_5.y * _ProjectionParams.x);
  o_4.xy = (tmpvar_6 + tmpvar_5.w);
  o_4.zw = tmpvar_3.zw;
  tmpvar_2.xyz = (((_Object2World * _glesVertex).xyz - unity_ShadowFadeCenterAndType.xyz) * unity_ShadowFadeCenterAndType.w);
  tmpvar_2.w = (-((glstate_matrix_modelview0 * _glesVertex).z) * (1.0 - unity_ShadowFadeCenterAndType.w));
  gl_Position = tmpvar_3;
  xlv_TEXCOORD0 = tmpvar_1;
  xlv_TEXCOORD1 = o_4;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = tmpvar_2;
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
uniform highp vec4 unity_LightmapFade;
in highp vec4 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec2 xlv_TEXCOORD2;
in highp vec4 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec3 lmIndirect_3;
  mediump vec3 lmFull_4;
  mediump float lmFade_5;
  mediump vec4 light_6;
  lowp vec3 tmpvar_7;
  lowp vec3 tmpvar_8;
  lowp float tmpvar_9;
  mediump vec3 clouds_10;
  lowp vec4 tmpvar_11;
  tmpvar_11 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_12;
  tmpvar_12 = texture (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_10 = tmpvar_12;
  mediump vec3 tmpvar_13;
  tmpvar_13 = (tmpvar_11.xyz + clouds_10);
  tmpvar_7 = tmpvar_13;
  mediump vec4 tmpvar_14;
  tmpvar_14.w = 0.0;
  tmpvar_14.xyz = clouds_10;
  lowp vec4 arg0_15;
  arg0_15 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_16;
  tmpvar_16 = mix (arg0_15, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_14).xyz;
  tmpvar_8 = tmpvar_16;
  lowp vec4 tmpvar_17;
  tmpvar_17 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_18;
  tmpvar_18 = ((tmpvar_17.xyz * (1.0 - clouds_10)) * _SpecColor.xyz).x;
  tmpvar_9 = tmpvar_18;
  lowp vec4 tmpvar_19;
  tmpvar_19 = textureProj (_LightBuffer, xlv_TEXCOORD1);
  light_6 = tmpvar_19;
  mediump vec4 tmpvar_20;
  tmpvar_20 = max (light_6, vec4(0.001, 0.001, 0.001, 0.001));
  light_6.w = tmpvar_20.w;
  highp float tmpvar_21;
  tmpvar_21 = ((sqrt(dot (xlv_TEXCOORD3, xlv_TEXCOORD3)) * unity_LightmapFade.z) + unity_LightmapFade.w);
  lmFade_5 = tmpvar_21;
  lowp vec3 tmpvar_22;
  tmpvar_22 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lmFull_4 = tmpvar_22;
  lowp vec3 tmpvar_23;
  tmpvar_23 = (2.0 * texture (unity_LightmapInd, xlv_TEXCOORD2).xyz);
  lmIndirect_3 = tmpvar_23;
  light_6.xyz = (tmpvar_20.xyz + mix (lmIndirect_3, lmFull_4, vec3(clamp (lmFade_5, 0.0, 1.0))));
  lowp vec4 c_24;
  lowp float spec_25;
  mediump float tmpvar_26;
  tmpvar_26 = (tmpvar_20.w * tmpvar_9);
  spec_25 = tmpvar_26;
  mediump vec3 tmpvar_27;
  tmpvar_27 = ((tmpvar_7 * light_6.xyz) + ((light_6.xyz * _SpecColor.xyz) * spec_25));
  c_24.xyz = tmpvar_27;
  c_24.w = (tmpvar_11.w + (spec_25 * _SpecColor.w));
  c_2 = c_24;
  c_2.xyz = (c_2.xyz + tmpvar_8);
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "opengl " {
// Stats: 25 math
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" ATTR14
Matrix 5 [_World2Object]
Vector 9 [_WorldSpaceCameraPos]
Vector 10 [_ProjectionParams]
Vector 11 [unity_Scale]
Vector 12 [unity_LightmapST]
Vector 13 [_MainTex_ST]
Vector 14 [_Clouds_ST]
"!!ARBvp1.0
PARAM c[15] = { { 0.5, 1 },
		state.matrix.mvp,
		program.local[5..14] };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
MOV R0.xyz, vertex.attrib[14];
MUL R1.xyz, vertex.normal.zxyw, R0.yzxw;
MAD R0.xyz, vertex.normal.yzxw, R0.zxyw, -R1;
MUL R3.xyz, R0, vertex.attrib[14].w;
MOV R1.xyz, c[9];
MOV R1.w, c[0].y;
DP4 R2.z, R1, c[7];
DP4 R2.x, R1, c[5];
DP4 R2.y, R1, c[6];
MAD R1.xyz, R2, c[11].w, -vertex.position;
DP4 R0.w, vertex.position, c[4];
DP4 R0.z, vertex.position, c[3];
DP4 R0.x, vertex.position, c[1];
DP4 R0.y, vertex.position, c[2];
MUL R2.xyz, R0.xyww, c[0].x;
MUL R2.y, R2, c[10].x;
DP3 result.texcoord[3].y, R1, R3;
ADD result.texcoord[1].xy, R2, R2.z;
DP3 result.texcoord[3].z, vertex.normal, R1;
DP3 result.texcoord[3].x, R1, vertex.attrib[14];
MOV result.position, R0;
MOV result.texcoord[1].zw, R0;
MAD result.texcoord[0].zw, vertex.texcoord[0].xyxy, c[14].xyxy, c[14];
MAD result.texcoord[0].xy, vertex.texcoord[0], c[13], c[13].zwzw;
MAD result.texcoord[2].xy, vertex.texcoord[1], c[12], c[12].zwzw;
END
# 25 instructions, 4 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 26 math
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord2
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [_World2Object]
Vector 8 [_WorldSpaceCameraPos]
Vector 9 [_ProjectionParams]
Vector 10 [_ScreenParams]
Vector 11 [unity_Scale]
Vector 12 [unity_LightmapST]
Vector 13 [_MainTex_ST]
Vector 14 [_Clouds_ST]
"vs_2_0
def c15, 0.50000000, 1.00000000, 0, 0
dcl_position0 v0
dcl_tangent0 v1
dcl_normal0 v2
dcl_texcoord0 v3
dcl_texcoord1 v4
mov r0.xyz, v1
mul r1.xyz, v2.zxyw, r0.yzxw
mov r0.xyz, v1
mad r0.xyz, v2.yzxw, r0.zxyw, -r1
mul r3.xyz, r0, v1.w
mov r1.xyz, c8
mov r1.w, c15.y
dp4 r2.z, r1, c6
dp4 r2.x, r1, c4
dp4 r2.y, r1, c5
mad r1.xyz, r2, c11.w, -v0
dp4 r0.w, v0, c3
dp4 r0.z, v0, c2
dp4 r0.x, v0, c0
dp4 r0.y, v0, c1
mul r2.xyz, r0.xyww, c15.x
mul r2.y, r2, c9.x
dp3 oT3.y, r1, r3
mad oT1.xy, r2.z, c10.zwzw, r2
dp3 oT3.z, v2, r1
dp3 oT3.x, r1, v1
mov oPos, r0
mov oT1.zw, r0
mad oT0.zw, v3.xyxy, c14.xyxy, c14
mad oT0.xy, v3, c13, c13.zwzw
mad oT2.xy, v4, c12, c12.zwzw
"
}
SubProgram "d3d11 " {
// Stats: 21 math
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 176
Vector 96 [unity_LightmapST]
Vector 112 [_MainTex_ST]
Vector 128 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityPerDraw" 2
"vs_4_0
eefiecedflgjacajgcdgblgdendfjmpdfpmfmnofabaaaaaaiaafaaaaadaaaaaa
cmaaaaaapeaaaaaajeabaaaaejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaa
ahahaaaalaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaa
abaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaafaaaaaaapaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfc
enebemaafeeffiedepepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaa
aiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaa
adaaaaaaacaaaaaaapaaaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaa
adamaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklfdeieefcoeadaaaaeaaaabaa
pjaaaaaafjaaaaaeegiocaaaaaaaaaaaajaaaaaafjaaaaaeegiocaaaabaaaaaa
agaaaaaafjaaaaaeegiocaaaacaaaaaabfaaaaaafpaaaaadpcbabaaaaaaaaaaa
fpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaaddcbabaaa
adaaaaaafpaaaaaddcbabaaaaeaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaa
gfaaaaadpccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaaddccabaaa
adaaaaaagfaaaaadhccabaaaaeaaaaaagiaaaaacacaaaaaadiaaaaaipcaabaaa
aaaaaaaafgbfbaaaaaaaaaaaegiocaaaacaaaaaaabaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaacaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaacaaaaaakgbkbaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaadaaaaaa
pgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaaaaaaaaaa
ahaaaaaaogikcaaaaaaaaaaaahaaaaaadcaaaaalmccabaaaabaaaaaaagbebaaa
adaaaaaaagiecaaaaaaaaaaaaiaaaaaakgiocaaaaaaaaaaaaiaaaaaadiaaaaai
ccaabaaaaaaaaaaabkaabaaaaaaaaaaaakiacaaaabaaaaaaafaaaaaadiaaaaak
ncaabaaaabaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaaaaaaaadp
aaaaaadpdgaaaaafmccabaaaacaaaaaakgaobaaaaaaaaaaaaaaaaaahdccabaaa
acaaaaaakgakbaaaabaaaaaamgaabaaaabaaaaaadcaaaaaldccabaaaadaaaaaa
egbabaaaaeaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaaagaaaaaa
diaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaadcaaaaak
hcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaiaebaaaaaa
aaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaapgbpbaaaabaaaaaa
diaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaaacaaaaaa
bbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaacaaaaaabaaaaaaaagiacaaa
abaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaa
acaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaaaaaaaaai
hcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaacaaaaaabdaaaaaadcaaaaal
hcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaaacaaaaaabeaaaaaaegbcbaia
ebaaaaaaaaaaaaaabaaaaaahcccabaaaaeaaaaaaegacbaaaaaaaaaaaegacbaaa
abaaaaaabaaaaaahbccabaaaaeaaaaaaegbcbaaaabaaaaaaegacbaaaabaaaaaa
baaaaaaheccabaaaaeaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaadoaaaaab
"
}
SubProgram "d3d11_9x " {
// Stats: 21 math
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
Bind "vertex" Vertex
Bind "color" Color
Bind "normal" Normal
Bind "texcoord" TexCoord0
Bind "texcoord1" TexCoord1
Bind "tangent" TexCoord2
ConstBuffer "$Globals" 176
Vector 96 [unity_LightmapST]
Vector 112 [_MainTex_ST]
Vector 128 [_Clouds_ST]
ConstBuffer "UnityPerCamera" 128
Vector 64 [_WorldSpaceCameraPos] 3
Vector 80 [_ProjectionParams]
ConstBuffer "UnityPerDraw" 336
Matrix 0 [glstate_matrix_mvp]
Matrix 256 [_World2Object]
Vector 320 [unity_Scale]
BindCB  "$Globals" 0
BindCB  "UnityPerCamera" 1
BindCB  "UnityPerDraw" 2
"vs_4_0_level_9_1
eefiecedbelgancohhkjpjmkfjldogplljpjkglkabaaaaaaamaiaaaaaeaaaaaa
daaaaaaaliacaaaakeagaaaagmahaaaaebgpgodjiaacaaaaiaacaaaaaaacpopp
ciacaaaafiaaaaaaaeaaceaaaaaafeaaaaaafeaaaaaaceaaabaafeaaaaaaagaa
adaaabaaaaaaaaaaabaaaeaaacaaaeaaaaaaaaaaacaaaaaaaeaaagaaaaaaaaaa
acaabaaaafaaakaaaaaaaaaaaaaaaaaaaaacpoppfbaaaaafapaaapkaaaaaaadp
aaaaaaaaaaaaaaaaaaaaaaaabpaaaaacafaaaaiaaaaaapjabpaaaaacafaaabia
abaaapjabpaaaaacafaaaciaacaaapjabpaaaaacafaaadiaadaaapjabpaaaaac
afaaaeiaaeaaapjaaeaaaaaeaaaaadoaadaaoejaacaaoekaacaaookaaeaaaaae
aaaaamoaadaaeejaadaaeekaadaaoekaafaaaaadaaaaapiaaaaaffjaahaaoeka
aeaaaaaeaaaaapiaagaaoekaaaaaaajaaaaaoeiaaeaaaaaeaaaaapiaaiaaoeka
aaaakkjaaaaaoeiaaeaaaaaeaaaaapiaajaaoekaaaaappjaaaaaoeiaafaaaaad
abaaabiaaaaaffiaafaaaakaafaaaaadabaaaiiaabaaaaiaapaaaakaafaaaaad
abaaafiaaaaapeiaapaaaakaacaaaaadabaaadoaabaakkiaabaaomiaaeaaaaae
acaaadoaaeaaoejaabaaoekaabaaookaabaaaaacabaaahiaaeaaoekaafaaaaad
acaaahiaabaaffiaalaaoekaaeaaaaaeabaaaliaakaakekaabaaaaiaacaakeia
aeaaaaaeabaaahiaamaaoekaabaakkiaabaapeiaacaaaaadabaaahiaabaaoeia
anaaoekaaeaaaaaeabaaahiaabaaoeiaaoaappkaaaaaoejbaiaaaaadadaaaboa
abaaoejaabaaoeiaabaaaaacacaaahiaabaaoejaafaaaaadadaaahiaacaamjia
acaancjaaeaaaaaeacaaahiaacaamjjaacaanciaadaaoeibafaaaaadacaaahia
acaaoeiaabaappjaaiaaaaadadaaacoaacaaoeiaabaaoeiaaiaaaaadadaaaeoa
acaaoejaabaaoeiaaeaaaaaeaaaaadmaaaaappiaaaaaoekaaaaaoeiaabaaaaac
aaaaammaaaaaoeiaabaaaaacabaaamoaaaaaoeiappppaaaafdeieefcoeadaaaa
eaaaabaapjaaaaaafjaaaaaeegiocaaaaaaaaaaaajaaaaaafjaaaaaeegiocaaa
abaaaaaaagaaaaaafjaaaaaeegiocaaaacaaaaaabfaaaaaafpaaaaadpcbabaaa
aaaaaaaafpaaaaadpcbabaaaabaaaaaafpaaaaadhcbabaaaacaaaaaafpaaaaad
dcbabaaaadaaaaaafpaaaaaddcbabaaaaeaaaaaaghaaaaaepccabaaaaaaaaaaa
abaaaaaagfaaaaadpccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagfaaaaad
dccabaaaadaaaaaagfaaaaadhccabaaaaeaaaaaagiaaaaacacaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaacaaaaaaabaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaacaaaaaaaaaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaaacaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaacaaaaaa
adaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaaldccabaaaabaaaaaaegbabaaaadaaaaaaegiacaaa
aaaaaaaaahaaaaaaogikcaaaaaaaaaaaahaaaaaadcaaaaalmccabaaaabaaaaaa
agbebaaaadaaaaaaagiecaaaaaaaaaaaaiaaaaaakgiocaaaaaaaaaaaaiaaaaaa
diaaaaaiccaabaaaaaaaaaaabkaabaaaaaaaaaaaakiacaaaabaaaaaaafaaaaaa
diaaaaakncaabaaaabaaaaaaagahbaaaaaaaaaaaaceaaaaaaaaaaadpaaaaaaaa
aaaaaadpaaaaaadpdgaaaaafmccabaaaacaaaaaakgaobaaaaaaaaaaaaaaaaaah
dccabaaaacaaaaaakgakbaaaabaaaaaamgaabaaaabaaaaaadcaaaaaldccabaaa
adaaaaaaegbabaaaaeaaaaaaegiacaaaaaaaaaaaagaaaaaaogikcaaaaaaaaaaa
agaaaaaadiaaaaahhcaabaaaaaaaaaaajgbebaaaabaaaaaacgbjbaaaacaaaaaa
dcaaaaakhcaabaaaaaaaaaaajgbebaaaacaaaaaacgbjbaaaabaaaaaaegacbaia
ebaaaaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaapgbpbaaa
abaaaaaadiaaaaajhcaabaaaabaaaaaafgifcaaaabaaaaaaaeaaaaaaegiccaaa
acaaaaaabbaaaaaadcaaaaalhcaabaaaabaaaaaaegiccaaaacaaaaaabaaaaaaa
agiacaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaadcaaaaalhcaabaaaabaaaaaa
egiccaaaacaaaaaabcaaaaaakgikcaaaabaaaaaaaeaaaaaaegacbaaaabaaaaaa
aaaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaegiccaaaacaaaaaabdaaaaaa
dcaaaaalhcaabaaaabaaaaaaegacbaaaabaaaaaapgipcaaaacaaaaaabeaaaaaa
egbcbaiaebaaaaaaaaaaaaaabaaaaaahcccabaaaaeaaaaaaegacbaaaaaaaaaaa
egacbaaaabaaaaaabaaaaaahbccabaaaaeaaaaaaegbcbaaaabaaaaaaegacbaaa
abaaaaaabaaaaaaheccabaaaaeaaaaaaegbcbaaaacaaaaaaegacbaaaabaaaaaa
doaaaaabejfdeheomaaaaaaaagaaaaaaaiaaaaaajiaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapapaaaakbaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaa
apapaaaakjaaaaaaaaaaaaaaaaaaaaaaadaaaaaaacaaaaaaahahaaaalaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaadaaaaaaapadaaaalaaaaaaaabaaaaaaaaaaaaaa
adaaaaaaaeaaaaaaapadaaaaljaaaaaaaaaaaaaaaaaaaaaaadaaaaaaafaaaaaa
apaaaaaafaepfdejfeejepeoaafeebeoehefeofeaaeoepfcenebemaafeeffied
epepfceeaaedepemepfcaaklepfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapaaaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apaaaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaadamaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahaiaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklkl"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_5;
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_7;
  tmpvar_7.x = tmpvar_6.x;
  tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
  o_5.xy = (tmpvar_7 + tmpvar_6.w);
  o_5.zw = tmpvar_4.zw;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = _WorldSpaceCameraPos;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = o_5;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = (tmpvar_10 * (((_World2Object * tmpvar_11).xyz * unity_Scale.w) - _glesVertex.xyz));
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  mediump vec3 clouds_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_11;
  tmpvar_11 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_9 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_10.xyz + clouds_9);
  tmpvar_4 = tmpvar_12;
  lowp vec3 tmpvar_13;
  tmpvar_13 = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_14;
  tmpvar_14 = mix (tmpvar_13, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_14;
  mediump vec4 tmpvar_15;
  tmpvar_15.w = 0.0;
  tmpvar_15.xyz = clouds_9;
  lowp vec4 arg0_16;
  arg0_16 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_17;
  tmpvar_17 = mix (arg0_16, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_15).xyz;
  tmpvar_6 = tmpvar_17;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_19;
  tmpvar_19 = ((tmpvar_18.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_3 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize(xlv_TEXCOORD3);
  mediump vec4 tmpvar_22;
  mediump vec3 viewDir_23;
  viewDir_23 = tmpvar_21;
  highp float nh_24;
  mat3 tmpvar_25;
  tmpvar_25[0].x = 0.816497;
  tmpvar_25[0].y = -0.408248;
  tmpvar_25[0].z = -0.408248;
  tmpvar_25[1].x = 0.0;
  tmpvar_25[1].y = 0.707107;
  tmpvar_25[1].z = -0.707107;
  tmpvar_25[2].x = 0.57735;
  tmpvar_25[2].y = 0.57735;
  tmpvar_25[2].z = 0.57735;
  mediump vec3 normal_26;
  normal_26 = tmpvar_5;
  mediump vec3 scalePerBasisVector_27;
  mediump vec3 lm_28;
  lowp vec3 tmpvar_29;
  tmpvar_29 = (2.0 * texture2D (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lm_28 = tmpvar_29;
  lowp vec3 tmpvar_30;
  tmpvar_30 = (2.0 * texture2D (unity_LightmapInd, xlv_TEXCOORD2).xyz);
  scalePerBasisVector_27 = tmpvar_30;
  lm_28 = (lm_28 * dot (clamp ((tmpvar_25 * normal_26), 0.0, 1.0), scalePerBasisVector_27));
  vec3 v_31;
  v_31.x = tmpvar_25[0].x;
  v_31.y = tmpvar_25[1].x;
  v_31.z = tmpvar_25[2].x;
  vec3 v_32;
  v_32.x = tmpvar_25[0].y;
  v_32.y = tmpvar_25[1].y;
  v_32.z = tmpvar_25[2].y;
  vec3 v_33;
  v_33.x = tmpvar_25[0].z;
  v_33.y = tmpvar_25[1].z;
  v_33.z = tmpvar_25[2].z;
  mediump float tmpvar_34;
  tmpvar_34 = max (0.0, dot (tmpvar_5, normalize((normalize((((scalePerBasisVector_27.x * v_31) + (scalePerBasisVector_27.y * v_32)) + (scalePerBasisVector_27.z * v_33))) + viewDir_23))));
  nh_24 = tmpvar_34;
  mediump float arg1_35;
  arg1_35 = (tmpvar_7 * 128.0);
  highp vec4 tmpvar_36;
  tmpvar_36.xyz = lm_28;
  tmpvar_36.w = pow (nh_24, arg1_35);
  tmpvar_22 = tmpvar_36;
  mediump vec4 tmpvar_37;
  tmpvar_37 = (max (light_3, vec4(0.001, 0.001, 0.001, 0.001)) + tmpvar_22);
  light_3 = tmpvar_37;
  lowp vec4 c_38;
  lowp float spec_39;
  mediump float tmpvar_40;
  tmpvar_40 = (tmpvar_37.w * tmpvar_8);
  spec_39 = tmpvar_40;
  mediump vec3 tmpvar_41;
  tmpvar_41 = ((tmpvar_4 * tmpvar_37.xyz) + ((tmpvar_37.xyz * _SpecColor.xyz) * spec_39));
  c_38.xyz = tmpvar_41;
  c_38.w = (tmpvar_10.w + (spec_39 * _SpecColor.w));
  c_2 = c_38;
  c_2.xyz = (c_2.xyz + tmpvar_6);
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
"!!GLES


#ifdef VERTEX

attribute vec4 _glesVertex;
attribute vec3 _glesNormal;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesMultiTexCoord1;
attribute vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_5;
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_7;
  tmpvar_7.x = tmpvar_6.x;
  tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
  o_5.xy = (tmpvar_7 + tmpvar_6.w);
  o_5.zw = tmpvar_4.zw;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = _WorldSpaceCameraPos;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = o_5;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = (tmpvar_10 * (((_World2Object * tmpvar_11).xyz * unity_Scale.w) - _glesVertex.xyz));
}



#endif
#ifdef FRAGMENT

uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
varying highp vec4 xlv_TEXCOORD0;
varying highp vec4 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD2;
varying highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  mediump vec3 clouds_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture2D (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_11;
  tmpvar_11 = texture2D (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_9 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_10.xyz + clouds_9);
  tmpvar_4 = tmpvar_12;
  lowp vec3 normal_13;
  normal_13.xy = ((texture2D (_BumpMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  normal_13.z = sqrt((1.0 - clamp (dot (normal_13.xy, normal_13.xy), 0.0, 1.0)));
  mediump vec3 tmpvar_14;
  tmpvar_14 = mix (normal_13, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_14;
  mediump vec4 tmpvar_15;
  tmpvar_15.w = 0.0;
  tmpvar_15.xyz = clouds_9;
  lowp vec4 arg0_16;
  arg0_16 = (texture2D (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_17;
  tmpvar_17 = mix (arg0_16, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_15).xyz;
  tmpvar_6 = tmpvar_17;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture2D (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_19;
  tmpvar_19 = ((tmpvar_18.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = texture2DProj (_LightBuffer, xlv_TEXCOORD1);
  light_3 = tmpvar_20;
  lowp vec4 tmpvar_21;
  tmpvar_21 = texture2D (unity_Lightmap, xlv_TEXCOORD2);
  lowp vec4 tmpvar_22;
  tmpvar_22 = texture2D (unity_LightmapInd, xlv_TEXCOORD2);
  highp vec3 tmpvar_23;
  tmpvar_23 = normalize(xlv_TEXCOORD3);
  mediump vec4 tmpvar_24;
  mediump vec3 viewDir_25;
  viewDir_25 = tmpvar_23;
  highp float nh_26;
  mat3 tmpvar_27;
  tmpvar_27[0].x = 0.816497;
  tmpvar_27[0].y = -0.408248;
  tmpvar_27[0].z = -0.408248;
  tmpvar_27[1].x = 0.0;
  tmpvar_27[1].y = 0.707107;
  tmpvar_27[1].z = -0.707107;
  tmpvar_27[2].x = 0.57735;
  tmpvar_27[2].y = 0.57735;
  tmpvar_27[2].z = 0.57735;
  mediump vec3 normal_28;
  normal_28 = tmpvar_5;
  mediump vec3 scalePerBasisVector_29;
  mediump vec3 lm_30;
  lowp vec3 tmpvar_31;
  tmpvar_31 = ((8.0 * tmpvar_21.w) * tmpvar_21.xyz);
  lm_30 = tmpvar_31;
  lowp vec3 tmpvar_32;
  tmpvar_32 = ((8.0 * tmpvar_22.w) * tmpvar_22.xyz);
  scalePerBasisVector_29 = tmpvar_32;
  lm_30 = (lm_30 * dot (clamp ((tmpvar_27 * normal_28), 0.0, 1.0), scalePerBasisVector_29));
  vec3 v_33;
  v_33.x = tmpvar_27[0].x;
  v_33.y = tmpvar_27[1].x;
  v_33.z = tmpvar_27[2].x;
  vec3 v_34;
  v_34.x = tmpvar_27[0].y;
  v_34.y = tmpvar_27[1].y;
  v_34.z = tmpvar_27[2].y;
  vec3 v_35;
  v_35.x = tmpvar_27[0].z;
  v_35.y = tmpvar_27[1].z;
  v_35.z = tmpvar_27[2].z;
  mediump float tmpvar_36;
  tmpvar_36 = max (0.0, dot (tmpvar_5, normalize((normalize((((scalePerBasisVector_29.x * v_33) + (scalePerBasisVector_29.y * v_34)) + (scalePerBasisVector_29.z * v_35))) + viewDir_25))));
  nh_26 = tmpvar_36;
  mediump float arg1_37;
  arg1_37 = (tmpvar_7 * 128.0);
  highp vec4 tmpvar_38;
  tmpvar_38.xyz = lm_30;
  tmpvar_38.w = pow (nh_26, arg1_37);
  tmpvar_24 = tmpvar_38;
  mediump vec4 tmpvar_39;
  tmpvar_39 = (max (light_3, vec4(0.001, 0.001, 0.001, 0.001)) + tmpvar_24);
  light_3 = tmpvar_39;
  lowp vec4 c_40;
  lowp float spec_41;
  mediump float tmpvar_42;
  tmpvar_42 = (tmpvar_39.w * tmpvar_8);
  spec_41 = tmpvar_42;
  mediump vec3 tmpvar_43;
  tmpvar_43 = ((tmpvar_4 * tmpvar_39.xyz) + ((tmpvar_39.xyz * _SpecColor.xyz) * spec_41));
  c_40.xyz = tmpvar_43;
  c_40.w = (tmpvar_10.w + (spec_41 * _SpecColor.w));
  c_2 = c_40;
  c_2.xyz = (c_2.xyz + tmpvar_6);
  tmpvar_1 = c_2;
  gl_FragData[0] = tmpvar_1;
}



#endif"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
"!!GLES3#version 300 es


#ifdef VERTEX

in vec4 _glesVertex;
in vec3 _glesNormal;
in vec4 _glesMultiTexCoord0;
in vec4 _glesMultiTexCoord1;
in vec4 _glesTANGENT;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp vec4 unity_LightmapST;
uniform highp vec4 _MainTex_ST;
uniform highp vec4 _Clouds_ST;
out highp vec4 xlv_TEXCOORD0;
out highp vec4 xlv_TEXCOORD1;
out highp vec2 xlv_TEXCOORD2;
out highp vec3 xlv_TEXCOORD3;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1.xyz = normalize(_glesTANGENT.xyz);
  tmpvar_1.w = _glesTANGENT.w;
  vec3 tmpvar_2;
  tmpvar_2 = normalize(_glesNormal);
  highp vec4 tmpvar_3;
  highp vec4 tmpvar_4;
  tmpvar_4 = (glstate_matrix_mvp * _glesVertex);
  tmpvar_3.xy = ((_glesMultiTexCoord0.xy * _MainTex_ST.xy) + _MainTex_ST.zw);
  tmpvar_3.zw = ((_glesMultiTexCoord0.xy * _Clouds_ST.xy) + _Clouds_ST.zw);
  highp vec4 o_5;
  highp vec4 tmpvar_6;
  tmpvar_6 = (tmpvar_4 * 0.5);
  highp vec2 tmpvar_7;
  tmpvar_7.x = tmpvar_6.x;
  tmpvar_7.y = (tmpvar_6.y * _ProjectionParams.x);
  o_5.xy = (tmpvar_7 + tmpvar_6.w);
  o_5.zw = tmpvar_4.zw;
  highp vec3 tmpvar_8;
  highp vec3 tmpvar_9;
  tmpvar_8 = tmpvar_1.xyz;
  tmpvar_9 = (((tmpvar_2.yzx * tmpvar_1.zxy) - (tmpvar_2.zxy * tmpvar_1.yzx)) * _glesTANGENT.w);
  highp mat3 tmpvar_10;
  tmpvar_10[0].x = tmpvar_8.x;
  tmpvar_10[0].y = tmpvar_9.x;
  tmpvar_10[0].z = tmpvar_2.x;
  tmpvar_10[1].x = tmpvar_8.y;
  tmpvar_10[1].y = tmpvar_9.y;
  tmpvar_10[1].z = tmpvar_2.y;
  tmpvar_10[2].x = tmpvar_8.z;
  tmpvar_10[2].y = tmpvar_9.z;
  tmpvar_10[2].z = tmpvar_2.z;
  highp vec4 tmpvar_11;
  tmpvar_11.w = 1.0;
  tmpvar_11.xyz = _WorldSpaceCameraPos;
  gl_Position = tmpvar_4;
  xlv_TEXCOORD0 = tmpvar_3;
  xlv_TEXCOORD1 = o_5;
  xlv_TEXCOORD2 = ((_glesMultiTexCoord1.xy * unity_LightmapST.xy) + unity_LightmapST.zw);
  xlv_TEXCOORD3 = (tmpvar_10 * (((_World2Object * tmpvar_11).xyz * unity_Scale.w) - _glesVertex.xyz));
}



#endif
#ifdef FRAGMENT

out mediump vec4 _glesFragData[4];
uniform lowp vec4 _SpecColor;
uniform sampler2D _MainTex;
uniform sampler2D _BumpMap;
uniform sampler2D _Emission;
uniform sampler2D _Clouds;
uniform sampler2D _Mask;
uniform lowp float _LightAmount;
uniform lowp float _Shininess;
uniform sampler2D _LightBuffer;
uniform sampler2D unity_Lightmap;
uniform sampler2D unity_LightmapInd;
in highp vec4 xlv_TEXCOORD0;
in highp vec4 xlv_TEXCOORD1;
in highp vec2 xlv_TEXCOORD2;
in highp vec3 xlv_TEXCOORD3;
void main ()
{
  lowp vec4 tmpvar_1;
  mediump vec4 c_2;
  mediump vec4 light_3;
  lowp vec3 tmpvar_4;
  lowp vec3 tmpvar_5;
  lowp vec3 tmpvar_6;
  mediump float tmpvar_7;
  lowp float tmpvar_8;
  mediump vec3 clouds_9;
  lowp vec4 tmpvar_10;
  tmpvar_10 = texture (_MainTex, xlv_TEXCOORD0.xy);
  lowp vec3 tmpvar_11;
  tmpvar_11 = texture (_Clouds, xlv_TEXCOORD0.zw).xyz;
  clouds_9 = tmpvar_11;
  mediump vec3 tmpvar_12;
  tmpvar_12 = (tmpvar_10.xyz + clouds_9);
  tmpvar_4 = tmpvar_12;
  lowp vec3 tmpvar_13;
  tmpvar_13 = ((texture (_BumpMap, xlv_TEXCOORD0.xy).xyz * 2.0) - 1.0);
  mediump vec3 tmpvar_14;
  tmpvar_14 = mix (tmpvar_13, vec3(0.0, 0.0, 1.0), clouds_9);
  tmpvar_5 = tmpvar_14;
  mediump vec4 tmpvar_15;
  tmpvar_15.w = 0.0;
  tmpvar_15.xyz = clouds_9;
  lowp vec4 arg0_16;
  arg0_16 = (texture (_Emission, xlv_TEXCOORD0.xy) * _LightAmount);
  mediump vec3 tmpvar_17;
  tmpvar_17 = mix (arg0_16, vec4(0.0, 0.0, 0.0, 0.0), tmpvar_15).xyz;
  tmpvar_6 = tmpvar_17;
  tmpvar_7 = _Shininess;
  lowp vec4 tmpvar_18;
  tmpvar_18 = texture (_Mask, xlv_TEXCOORD0.xy);
  mediump float tmpvar_19;
  tmpvar_19 = ((tmpvar_18.xyz * (1.0 - clouds_9)) * _SpecColor.xyz).x;
  tmpvar_8 = tmpvar_19;
  lowp vec4 tmpvar_20;
  tmpvar_20 = textureProj (_LightBuffer, xlv_TEXCOORD1);
  light_3 = tmpvar_20;
  highp vec3 tmpvar_21;
  tmpvar_21 = normalize(xlv_TEXCOORD3);
  mediump vec4 tmpvar_22;
  mediump vec3 viewDir_23;
  viewDir_23 = tmpvar_21;
  highp float nh_24;
  mat3 tmpvar_25;
  tmpvar_25[0].x = 0.816497;
  tmpvar_25[0].y = -0.408248;
  tmpvar_25[0].z = -0.408248;
  tmpvar_25[1].x = 0.0;
  tmpvar_25[1].y = 0.707107;
  tmpvar_25[1].z = -0.707107;
  tmpvar_25[2].x = 0.57735;
  tmpvar_25[2].y = 0.57735;
  tmpvar_25[2].z = 0.57735;
  mediump vec3 normal_26;
  normal_26 = tmpvar_5;
  mediump vec3 scalePerBasisVector_27;
  mediump vec3 lm_28;
  lowp vec3 tmpvar_29;
  tmpvar_29 = (2.0 * texture (unity_Lightmap, xlv_TEXCOORD2).xyz);
  lm_28 = tmpvar_29;
  lowp vec3 tmpvar_30;
  tmpvar_30 = (2.0 * texture (unity_LightmapInd, xlv_TEXCOORD2).xyz);
  scalePerBasisVector_27 = tmpvar_30;
  lm_28 = (lm_28 * dot (clamp ((tmpvar_25 * normal_26), 0.0, 1.0), scalePerBasisVector_27));
  vec3 v_31;
  v_31.x = tmpvar_25[0].x;
  v_31.y = tmpvar_25[1].x;
  v_31.z = tmpvar_25[2].x;
  vec3 v_32;
  v_32.x = tmpvar_25[0].y;
  v_32.y = tmpvar_25[1].y;
  v_32.z = tmpvar_25[2].y;
  vec3 v_33;
  v_33.x = tmpvar_25[0].z;
  v_33.y = tmpvar_25[1].z;
  v_33.z = tmpvar_25[2].z;
  mediump float tmpvar_34;
  tmpvar_34 = max (0.0, dot (tmpvar_5, normalize((normalize((((scalePerBasisVector_27.x * v_31) + (scalePerBasisVector_27.y * v_32)) + (scalePerBasisVector_27.z * v_33))) + viewDir_23))));
  nh_24 = tmpvar_34;
  mediump float arg1_35;
  arg1_35 = (tmpvar_7 * 128.0);
  highp vec4 tmpvar_36;
  tmpvar_36.xyz = lm_28;
  tmpvar_36.w = pow (nh_24, arg1_35);
  tmpvar_22 = tmpvar_36;
  mediump vec4 tmpvar_37;
  tmpvar_37 = (max (light_3, vec4(0.001, 0.001, 0.001, 0.001)) + tmpvar_22);
  light_3 = tmpvar_37;
  lowp vec4 c_38;
  lowp float spec_39;
  mediump float tmpvar_40;
  tmpvar_40 = (tmpvar_37.w * tmpvar_8);
  spec_39 = tmpvar_40;
  mediump vec3 tmpvar_41;
  tmpvar_41 = ((tmpvar_4 * tmpvar_37.xyz) + ((tmpvar_37.xyz * _SpecColor.xyz) * spec_39));
  c_38.xyz = tmpvar_41;
  c_38.w = (tmpvar_10.w + (spec_39 * _SpecColor.w));
  c_2 = c_38;
  c_2.xyz = (c_2.xyz + tmpvar_6);
  tmpvar_1 = c_2;
  _glesFragData[0] = tmpvar_1;
}



#endif"
}
}
Program "fp" {
SubProgram "opengl " {
// Stats: 22 math, 5 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Vector 0 [_SpecColor]
Float 1 [_LightAmount]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
"!!ARBfp1.0
PARAM c[3] = { program.local[0..1],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TXP R1, fragment.texcoord[1], texture[5], 2D;
TEX R2.xyz, fragment.texcoord[0].zwzw, texture[1], 2D;
TEX R0, fragment.texcoord[0], texture[0], 2D;
TEX R3.xyz, fragment.texcoord[0], texture[3], 2D;
TEX R4.x, fragment.texcoord[0], texture[4], 2D;
ADD R2.w, -R2.x, c[2].x;
MUL R2.w, R4.x, R2;
ADD R0.xyz, R0, R2;
MUL R3.xyz, R3, c[1].x;
LG2 R1.x, R1.x;
LG2 R1.y, R1.y;
LG2 R1.z, R1.z;
ADD R1.xyz, -R1, fragment.texcoord[2];
MUL R2.w, R2, c[0].x;
LG2 R1.w, R1.w;
MUL R1.w, -R1, R2;
MUL R4.xyz, R1, c[0];
MUL R4.xyz, R4, R1.w;
MAD R2.xyz, R2.x, -R3, R3;
MAD R0.xyz, R0, R1, R4;
ADD result.color.xyz, R0, R2;
MAD result.color.w, R1, c[0], R0;
END
# 22 instructions, 5 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 21 math, 5 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Vector 0 [_SpecColor]
Float 1 [_LightAmount]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
"ps_2_0
dcl_2d s0
dcl_2d s1
dcl_2d s3
dcl_2d s4
dcl_2d s5
def c2, 1.00000000, 0, 0, 0
dcl t0
dcl t1
dcl t2.xyz
texld r6, t0, s4
texld r2, t0, s3
texldp r1, t1, s5
mov r0.y, t0.w
mov r0.x, t0.z
mov r3.xy, r0
mul r2.xyz, r2, c1.x
texld r0, t0, s0
texld r3, r3, s1
add_pp r4.xyz, r0, r3
log_pp r0.x, r1.x
log_pp r0.z, r1.z
log_pp r0.y, r1.y
add_pp r5.xyz, -r0, t2
add_pp r0.x, -r3, c2
mul r0.x, r6, r0
log_pp r1.x, r1.w
mul r0.x, r0, c0
mul_pp r0.x, -r1, r0
mul_pp r6.xyz, r5, c0
mul_pp r1.xyz, r6, r0.x
mad_pp r0.w, r0.x, c0, r0
mad_pp r1.xyz, r4, r5, r1
mad r2.xyz, r3.x, -r2, r2
add_pp r0.xyz, r1, r2
mov_pp oC0, r0
"
}
SubProgram "d3d11 " {
// Stats: 15 math, 5 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 2
SetTexture 2 [_Emission] 2D 1
SetTexture 3 [_Mask] 2D 3
SetTexture 4 [_LightBuffer] 2D 4
ConstBuffer "$Globals" 144
Vector 32 [_SpecColor]
Float 48 [_LightAmount]
BindCB  "$Globals" 0
"ps_4_0
eefiecedlfpelbkmbjfbbmpbbpgmcmimppgligopabaaaaaafiaeaaaaadaaaaaa
cmaaaaaaleaaaaaaoiaaaaaaejfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apalaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklklfdeieefcgiadaaaaeaaaaaaankaaaaaafjaaaaaeegiocaaa
aaaaaaaaaeaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaa
fkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaa
aeaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaa
ffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaa
ffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaa
gcbaaaadlcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagfaaaaadpccabaaa
aaaaaaaagiaaaaacaeaaaaaaefaaaaajpcaabaaaaaaaaaaaegbabaaaabaaaaaa
eghobaaaadaaaaaaaagabaaaadaaaaaaefaaaaajpcaabaaaabaaaaaaogbkbaaa
abaaaaaaeghobaaaabaaaaaaaagabaaaacaaaaaaaaaaaaaiccaabaaaaaaaaaaa
akaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadpdiaaaaahbcaabaaaaaaaaaaa
bkaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaaibcaabaaaaaaaaaaaakaabaaa
aaaaaaaaakiacaaaaaaaaaaaacaaaaaaaoaaaaahgcaabaaaaaaaaaaaagbbbaaa
acaaaaaapgbpbaaaacaaaaaaefaaaaajpcaabaaaacaaaaaajgafbaaaaaaaaaaa
eghobaaaaeaaaaaaaagabaaaaeaaaaaacpaaaaafpcaabaaaacaaaaaaegaobaaa
acaaaaaadiaaaaaibcaabaaaaaaaaaaaakaabaaaaaaaaaaadkaabaiaebaaaaaa
acaaaaaaaaaaaaaiocaabaaaaaaaaaaaagajbaiaebaaaaaaacaaaaaaagbjbaaa
adaaaaaadiaaaaaihcaabaaaacaaaaaajgahbaaaaaaaaaaaegiccaaaaaaaaaaa
acaaaaaadiaaaaahhcaabaaaacaaaaaaagaabaaaaaaaaaaaegacbaaaacaaaaaa
efaaaaajpcaabaaaadaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaa
aaaaaaaaaaaaaaahhcaabaaaadaaaaaaegacbaaaabaaaaaaegacbaaaadaaaaaa
dcaaaaakiccabaaaaaaaaaaaakaabaaaaaaaaaaadkiacaaaaaaaaaaaacaaaaaa
dkaabaaaadaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaaadaaaaaajgahbaaa
aaaaaaaaegacbaaaacaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaa
eghobaaaacaaaaaaaagabaaaabaaaaaadiaaaaaihcaabaaaacaaaaaaegacbaaa
acaaaaaaagiacaaaaaaaaaaaadaaaaaadcaaaaakhcaabaaaabaaaaaaegacbaaa
abaaaaaaegacbaiaebaaaaaaacaaaaaaegacbaaaacaaaaaaaaaaaaahhccabaaa
aaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadoaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 15 math, 5 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 2
SetTexture 2 [_Emission] 2D 1
SetTexture 3 [_Mask] 2D 3
SetTexture 4 [_LightBuffer] 2D 4
ConstBuffer "$Globals" 144
Vector 32 [_SpecColor]
Float 48 [_LightAmount]
BindCB  "$Globals" 0
"ps_4_0_level_9_1
eefiecedeicanojjijbhcjcgapadfjpdgilbogepabaaaaaameagaaaaaeaaaaaa
daaaaaaajiacaaaaaiagaaaajaagaaaaebgpgodjgaacaaaagaacaaaaaaacpppp
bmacaaaaeeaaaaaaabaadiaaaaaaeeaaaaaaeeaaafaaceaaaaaaeeaaaaaaaaaa
acababaaabacacaaadadadaaaeaeaeaaaaaaacaaacaaaaaaaaaaaaaaaaacpppp
fbaaaaafacaaapkaaaaaiadpaaaaaaaaaaaaaaaaaaaaaaaabpaaaaacaaaaaaia
aaaaaplabpaaaaacaaaaaaiaabaaaplabpaaaaacaaaaaaiaacaaahlabpaaaaac
aaaaaajaaaaiapkabpaaaaacaaaaaajaabaiapkabpaaaaacaaaaaajaacaiapka
bpaaaaacaaaaaajaadaiapkabpaaaaacaaaaaajaaeaiapkaagaaaaacaaaaaiia
abaapplaafaaaaadaaaaadiaaaaappiaabaaoelaabaaaaacabaaabiaaaaakkla
abaaaaacabaaaciaaaaapplaecaaaaadaaaacpiaaaaaoeiaaeaioekaecaaaaad
acaaapiaaaaaoelaadaioekaecaaaaadabaacpiaabaaoeiaacaioekaecaaaaad
adaacpiaaaaaoelaaaaioekaecaaaaadaeaaapiaaaaaoelaabaioekaapaaaaac
afaacbiaaaaaaaiaapaaaaacafaacciaaaaaffiaapaaaaacafaaceiaaaaakkia
apaaaaacabaaciiaaaaappiaacaaaaadaaaachiaafaaoeibacaaoelaafaaaaad
acaacoiaaaaabliaaaaablkaacaaaaadaaaaaiiaabaaaaibacaaaakaafaaaaad
aaaaaiiaaaaappiaacaaaaiaafaaaaadaaaaciiaaaaappiaaaaaaakaafaaaaad
aaaaciiaaaaappiaabaappibafaaaaadacaachiaaaaappiaacaabliaacaaaaad
adaachiaabaaoeiaadaaoeiaaeaaaaaeafaaciiaaaaappiaaaaappkaadaappia
aeaaaaaeaaaachiaadaaoeiaaaaaoeiaacaaoeiaafaaaaadacaaahiaaeaaoeia
abaaaakaaeaaaaaeabaachiaabaaoeiaacaaoeibacaaoeiaacaaaaadafaachia
aaaaoeiaabaaoeiaabaaaaacaaaicpiaafaaoeiappppaaaafdeieefcgiadaaaa
eaaaaaaankaaaaaafjaaaaaeegiocaaaaaaaaaaaaeaaaaaafkaaaaadaagabaaa
aaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaad
aagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafibiaaaeaahabaaaaaaaaaaa
ffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaa
ffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaa
ffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaadlcbabaaaacaaaaaagcbaaaad
hcbabaaaadaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacaeaaaaaaefaaaaaj
pcaabaaaaaaaaaaaegbabaaaabaaaaaaeghobaaaadaaaaaaaagabaaaadaaaaaa
efaaaaajpcaabaaaabaaaaaaogbkbaaaabaaaaaaeghobaaaabaaaaaaaagabaaa
acaaaaaaaaaaaaaiccaabaaaaaaaaaaaakaabaiaebaaaaaaabaaaaaaabeaaaaa
aaaaiadpdiaaaaahbcaabaaaaaaaaaaabkaabaaaaaaaaaaaakaabaaaaaaaaaaa
diaaaaaibcaabaaaaaaaaaaaakaabaaaaaaaaaaaakiacaaaaaaaaaaaacaaaaaa
aoaaaaahgcaabaaaaaaaaaaaagbbbaaaacaaaaaapgbpbaaaacaaaaaaefaaaaaj
pcaabaaaacaaaaaajgafbaaaaaaaaaaaeghobaaaaeaaaaaaaagabaaaaeaaaaaa
cpaaaaafpcaabaaaacaaaaaaegaobaaaacaaaaaadiaaaaaibcaabaaaaaaaaaaa
akaabaaaaaaaaaaadkaabaiaebaaaaaaacaaaaaaaaaaaaaiocaabaaaaaaaaaaa
agajbaiaebaaaaaaacaaaaaaagbjbaaaadaaaaaadiaaaaaihcaabaaaacaaaaaa
jgahbaaaaaaaaaaaegiccaaaaaaaaaaaacaaaaaadiaaaaahhcaabaaaacaaaaaa
agaabaaaaaaaaaaaegacbaaaacaaaaaaefaaaaajpcaabaaaadaaaaaaegbabaaa
abaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaaaaaaaaahhcaabaaaadaaaaaa
egacbaaaabaaaaaaegacbaaaadaaaaaadcaaaaakiccabaaaaaaaaaaaakaabaaa
aaaaaaaadkiacaaaaaaaaaaaacaaaaaadkaabaaaadaaaaaadcaaaaajhcaabaaa
aaaaaaaaegacbaaaadaaaaaajgahbaaaaaaaaaaaegacbaaaacaaaaaaefaaaaaj
pcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaaabaaaaaa
diaaaaaihcaabaaaacaaaaaaegacbaaaacaaaaaaagiacaaaaaaaaaaaadaaaaaa
dcaaaaakhcaabaaaabaaaaaaegacbaaaabaaaaaaegacbaiaebaaaaaaacaaaaaa
egacbaaaacaaaaaaaaaaaaahhccabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaa
abaaaaaadoaaaaabejfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaaaaaaaaaa
abaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaaadaaaaaa
abaaaaaaapapaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaaapalaaaa
heaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaafdfgfpfaepfdejfe
ejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaa
caaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgf
heaaklkl"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 33 math, 7 textures
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Vector 0 [_SpecColor]
Float 1 [_LightAmount]
Vector 2 [unity_LightmapFade]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
SetTexture 6 [unity_Lightmap] 2D 6
SetTexture 7 [unity_LightmapInd] 2D 7
"!!ARBfp1.0
PARAM c[4] = { program.local[0..2],
		{ 8, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
TXP R1, fragment.texcoord[1], texture[5], 2D;
TEX R2, fragment.texcoord[2], texture[7], 2D;
TEX R3, fragment.texcoord[2], texture[6], 2D;
TEX R4.xyz, fragment.texcoord[0].zwzw, texture[1], 2D;
TEX R0, fragment.texcoord[0], texture[0], 2D;
TEX R5.xyz, fragment.texcoord[0], texture[3], 2D;
TEX R6.x, fragment.texcoord[0], texture[4], 2D;
MUL R3.xyz, R3.w, R3;
MUL R2.xyz, R2.w, R2;
MUL R2.xyz, R2, c[3].x;
DP4 R3.w, fragment.texcoord[3], fragment.texcoord[3];
RSQ R2.w, R3.w;
RCP R2.w, R2.w;
MAD R3.xyz, R3, c[3].x, -R2;
MAD_SAT R2.w, R2, c[2].z, c[2];
MAD R2.xyz, R2.w, R3, R2;
ADD R2.w, -R4.x, c[3].y;
MUL R3.xyz, R5, c[1].x;
LG2 R1.x, R1.x;
LG2 R1.y, R1.y;
LG2 R1.z, R1.z;
ADD R1.xyz, -R1, R2;
MUL R2.w, R6.x, R2;
MUL R2.x, R2.w, c[0];
LG2 R1.w, R1.w;
MUL R1.w, -R1, R2.x;
MUL R2.xyz, R1, c[0];
MUL R2.xyz, R2, R1.w;
ADD R0.xyz, R0, R4;
MAD R3.xyz, R4.x, -R3, R3;
MAD R0.xyz, R0, R1, R2;
ADD result.color.xyz, R0, R3;
MAD result.color.w, R1, c[0], R0;
END
# 33 instructions, 7 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 29 math, 7 textures
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
Vector 0 [_SpecColor]
Float 1 [_LightAmount]
Vector 2 [unity_LightmapFade]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
SetTexture 6 [unity_Lightmap] 2D 6
SetTexture 7 [unity_LightmapInd] 2D 7
"ps_2_0
dcl_2d s0
dcl_2d s1
dcl_2d s3
dcl_2d s4
dcl_2d s5
dcl_2d s6
dcl_2d s7
def c3, 1.00000000, 8.00000000, 0, 0
dcl t0
dcl t1
dcl t2.xy
dcl t3
texld r4, t0, s3
texld r1, t0, s0
texld r7, t0, s4
texldp r2, t1, s5
texld r5, t2, s7
mul_pp r5.xyz, r5.w, r5
mov r0.y, t0.w
mov r0.x, t0.z
mul_pp r5.xyz, r5, c3.y
log_pp r2.x, r2.x
log_pp r2.y, r2.y
log_pp r2.z, r2.z
mul r4.xyz, r4, c1.x
texld r3, r0, s1
texld r0, t2, s6
mul_pp r6.xyz, r0.w, r0
dp4 r0.x, t3, t3
rsq r0.x, r0.x
rcp r0.x, r0.x
mad_sat r0.x, r0, c2.z, c2.w
mad_pp r6.xyz, r6, c3.y, -r5
mad_pp r5.xyz, r0.x, r6, r5
add_pp r5.xyz, -r2, r5
add_pp r0.x, -r3, c3
mul r0.x, r7, r0
log_pp r2.x, r2.w
mul r0.x, r0, c0
mul_pp r0.x, -r2, r0
mul_pp r2.xyz, r5, c0
mul_pp r2.xyz, r2, r0.x
add_pp r1.xyz, r1, r3
mad_pp r1.xyz, r1, r5, r2
mad_pp r0.w, r0.x, c0, r1
mad r2.xyz, r3.x, -r4, r4
add_pp r0.xyz, r1, r2
mov_pp oC0, r0
"
}
SubProgram "d3d11 " {
// Stats: 23 math, 7 textures
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 2
SetTexture 2 [_Emission] 2D 1
SetTexture 3 [_Mask] 2D 3
SetTexture 4 [_LightBuffer] 2D 4
SetTexture 5 [unity_Lightmap] 2D 5
SetTexture 6 [unity_LightmapInd] 2D 6
ConstBuffer "$Globals" 176
Vector 32 [_SpecColor]
Float 48 [_LightAmount]
Vector 144 [unity_LightmapFade]
BindCB  "$Globals" 0
"ps_4_0
eefiecednfchpipmemaaencjgfbjmemeoaimgjofabaaaaaapiafaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apalaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapapaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefcpaaeaaaaeaaaaaaadmabaaaafjaaaaaeegiocaaaaaaaaaaaakaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaa
acaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafkaaaaad
aagabaaaafaaaaaafkaaaaadaagabaaaagaaaaaafibiaaaeaahabaaaaaaaaaaa
ffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaa
ffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaa
ffffaaaafibiaaaeaahabaaaafaaaaaaffffaaaafibiaaaeaahabaaaagaaaaaa
ffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaadlcbabaaaacaaaaaagcbaaaad
dcbabaaaadaaaaaagcbaaaadpcbabaaaaeaaaaaagfaaaaadpccabaaaaaaaaaaa
giaaaaacaeaaaaaabbaaaaahbcaabaaaaaaaaaaaegbobaaaaeaaaaaaegbobaaa
aeaaaaaaelaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaadccaaaalbcaabaaa
aaaaaaaaakaabaaaaaaaaaaackiacaaaaaaaaaaaajaaaaaadkiacaaaaaaaaaaa
ajaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaadaaaaaaeghobaaaagaaaaaa
aagabaaaagaaaaaadiaaaaahccaabaaaaaaaaaaadkaabaaaabaaaaaaabeaaaaa
aaaaaaebdiaaaaahocaabaaaaaaaaaaaagajbaaaabaaaaaafgafbaaaaaaaaaaa
efaaaaajpcaabaaaabaaaaaaegbabaaaadaaaaaaeghobaaaafaaaaaaaagabaaa
afaaaaaadiaaaaahicaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaaaeb
dcaaaaakhcaabaaaabaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaajgahbaia
ebaaaaaaaaaaaaaadcaaaaajhcaabaaaaaaaaaaaagaabaaaaaaaaaaaegacbaaa
abaaaaaajgahbaaaaaaaaaaaaoaaaaahdcaabaaaabaaaaaaegbabaaaacaaaaaa
pgbpbaaaacaaaaaaefaaaaajpcaabaaaabaaaaaaegaabaaaabaaaaaaeghobaaa
aeaaaaaaaagabaaaaeaaaaaacpaaaaafpcaabaaaabaaaaaaegaobaaaabaaaaaa
aaaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaiaebaaaaaaabaaaaaa
diaaaaaihcaabaaaabaaaaaaegacbaaaaaaaaaaaegiccaaaaaaaaaaaacaaaaaa
efaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaaadaaaaaaaagabaaa
adaaaaaaefaaaaajpcaabaaaadaaaaaaogbkbaaaabaaaaaaeghobaaaabaaaaaa
aagabaaaacaaaaaaaaaaaaaiicaabaaaaaaaaaaaakaabaiaebaaaaaaadaaaaaa
abeaaaaaaaaaiadpdiaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaakaabaaa
acaaaaaadiaaaaaiicaabaaaaaaaaaaadkaabaaaaaaaaaaaakiacaaaaaaaaaaa
acaaaaaadiaaaaaiicaabaaaaaaaaaaadkaabaaaaaaaaaaadkaabaiaebaaaaaa
abaaaaaadiaaaaahhcaabaaaabaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaa
efaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaa
aaaaaaaaaaaaaaahhcaabaaaacaaaaaaegacbaaaadaaaaaaegacbaaaacaaaaaa
dcaaaaakiccabaaaaaaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaacaaaaaa
dkaabaaaacaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaaacaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaa
eghobaaaacaaaaaaaagabaaaabaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaa
abaaaaaaagiacaaaaaaaaaaaadaaaaaadcaaaaakhcaabaaaabaaaaaaegacbaaa
adaaaaaaegacbaiaebaaaaaaabaaaaaaegacbaaaabaaaaaaaaaaaaahhccabaaa
aaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadoaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 23 math, 7 textures
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 2
SetTexture 2 [_Emission] 2D 1
SetTexture 3 [_Mask] 2D 3
SetTexture 4 [_LightBuffer] 2D 4
SetTexture 5 [unity_Lightmap] 2D 5
SetTexture 6 [unity_LightmapInd] 2D 6
ConstBuffer "$Globals" 176
Vector 32 [_SpecColor]
Float 48 [_LightAmount]
Vector 144 [unity_LightmapFade]
BindCB  "$Globals" 0
"ps_4_0_level_9_1
eefiecedmbemcbcmojgfnafafadohgpgfnkleplaabaaaaaafaajaaaaaeaaaaaa
daaaaaaaieadaaaahmaiaaaabmajaaaaebgpgodjemadaaaaemadaaaaaaacpppp
peacaaaafiaaaaaaacaaeaaaaaaafiaaaaaafiaaahaaceaaaaaafiaaaaaaaaaa
acababaaabacacaaadadadaaaeaeaeaaafafafaaagagagaaaaaaacaaacaaaaaa
aaaaaaaaaaaaajaaabaaacaaaaaaaaaaaaacppppfbaaaaafadaaapkaaaaaiadp
aaaaaaebaaaaaaaaaaaaaaaabpaaaaacaaaaaaiaaaaaaplabpaaaaacaaaaaaia
abaaaplabpaaaaacaaaaaaiaacaaadlabpaaaaacaaaaaaiaadaaaplabpaaaaac
aaaaaajaaaaiapkabpaaaaacaaaaaajaabaiapkabpaaaaacaaaaaajaacaiapka
bpaaaaacaaaaaajaadaiapkabpaaaaacaaaaaajaaeaiapkabpaaaaacaaaaaaja
afaiapkabpaaaaacaaaaaajaagaiapkaagaaaaacaaaaaiiaabaapplaafaaaaad
aaaaadiaaaaappiaabaaoelaabaaaaacabaaabiaaaaakklaabaaaaacabaaacia
aaaapplaecaaaaadacaacpiaacaaoelaagaioekaecaaaaadadaacpiaacaaoela
afaioekaecaaaaadaaaacpiaaaaaoeiaaeaioekaecaaaaadaeaaapiaaaaaoela
adaioekaecaaaaadabaacpiaabaaoeiaacaioekaecaaaaadafaacpiaaaaaoela
aaaioekaecaaaaadagaaapiaaaaaoelaabaioekaajaaaaadabaaaiiaadaaoela
adaaoelaahaaaaacabaaaiiaabaappiaagaaaaacabaaaiiaabaappiaaeaaaaae
abaadiiaabaappiaacaakkkaacaappkaafaaaaadacaaciiaacaappiaadaaffka
afaaaaadacaachiaacaaoeiaacaappiaafaaaaadacaaciiaadaappiaadaaffka
aeaaaaaeadaachiaacaappiaadaaoeiaacaaoeibaeaaaaaeacaachiaabaappia
adaaoeiaacaaoeiaapaaaaacadaacbiaaaaaaaiaapaaaaacadaacciaaaaaffia
apaaaaacadaaceiaaaaakkiaapaaaaacabaaciiaaaaappiaacaaaaadaaaachia
acaaoeiaadaaoeibafaaaaadacaachiaaaaaoeiaaaaaoekaacaaaaadaaaaaiia
abaaaaibadaaaakaafaaaaadaaaaaiiaaaaappiaaeaaaaiaafaaaaadaaaaciia
aaaappiaaaaaaakaafaaaaadaaaaciiaaaaappiaabaappibafaaaaadacaachia
aaaappiaacaaoeiaacaaaaadadaachiaabaaoeiaafaaoeiaaeaaaaaeaeaaciia
aaaappiaaaaappkaafaappiaaeaaaaaeaaaachiaadaaoeiaaaaaoeiaacaaoeia
afaaaaadacaaahiaagaaoeiaabaaaakaaeaaaaaeabaachiaabaaoeiaacaaoeib
acaaoeiaacaaaaadaeaachiaaaaaoeiaabaaoeiaabaaaaacaaaicpiaaeaaoeia
ppppaaaafdeieefcpaaeaaaaeaaaaaaadmabaaaafjaaaaaeegiocaaaaaaaaaaa
akaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaad
aagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaa
fkaaaaadaagabaaaafaaaaaafkaaaaadaagabaaaagaaaaaafibiaaaeaahabaaa
aaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaa
acaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaa
aeaaaaaaffffaaaafibiaaaeaahabaaaafaaaaaaffffaaaafibiaaaeaahabaaa
agaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaadlcbabaaaacaaaaaa
gcbaaaaddcbabaaaadaaaaaagcbaaaadpcbabaaaaeaaaaaagfaaaaadpccabaaa
aaaaaaaagiaaaaacaeaaaaaabbaaaaahbcaabaaaaaaaaaaaegbobaaaaeaaaaaa
egbobaaaaeaaaaaaelaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaadccaaaal
bcaabaaaaaaaaaaaakaabaaaaaaaaaaackiacaaaaaaaaaaaajaaaaaadkiacaaa
aaaaaaaaajaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaadaaaaaaeghobaaa
agaaaaaaaagabaaaagaaaaaadiaaaaahccaabaaaaaaaaaaadkaabaaaabaaaaaa
abeaaaaaaaaaaaebdiaaaaahocaabaaaaaaaaaaaagajbaaaabaaaaaafgafbaaa
aaaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaadaaaaaaeghobaaaafaaaaaa
aagabaaaafaaaaaadiaaaaahicaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaa
aaaaaaebdcaaaaakhcaabaaaabaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaa
jgahbaiaebaaaaaaaaaaaaaadcaaaaajhcaabaaaaaaaaaaaagaabaaaaaaaaaaa
egacbaaaabaaaaaajgahbaaaaaaaaaaaaoaaaaahdcaabaaaabaaaaaaegbabaaa
acaaaaaapgbpbaaaacaaaaaaefaaaaajpcaabaaaabaaaaaaegaabaaaabaaaaaa
eghobaaaaeaaaaaaaagabaaaaeaaaaaacpaaaaafpcaabaaaabaaaaaaegaobaaa
abaaaaaaaaaaaaaihcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaiaebaaaaaa
abaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaaaaaaaaaaegiccaaaaaaaaaaa
acaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaaadaaaaaa
aagabaaaadaaaaaaefaaaaajpcaabaaaadaaaaaaogbkbaaaabaaaaaaeghobaaa
abaaaaaaaagabaaaacaaaaaaaaaaaaaiicaabaaaaaaaaaaaakaabaiaebaaaaaa
adaaaaaaabeaaaaaaaaaiadpdiaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaa
akaabaaaacaaaaaadiaaaaaiicaabaaaaaaaaaaadkaabaaaaaaaaaaaakiacaaa
aaaaaaaaacaaaaaadiaaaaaiicaabaaaaaaaaaaadkaabaaaaaaaaaaadkaabaia
ebaaaaaaabaaaaaadiaaaaahhcaabaaaabaaaaaapgapbaaaaaaaaaaaegacbaaa
abaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaa
aagabaaaaaaaaaaaaaaaaaahhcaabaaaacaaaaaaegacbaaaadaaaaaaegacbaaa
acaaaaaadcaaaaakiccabaaaaaaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaa
acaaaaaadkaabaaaacaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaaacaaaaaa
egacbaaaaaaaaaaaegacbaaaabaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaa
abaaaaaaeghobaaaacaaaaaaaagabaaaabaaaaaadiaaaaaihcaabaaaabaaaaaa
egacbaaaabaaaaaaagiacaaaaaaaaaaaadaaaaaadcaaaaakhcaabaaaabaaaaaa
egacbaaaadaaaaaaegacbaiaebaaaaaaabaaaaaaegacbaaaabaaaaaaaaaaaaah
hccabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadoaaaaabejfdeheo
jiaaaaaaafaaaaaaaiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaa
apaaaaaaimaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapapaaaaimaaaaaa
abaaaaaaaaaaaaaaadaaaaaaacaaaaaaapalaaaaimaaaaaaacaaaaaaaaaaaaaa
adaaaaaaadaaaaaaadadaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaa
apapaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheo
cmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaa
apaaaaaafdfgfpfegbhcghgfheaaklkl"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 59 math, 8 textures
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
Vector 0 [_SpecColor]
Float 1 [_LightAmount]
Float 2 [_Shininess]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
SetTexture 6 [unity_Lightmap] 2D 6
SetTexture 7 [unity_LightmapInd] 2D 7
"!!ARBfp1.0
PARAM c[7] = { program.local[0..2],
		{ 2, 1, 0, 8 },
		{ -0.40824828, -0.70710677, 0.57735026, 128 },
		{ -0.40824831, 0.70710677, 0.57735026 },
		{ 0.81649655, 0, 0.57735026 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
TEMP R7;
TEMP R8;
TEX R6.yw, fragment.texcoord[0], texture[2], 2D;
TEX R0, fragment.texcoord[2], texture[7], 2D;
TXP R2, fragment.texcoord[1], texture[5], 2D;
TEX R5.xyz, fragment.texcoord[0].zwzw, texture[1], 2D;
TEX R3, fragment.texcoord[0], texture[0], 2D;
TEX R1, fragment.texcoord[2], texture[6], 2D;
TEX R4.xyz, fragment.texcoord[0], texture[3], 2D;
TEX R6.x, fragment.texcoord[0], texture[4], 2D;
MAD R7.xy, R6.wyzw, c[3].x, -c[3].y;
MUL R6.zw, R7.xyxy, R7.xyxy;
ADD_SAT R4.w, R6.z, R6;
MUL R0.xyz, R0.w, R0;
MUL R6.yzw, R0.xxyz, c[3].w;
ADD R4.w, -R4, c[3].y;
RSQ R4.w, R4.w;
RCP R7.z, R4.w;
ADD R0.xyz, -R7, c[3].zzyw;
MAD R7.xyz, R5, R0, R7;
MUL R8.xyz, R6.z, c[5];
MAD R8.xyz, R6.y, c[6], R8;
MAD R8.xyz, R6.w, c[4], R8;
DP3 R0.w, R8, R8;
RSQ R4.w, R0.w;
DP3 R0.w, fragment.texcoord[3], fragment.texcoord[3];
DP3_SAT R0.z, R7, c[4];
DP3_SAT R0.y, R7, c[5];
DP3_SAT R0.x, R7, c[6];
MUL R8.xyz, R4.w, R8;
RSQ R0.w, R0.w;
MAD R8.xyz, R0.w, fragment.texcoord[3], R8;
DP3 R0.w, R0, R6.yzww;
MUL R0.xyz, R1.w, R1;
MUL R0.xyz, R0, R0.w;
DP3 R4.w, R8, R8;
RSQ R0.w, R4.w;
MUL R1.xyz, R0.w, R8;
DP3 R1.x, R7, R1;
MOV R0.w, c[4];
MUL R1.y, R0.w, c[2].x;
MAX R0.w, R1.x, c[3].z;
POW R0.w, R0.w, R1.y;
LG2 R1.x, R2.x;
ADD R1.w, -R5.x, c[3].y;
MUL R2.x, R6, R1.w;
LG2 R1.y, R2.y;
LG2 R1.z, R2.z;
MUL R2.x, R2, c[0];
MUL R0.xyz, R0, c[3].w;
LG2 R1.w, R2.w;
ADD R0, -R1, R0;
MUL R0.w, R0, R2.x;
MUL R1.xyz, R0, c[0];
MUL R2.xyz, R4, c[1].x;
MUL R1.xyz, R1, R0.w;
ADD R3.xyz, R3, R5;
MAD R2.xyz, R5.x, -R2, R2;
MAD R0.xyz, R3, R0, R1;
ADD result.color.xyz, R0, R2;
MAD result.color.w, R0, c[0], R3;
END
# 59 instructions, 9 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 60 math, 8 textures
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
Vector 0 [_SpecColor]
Float 1 [_LightAmount]
Float 2 [_Shininess]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
SetTexture 6 [unity_Lightmap] 2D 6
SetTexture 7 [unity_LightmapInd] 2D 7
"ps_2_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s3
dcl_2d s4
dcl_2d s5
dcl_2d s6
dcl_2d s7
def c3, 2.00000000, -1.00000000, 1.00000000, 0.00000000
def c4, -0.40824828, -0.70710677, 0.57735026, 8.00000000
def c5, -0.40824831, 0.70710677, 0.57735026, 128.00000000
def c6, 0.81649655, 0.00000000, 0.57735026, 0
dcl t0
dcl t1
dcl t2.xy
dcl t3.xyz
texld r1, t0, s2
texld r7, t0, s3
texld r3, t0, s0
texldp r5, t1, s5
texld r10, t0, s4
texld r4, t2, s6
mov r1.x, r1.w
mad_pp r8.xy, r1, c3.x, c3.y
mov r0.y, t0.w
mov r0.x, t0.z
log_pp r2.w, r5.w
texld r6, r0, s1
texld r0, t2, s7
mul_pp r0.xyz, r0.w, r0
mul_pp r2.xyz, r0, c4.w
mul_pp r0.xy, r8, r8
add_pp_sat r0.x, r0, r0.y
mul r1.xyz, r2.y, c5
mad r1.xyz, r2.x, c6, r1
mad r9.xyz, r2.z, c4, r1
add_pp r0.x, -r0, c3.z
rsq_pp r1.x, r0.x
rcp_pp r8.z, r1.x
dp3 r0.x, r9, r9
mov r1.z, c3
mov r1.xy, c3.w
add_pp r1.xyz, -r8, r1
mad_pp r8.xyz, r6, r1, r8
rsq r1.x, r0.x
mul r1.xyz, r1.x, r9
dp3_pp r0.x, t3, t3
rsq_pp r0.x, r0.x
mad_pp r1.xyz, r0.x, t3, r1
dp3_pp r0.x, r1, r1
rsq_pp r0.x, r0.x
mul_pp r1.xyz, r0.x, r1
dp3_pp r1.x, r8, r1
dp3_pp_sat r9.z, r8, c4
dp3_pp_sat r9.y, r8, c5
dp3_pp_sat r9.x, r8, c6
dp3_pp r0.x, r9, r2
mov_pp r2.x, c2
max_pp r1.x, r1, c3.w
mul_pp r2.x, c5.w, r2
pow r8.x, r1.x, r2.x
mul_pp r1.xyz, r4.w, r4
mul_pp r0.xyz, r1, r0.x
mul_pp r1.xyz, r0, c4.w
add_pp r0.x, -r6, c3.z
mul r0.x, r10, r0
log_pp r2.x, r5.x
log_pp r2.y, r5.y
log_pp r2.z, r5.z
mov r1.w, r8.x
add_pp r1, -r2, r1
mul r0.x, r0, c0
mul_pp r0.x, r1.w, r0
mul_pp r2.xyz, r1, c0
mul_pp r2.xyz, r2, r0.x
add_pp r3.xyz, r3, r6
mad_pp r1.xyz, r3, r1, r2
mul r4.xyz, r7, c1.x
mad_pp r0.w, r0.x, c0, r3
mad r2.xyz, r6.x, -r4, r4
add_pp r0.xyz, r1, r2
mov_pp oC0, r0
"
}
SubProgram "d3d11 " {
// Stats: 49 math, 8 textures
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 3
SetTexture 2 [_BumpMap] 2D 1
SetTexture 3 [_Emission] 2D 2
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
SetTexture 6 [unity_Lightmap] 2D 6
SetTexture 7 [unity_LightmapInd] 2D 7
ConstBuffer "$Globals" 176
Vector 32 [_SpecColor]
Float 48 [_LightAmount]
Float 64 [_Shininess]
BindCB  "$Globals" 0
"ps_4_0
eefiecedeibcdagdkjdmicfgcbijedelebnjbphhabaaaaaagaajaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apalaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefcfiaiaaaaeaaaaaaabgacaaaafjaaaaaeegiocaaaaaaaaaaaafaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaa
acaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafkaaaaad
aagabaaaafaaaaaafkaaaaadaagabaaaagaaaaaafkaaaaadaagabaaaahaaaaaa
fibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaa
fibiaaaeaahabaaaacaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaa
fibiaaaeaahabaaaaeaaaaaaffffaaaafibiaaaeaahabaaaafaaaaaaffffaaaa
fibiaaaeaahabaaaagaaaaaaffffaaaafibiaaaeaahabaaaahaaaaaaffffaaaa
gcbaaaadpcbabaaaabaaaaaagcbaaaadlcbabaaaacaaaaaagcbaaaaddcbabaaa
adaaaaaagcbaaaadhcbabaaaaeaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaac
agaaaaaaaoaaaaahdcaabaaaaaaaaaaaegbabaaaacaaaaaapgbpbaaaacaaaaaa
efaaaaajpcaabaaaaaaaaaaaegaabaaaaaaaaaaaeghobaaaafaaaaaaaagabaaa
afaaaaaacpaaaaafpcaabaaaaaaaaaaaegaobaaaaaaaaaaabaaaaaahbcaabaaa
abaaaaaaegbcbaaaaeaaaaaaegbcbaaaaeaaaaaaeeaaaaafbcaabaaaabaaaaaa
akaabaaaabaaaaaadiaaaaahhcaabaaaabaaaaaaagaabaaaabaaaaaaegbcbaaa
aeaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaadaaaaaaeghobaaaahaaaaaa
aagabaaaahaaaaaadiaaaaahicaabaaaabaaaaaadkaabaaaacaaaaaaabeaaaaa
aaaaaaebdiaaaaahhcaabaaaacaaaaaaegacbaaaacaaaaaapgapbaaaabaaaaaa
diaaaaakhcaabaaaadaaaaaafgafbaaaacaaaaaaaceaaaaaomafnblopdaedfdp
dkmnbddpaaaaaaaadcaaaaamhcaabaaaadaaaaaaagaabaaaacaaaaaaaceaaaaa
olaffbdpaaaaaaaadkmnbddpaaaaaaaaegacbaaaadaaaaaadcaaaaamhcaabaaa
adaaaaaakgakbaaaacaaaaaaaceaaaaaolafnblopdaedflpdkmnbddpaaaaaaaa
egacbaaaadaaaaaabaaaaaahicaabaaaabaaaaaaegacbaaaadaaaaaaegacbaaa
adaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaaabaaaaaadcaaaaajhcaabaaa
abaaaaaaegacbaaaadaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaabaaaaaah
icaabaaaabaaaaaaegacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaa
abaaaaaadkaabaaaabaaaaaadiaaaaahhcaabaaaabaaaaaapgapbaaaabaaaaaa
egacbaaaabaaaaaaefaaaaajpcaabaaaadaaaaaaegbabaaaabaaaaaaeghobaaa
acaaaaaaaagabaaaabaaaaaadcaaaaapdcaabaaaadaaaaaahgapbaaaadaaaaaa
aceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialp
aaaaaaaaaaaaaaaaapaaaaahicaabaaaabaaaaaaegaabaaaadaaaaaaegaabaaa
adaaaaaaddaaaaahicaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaiadp
aaaaaaaiicaabaaaabaaaaaadkaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadp
elaaaaafecaabaaaadaaaaaadkaabaaaabaaaaaaaaaaaaalhcaabaaaaeaaaaaa
egacbaiaebaaaaaaadaaaaaaaceaaaaaaaaaaaaaaaaaaaaaaaaaiadpaaaaaaaa
efaaaaajpcaabaaaafaaaaaaogbkbaaaabaaaaaaeghobaaaabaaaaaaaagabaaa
adaaaaaadcaaaaajhcaabaaaadaaaaaaegacbaaaafaaaaaaegacbaaaaeaaaaaa
egacbaaaadaaaaaabaaaaaahbcaabaaaabaaaaaaegacbaaaadaaaaaaegacbaaa
abaaaaaadeaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaaaa
cpaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaadiaaaaaiccaabaaaabaaaaaa
akiacaaaaaaaaaaaaeaaaaaaabeaaaaaaaaaaaeddiaaaaahbcaabaaaabaaaaaa
akaabaaaabaaaaaabkaabaaaabaaaaaabjaaaaaficaabaaaabaaaaaaakaabaaa
abaaaaaaapcaaaakbcaabaaaaeaaaaaaaceaaaaaolaffbdpdkmnbddpaaaaaaaa
aaaaaaaaigaabaaaadaaaaaabacaaaakccaabaaaaeaaaaaaaceaaaaaomafnblo
pdaedfdpdkmnbddpaaaaaaaaegacbaaaadaaaaaabacaaaakecaabaaaaeaaaaaa
aceaaaaaolafnblopdaedflpdkmnbddpaaaaaaaaegacbaaaadaaaaaabaaaaaah
bcaabaaaacaaaaaaegacbaaaaeaaaaaaegacbaaaacaaaaaaefaaaaajpcaabaaa
adaaaaaaegbabaaaadaaaaaaeghobaaaagaaaaaaaagabaaaagaaaaaadiaaaaah
ccaabaaaacaaaaaadkaabaaaadaaaaaaabeaaaaaaaaaaaebdiaaaaahocaabaaa
acaaaaaaagajbaaaadaaaaaafgafbaaaacaaaaaadiaaaaahhcaabaaaabaaaaaa
agaabaaaacaaaaaajgahbaaaacaaaaaaaaaaaaaipcaabaaaaaaaaaaaegaobaia
ebaaaaaaaaaaaaaaegaobaaaabaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaa
abaaaaaaeghobaaaaeaaaaaaaagabaaaaeaaaaaaaaaaaaaiccaabaaaabaaaaaa
akaabaiaebaaaaaaafaaaaaaabeaaaaaaaaaiadpdiaaaaahbcaabaaaabaaaaaa
bkaabaaaabaaaaaaakaabaaaabaaaaaadiaaaaaibcaabaaaabaaaaaaakaabaaa
abaaaaaaakiacaaaaaaaaaaaacaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaa
aaaaaaaaakaabaaaabaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaaaaaaaaaa
egiccaaaaaaaaaaaacaaaaaadiaaaaahhcaabaaaabaaaaaapgapbaaaaaaaaaaa
egacbaaaabaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaa
aaaaaaaaaagabaaaaaaaaaaaaaaaaaahhcaabaaaacaaaaaaegacbaaaafaaaaaa
egacbaaaacaaaaaadcaaaaakiccabaaaaaaaaaaadkaabaaaaaaaaaaadkiacaaa
aaaaaaaaacaaaaaadkaabaaaacaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaa
acaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaaefaaaaajpcaabaaaabaaaaaa
egbabaaaabaaaaaaeghobaaaadaaaaaaaagabaaaacaaaaaadiaaaaaihcaabaaa
abaaaaaaegacbaaaabaaaaaaagiacaaaaaaaaaaaadaaaaaadcaaaaakhcaabaaa
abaaaaaaegacbaaaafaaaaaaegacbaiaebaaaaaaabaaaaaaegacbaaaabaaaaaa
aaaaaaahhccabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadoaaaaab
"
}
SubProgram "d3d11_9x " {
// Stats: 49 math, 8 textures
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 3
SetTexture 2 [_BumpMap] 2D 1
SetTexture 3 [_Emission] 2D 2
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
SetTexture 6 [unity_Lightmap] 2D 6
SetTexture 7 [unity_LightmapInd] 2D 7
ConstBuffer "$Globals" 176
Vector 32 [_SpecColor]
Float 48 [_LightAmount]
Float 64 [_Shininess]
BindCB  "$Globals" 0
"ps_4_0_level_9_1
eefiecedbmchofcionflonnbiloijdeljbjiaibjabaaaaaagmaoaaaaaeaaaaaa
daaaaaaadiafaaaajianaaaadiaoaaaaebgpgodjaaafaaaaaaafaaaaaaacpppp
laaeaaaafaaaaaaaabaaeeaaaaaafaaaaaaafaaaaiaaceaaaaaafaaaaaaaaaaa
acababaaadacacaaabadadaaaeaeaeaaafafafaaagagagaaahahahaaaaaaacaa
adaaaaaaaaaaaaaaaaacppppfbaaaaafadaaapkaaaaaaaeaaaaaialpaaaaaaaa
aaaaiadpfbaaaaafaeaaapkaomafnblopdaedfdpdkmnbddpaaaaaaaafbaaaaaf
afaaapkaolafnblopdaedflpdkmnbddpaaaaaaaafbaaaaafagaaapkaolaffbdp
aaaaaaaadkmnbddpaaaaaaedfbaaaaafahaaapkaaaaaaaaaaaaaaaaaaaaaiadp
aaaaaaebbpaaaaacaaaaaaiaaaaaaplabpaaaaacaaaaaaiaabaaaplabpaaaaac
aaaaaaiaacaaadlabpaaaaacaaaaaaiaadaachlabpaaaaacaaaaaajaaaaiapka
bpaaaaacaaaaaajaabaiapkabpaaaaacaaaaaajaacaiapkabpaaaaacaaaaaaja
adaiapkabpaaaaacaaaaaajaaeaiapkabpaaaaacaaaaaajaafaiapkabpaaaaac
aaaaaajaagaiapkabpaaaaacaaaaaajaahaiapkaabaaaaacaaaaabiaaaaakkla
abaaaaacaaaaaciaaaaapplaagaaaaacaaaaaeiaabaapplaafaaaaadabaaadia
aaaakkiaabaaoelaecaaaaadacaacpiaacaaoelaahaioekaecaaaaadadaacpia
aaaaoelaabaioekaecaaaaadaaaacpiaaaaaoeiaadaioekaecaaaaadaeaacpia
acaaoelaagaioekaecaaaaadabaacpiaabaaoeiaafaioekaecaaaaadafaaapia
aaaaoelaaeaioekaecaaaaadagaacpiaaaaaoelaaaaioekaecaaaaadahaaapia
aaaaoelaacaioekaafaaaaadaaaaciiaacaappiaahaappkaafaaaaadacaachia
acaaoeiaaaaappiaafaaaaadafaaaoiaacaaffiaaeaablkaaeaaaaaeafaaaoia
acaaaaiaagaablkaafaaoeiaaeaaaaaeaiaaahiaacaakkiaafaaoekaafaablia
aiaaaaadaaaaaiiaaiaaoeiaaiaaoeiaahaaaaacaaaaaiiaaaaappiaceaaaaac
ajaachiaadaaoelaaeaaaaaeaiaachiaaiaaoeiaaaaappiaajaaoeiaceaaaaac
ajaachiaaiaaoeiaaeaaaaaeaiaacbiaadaappiaadaaaakaadaaffkaaeaaaaae
aiaacciaadaaffiaadaaaakaadaaffkafkaaaaaeaaaadiiaaiaaoeiaaiaaoeia
adaakkkaacaaaaadaaaaciiaaaaappibadaappkaahaaaaacaaaaciiaaaaappia
agaaaaacaiaaceiaaaaappiabcaaaaaeadaachiaaaaaoeiaahaaoekaaiaaoeia
aiaaaaadaaaaciiaadaaoeiaajaaoeiaalaaaaadacaaaiiaaaaappiaadaakkka
abaaaaacaaaaaiiaagaappkaafaaaaadaaaaaiiaaaaappiaacaaaakacaaaaaad
aiaaciiaacaappiaaaaappiaaiaaaaadajaadbiaagaaoekaadaaoeiaaiaaaaad
ajaadciaaeaaoekaadaaoeiaaiaaaaadajaadeiaafaaoekaadaaoeiaaiaaaaad
aaaaciiaajaaoeiaacaaoeiaafaaaaadaeaaciiaaeaappiaahaappkaafaaaaad
acaachiaaeaaoeiaaeaappiaafaaaaadaiaachiaaaaappiaacaaoeiaapaaaaac
acaacbiaabaaaaiaapaaaaacacaacciaabaaffiaapaaaaacacaaceiaabaakkia
apaaaaacacaaciiaabaappiaacaaaaadabaacpiaaiaaoeiaacaaoeibacaaaaad
aaaaaiiaaaaaaaibadaappkaafaaaaadaaaaaiiaaaaappiaafaaaaiaafaaaaad
aaaaciiaaaaappiaaaaaaakaafaaaaadaaaaciiaaaaappiaabaappiaafaaaaad
acaachiaabaaoeiaaaaaoekaafaaaaadacaachiaaaaappiaacaaoeiaacaaaaad
adaachiaaaaaoeiaagaaoeiaaeaaaaaeaeaaciiaaaaappiaaaaappkaagaappia
aeaaaaaeabaachiaadaaoeiaabaaoeiaacaaoeiaafaaaaadacaaahiaahaaoeia
abaaaakaaeaaaaaeaaaachiaaaaaoeiaacaaoeibacaaoeiaacaaaaadaeaachia
aaaaoeiaabaaoeiaabaaaaacaaaicpiaaeaaoeiappppaaaafdeieefcfiaiaaaa
eaaaaaaabgacaaaafjaaaaaeegiocaaaaaaaaaaaafaaaaaafkaaaaadaagabaaa
aaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaad
aagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafkaaaaadaagabaaaafaaaaaa
fkaaaaadaagabaaaagaaaaaafkaaaaadaagabaaaahaaaaaafibiaaaeaahabaaa
aaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaa
acaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaa
aeaaaaaaffffaaaafibiaaaeaahabaaaafaaaaaaffffaaaafibiaaaeaahabaaa
agaaaaaaffffaaaafibiaaaeaahabaaaahaaaaaaffffaaaagcbaaaadpcbabaaa
abaaaaaagcbaaaadlcbabaaaacaaaaaagcbaaaaddcbabaaaadaaaaaagcbaaaad
hcbabaaaaeaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacagaaaaaaaoaaaaah
dcaabaaaaaaaaaaaegbabaaaacaaaaaapgbpbaaaacaaaaaaefaaaaajpcaabaaa
aaaaaaaaegaabaaaaaaaaaaaeghobaaaafaaaaaaaagabaaaafaaaaaacpaaaaaf
pcaabaaaaaaaaaaaegaobaaaaaaaaaaabaaaaaahbcaabaaaabaaaaaaegbcbaaa
aeaaaaaaegbcbaaaaeaaaaaaeeaaaaafbcaabaaaabaaaaaaakaabaaaabaaaaaa
diaaaaahhcaabaaaabaaaaaaagaabaaaabaaaaaaegbcbaaaaeaaaaaaefaaaaaj
pcaabaaaacaaaaaaegbabaaaadaaaaaaeghobaaaahaaaaaaaagabaaaahaaaaaa
diaaaaahicaabaaaabaaaaaadkaabaaaacaaaaaaabeaaaaaaaaaaaebdiaaaaah
hcaabaaaacaaaaaaegacbaaaacaaaaaapgapbaaaabaaaaaadiaaaaakhcaabaaa
adaaaaaafgafbaaaacaaaaaaaceaaaaaomafnblopdaedfdpdkmnbddpaaaaaaaa
dcaaaaamhcaabaaaadaaaaaaagaabaaaacaaaaaaaceaaaaaolaffbdpaaaaaaaa
dkmnbddpaaaaaaaaegacbaaaadaaaaaadcaaaaamhcaabaaaadaaaaaakgakbaaa
acaaaaaaaceaaaaaolafnblopdaedflpdkmnbddpaaaaaaaaegacbaaaadaaaaaa
baaaaaahicaabaaaabaaaaaaegacbaaaadaaaaaaegacbaaaadaaaaaaeeaaaaaf
icaabaaaabaaaaaadkaabaaaabaaaaaadcaaaaajhcaabaaaabaaaaaaegacbaaa
adaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaabaaaaaahicaabaaaabaaaaaa
egacbaaaabaaaaaaegacbaaaabaaaaaaeeaaaaaficaabaaaabaaaaaadkaabaaa
abaaaaaadiaaaaahhcaabaaaabaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaa
efaaaaajpcaabaaaadaaaaaaegbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaa
abaaaaaadcaaaaapdcaabaaaadaaaaaahgapbaaaadaaaaaaaceaaaaaaaaaaaea
aaaaaaeaaaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaa
apaaaaahicaabaaaabaaaaaaegaabaaaadaaaaaaegaabaaaadaaaaaaddaaaaah
icaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaiadpaaaaaaaiicaabaaa
abaaaaaadkaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaa
adaaaaaadkaabaaaabaaaaaaaaaaaaalhcaabaaaaeaaaaaaegacbaiaebaaaaaa
adaaaaaaaceaaaaaaaaaaaaaaaaaaaaaaaaaiadpaaaaaaaaefaaaaajpcaabaaa
afaaaaaaogbkbaaaabaaaaaaeghobaaaabaaaaaaaagabaaaadaaaaaadcaaaaaj
hcaabaaaadaaaaaaegacbaaaafaaaaaaegacbaaaaeaaaaaaegacbaaaadaaaaaa
baaaaaahbcaabaaaabaaaaaaegacbaaaadaaaaaaegacbaaaabaaaaaadeaaaaah
bcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaaaaacpaaaaafbcaabaaa
abaaaaaaakaabaaaabaaaaaadiaaaaaiccaabaaaabaaaaaaakiacaaaaaaaaaaa
aeaaaaaaabeaaaaaaaaaaaeddiaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaa
bkaabaaaabaaaaaabjaaaaaficaabaaaabaaaaaaakaabaaaabaaaaaaapcaaaak
bcaabaaaaeaaaaaaaceaaaaaolaffbdpdkmnbddpaaaaaaaaaaaaaaaaigaabaaa
adaaaaaabacaaaakccaabaaaaeaaaaaaaceaaaaaomafnblopdaedfdpdkmnbddp
aaaaaaaaegacbaaaadaaaaaabacaaaakecaabaaaaeaaaaaaaceaaaaaolafnblo
pdaedflpdkmnbddpaaaaaaaaegacbaaaadaaaaaabaaaaaahbcaabaaaacaaaaaa
egacbaaaaeaaaaaaegacbaaaacaaaaaaefaaaaajpcaabaaaadaaaaaaegbabaaa
adaaaaaaeghobaaaagaaaaaaaagabaaaagaaaaaadiaaaaahccaabaaaacaaaaaa
dkaabaaaadaaaaaaabeaaaaaaaaaaaebdiaaaaahocaabaaaacaaaaaaagajbaaa
adaaaaaafgafbaaaacaaaaaadiaaaaahhcaabaaaabaaaaaaagaabaaaacaaaaaa
jgahbaaaacaaaaaaaaaaaaaipcaabaaaaaaaaaaaegaobaiaebaaaaaaaaaaaaaa
egaobaaaabaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaaeghobaaa
aeaaaaaaaagabaaaaeaaaaaaaaaaaaaiccaabaaaabaaaaaaakaabaiaebaaaaaa
afaaaaaaabeaaaaaaaaaiadpdiaaaaahbcaabaaaabaaaaaabkaabaaaabaaaaaa
akaabaaaabaaaaaadiaaaaaibcaabaaaabaaaaaaakaabaaaabaaaaaaakiacaaa
aaaaaaaaacaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaakaabaaa
abaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaaaaaaaaaaegiccaaaaaaaaaaa
acaaaaaadiaaaaahhcaabaaaabaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaa
efaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaa
aaaaaaaaaaaaaaahhcaabaaaacaaaaaaegacbaaaafaaaaaaegacbaaaacaaaaaa
dcaaaaakiccabaaaaaaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaacaaaaaa
dkaabaaaacaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaaacaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaa
eghobaaaadaaaaaaaagabaaaacaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaa
abaaaaaaagiacaaaaaaaaaaaadaaaaaadcaaaaakhcaabaaaabaaaaaaegacbaaa
afaaaaaaegacbaiaebaaaaaaabaaaaaaegacbaaaabaaaaaaaaaaaaahhccabaaa
aaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadoaaaaabejfdeheojiaaaaaa
afaaaaaaaiaaaaaaiaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaa
imaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaa
aaaaaaaaadaaaaaaacaaaaaaapalaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaa
adaaaaaaadadaaaaimaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaa
fdfgfpfaepfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaa
abaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaa
fdfgfpfegbhcghgfheaaklkl"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_OFF" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 18 math, 5 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Vector 0 [_SpecColor]
Float 1 [_LightAmount]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
"!!ARBfp1.0
PARAM c[3] = { program.local[0..1],
		{ 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEX R2.xyz, fragment.texcoord[0].zwzw, texture[1], 2D;
TXP R1, fragment.texcoord[1], texture[5], 2D;
TEX R0, fragment.texcoord[0], texture[0], 2D;
TEX R3.xyz, fragment.texcoord[0], texture[3], 2D;
TEX R4.x, fragment.texcoord[0], texture[4], 2D;
MUL R3.xyz, R3, c[1].x;
ADD R0.xyz, R0, R2;
ADD R2.w, -R2.x, c[2].x;
MUL R2.y, R4.x, R2.w;
MUL R3.w, R2.y, c[0].x;
ADD R1.xyz, R1, fragment.texcoord[2];
MUL R1.w, R1, R3;
MUL R2.yzw, R1.xxyz, c[0].xxyz;
MUL R2.yzw, R2, R1.w;
MAD R3.xyz, R2.x, -R3, R3;
MAD R0.xyz, R0, R1, R2.yzww;
ADD result.color.xyz, R0, R3;
MAD result.color.w, R1, c[0], R0;
END
# 18 instructions, 5 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 16 math, 5 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Vector 0 [_SpecColor]
Float 1 [_LightAmount]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
"ps_2_0
dcl_2d s0
dcl_2d s1
dcl_2d s3
dcl_2d s4
dcl_2d s5
def c2, 1.00000000, 0, 0, 0
dcl t0
dcl t1
dcl t2.xyz
texld r5, t0, s4
texld r4, t0, s3
texldp r1, t1, s5
texld r2, t0, s0
mov r0.y, t0.w
mov r0.x, t0.z
add_pp r1.xyz, r1, t2
mul r4.xyz, r4, c1.x
texld r3, r0, s1
add_pp r0.x, -r3, c2
mul r0.x, r5, r0
mul r0.x, r0, c0
mul_pp r0.x, r1.w, r0
mul_pp r5.xyz, r1, c0
add_pp r2.xyz, r2, r3
mul_pp r5.xyz, r5, r0.x
mad_pp r1.xyz, r2, r1, r5
mad_pp r0.w, r0.x, c0, r2
mad r2.xyz, r3.x, -r4, r4
add_pp r0.xyz, r1, r2
mov_pp oC0, r0
"
}
SubProgram "d3d11 " {
// Stats: 14 math, 5 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 2
SetTexture 2 [_Emission] 2D 1
SetTexture 3 [_Mask] 2D 3
SetTexture 4 [_LightBuffer] 2D 4
ConstBuffer "$Globals" 144
Vector 32 [_SpecColor]
Float 48 [_LightAmount]
BindCB  "$Globals" 0
"ps_4_0
eefieceddnpfehcedgcmkcfiahdekmclgnjoldihabaaaaaadmaeaaaaadaaaaaa
cmaaaaaaleaaaaaaoiaaaaaaejfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apalaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaahahaaaafdfgfpfa
epfdejfeejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklklfdeieefcemadaaaaeaaaaaaandaaaaaafjaaaaaeegiocaaa
aaaaaaaaaeaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaa
fkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaa
aeaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaa
ffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaa
ffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaa
gcbaaaadlcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagfaaaaadpccabaaa
aaaaaaaagiaaaaacaeaaaaaaefaaaaajpcaabaaaaaaaaaaaegbabaaaabaaaaaa
eghobaaaadaaaaaaaagabaaaadaaaaaaefaaaaajpcaabaaaabaaaaaaogbkbaaa
abaaaaaaeghobaaaabaaaaaaaagabaaaacaaaaaaaaaaaaaiccaabaaaaaaaaaaa
akaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadpdiaaaaahbcaabaaaaaaaaaaa
bkaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaaibcaabaaaaaaaaaaaakaabaaa
aaaaaaaaakiacaaaaaaaaaaaacaaaaaaaoaaaaahgcaabaaaaaaaaaaaagbbbaaa
acaaaaaapgbpbaaaacaaaaaaefaaaaajpcaabaaaacaaaaaajgafbaaaaaaaaaaa
eghobaaaaeaaaaaaaagabaaaaeaaaaaadiaaaaahbcaabaaaaaaaaaaaakaabaaa
aaaaaaaadkaabaaaacaaaaaaaaaaaaahocaabaaaaaaaaaaaagajbaaaacaaaaaa
agbjbaaaadaaaaaadiaaaaaihcaabaaaacaaaaaajgahbaaaaaaaaaaaegiccaaa
aaaaaaaaacaaaaaadiaaaaahhcaabaaaacaaaaaaagaabaaaaaaaaaaaegacbaaa
acaaaaaaefaaaaajpcaabaaaadaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaa
aagabaaaaaaaaaaaaaaaaaahhcaabaaaadaaaaaaegacbaaaabaaaaaaegacbaaa
adaaaaaadcaaaaakiccabaaaaaaaaaaaakaabaaaaaaaaaaadkiacaaaaaaaaaaa
acaaaaaadkaabaaaadaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaaadaaaaaa
jgahbaaaaaaaaaaaegacbaaaacaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaa
abaaaaaaeghobaaaacaaaaaaaagabaaaabaaaaaadiaaaaaihcaabaaaacaaaaaa
egacbaaaacaaaaaaagiacaaaaaaaaaaaadaaaaaadcaaaaakhcaabaaaabaaaaaa
egacbaaaabaaaaaaegacbaiaebaaaaaaacaaaaaaegacbaaaacaaaaaaaaaaaaah
hccabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadoaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 14 math, 5 textures
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 2
SetTexture 2 [_Emission] 2D 1
SetTexture 3 [_Mask] 2D 3
SetTexture 4 [_LightBuffer] 2D 4
ConstBuffer "$Globals" 144
Vector 32 [_SpecColor]
Float 48 [_LightAmount]
BindCB  "$Globals" 0
"ps_4_0_level_9_1
eefiecedainnehiehmeheedcdhdjpddiejhcehneabaaaaaahiagaaaaaeaaaaaa
daaaaaaagiacaaaalmafaaaaeeagaaaaebgpgodjdaacaaaadaacaaaaaaacpppp
omabaaaaeeaaaaaaabaadiaaaaaaeeaaaaaaeeaaafaaceaaaaaaeeaaaaaaaaaa
acababaaabacacaaadadadaaaeaeaeaaaaaaacaaacaaaaaaaaaaaaaaaaacpppp
fbaaaaafacaaapkaaaaaiadpaaaaaaaaaaaaaaaaaaaaaaaabpaaaaacaaaaaaia
aaaaaplabpaaaaacaaaaaaiaabaaaplabpaaaaacaaaaaaiaacaaahlabpaaaaac
aaaaaajaaaaiapkabpaaaaacaaaaaajaabaiapkabpaaaaacaaaaaajaacaiapka
bpaaaaacaaaaaajaadaiapkabpaaaaacaaaaaajaaeaiapkaabaaaaacaaaaabia
aaaakklaabaaaaacaaaaaciaaaaapplaagaaaaacaaaaaeiaabaapplaafaaaaad
abaaadiaaaaakkiaabaaoelaecaaaaadacaaapiaaaaaoelaadaioekaecaaaaad
aaaacpiaaaaaoeiaacaioekaecaaaaadabaacpiaabaaoeiaaeaioekaecaaaaad
adaacpiaaaaaoelaaaaioekaecaaaaadaeaaapiaaaaaoelaabaioekaacaaaaad
aaaaaiiaaaaaaaibacaaaakaafaaaaadaaaaaiiaaaaappiaacaaaaiaafaaaaad
aaaaciiaaaaappiaaaaaaakaafaaaaadaaaaciiaaaaappiaabaappiaacaaaaad
abaachiaabaaoeiaacaaoelaafaaaaadacaachiaabaaoeiaaaaaoekaafaaaaad
acaachiaaaaappiaacaaoeiaacaaaaadadaachiaaaaaoeiaadaaoeiaaeaaaaae
afaaciiaaaaappiaaaaappkaadaappiaaeaaaaaeabaachiaadaaoeiaabaaoeia
acaaoeiaafaaaaadacaaahiaaeaaoeiaabaaaakaaeaaaaaeaaaachiaaaaaoeia
acaaoeibacaaoeiaacaaaaadafaachiaaaaaoeiaabaaoeiaabaaaaacaaaicpia
afaaoeiappppaaaafdeieefcemadaaaaeaaaaaaandaaaaaafjaaaaaeegiocaaa
aaaaaaaaaeaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaa
fkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaa
aeaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaa
ffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaa
ffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaa
gcbaaaadlcbabaaaacaaaaaagcbaaaadhcbabaaaadaaaaaagfaaaaadpccabaaa
aaaaaaaagiaaaaacaeaaaaaaefaaaaajpcaabaaaaaaaaaaaegbabaaaabaaaaaa
eghobaaaadaaaaaaaagabaaaadaaaaaaefaaaaajpcaabaaaabaaaaaaogbkbaaa
abaaaaaaeghobaaaabaaaaaaaagabaaaacaaaaaaaaaaaaaiccaabaaaaaaaaaaa
akaabaiaebaaaaaaabaaaaaaabeaaaaaaaaaiadpdiaaaaahbcaabaaaaaaaaaaa
bkaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaaibcaabaaaaaaaaaaaakaabaaa
aaaaaaaaakiacaaaaaaaaaaaacaaaaaaaoaaaaahgcaabaaaaaaaaaaaagbbbaaa
acaaaaaapgbpbaaaacaaaaaaefaaaaajpcaabaaaacaaaaaajgafbaaaaaaaaaaa
eghobaaaaeaaaaaaaagabaaaaeaaaaaadiaaaaahbcaabaaaaaaaaaaaakaabaaa
aaaaaaaadkaabaaaacaaaaaaaaaaaaahocaabaaaaaaaaaaaagajbaaaacaaaaaa
agbjbaaaadaaaaaadiaaaaaihcaabaaaacaaaaaajgahbaaaaaaaaaaaegiccaaa
aaaaaaaaacaaaaaadiaaaaahhcaabaaaacaaaaaaagaabaaaaaaaaaaaegacbaaa
acaaaaaaefaaaaajpcaabaaaadaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaa
aagabaaaaaaaaaaaaaaaaaahhcaabaaaadaaaaaaegacbaaaabaaaaaaegacbaaa
adaaaaaadcaaaaakiccabaaaaaaaaaaaakaabaaaaaaaaaaadkiacaaaaaaaaaaa
acaaaaaadkaabaaaadaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaaadaaaaaa
jgahbaaaaaaaaaaaegacbaaaacaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaa
abaaaaaaeghobaaaacaaaaaaaagabaaaabaaaaaadiaaaaaihcaabaaaacaaaaaa
egacbaaaacaaaaaaagiacaaaaaaaaaaaadaaaaaadcaaaaakhcaabaaaabaaaaaa
egacbaaaabaaaaaaegacbaiaebaaaaaaacaaaaaaegacbaaaacaaaaaaaaaaaaah
hccabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadoaaaaabejfdeheo
iaaaaaaaaeaaaaaaaiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaa
apaaaaaaheaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaapapaaaaheaaaaaa
abaaaaaaaaaaaaaaadaaaaaaacaaaaaaapalaaaaheaaaaaaacaaaaaaaaaaaaaa
adaaaaaaadaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaafeeffiedepepfcee
aaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_OFF" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 29 math, 7 textures
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Vector 0 [_SpecColor]
Float 1 [_LightAmount]
Vector 2 [unity_LightmapFade]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
SetTexture 6 [unity_Lightmap] 2D 6
SetTexture 7 [unity_LightmapInd] 2D 7
"!!ARBfp1.0
PARAM c[4] = { program.local[0..2],
		{ 8, 1 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
TEX R4.xyz, fragment.texcoord[0].zwzw, texture[1], 2D;
TEX R0, fragment.texcoord[0], texture[0], 2D;
TEX R3, fragment.texcoord[2], texture[6], 2D;
TEX R2, fragment.texcoord[2], texture[7], 2D;
TXP R1, fragment.texcoord[1], texture[5], 2D;
TEX R5.xyz, fragment.texcoord[0], texture[3], 2D;
TEX R6.x, fragment.texcoord[0], texture[4], 2D;
MUL R2.xyz, R2.w, R2;
DP4 R2.w, fragment.texcoord[3], fragment.texcoord[3];
MUL R3.xyz, R3.w, R3;
MUL R2.xyz, R2, c[3].x;
RSQ R2.w, R2.w;
RCP R3.w, R2.w;
ADD R4.w, -R4.x, c[3].y;
MUL R2.w, R6.x, R4;
MUL R2.w, R2, c[0].x;
MUL R1.w, R1, R2;
MAD R3.xyz, R3, c[3].x, -R2;
MAD_SAT R3.w, R3, c[2].z, c[2];
MAD R2.xyz, R3.w, R3, R2;
ADD R1.xyz, R1, R2;
MUL R2.xyz, R1, c[0];
MUL R3.xyz, R5, c[1].x;
MUL R2.xyz, R2, R1.w;
ADD R0.xyz, R0, R4;
MAD R3.xyz, R4.x, -R3, R3;
MAD R0.xyz, R0, R1, R2;
ADD result.color.xyz, R0, R3;
MAD result.color.w, R1, c[0], R0;
END
# 29 instructions, 7 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 25 math, 7 textures
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
Vector 0 [_SpecColor]
Float 1 [_LightAmount]
Vector 2 [unity_LightmapFade]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
SetTexture 6 [unity_Lightmap] 2D 6
SetTexture 7 [unity_LightmapInd] 2D 7
"ps_2_0
dcl_2d s0
dcl_2d s1
dcl_2d s3
dcl_2d s4
dcl_2d s5
dcl_2d s6
dcl_2d s7
def c3, 1.00000000, 8.00000000, 0, 0
dcl t0
dcl t1
dcl t2.xy
dcl t3
texld r5, t0, s3
texld r2, t0, s0
texldp r3, t1, s5
texld r7, t0, s4
texld r1, t2, s6
mov r0.y, t0.w
mov r0.x, t0.z
mul r5.xyz, r5, c1.x
texld r4, r0, s1
texld r0, t2, s7
mul_pp r0.xyz, r0.w, r0
mul_pp r6.xyz, r0, c3.y
mul_pp r0.xyz, r1.w, r1
mad_pp r8.xyz, r0, c3.y, -r6
dp4 r0.x, t3, t3
rsq r1.x, r0.x
add_pp r0.x, -r4, c3
rcp r1.x, r1.x
mul r0.x, r7, r0
mad_sat r1.x, r1, c2.z, c2.w
mad_pp r1.xyz, r1.x, r8, r6
add_pp r1.xyz, r3, r1
mul r0.x, r0, c0
mul_pp r0.x, r3.w, r0
mul_pp r3.xyz, r1, c0
mul_pp r3.xyz, r3, r0.x
add_pp r2.xyz, r2, r4
mad_pp r1.xyz, r2, r1, r3
mad_pp r0.w, r0.x, c0, r2
mad r2.xyz, r4.x, -r5, r5
add_pp r0.xyz, r1, r2
mov_pp oC0, r0
"
}
SubProgram "d3d11 " {
// Stats: 22 math, 7 textures
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 2
SetTexture 2 [_Emission] 2D 1
SetTexture 3 [_Mask] 2D 3
SetTexture 4 [_LightBuffer] 2D 4
SetTexture 5 [unity_Lightmap] 2D 5
SetTexture 6 [unity_LightmapInd] 2D 6
ConstBuffer "$Globals" 176
Vector 32 [_SpecColor]
Float 48 [_LightAmount]
Vector 144 [unity_LightmapFade]
BindCB  "$Globals" 0
"ps_4_0
eefiecedpndffckbgapbgmdholplnndpmcaoknkbabaaaaaanmafaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apalaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapapaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefcneaeaaaaeaaaaaaadfabaaaafjaaaaaeegiocaaaaaaaaaaaakaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaa
acaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafkaaaaad
aagabaaaafaaaaaafkaaaaadaagabaaaagaaaaaafibiaaaeaahabaaaaaaaaaaa
ffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaa
ffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaa
ffffaaaafibiaaaeaahabaaaafaaaaaaffffaaaafibiaaaeaahabaaaagaaaaaa
ffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaadlcbabaaaacaaaaaagcbaaaad
dcbabaaaadaaaaaagcbaaaadpcbabaaaaeaaaaaagfaaaaadpccabaaaaaaaaaaa
giaaaaacaeaaaaaabbaaaaahbcaabaaaaaaaaaaaegbobaaaaeaaaaaaegbobaaa
aeaaaaaaelaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaadccaaaalbcaabaaa
aaaaaaaaakaabaaaaaaaaaaackiacaaaaaaaaaaaajaaaaaadkiacaaaaaaaaaaa
ajaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaadaaaaaaeghobaaaagaaaaaa
aagabaaaagaaaaaadiaaaaahccaabaaaaaaaaaaadkaabaaaabaaaaaaabeaaaaa
aaaaaaebdiaaaaahocaabaaaaaaaaaaaagajbaaaabaaaaaafgafbaaaaaaaaaaa
efaaaaajpcaabaaaabaaaaaaegbabaaaadaaaaaaeghobaaaafaaaaaaaagabaaa
afaaaaaadiaaaaahicaabaaaabaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaaaeb
dcaaaaakhcaabaaaabaaaaaapgapbaaaabaaaaaaegacbaaaabaaaaaajgahbaia
ebaaaaaaaaaaaaaadcaaaaajhcaabaaaaaaaaaaaagaabaaaaaaaaaaaegacbaaa
abaaaaaajgahbaaaaaaaaaaaaoaaaaahdcaabaaaabaaaaaaegbabaaaacaaaaaa
pgbpbaaaacaaaaaaefaaaaajpcaabaaaabaaaaaaegaabaaaabaaaaaaeghobaaa
aeaaaaaaaagabaaaaeaaaaaaaaaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaa
egacbaaaabaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaaaaaaaaaaegiccaaa
aaaaaaaaacaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaa
adaaaaaaaagabaaaadaaaaaaefaaaaajpcaabaaaadaaaaaaogbkbaaaabaaaaaa
eghobaaaabaaaaaaaagabaaaacaaaaaaaaaaaaaiicaabaaaaaaaaaaaakaabaia
ebaaaaaaadaaaaaaabeaaaaaaaaaiadpdiaaaaahicaabaaaaaaaaaaadkaabaaa
aaaaaaaaakaabaaaacaaaaaadiaaaaaiicaabaaaaaaaaaaadkaabaaaaaaaaaaa
akiacaaaaaaaaaaaacaaaaaadiaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaa
dkaabaaaabaaaaaadiaaaaahhcaabaaaabaaaaaapgapbaaaaaaaaaaaegacbaaa
abaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaa
aagabaaaaaaaaaaaaaaaaaahhcaabaaaacaaaaaaegacbaaaadaaaaaaegacbaaa
acaaaaaadcaaaaakiccabaaaaaaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaa
acaaaaaadkaabaaaacaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaaacaaaaaa
egacbaaaaaaaaaaaegacbaaaabaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaa
abaaaaaaeghobaaaacaaaaaaaagabaaaabaaaaaadiaaaaaihcaabaaaabaaaaaa
egacbaaaabaaaaaaagiacaaaaaaaaaaaadaaaaaadcaaaaakhcaabaaaabaaaaaa
egacbaaaadaaaaaaegacbaiaebaaaaaaabaaaaaaegacbaaaabaaaaaaaaaaaaah
hccabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadoaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 22 math, 7 textures
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 2
SetTexture 2 [_Emission] 2D 1
SetTexture 3 [_Mask] 2D 3
SetTexture 4 [_LightBuffer] 2D 4
SetTexture 5 [unity_Lightmap] 2D 5
SetTexture 6 [unity_LightmapInd] 2D 6
ConstBuffer "$Globals" 176
Vector 32 [_SpecColor]
Float 48 [_LightAmount]
Vector 144 [unity_LightmapFade]
BindCB  "$Globals" 0
"ps_4_0_level_9_1
eefiecedicccbpmnbjlmlefmbgaaliljgbomgdejabaaaaaaaeajaaaaaeaaaaaa
daaaaaaafeadaaaadaaiaaaanaaiaaaaebgpgodjbmadaaaabmadaaaaaaacpppp
meacaaaafiaaaaaaacaaeaaaaaaafiaaaaaafiaaahaaceaaaaaafiaaaaaaaaaa
acababaaabacacaaadadadaaaeaeaeaaafafafaaagagagaaaaaaacaaacaaaaaa
aaaaaaaaaaaaajaaabaaacaaaaaaaaaaaaacppppfbaaaaafadaaapkaaaaaiadp
aaaaaaebaaaaaaaaaaaaaaaabpaaaaacaaaaaaiaaaaaaplabpaaaaacaaaaaaia
abaaaplabpaaaaacaaaaaaiaacaaadlabpaaaaacaaaaaaiaadaaaplabpaaaaac
aaaaaajaaaaiapkabpaaaaacaaaaaajaabaiapkabpaaaaacaaaaaajaacaiapka
bpaaaaacaaaaaajaadaiapkabpaaaaacaaaaaajaaeaiapkabpaaaaacaaaaaaja
afaiapkabpaaaaacaaaaaajaagaiapkaagaaaaacaaaaaiiaabaapplaafaaaaad
aaaaadiaaaaappiaabaaoelaabaaaaacabaaabiaaaaakklaabaaaaacabaaacia
aaaapplaecaaaaadacaacpiaacaaoelaagaioekaecaaaaadadaacpiaacaaoela
afaioekaecaaaaadaaaacpiaaaaaoeiaaeaioekaecaaaaadaeaaapiaaaaaoela
adaioekaecaaaaadabaacpiaabaaoeiaacaioekaecaaaaadafaacpiaaaaaoela
aaaioekaecaaaaadagaaapiaaaaaoelaabaioekaajaaaaadabaaaiiaadaaoela
adaaoelaahaaaaacabaaaiiaabaappiaagaaaaacabaaaiiaabaappiaaeaaaaae
abaadiiaabaappiaacaakkkaacaappkaafaaaaadacaaciiaacaappiaadaaffka
afaaaaadacaachiaacaaoeiaacaappiaafaaaaadacaaciiaadaappiaadaaffka
aeaaaaaeadaachiaacaappiaadaaoeiaacaaoeibaeaaaaaeacaachiaabaappia
adaaoeiaacaaoeiaacaaaaadaaaachiaaaaaoeiaacaaoeiaafaaaaadacaachia
aaaaoeiaaaaaoekaacaaaaadabaaaiiaabaaaaibadaaaakaafaaaaadabaaaiia
abaappiaaeaaaaiaafaaaaadabaaciiaabaappiaaaaaaakaafaaaaadaaaaciia
aaaappiaabaappiaafaaaaadacaachiaaaaappiaacaaoeiaacaaaaadadaachia
abaaoeiaafaaoeiaaeaaaaaeaeaaciiaaaaappiaaaaappkaafaappiaaeaaaaae
aaaachiaadaaoeiaaaaaoeiaacaaoeiaafaaaaadacaaahiaagaaoeiaabaaaaka
aeaaaaaeabaachiaabaaoeiaacaaoeibacaaoeiaacaaaaadaeaachiaaaaaoeia
abaaoeiaabaaaaacaaaicpiaaeaaoeiappppaaaafdeieefcneaeaaaaeaaaaaaa
dfabaaaafjaaaaaeegiocaaaaaaaaaaaakaaaaaafkaaaaadaagabaaaaaaaaaaa
fkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaa
adaaaaaafkaaaaadaagabaaaaeaaaaaafkaaaaadaagabaaaafaaaaaafkaaaaad
aagabaaaagaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaa
abaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaafibiaaaeaahabaaa
adaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaafibiaaaeaahabaaa
afaaaaaaffffaaaafibiaaaeaahabaaaagaaaaaaffffaaaagcbaaaadpcbabaaa
abaaaaaagcbaaaadlcbabaaaacaaaaaagcbaaaaddcbabaaaadaaaaaagcbaaaad
pcbabaaaaeaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacaeaaaaaabbaaaaah
bcaabaaaaaaaaaaaegbobaaaaeaaaaaaegbobaaaaeaaaaaaelaaaaafbcaabaaa
aaaaaaaaakaabaaaaaaaaaaadccaaaalbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
ckiacaaaaaaaaaaaajaaaaaadkiacaaaaaaaaaaaajaaaaaaefaaaaajpcaabaaa
abaaaaaaegbabaaaadaaaaaaeghobaaaagaaaaaaaagabaaaagaaaaaadiaaaaah
ccaabaaaaaaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaaaebdiaaaaahocaabaaa
aaaaaaaaagajbaaaabaaaaaafgafbaaaaaaaaaaaefaaaaajpcaabaaaabaaaaaa
egbabaaaadaaaaaaeghobaaaafaaaaaaaagabaaaafaaaaaadiaaaaahicaabaaa
abaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaaaebdcaaaaakhcaabaaaabaaaaaa
pgapbaaaabaaaaaaegacbaaaabaaaaaajgahbaiaebaaaaaaaaaaaaaadcaaaaaj
hcaabaaaaaaaaaaaagaabaaaaaaaaaaaegacbaaaabaaaaaajgahbaaaaaaaaaaa
aoaaaaahdcaabaaaabaaaaaaegbabaaaacaaaaaapgbpbaaaacaaaaaaefaaaaaj
pcaabaaaabaaaaaaegaabaaaabaaaaaaeghobaaaaeaaaaaaaagabaaaaeaaaaaa
aaaaaaahhcaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaadiaaaaai
hcaabaaaabaaaaaaegacbaaaaaaaaaaaegiccaaaaaaaaaaaacaaaaaaefaaaaaj
pcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaaadaaaaaaaagabaaaadaaaaaa
efaaaaajpcaabaaaadaaaaaaogbkbaaaabaaaaaaeghobaaaabaaaaaaaagabaaa
acaaaaaaaaaaaaaiicaabaaaaaaaaaaaakaabaiaebaaaaaaadaaaaaaabeaaaaa
aaaaiadpdiaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaakaabaaaacaaaaaa
diaaaaaiicaabaaaaaaaaaaadkaabaaaaaaaaaaaakiacaaaaaaaaaaaacaaaaaa
diaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaadkaabaaaabaaaaaadiaaaaah
hcaabaaaabaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaaefaaaaajpcaabaaa
acaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaaaaaaaaah
hcaabaaaacaaaaaaegacbaaaadaaaaaaegacbaaaacaaaaaadcaaaaakiccabaaa
aaaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaacaaaaaadkaabaaaacaaaaaa
dcaaaaajhcaabaaaaaaaaaaaegacbaaaacaaaaaaegacbaaaaaaaaaaaegacbaaa
abaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaaeghobaaaacaaaaaa
aagabaaaabaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaagiacaaa
aaaaaaaaadaaaaaadcaaaaakhcaabaaaabaaaaaaegacbaaaadaaaaaaegacbaia
ebaaaaaaabaaaaaaegacbaaaabaaaaaaaaaaaaahhccabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaadoaaaaabejfdeheojiaaaaaaafaaaaaaaiaaaaaa
iaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaa
acaaaaaaapalaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaa
imaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaapapaaaafdfgfpfaepfdejfe
ejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaa
caaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgf
heaaklkl"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_OFF" "HDR_LIGHT_PREPASS_ON" }
"!!GLES3"
}
SubProgram "opengl " {
// Stats: 55 math, 8 textures
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
Vector 0 [_SpecColor]
Float 1 [_LightAmount]
Float 2 [_Shininess]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
SetTexture 6 [unity_Lightmap] 2D 6
SetTexture 7 [unity_LightmapInd] 2D 7
"!!ARBfp1.0
PARAM c[7] = { program.local[0..2],
		{ 2, 1, 0, 8 },
		{ -0.40824828, -0.70710677, 0.57735026, 128 },
		{ -0.40824831, 0.70710677, 0.57735026 },
		{ 0.81649655, 0, 0.57735026 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEMP R3;
TEMP R4;
TEMP R5;
TEMP R6;
TEMP R7;
TEMP R8;
TEX R6.yw, fragment.texcoord[0], texture[2], 2D;
TEX R0, fragment.texcoord[2], texture[7], 2D;
TEX R1, fragment.texcoord[2], texture[6], 2D;
TEX R5.xyz, fragment.texcoord[0].zwzw, texture[1], 2D;
TEX R3, fragment.texcoord[0], texture[0], 2D;
TXP R2, fragment.texcoord[1], texture[5], 2D;
TEX R4.xyz, fragment.texcoord[0], texture[3], 2D;
TEX R6.x, fragment.texcoord[0], texture[4], 2D;
MAD R7.xy, R6.wyzw, c[3].x, -c[3].y;
MUL R6.zw, R7.xyxy, R7.xyxy;
MUL R0.xyz, R0.w, R0;
MUL R8.xyz, R0, c[3].w;
ADD_SAT R4.w, R6.z, R6;
ADD R0.w, -R4, c[3].y;
RSQ R0.w, R0.w;
RCP R7.z, R0.w;
ADD R6.yzw, -R7.xxyz, c[3].xzzy;
MAD R7.xyz, R5, R6.yzww, R7;
MUL R0.xyz, R8.y, c[5];
MAD R0.xyz, R8.x, c[6], R0;
MAD R0.xyz, R8.z, c[4], R0;
DP3 R4.w, R0, R0;
RSQ R5.w, R4.w;
DP3 R4.w, fragment.texcoord[3], fragment.texcoord[3];
MUL R0.xyz, R5.w, R0;
RSQ R4.w, R4.w;
MAD R6.yzw, R4.w, fragment.texcoord[3].xxyz, R0.xxyz;
DP3 R0.z, R6.yzww, R6.yzww;
DP3_SAT R0.y, R7, c[5];
DP3_SAT R0.x, R7, c[6];
DP3_SAT R0.w, R7, c[4];
DP3 R0.w, R0.xyww, R8;
RSQ R0.z, R0.z;
MUL R1.xyz, R1.w, R1;
MUL R1.xyz, R1, R0.w;
MUL R0.xyz, R0.z, R6.yzww;
DP3 R0.w, R7, R0;
MUL R0.xyz, R1, c[3].w;
MAX R1.x, R0.w, c[3].z;
MOV R0.w, c[4];
ADD R1.y, -R5.x, c[3];
MUL R0.w, R0, c[2].x;
POW R0.w, R1.x, R0.w;
ADD R0, R2, R0;
MUL R1.y, R6.x, R1;
MUL R1.x, R1.y, c[0];
MUL R0.w, R0, R1.x;
MUL R1.xyz, R0, c[0];
MUL R2.xyz, R4, c[1].x;
MUL R1.xyz, R1, R0.w;
ADD R3.xyz, R3, R5;
MAD R2.xyz, R5.x, -R2, R2;
MAD R0.xyz, R3, R0, R1;
ADD result.color.xyz, R0, R2;
MAD result.color.w, R0, c[0], R3;
END
# 55 instructions, 9 R-regs
"
}
SubProgram "d3d9 " {
// Stats: 56 math, 8 textures
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
Vector 0 [_SpecColor]
Float 1 [_LightAmount]
Float 2 [_Shininess]
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 1
SetTexture 2 [_BumpMap] 2D 2
SetTexture 3 [_Emission] 2D 3
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
SetTexture 6 [unity_Lightmap] 2D 6
SetTexture 7 [unity_LightmapInd] 2D 7
"ps_2_0
dcl_2d s0
dcl_2d s1
dcl_2d s2
dcl_2d s3
dcl_2d s4
dcl_2d s5
dcl_2d s6
dcl_2d s7
def c3, 2.00000000, -1.00000000, 1.00000000, 0.00000000
def c4, -0.40824828, -0.70710677, 0.57735026, 8.00000000
def c5, -0.40824831, 0.70710677, 0.57735026, 128.00000000
def c6, 0.81649655, 0.00000000, 0.57735026, 0
dcl t0
dcl t1
dcl t2.xy
dcl t3.xyz
texld r6, t0, s3
texld r2, t0, s0
texldp r4, t1, s5
texld r11, t0, s4
texld r3, t2, s6
texld r1, t2, s7
mul_pp r1.xyz, r1.w, r1
mul_pp r9.xyz, r1, c4.w
mov r0.y, t0.w
mov r0.x, t0.z
mul_pp r3.xyz, r3.w, r3
texld r5, r0, s1
texld r0, t0, s2
mov r0.x, r0.w
mad_pp r7.xy, r0, c3.x, c3.y
mul_pp r0.xy, r7, r7
add_pp_sat r0.x, r0, r0.y
add_pp r0.x, -r0, c3.z
rsq_pp r0.x, r0.x
rcp_pp r7.z, r0.x
mov r0.z, c3
mov r0.xy, c3.w
add_pp r1.xyz, -r7, r0
mad_pp r7.xyz, r5, r1, r7
mul r0.xyz, r9.y, c5
mad r0.xyz, r9.x, c6, r0
mad r10.xyz, r9.z, c4, r0
dp3 r0.x, r10, r10
rsq r1.x, r0.x
dp3_pp r0.x, t3, t3
mul r1.xyz, r1.x, r10
rsq_pp r0.x, r0.x
mad_pp r10.xyz, r0.x, t3, r1
dp3_pp r0.x, r10, r10
dp3_pp_sat r8.z, r7, c4
dp3_pp_sat r8.y, r7, c5
dp3_pp_sat r8.x, r7, c6
dp3_pp r1.x, r8, r9
mul_pp r3.xyz, r3, r1.x
rsq_pp r0.x, r0.x
mul_pp r1.xyz, r0.x, r10
dp3_pp r1.x, r7, r1
mov_pp r0.x, c2
mul_pp r0.x, c5.w, r0
max_pp r1.x, r1, c3.w
pow r7.x, r1.x, r0.x
add_pp r0.x, -r5, c3.z
mul r0.x, r11, r0
mul_pp r1.xyz, r3, c4.w
mov r1.w, r7.x
add_pp r1, r4, r1
mul r0.x, r0, c0
mul_pp r0.x, r1.w, r0
mul_pp r3.xyz, r1, c0
mul_pp r3.xyz, r3, r0.x
add_pp r2.xyz, r2, r5
mad_pp r1.xyz, r2, r1, r3
mul r4.xyz, r6, c1.x
mad_pp r0.w, r0.x, c0, r2
mad r2.xyz, r5.x, -r4, r4
add_pp r0.xyz, r1, r2
mov_pp oC0, r0
"
}
SubProgram "d3d11 " {
// Stats: 48 math, 8 textures
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 3
SetTexture 2 [_BumpMap] 2D 1
SetTexture 3 [_Emission] 2D 2
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
SetTexture 6 [unity_Lightmap] 2D 6
SetTexture 7 [unity_LightmapInd] 2D 7
ConstBuffer "$Globals" 176
Vector 32 [_SpecColor]
Float 48 [_LightAmount]
Float 64 [_Shininess]
BindCB  "$Globals" 0
"ps_4_0
eefiecedfkplkndohdcnphckopeoaklihilpkppjabaaaaaaeiajaaaaadaaaaaa
cmaaaaaammaaaaaaaaabaaaaejfdeheojiaaaaaaafaaaaaaaiaaaaaaiaaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaaacaaaaaa
apalaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaaimaaaaaa
adaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaafdfgfpfaepfdejfeejepeoaa
feeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaacaaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgfheaaklkl
fdeieefceaaiaaaaeaaaaaaabaacaaaafjaaaaaeegiocaaaaaaaaaaaafaaaaaa
fkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaafkaaaaadaagabaaa
acaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaaaeaaaaaafkaaaaad
aagabaaaafaaaaaafkaaaaadaagabaaaagaaaaaafkaaaaadaagabaaaahaaaaaa
fibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaaabaaaaaaffffaaaa
fibiaaaeaahabaaaacaaaaaaffffaaaafibiaaaeaahabaaaadaaaaaaffffaaaa
fibiaaaeaahabaaaaeaaaaaaffffaaaafibiaaaeaahabaaaafaaaaaaffffaaaa
fibiaaaeaahabaaaagaaaaaaffffaaaafibiaaaeaahabaaaahaaaaaaffffaaaa
gcbaaaadpcbabaaaabaaaaaagcbaaaadlcbabaaaacaaaaaagcbaaaaddcbabaaa
adaaaaaagcbaaaadhcbabaaaaeaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaac
agaaaaaabaaaaaahbcaabaaaaaaaaaaaegbcbaaaaeaaaaaaegbcbaaaaeaaaaaa
eeaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaahhcaabaaaaaaaaaaa
agaabaaaaaaaaaaaegbcbaaaaeaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaa
adaaaaaaeghobaaaahaaaaaaaagabaaaahaaaaaadiaaaaahicaabaaaaaaaaaaa
dkaabaaaabaaaaaaabeaaaaaaaaaaaebdiaaaaahhcaabaaaabaaaaaaegacbaaa
abaaaaaapgapbaaaaaaaaaaadiaaaaakhcaabaaaacaaaaaafgafbaaaabaaaaaa
aceaaaaaomafnblopdaedfdpdkmnbddpaaaaaaaadcaaaaamhcaabaaaacaaaaaa
agaabaaaabaaaaaaaceaaaaaolaffbdpaaaaaaaadkmnbddpaaaaaaaaegacbaaa
acaaaaaadcaaaaamhcaabaaaacaaaaaakgakbaaaabaaaaaaaceaaaaaolafnblo
pdaedflpdkmnbddpaaaaaaaaegacbaaaacaaaaaabaaaaaahicaabaaaaaaaaaaa
egacbaaaacaaaaaaegacbaaaacaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaa
aaaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaaacaaaaaapgapbaaaaaaaaaaa
egacbaaaaaaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaa
aaaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaadiaaaaahhcaabaaa
aaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaaefaaaaajpcaabaaaacaaaaaa
egbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaaabaaaaaadcaaaaapdcaabaaa
acaaaaaahgapbaaaacaaaaaaaceaaaaaaaaaaaeaaaaaaaeaaaaaaaaaaaaaaaaa
aceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaaapaaaaahicaabaaaaaaaaaaa
egaabaaaacaaaaaaegaabaaaacaaaaaaddaaaaahicaabaaaaaaaaaaadkaabaaa
aaaaaaaaabeaaaaaaaaaiadpaaaaaaaiicaabaaaaaaaaaaadkaabaiaebaaaaaa
aaaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaaacaaaaaadkaabaaaaaaaaaaa
aaaaaaalhcaabaaaadaaaaaaegacbaiaebaaaaaaacaaaaaaaceaaaaaaaaaaaaa
aaaaaaaaaaaaiadpaaaaaaaaefaaaaajpcaabaaaaeaaaaaaogbkbaaaabaaaaaa
eghobaaaabaaaaaaaagabaaaadaaaaaadcaaaaajhcaabaaaacaaaaaaegacbaaa
aeaaaaaaegacbaaaadaaaaaaegacbaaaacaaaaaabaaaaaahbcaabaaaaaaaaaaa
egacbaaaacaaaaaaegacbaaaaaaaaaaadeaaaaahbcaabaaaaaaaaaaaakaabaaa
aaaaaaaaabeaaaaaaaaaaaaacpaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaa
diaaaaaiccaabaaaaaaaaaaaakiacaaaaaaaaaaaaeaaaaaaabeaaaaaaaaaaaed
diaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaabkaabaaaaaaaaaaabjaaaaaf
icaabaaaaaaaaaaaakaabaaaaaaaaaaaaoaaaaahdcaabaaaadaaaaaaegbabaaa
acaaaaaapgbpbaaaacaaaaaaefaaaaajpcaabaaaadaaaaaaegaabaaaadaaaaaa
eghobaaaafaaaaaaaagabaaaafaaaaaaapcaaaakbcaabaaaafaaaaaaaceaaaaa
olaffbdpdkmnbddpaaaaaaaaaaaaaaaaigaabaaaacaaaaaabacaaaakccaabaaa
afaaaaaaaceaaaaaomafnblopdaedfdpdkmnbddpaaaaaaaaegacbaaaacaaaaaa
bacaaaakecaabaaaafaaaaaaaceaaaaaolafnblopdaedflpdkmnbddpaaaaaaaa
egacbaaaacaaaaaabaaaaaahbcaabaaaabaaaaaaegacbaaaafaaaaaaegacbaaa
abaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaadaaaaaaeghobaaaagaaaaaa
aagabaaaagaaaaaadiaaaaahccaabaaaabaaaaaadkaabaaaacaaaaaaabeaaaaa
aaaaaaebdiaaaaahocaabaaaabaaaaaaagajbaaaacaaaaaafgafbaaaabaaaaaa
diaaaaahhcaabaaaaaaaaaaaagaabaaaabaaaaaajgahbaaaabaaaaaaaaaaaaah
pcaabaaaaaaaaaaaegaobaaaaaaaaaaaegaobaaaadaaaaaaefaaaaajpcaabaaa
abaaaaaaegbabaaaabaaaaaaeghobaaaaeaaaaaaaagabaaaaeaaaaaaaaaaaaai
ccaabaaaabaaaaaaakaabaiaebaaaaaaaeaaaaaaabeaaaaaaaaaiadpdiaaaaah
bcaabaaaabaaaaaabkaabaaaabaaaaaaakaabaaaabaaaaaadiaaaaaibcaabaaa
abaaaaaaakaabaaaabaaaaaaakiacaaaaaaaaaaaacaaaaaadiaaaaahicaabaaa
aaaaaaaadkaabaaaaaaaaaaaakaabaaaabaaaaaadiaaaaaihcaabaaaabaaaaaa
egacbaaaaaaaaaaaegiccaaaaaaaaaaaacaaaaaadiaaaaahhcaabaaaabaaaaaa
pgapbaaaaaaaaaaaegacbaaaabaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaa
abaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaaaaaaaaahhcaabaaaacaaaaaa
egacbaaaaeaaaaaaegacbaaaacaaaaaadcaaaaakiccabaaaaaaaaaaadkaabaaa
aaaaaaaadkiacaaaaaaaaaaaacaaaaaadkaabaaaacaaaaaadcaaaaajhcaabaaa
aaaaaaaaegacbaaaacaaaaaaegacbaaaaaaaaaaaegacbaaaabaaaaaaefaaaaaj
pcaabaaaabaaaaaaegbabaaaabaaaaaaeghobaaaadaaaaaaaagabaaaacaaaaaa
diaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaagiacaaaaaaaaaaaadaaaaaa
dcaaaaakhcaabaaaabaaaaaaegacbaaaaeaaaaaaegacbaiaebaaaaaaabaaaaaa
egacbaaaabaaaaaaaaaaaaahhccabaaaaaaaaaaaegacbaaaaaaaaaaaegacbaaa
abaaaaaadoaaaaab"
}
SubProgram "d3d11_9x " {
// Stats: 48 math, 8 textures
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
SetTexture 0 [_MainTex] 2D 0
SetTexture 1 [_Clouds] 2D 3
SetTexture 2 [_BumpMap] 2D 1
SetTexture 3 [_Emission] 2D 2
SetTexture 4 [_Mask] 2D 4
SetTexture 5 [_LightBuffer] 2D 5
SetTexture 6 [unity_Lightmap] 2D 6
SetTexture 7 [unity_LightmapInd] 2D 7
ConstBuffer "$Globals" 176
Vector 32 [_SpecColor]
Float 48 [_LightAmount]
Float 64 [_Shininess]
BindCB  "$Globals" 0
"ps_4_0_level_9_1
eefiecedhfeiegnjggmokmeiodpkaebllonblfpkabaaaaaaceaoaaaaaeaaaaaa
daaaaaaaaiafaaaafaanaaaapaanaaaaebgpgodjnaaeaaaanaaeaaaaaaacpppp
iaaeaaaafaaaaaaaabaaeeaaaaaafaaaaaaafaaaaiaaceaaaaaafaaaaaaaaaaa
acababaaadacacaaabadadaaaeaeaeaaafafafaaagagagaaahahahaaaaaaacaa
adaaaaaaaaaaaaaaaaacppppfbaaaaafadaaapkaaaaaaaeaaaaaialpaaaaaaaa
aaaaiadpfbaaaaafaeaaapkaomafnblopdaedfdpdkmnbddpaaaaaaaafbaaaaaf
afaaapkaolafnblopdaedflpdkmnbddpaaaaaaaafbaaaaafagaaapkaolaffbdp
aaaaaaaadkmnbddpaaaaaaedfbaaaaafahaaapkaaaaaaaaaaaaaaaaaaaaaiadp
aaaaaaebbpaaaaacaaaaaaiaaaaaaplabpaaaaacaaaaaaiaabaaaplabpaaaaac
aaaaaaiaacaaadlabpaaaaacaaaaaaiaadaachlabpaaaaacaaaaaajaaaaiapka
bpaaaaacaaaaaajaabaiapkabpaaaaacaaaaaajaacaiapkabpaaaaacaaaaaaja
adaiapkabpaaaaacaaaaaajaaeaiapkabpaaaaacaaaaaajaafaiapkabpaaaaac
aaaaaajaagaiapkabpaaaaacaaaaaajaahaiapkaagaaaaacaaaaaiiaabaappla
afaaaaadaaaaadiaaaaappiaabaaoelaabaaaaacabaaabiaaaaakklaabaaaaac
abaaaciaaaaapplaecaaaaadaaaacpiaaaaaoeiaafaioekaecaaaaadacaacpia
acaaoelaahaioekaecaaaaadadaacpiaaaaaoelaabaioekaecaaaaadabaacpia
abaaoeiaadaioekaecaaaaadaeaacpiaacaaoelaagaioekaecaaaaadafaaapia
aaaaoelaaeaioekaecaaaaadagaacpiaaaaaoelaaaaioekaecaaaaadahaaapia
aaaaoelaacaioekaafaaaaadabaaciiaacaappiaahaappkaafaaaaadacaachia
acaaoeiaabaappiaafaaaaadafaaaoiaacaaffiaaeaablkaaeaaaaaeafaaaoia
acaaaaiaagaablkaafaaoeiaaeaaaaaeaiaaahiaacaakkiaafaaoekaafaablia
aiaaaaadabaaaiiaaiaaoeiaaiaaoeiaahaaaaacabaaaiiaabaappiaceaaaaac
ajaachiaadaaoelaaeaaaaaeaiaachiaaiaaoeiaabaappiaajaaoeiaceaaaaac
ajaachiaaiaaoeiaaeaaaaaeaiaacbiaadaappiaadaaaakaadaaffkaaeaaaaae
aiaacciaadaaffiaadaaaakaadaaffkafkaaaaaeabaadiiaaiaaoeiaaiaaoeia
adaakkkaacaaaaadabaaciiaabaappibadaappkaahaaaaacabaaciiaabaappia
agaaaaacaiaaceiaabaappiabcaaaaaeadaachiaabaaoeiaahaaoekaaiaaoeia
aiaaaaadabaaciiaadaaoeiaajaaoeiaalaaaaadacaaaiiaabaappiaadaakkka
abaaaaacabaaaiiaagaappkaafaaaaadabaaaiiaabaappiaacaaaakacaaaaaad
aiaaciiaacaappiaabaappiaaiaaaaadajaadbiaagaaoekaadaaoeiaaiaaaaad
ajaadciaaeaaoekaadaaoeiaaiaaaaadajaadeiaafaaoekaadaaoeiaaiaaaaad
abaaciiaajaaoeiaacaaoeiaafaaaaadaeaaciiaaeaappiaahaappkaafaaaaad
acaachiaaeaaoeiaaeaappiaafaaaaadaiaachiaabaappiaacaaoeiaacaaaaad
aaaacpiaaaaaoeiaaiaaoeiaacaaaaadabaaaiiaabaaaaibadaappkaafaaaaad
abaaaiiaabaappiaafaaaaiaafaaaaadabaaciiaabaappiaaaaaaakaafaaaaad
aaaaciiaaaaappiaabaappiaafaaaaadacaachiaaaaaoeiaaaaaoekaafaaaaad
acaachiaaaaappiaacaaoeiaacaaaaadadaachiaabaaoeiaagaaoeiaaeaaaaae
aeaaciiaaaaappiaaaaappkaagaappiaaeaaaaaeaaaachiaadaaoeiaaaaaoeia
acaaoeiaafaaaaadacaaahiaahaaoeiaabaaaakaaeaaaaaeabaachiaabaaoeia
acaaoeibacaaoeiaacaaaaadaeaachiaaaaaoeiaabaaoeiaabaaaaacaaaicpia
aeaaoeiappppaaaafdeieefceaaiaaaaeaaaaaaabaacaaaafjaaaaaeegiocaaa
aaaaaaaaafaaaaaafkaaaaadaagabaaaaaaaaaaafkaaaaadaagabaaaabaaaaaa
fkaaaaadaagabaaaacaaaaaafkaaaaadaagabaaaadaaaaaafkaaaaadaagabaaa
aeaaaaaafkaaaaadaagabaaaafaaaaaafkaaaaadaagabaaaagaaaaaafkaaaaad
aagabaaaahaaaaaafibiaaaeaahabaaaaaaaaaaaffffaaaafibiaaaeaahabaaa
abaaaaaaffffaaaafibiaaaeaahabaaaacaaaaaaffffaaaafibiaaaeaahabaaa
adaaaaaaffffaaaafibiaaaeaahabaaaaeaaaaaaffffaaaafibiaaaeaahabaaa
afaaaaaaffffaaaafibiaaaeaahabaaaagaaaaaaffffaaaafibiaaaeaahabaaa
ahaaaaaaffffaaaagcbaaaadpcbabaaaabaaaaaagcbaaaadlcbabaaaacaaaaaa
gcbaaaaddcbabaaaadaaaaaagcbaaaadhcbabaaaaeaaaaaagfaaaaadpccabaaa
aaaaaaaagiaaaaacagaaaaaabaaaaaahbcaabaaaaaaaaaaaegbcbaaaaeaaaaaa
egbcbaaaaeaaaaaaeeaaaaafbcaabaaaaaaaaaaaakaabaaaaaaaaaaadiaaaaah
hcaabaaaaaaaaaaaagaabaaaaaaaaaaaegbcbaaaaeaaaaaaefaaaaajpcaabaaa
abaaaaaaegbabaaaadaaaaaaeghobaaaahaaaaaaaagabaaaahaaaaaadiaaaaah
icaabaaaaaaaaaaadkaabaaaabaaaaaaabeaaaaaaaaaaaebdiaaaaahhcaabaaa
abaaaaaaegacbaaaabaaaaaapgapbaaaaaaaaaaadiaaaaakhcaabaaaacaaaaaa
fgafbaaaabaaaaaaaceaaaaaomafnblopdaedfdpdkmnbddpaaaaaaaadcaaaaam
hcaabaaaacaaaaaaagaabaaaabaaaaaaaceaaaaaolaffbdpaaaaaaaadkmnbddp
aaaaaaaaegacbaaaacaaaaaadcaaaaamhcaabaaaacaaaaaakgakbaaaabaaaaaa
aceaaaaaolafnblopdaedflpdkmnbddpaaaaaaaaegacbaaaacaaaaaabaaaaaah
icaabaaaaaaaaaaaegacbaaaacaaaaaaegacbaaaacaaaaaaeeaaaaaficaabaaa
aaaaaaaadkaabaaaaaaaaaaadcaaaaajhcaabaaaaaaaaaaaegacbaaaacaaaaaa
pgapbaaaaaaaaaaaegacbaaaaaaaaaaabaaaaaahicaabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaaaaaaaaaaaeeaaaaaficaabaaaaaaaaaaadkaabaaaaaaaaaaa
diaaaaahhcaabaaaaaaaaaaapgapbaaaaaaaaaaaegacbaaaaaaaaaaaefaaaaaj
pcaabaaaacaaaaaaegbabaaaabaaaaaaeghobaaaacaaaaaaaagabaaaabaaaaaa
dcaaaaapdcaabaaaacaaaaaahgapbaaaacaaaaaaaceaaaaaaaaaaaeaaaaaaaea
aaaaaaaaaaaaaaaaaceaaaaaaaaaialpaaaaialpaaaaaaaaaaaaaaaaapaaaaah
icaabaaaaaaaaaaaegaabaaaacaaaaaaegaabaaaacaaaaaaddaaaaahicaabaaa
aaaaaaaadkaabaaaaaaaaaaaabeaaaaaaaaaiadpaaaaaaaiicaabaaaaaaaaaaa
dkaabaiaebaaaaaaaaaaaaaaabeaaaaaaaaaiadpelaaaaafecaabaaaacaaaaaa
dkaabaaaaaaaaaaaaaaaaaalhcaabaaaadaaaaaaegacbaiaebaaaaaaacaaaaaa
aceaaaaaaaaaaaaaaaaaaaaaaaaaiadpaaaaaaaaefaaaaajpcaabaaaaeaaaaaa
ogbkbaaaabaaaaaaeghobaaaabaaaaaaaagabaaaadaaaaaadcaaaaajhcaabaaa
acaaaaaaegacbaaaaeaaaaaaegacbaaaadaaaaaaegacbaaaacaaaaaabaaaaaah
bcaabaaaaaaaaaaaegacbaaaacaaaaaaegacbaaaaaaaaaaadeaaaaahbcaabaaa
aaaaaaaaakaabaaaaaaaaaaaabeaaaaaaaaaaaaacpaaaaafbcaabaaaaaaaaaaa
akaabaaaaaaaaaaadiaaaaaiccaabaaaaaaaaaaaakiacaaaaaaaaaaaaeaaaaaa
abeaaaaaaaaaaaeddiaaaaahbcaabaaaaaaaaaaaakaabaaaaaaaaaaabkaabaaa
aaaaaaaabjaaaaaficaabaaaaaaaaaaaakaabaaaaaaaaaaaaoaaaaahdcaabaaa
adaaaaaaegbabaaaacaaaaaapgbpbaaaacaaaaaaefaaaaajpcaabaaaadaaaaaa
egaabaaaadaaaaaaeghobaaaafaaaaaaaagabaaaafaaaaaaapcaaaakbcaabaaa
afaaaaaaaceaaaaaolaffbdpdkmnbddpaaaaaaaaaaaaaaaaigaabaaaacaaaaaa
bacaaaakccaabaaaafaaaaaaaceaaaaaomafnblopdaedfdpdkmnbddpaaaaaaaa
egacbaaaacaaaaaabacaaaakecaabaaaafaaaaaaaceaaaaaolafnblopdaedflp
dkmnbddpaaaaaaaaegacbaaaacaaaaaabaaaaaahbcaabaaaabaaaaaaegacbaaa
afaaaaaaegacbaaaabaaaaaaefaaaaajpcaabaaaacaaaaaaegbabaaaadaaaaaa
eghobaaaagaaaaaaaagabaaaagaaaaaadiaaaaahccaabaaaabaaaaaadkaabaaa
acaaaaaaabeaaaaaaaaaaaebdiaaaaahocaabaaaabaaaaaaagajbaaaacaaaaaa
fgafbaaaabaaaaaadiaaaaahhcaabaaaaaaaaaaaagaabaaaabaaaaaajgahbaaa
abaaaaaaaaaaaaahpcaabaaaaaaaaaaaegaobaaaaaaaaaaaegaobaaaadaaaaaa
efaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaaeghobaaaaeaaaaaaaagabaaa
aeaaaaaaaaaaaaaiccaabaaaabaaaaaaakaabaiaebaaaaaaaeaaaaaaabeaaaaa
aaaaiadpdiaaaaahbcaabaaaabaaaaaabkaabaaaabaaaaaaakaabaaaabaaaaaa
diaaaaaibcaabaaaabaaaaaaakaabaaaabaaaaaaakiacaaaaaaaaaaaacaaaaaa
diaaaaahicaabaaaaaaaaaaadkaabaaaaaaaaaaaakaabaaaabaaaaaadiaaaaai
hcaabaaaabaaaaaaegacbaaaaaaaaaaaegiccaaaaaaaaaaaacaaaaaadiaaaaah
hcaabaaaabaaaaaapgapbaaaaaaaaaaaegacbaaaabaaaaaaefaaaaajpcaabaaa
acaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaaaaaaaaah
hcaabaaaacaaaaaaegacbaaaaeaaaaaaegacbaaaacaaaaaadcaaaaakiccabaaa
aaaaaaaadkaabaaaaaaaaaaadkiacaaaaaaaaaaaacaaaaaadkaabaaaacaaaaaa
dcaaaaajhcaabaaaaaaaaaaaegacbaaaacaaaaaaegacbaaaaaaaaaaaegacbaaa
abaaaaaaefaaaaajpcaabaaaabaaaaaaegbabaaaabaaaaaaeghobaaaadaaaaaa
aagabaaaacaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaaabaaaaaaagiacaaa
aaaaaaaaadaaaaaadcaaaaakhcaabaaaabaaaaaaegacbaaaaeaaaaaaegacbaia
ebaaaaaaabaaaaaaegacbaaaabaaaaaaaaaaaaahhccabaaaaaaaaaaaegacbaaa
aaaaaaaaegacbaaaabaaaaaadoaaaaabejfdeheojiaaaaaaafaaaaaaaiaaaaaa
iaaaaaaaaaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaimaaaaaaaaaaaaaa
aaaaaaaaadaaaaaaabaaaaaaapapaaaaimaaaaaaabaaaaaaaaaaaaaaadaaaaaa
acaaaaaaapalaaaaimaaaaaaacaaaaaaaaaaaaaaadaaaaaaadaaaaaaadadaaaa
imaaaaaaadaaaaaaaaaaaaaaadaaaaaaaeaaaaaaahahaaaafdfgfpfaepfdejfe
ejepeoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaaaiaaaaaa
caaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfegbhcghgf
heaaklkl"
}
SubProgram "gles " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
"!!GLES"
}
SubProgram "glesdesktop " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
"!!GLES"
}
SubProgram "gles3 " {
Keywords { "LIGHTMAP_ON" "DIRLIGHTMAP_ON" "HDR_LIGHT_PREPASS_ON" }
"!!GLES3"
}
}
 }
}
Fallback "Diffuse"
}